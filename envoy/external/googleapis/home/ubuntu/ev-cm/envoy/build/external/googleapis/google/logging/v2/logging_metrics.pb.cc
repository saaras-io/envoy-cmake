// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging_metrics.proto

#include "google/logging/v2/logging_metrics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace logging {
namespace v2 {
class LogMetric_LabelExtractorsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogMetric_LabelExtractorsEntry_DoNotUse>
      _instance;
} _LogMetric_LabelExtractorsEntry_DoNotUse_default_instance_;
class LogMetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogMetric>
      _instance;
} _LogMetric_default_instance_;
class ListLogMetricsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListLogMetricsRequest>
      _instance;
} _ListLogMetricsRequest_default_instance_;
class ListLogMetricsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListLogMetricsResponse>
      _instance;
} _ListLogMetricsResponse_default_instance_;
class GetLogMetricRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLogMetricRequest>
      _instance;
} _GetLogMetricRequest_default_instance_;
class CreateLogMetricRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateLogMetricRequest>
      _instance;
} _CreateLogMetricRequest_default_instance_;
class UpdateLogMetricRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateLogMetricRequest>
      _instance;
} _UpdateLogMetricRequest_default_instance_;
class DeleteLogMetricRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteLogMetricRequest>
      _instance;
} _DeleteLogMetricRequest_default_instance_;
}  // namespace v2
}  // namespace logging
}  // namespace google
namespace protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto {
void InitDefaultsLogMetric_LabelExtractorsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_LogMetric_LabelExtractorsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse();
  }
  ::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsLogMetric_LabelExtractorsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogMetric_LabelExtractorsEntry_DoNotUseImpl);
}

void InitDefaultsLogMetricImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fmetric_2eproto::InitDefaultsMetricDescriptor();
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsLogMetric_LabelExtractorsEntry_DoNotUse();
  protobuf_google_2fapi_2fdistribution_2eproto::InitDefaultsDistribution_BucketOptions();
  {
    void* ptr = &::google::logging::v2::_LogMetric_default_instance_;
    new (ptr) ::google::logging::v2::LogMetric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogMetric::InitAsDefaultInstance();
}

void InitDefaultsLogMetric() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogMetricImpl);
}

void InitDefaultsListLogMetricsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_ListLogMetricsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListLogMetricsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogMetricsRequest::InitAsDefaultInstance();
}

void InitDefaultsListLogMetricsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListLogMetricsRequestImpl);
}

void InitDefaultsListLogMetricsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsLogMetric();
  {
    void* ptr = &::google::logging::v2::_ListLogMetricsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListLogMetricsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogMetricsResponse::InitAsDefaultInstance();
}

void InitDefaultsListLogMetricsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListLogMetricsResponseImpl);
}

void InitDefaultsGetLogMetricRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_GetLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetLogMetricRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetLogMetricRequest::InitAsDefaultInstance();
}

void InitDefaultsGetLogMetricRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetLogMetricRequestImpl);
}

void InitDefaultsCreateLogMetricRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsLogMetric();
  {
    void* ptr = &::google::logging::v2::_CreateLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateLogMetricRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateLogMetricRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateLogMetricRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateLogMetricRequestImpl);
}

void InitDefaultsUpdateLogMetricRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsLogMetric();
  {
    void* ptr = &::google::logging::v2::_UpdateLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateLogMetricRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateLogMetricRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateLogMetricRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateLogMetricRequestImpl);
}

void InitDefaultsDeleteLogMetricRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_DeleteLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteLogMetricRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteLogMetricRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteLogMetricRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteLogMetricRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, metric_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, value_extractor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, label_extractors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, bucket_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogMetric, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListLogMetricsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListLogMetricsResponse, metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListLogMetricsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::GetLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::GetLogMetricRequest, metric_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateLogMetricRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateLogMetricRequest, metric_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateLogMetricRequest, metric_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateLogMetricRequest, metric_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::DeleteLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::DeleteLogMetricRequest, metric_name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::logging::v2::LogMetric)},
  { 22, -1, sizeof(::google::logging::v2::ListLogMetricsRequest)},
  { 30, -1, sizeof(::google::logging::v2::ListLogMetricsResponse)},
  { 37, -1, sizeof(::google::logging::v2::GetLogMetricRequest)},
  { 43, -1, sizeof(::google::logging::v2::CreateLogMetricRequest)},
  { 50, -1, sizeof(::google::logging::v2::UpdateLogMetricRequest)},
  { 57, -1, sizeof(::google::logging::v2::DeleteLogMetricRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogMetric_LabelExtractorsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogMetric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListLogMetricsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListLogMetricsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetLogMetricRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CreateLogMetricRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateLogMetricRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteLogMetricRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/logging/v2/logging_metrics.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'google/logging/v2/logging_metrics.prot"
      "o\022\021google.logging.v2\032\034google/api/annotat"
      "ions.proto\032\035google/api/distribution.prot"
      "o\032\027google/api/metric.proto\032\033google/proto"
      "buf/empty.proto\032 google/protobuf/field_m"
      "ask.proto\"\255\003\n\tLogMetric\022\014\n\004name\030\001 \001(\t\022\023\n"
      "\013description\030\002 \001(\t\022\016\n\006filter\030\003 \001(\t\0227\n\021me"
      "tric_descriptor\030\005 \001(\0132\034.google.api.Metri"
      "cDescriptor\022\027\n\017value_extractor\030\006 \001(\t\022K\n\020"
      "label_extractors\030\007 \003(\01321.google.logging."
      "v2.LogMetric.LabelExtractorsEntry\022>\n\016buc"
      "ket_options\030\010 \001(\0132&.google.api.Distribut"
      "ion.BucketOptions\0228\n\007version\030\004 \001(\0162\'.goo"
      "gle.logging.v2.LogMetric.ApiVersion\0326\n\024L"
      "abelExtractorsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\t:\0028\001\"\034\n\nApiVersion\022\006\n\002V2\020\000\022\006\n\002V1\020"
      "\001\"N\n\025ListLogMetricsRequest\022\016\n\006parent\030\001 \001"
      "(\t\022\022\n\npage_token\030\002 \001(\t\022\021\n\tpage_size\030\003 \001("
      "\005\"`\n\026ListLogMetricsResponse\022-\n\007metrics\030\001"
      " \003(\0132\034.google.logging.v2.LogMetric\022\027\n\017ne"
      "xt_page_token\030\002 \001(\t\"*\n\023GetLogMetricReque"
      "st\022\023\n\013metric_name\030\001 \001(\t\"V\n\026CreateLogMetr"
      "icRequest\022\016\n\006parent\030\001 \001(\t\022,\n\006metric\030\002 \001("
      "\0132\034.google.logging.v2.LogMetric\"[\n\026Updat"
      "eLogMetricRequest\022\023\n\013metric_name\030\001 \001(\t\022,"
      "\n\006metric\030\002 \001(\0132\034.google.logging.v2.LogMe"
      "tric\"-\n\026DeleteLogMetricRequest\022\023\n\013metric"
      "_name\030\001 \001(\t2\324\005\n\020MetricsServiceV2\022\216\001\n\016Lis"
      "tLogMetrics\022(.google.logging.v2.ListLogM"
      "etricsRequest\032).google.logging.v2.ListLo"
      "gMetricsResponse\"\'\202\323\344\223\002!\022\037/v2/{parent=pr"
      "ojects/*}/metrics\022\204\001\n\014GetLogMetric\022&.goo"
      "gle.logging.v2.GetLogMetricRequest\032\034.goo"
      "gle.logging.v2.LogMetric\".\202\323\344\223\002(\022&/v2/{m"
      "etric_name=projects/*/metrics/*}\022\213\001\n\017Cre"
      "ateLogMetric\022).google.logging.v2.CreateL"
      "ogMetricRequest\032\034.google.logging.v2.LogM"
      "etric\"/\202\323\344\223\002)\"\037/v2/{parent=projects/*}/m"
      "etrics:\006metric\022\222\001\n\017UpdateLogMetric\022).goo"
      "gle.logging.v2.UpdateLogMetricRequest\032\034."
      "google.logging.v2.LogMetric\"6\202\323\344\223\0020\032&/v2"
      "/{metric_name=projects/*/metrics/*}:\006met"
      "ric\022\204\001\n\017DeleteLogMetric\022).google.logging"
      ".v2.DeleteLogMetricRequest\032\026.google.prot"
      "obuf.Empty\".\202\323\344\223\002(*&/v2/{metric_name=pro"
      "jects/*/metrics/*}B\205\001\n\025com.google.loggin"
      "g.v2B\023LoggingMetricsProtoP\001Z8google.gola"
      "ng.org/genproto/googleapis/logging/v2;lo"
      "gging\370\001\001\252\002\027Google.Cloud.Logging.V2b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1962);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/logging/v2/logging_metrics.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fdistribution_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fmetric_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto
namespace google {
namespace logging {
namespace v2 {
const ::google::protobuf::EnumDescriptor* LogMetric_ApiVersion_descriptor() {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_enum_descriptors[0];
}
bool LogMetric_ApiVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogMetric_ApiVersion LogMetric::V2;
const LogMetric_ApiVersion LogMetric::V1;
const LogMetric_ApiVersion LogMetric::ApiVersion_MIN;
const LogMetric_ApiVersion LogMetric::ApiVersion_MAX;
const int LogMetric::ApiVersion_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

LogMetric_LabelExtractorsEntry_DoNotUse::LogMetric_LabelExtractorsEntry_DoNotUse() {}
LogMetric_LabelExtractorsEntry_DoNotUse::LogMetric_LabelExtractorsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void LogMetric_LabelExtractorsEntry_DoNotUse::MergeFrom(const LogMetric_LabelExtractorsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata LogMetric_LabelExtractorsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[0];
}
void LogMetric_LabelExtractorsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void LogMetric::InitAsDefaultInstance() {
  ::google::logging::v2::_LogMetric_default_instance_._instance.get_mutable()->metric_descriptor_ = const_cast< ::google::api::MetricDescriptor*>(
      ::google::api::MetricDescriptor::internal_default_instance());
  ::google::logging::v2::_LogMetric_default_instance_._instance.get_mutable()->bucket_options_ = const_cast< ::google::api::Distribution_BucketOptions*>(
      ::google::api::Distribution_BucketOptions::internal_default_instance());
}
void LogMetric::_slow_mutable_metric_descriptor() {
  metric_descriptor_ = ::google::protobuf::Arena::Create< ::google::api::MetricDescriptor >(
      GetArenaNoVirtual());
}
void LogMetric::unsafe_arena_set_allocated_metric_descriptor(
    ::google::api::MetricDescriptor* metric_descriptor) {
  if (GetArenaNoVirtual() == NULL) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = metric_descriptor;
  if (metric_descriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogMetric.metric_descriptor)
}
void LogMetric::clear_metric_descriptor() {
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = NULL;
}
void LogMetric::_slow_mutable_bucket_options() {
  bucket_options_ = ::google::protobuf::Arena::Create< ::google::api::Distribution_BucketOptions >(
      GetArenaNoVirtual());
}
void LogMetric::unsafe_arena_set_allocated_bucket_options(
    ::google::api::Distribution_BucketOptions* bucket_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete bucket_options_;
  }
  bucket_options_ = bucket_options;
  if (bucket_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogMetric.bucket_options)
}
void LogMetric::clear_bucket_options() {
  if (GetArenaNoVirtual() == NULL && bucket_options_ != NULL) {
    delete bucket_options_;
  }
  bucket_options_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogMetric::kNameFieldNumber;
const int LogMetric::kDescriptionFieldNumber;
const int LogMetric::kFilterFieldNumber;
const int LogMetric::kMetricDescriptorFieldNumber;
const int LogMetric::kValueExtractorFieldNumber;
const int LogMetric::kLabelExtractorsFieldNumber;
const int LogMetric::kBucketOptionsFieldNumber;
const int LogMetric::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogMetric::LogMetric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsLogMetric();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogMetric)
}
LogMetric::LogMetric(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  label_extractors_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsLogMetric();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogMetric)
}
LogMetric::LogMetric(const LogMetric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_extractors_.MergeFrom(from.label_extractors_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  value_extractor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_extractor().size() > 0) {
    value_extractor_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_extractor(),
      GetArenaNoVirtual());
  }
  if (from.has_metric_descriptor()) {
    metric_descriptor_ = new ::google::api::MetricDescriptor(*from.metric_descriptor_);
  } else {
    metric_descriptor_ = NULL;
  }
  if (from.has_bucket_options()) {
    bucket_options_ = new ::google::api::Distribution_BucketOptions(*from.bucket_options_);
  } else {
    bucket_options_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogMetric)
}

void LogMetric::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_extractor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metric_descriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&metric_descriptor_)) + sizeof(version_));
  _cached_size_ = 0;
}

LogMetric::~LogMetric() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogMetric)
  SharedDtor();
}

void LogMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_extractor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_descriptor_;
  if (this != internal_default_instance()) delete bucket_options_;
}

void LogMetric::ArenaDtor(void* object) {
  LogMetric* _this = reinterpret_cast< LogMetric* >(object);
  (void)_this;
}
void LogMetric::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogMetric::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogMetric::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogMetric& LogMetric::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsLogMetric();
  return *internal_default_instance();
}

LogMetric* LogMetric::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<LogMetric>(arena);
}

void LogMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_extractors_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  value_extractor_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = NULL;
  if (GetArenaNoVirtual() == NULL && bucket_options_ != NULL) {
    delete bucket_options_;
  }
  bucket_options_ = NULL;
  version_ = 0;
  _internal_metadata_.Clear();
}

bool LogMetric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogMetric)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogMetric.ApiVersion version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_version(static_cast< ::google::logging::v2::LogMetric_ApiVersion >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.MetricDescriptor metric_descriptor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_extractor = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_extractor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value_extractor().data(), static_cast<int>(this->value_extractor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.value_extractor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> label_extractors = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          LogMetric_LabelExtractorsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              LogMetric_LabelExtractorsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&label_extractors_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.LabelExtractorsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.LabelExtractorsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Distribution.BucketOptions bucket_options = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bucket_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogMetric)
  return false;
#undef DO_
}

void LogMetric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filter(), output);
  }

  // .google.logging.v2.LogMetric.ApiVersion version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->version(), output);
  }

  // .google.api.MetricDescriptor metric_descriptor = 5;
  if (this->has_metric_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->metric_descriptor_, output);
  }

  // string value_extractor = 6;
  if (this->value_extractor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_extractor().data(), static_cast<int>(this->value_extractor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.value_extractor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->value_extractor(), output);
  }

  // map<string, string> label_extractors = 7;
  if (!this->label_extractors().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.LogMetric.LabelExtractorsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.LogMetric.LabelExtractorsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->label_extractors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_extractors().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_extractors().begin();
          it != this->label_extractors().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LogMetric_LabelExtractorsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_extractors_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LogMetric_LabelExtractorsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_extractors().begin();
          it != this->label_extractors().end(); ++it) {
        entry.reset(label_extractors_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.api.Distribution.BucketOptions bucket_options = 8;
  if (this->has_bucket_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->bucket_options_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogMetric)
}

::google::protobuf::uint8* LogMetric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filter(), target);
  }

  // .google.logging.v2.LogMetric.ApiVersion version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->version(), target);
  }

  // .google.api.MetricDescriptor metric_descriptor = 5;
  if (this->has_metric_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->metric_descriptor_, deterministic, target);
  }

  // string value_extractor = 6;
  if (this->value_extractor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_extractor().data(), static_cast<int>(this->value_extractor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.value_extractor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->value_extractor(), target);
  }

  // map<string, string> label_extractors = 7;
  if (!this->label_extractors().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.LogMetric.LabelExtractorsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.LogMetric.LabelExtractorsEntry.value");
      }
    };

    if (deterministic &&
        this->label_extractors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_extractors().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_extractors().begin();
          it != this->label_extractors().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LogMetric_LabelExtractorsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_extractors_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LogMetric_LabelExtractorsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_extractors().begin();
          it != this->label_extractors().end(); ++it) {
        entry.reset(label_extractors_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.api.Distribution.BucketOptions bucket_options = 8;
  if (this->has_bucket_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->bucket_options_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogMetric)
  return target;
}

size_t LogMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogMetric)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> label_extractors = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->label_extractors_size());
  {
    ::google::protobuf::scoped_ptr<LogMetric_LabelExtractorsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->label_extractors().begin();
        it != this->label_extractors().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(label_extractors_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string value_extractor = 6;
  if (this->value_extractor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value_extractor());
  }

  // .google.api.MetricDescriptor metric_descriptor = 5;
  if (this->has_metric_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metric_descriptor_);
  }

  // .google.api.Distribution.BucketOptions bucket_options = 8;
  if (this->has_bucket_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bucket_options_);
  }

  // .google.logging.v2.LogMetric.ApiVersion version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogMetric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const LogMetric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogMetric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogMetric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogMetric)
    MergeFrom(*source);
  }
}

void LogMetric::MergeFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_extractors_.MergeFrom(from.label_extractors_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.value_extractor().size() > 0) {
    set_value_extractor(from.value_extractor());
  }
  if (from.has_metric_descriptor()) {
    mutable_metric_descriptor()->::google::api::MetricDescriptor::MergeFrom(from.metric_descriptor());
  }
  if (from.has_bucket_options()) {
    mutable_bucket_options()->::google::api::Distribution_BucketOptions::MergeFrom(from.bucket_options());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void LogMetric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogMetric::CopyFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogMetric::IsInitialized() const {
  return true;
}

void LogMetric::Swap(LogMetric* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogMetric* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogMetric::UnsafeArenaSwap(LogMetric* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogMetric::InternalSwap(LogMetric* other) {
  using std::swap;
  label_extractors_.Swap(&other->label_extractors_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  filter_.Swap(&other->filter_);
  value_extractor_.Swap(&other->value_extractor_);
  swap(metric_descriptor_, other->metric_descriptor_);
  swap(bucket_options_, other->bucket_options_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogMetric::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListLogMetricsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogMetricsRequest::kParentFieldNumber;
const int ListLogMetricsRequest::kPageTokenFieldNumber;
const int ListLogMetricsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogMetricsRequest::ListLogMetricsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsListLogMetricsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogMetricsRequest)
}
ListLogMetricsRequest::ListLogMetricsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsListLogMetricsRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogMetricsRequest)
}
ListLogMetricsRequest::ListLogMetricsRequest(const ListLogMetricsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogMetricsRequest)
}

void ListLogMetricsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListLogMetricsRequest::~ListLogMetricsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogMetricsRequest)
  SharedDtor();
}

void ListLogMetricsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogMetricsRequest::ArenaDtor(void* object) {
  ListLogMetricsRequest* _this = reinterpret_cast< ListLogMetricsRequest* >(object);
  (void)_this;
}
void ListLogMetricsRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListLogMetricsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListLogMetricsRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListLogMetricsRequest& ListLogMetricsRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsListLogMetricsRequest();
  return *internal_default_instance();
}

ListLogMetricsRequest* ListLogMetricsRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListLogMetricsRequest>(arena);
}

void ListLogMetricsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogMetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListLogMetricsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogMetricsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogMetricsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogMetricsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogMetricsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogMetricsRequest)
  return false;
#undef DO_
}

void ListLogMetricsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogMetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogMetricsRequest)
}

::google::protobuf::uint8* ListLogMetricsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogMetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogMetricsRequest)
  return target;
}

size_t ListLogMetricsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogMetricsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListLogMetricsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogMetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogMetricsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListLogMetricsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogMetricsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogMetricsRequest)
    MergeFrom(*source);
  }
}

void ListLogMetricsRequest::MergeFrom(const ListLogMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogMetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListLogMetricsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogMetricsRequest::CopyFrom(const ListLogMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogMetricsRequest::IsInitialized() const {
  return true;
}

void ListLogMetricsRequest::Swap(ListLogMetricsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogMetricsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListLogMetricsRequest::UnsafeArenaSwap(ListLogMetricsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogMetricsRequest::InternalSwap(ListLogMetricsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListLogMetricsRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListLogMetricsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogMetricsResponse::kMetricsFieldNumber;
const int ListLogMetricsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogMetricsResponse::ListLogMetricsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsListLogMetricsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogMetricsResponse)
}
ListLogMetricsResponse::ListLogMetricsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metrics_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsListLogMetricsResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogMetricsResponse)
}
ListLogMetricsResponse::ListLogMetricsResponse(const ListLogMetricsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metrics_(from.metrics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogMetricsResponse)
}

void ListLogMetricsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListLogMetricsResponse::~ListLogMetricsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogMetricsResponse)
  SharedDtor();
}

void ListLogMetricsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogMetricsResponse::ArenaDtor(void* object) {
  ListLogMetricsResponse* _this = reinterpret_cast< ListLogMetricsResponse* >(object);
  (void)_this;
}
void ListLogMetricsResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListLogMetricsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListLogMetricsResponse::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListLogMetricsResponse& ListLogMetricsResponse::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsListLogMetricsResponse();
  return *internal_default_instance();
}

ListLogMetricsResponse* ListLogMetricsResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListLogMetricsResponse>(arena);
}

void ListLogMetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogMetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ListLogMetricsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogMetricsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogMetric metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogMetricsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogMetricsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogMetricsResponse)
  return false;
#undef DO_
}

void ListLogMetricsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogMetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogMetric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metrics(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogMetricsResponse)
}

::google::protobuf::uint8* ListLogMetricsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogMetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogMetric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogMetricsResponse)
  return target;
}

size_t ListLogMetricsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogMetricsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.logging.v2.LogMetric metrics = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListLogMetricsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogMetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogMetricsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListLogMetricsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogMetricsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogMetricsResponse)
    MergeFrom(*source);
  }
}

void ListLogMetricsResponse::MergeFrom(const ListLogMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogMetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListLogMetricsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogMetricsResponse::CopyFrom(const ListLogMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogMetricsResponse::IsInitialized() const {
  return true;
}

void ListLogMetricsResponse::Swap(ListLogMetricsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogMetricsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListLogMetricsResponse::UnsafeArenaSwap(ListLogMetricsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogMetricsResponse::InternalSwap(ListLogMetricsResponse* other) {
  using std::swap;
  metrics_.InternalSwap(&other->metrics_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListLogMetricsResponse::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLogMetricRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLogMetricRequest::kMetricNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLogMetricRequest::GetLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsGetLogMetricRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetLogMetricRequest)
}
GetLogMetricRequest::GetLogMetricRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsGetLogMetricRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetLogMetricRequest)
}
GetLogMetricRequest::GetLogMetricRequest(const GetLogMetricRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metric_name().size() > 0) {
    metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetLogMetricRequest)
}

void GetLogMetricRequest::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetLogMetricRequest::~GetLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetLogMetricRequest)
  SharedDtor();
}

void GetLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLogMetricRequest::ArenaDtor(void* object) {
  GetLogMetricRequest* _this = reinterpret_cast< GetLogMetricRequest* >(object);
  (void)_this;
}
void GetLogMetricRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogMetricRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLogMetricRequest& GetLogMetricRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsGetLogMetricRequest();
  return *internal_default_instance();
}

GetLogMetricRequest* GetLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetLogMetricRequest>(arena);
}

void GetLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string metric_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), static_cast<int>(this->metric_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetLogMetricRequest.metric_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetLogMetricRequest)
  return false;
#undef DO_
}

void GetLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetLogMetricRequest.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetLogMetricRequest)
}

::google::protobuf::uint8* GetLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetLogMetricRequest.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetLogMetricRequest)
  return target;
}

size_t GetLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetLogMetricRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetLogMetricRequest)
    MergeFrom(*source);
  }
}

void GetLogMetricRequest::MergeFrom(const GetLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {
    set_metric_name(from.metric_name());
  }
}

void GetLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogMetricRequest::CopyFrom(const GetLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogMetricRequest::IsInitialized() const {
  return true;
}

void GetLogMetricRequest::Swap(GetLogMetricRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetLogMetricRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetLogMetricRequest::UnsafeArenaSwap(GetLogMetricRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetLogMetricRequest::InternalSwap(GetLogMetricRequest* other) {
  using std::swap;
  metric_name_.Swap(&other->metric_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLogMetricRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateLogMetricRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateLogMetricRequest_default_instance_._instance.get_mutable()->metric_ = const_cast< ::google::logging::v2::LogMetric*>(
      ::google::logging::v2::LogMetric::internal_default_instance());
}
void CreateLogMetricRequest::_slow_mutable_metric() {
  metric_ = ::google::protobuf::Arena::CreateMessage< ::google::logging::v2::LogMetric >(
      GetArenaNoVirtual());
}
void CreateLogMetricRequest::unsafe_arena_set_allocated_metric(
    ::google::logging::v2::LogMetric* metric) {
  if (GetArenaNoVirtual() == NULL) {
    delete metric_;
  }
  metric_ = metric;
  if (metric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateLogMetricRequest.metric)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateLogMetricRequest::kParentFieldNumber;
const int CreateLogMetricRequest::kMetricFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateLogMetricRequest::CreateLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsCreateLogMetricRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateLogMetricRequest)
}
CreateLogMetricRequest::CreateLogMetricRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsCreateLogMetricRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateLogMetricRequest)
}
CreateLogMetricRequest::CreateLogMetricRequest(const CreateLogMetricRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  if (from.has_metric()) {
    metric_ = new ::google::logging::v2::LogMetric(*from.metric_);
  } else {
    metric_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateLogMetricRequest)
}

void CreateLogMetricRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_ = NULL;
  _cached_size_ = 0;
}

CreateLogMetricRequest::~CreateLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateLogMetricRequest)
  SharedDtor();
}

void CreateLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_;
}

void CreateLogMetricRequest::ArenaDtor(void* object) {
  CreateLogMetricRequest* _this = reinterpret_cast< CreateLogMetricRequest* >(object);
  (void)_this;
}
void CreateLogMetricRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreateLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateLogMetricRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateLogMetricRequest& CreateLogMetricRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsCreateLogMetricRequest();
  return *internal_default_instance();
}

CreateLogMetricRequest* CreateLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CreateLogMetricRequest>(arena);
}

void CreateLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) {
    delete metric_;
  }
  metric_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateLogMetricRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogMetric metric = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateLogMetricRequest)
  return false;
#undef DO_
}

void CreateLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateLogMetricRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metric_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateLogMetricRequest)
}

::google::protobuf::uint8* CreateLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateLogMetricRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->metric_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateLogMetricRequest)
  return target;
}

size_t CreateLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateLogMetricRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metric_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateLogMetricRequest)
    MergeFrom(*source);
  }
}

void CreateLogMetricRequest::MergeFrom(const CreateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.has_metric()) {
    mutable_metric()->::google::logging::v2::LogMetric::MergeFrom(from.metric());
  }
}

void CreateLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateLogMetricRequest::CopyFrom(const CreateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLogMetricRequest::IsInitialized() const {
  return true;
}

void CreateLogMetricRequest::Swap(CreateLogMetricRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateLogMetricRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateLogMetricRequest::UnsafeArenaSwap(CreateLogMetricRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateLogMetricRequest::InternalSwap(CreateLogMetricRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  swap(metric_, other->metric_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateLogMetricRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateLogMetricRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateLogMetricRequest_default_instance_._instance.get_mutable()->metric_ = const_cast< ::google::logging::v2::LogMetric*>(
      ::google::logging::v2::LogMetric::internal_default_instance());
}
void UpdateLogMetricRequest::_slow_mutable_metric() {
  metric_ = ::google::protobuf::Arena::CreateMessage< ::google::logging::v2::LogMetric >(
      GetArenaNoVirtual());
}
void UpdateLogMetricRequest::unsafe_arena_set_allocated_metric(
    ::google::logging::v2::LogMetric* metric) {
  if (GetArenaNoVirtual() == NULL) {
    delete metric_;
  }
  metric_ = metric;
  if (metric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateLogMetricRequest.metric)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateLogMetricRequest::kMetricNameFieldNumber;
const int UpdateLogMetricRequest::kMetricFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateLogMetricRequest::UpdateLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsUpdateLogMetricRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateLogMetricRequest)
}
UpdateLogMetricRequest::UpdateLogMetricRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsUpdateLogMetricRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateLogMetricRequest)
}
UpdateLogMetricRequest::UpdateLogMetricRequest(const UpdateLogMetricRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metric_name().size() > 0) {
    metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name(),
      GetArenaNoVirtual());
  }
  if (from.has_metric()) {
    metric_ = new ::google::logging::v2::LogMetric(*from.metric_);
  } else {
    metric_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateLogMetricRequest)
}

void UpdateLogMetricRequest::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_ = NULL;
  _cached_size_ = 0;
}

UpdateLogMetricRequest::~UpdateLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateLogMetricRequest)
  SharedDtor();
}

void UpdateLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_;
}

void UpdateLogMetricRequest::ArenaDtor(void* object) {
  UpdateLogMetricRequest* _this = reinterpret_cast< UpdateLogMetricRequest* >(object);
  (void)_this;
}
void UpdateLogMetricRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UpdateLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateLogMetricRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateLogMetricRequest& UpdateLogMetricRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsUpdateLogMetricRequest();
  return *internal_default_instance();
}

UpdateLogMetricRequest* UpdateLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UpdateLogMetricRequest>(arena);
}

void UpdateLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) {
    delete metric_;
  }
  metric_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string metric_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), static_cast<int>(this->metric_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateLogMetricRequest.metric_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogMetric metric = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateLogMetricRequest)
  return false;
#undef DO_
}

void UpdateLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateLogMetricRequest.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metric_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateLogMetricRequest)
}

::google::protobuf::uint8* UpdateLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateLogMetricRequest.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->metric_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateLogMetricRequest)
  return target;
}

size_t UpdateLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateLogMetricRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metric_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateLogMetricRequest)
    MergeFrom(*source);
  }
}

void UpdateLogMetricRequest::MergeFrom(const UpdateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {
    set_metric_name(from.metric_name());
  }
  if (from.has_metric()) {
    mutable_metric()->::google::logging::v2::LogMetric::MergeFrom(from.metric());
  }
}

void UpdateLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateLogMetricRequest::CopyFrom(const UpdateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLogMetricRequest::IsInitialized() const {
  return true;
}

void UpdateLogMetricRequest::Swap(UpdateLogMetricRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateLogMetricRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateLogMetricRequest::UnsafeArenaSwap(UpdateLogMetricRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateLogMetricRequest::InternalSwap(UpdateLogMetricRequest* other) {
  using std::swap;
  metric_name_.Swap(&other->metric_name_);
  swap(metric_, other->metric_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateLogMetricRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteLogMetricRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteLogMetricRequest::kMetricNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteLogMetricRequest::DeleteLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsDeleteLogMetricRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteLogMetricRequest)
}
DeleteLogMetricRequest::DeleteLogMetricRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsDeleteLogMetricRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteLogMetricRequest)
}
DeleteLogMetricRequest::DeleteLogMetricRequest(const DeleteLogMetricRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metric_name().size() > 0) {
    metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteLogMetricRequest)
}

void DeleteLogMetricRequest::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteLogMetricRequest::~DeleteLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteLogMetricRequest)
  SharedDtor();
}

void DeleteLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteLogMetricRequest::ArenaDtor(void* object) {
  DeleteLogMetricRequest* _this = reinterpret_cast< DeleteLogMetricRequest* >(object);
  (void)_this;
}
void DeleteLogMetricRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteLogMetricRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteLogMetricRequest& DeleteLogMetricRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::InitDefaultsDeleteLogMetricRequest();
  return *internal_default_instance();
}

DeleteLogMetricRequest* DeleteLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeleteLogMetricRequest>(arena);
}

void DeleteLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DeleteLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string metric_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), static_cast<int>(this->metric_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteLogMetricRequest.metric_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteLogMetricRequest)
  return false;
#undef DO_
}

void DeleteLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogMetricRequest.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteLogMetricRequest)
}

::google::protobuf::uint8* DeleteLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteLogMetricRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogMetricRequest.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteLogMetricRequest)
  return target;
}

size_t DeleteLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteLogMetricRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteLogMetricRequest)
    MergeFrom(*source);
  }
}

void DeleteLogMetricRequest::MergeFrom(const DeleteLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {
    set_metric_name(from.metric_name());
  }
}

void DeleteLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogMetricRequest::CopyFrom(const DeleteLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogMetricRequest::IsInitialized() const {
  return true;
}

void DeleteLogMetricRequest::Swap(DeleteLogMetricRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteLogMetricRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteLogMetricRequest::UnsafeArenaSwap(DeleteLogMetricRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteLogMetricRequest::InternalSwap(DeleteLogMetricRequest* other) {
  using std::swap;
  metric_name_.Swap(&other->metric_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteLogMetricRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace logging
}  // namespace google

// @@protoc_insertion_point(global_scope)
