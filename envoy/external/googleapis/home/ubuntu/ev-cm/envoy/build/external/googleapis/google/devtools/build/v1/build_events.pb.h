// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/build/v1/build_events.proto

#ifndef PROTOBUF_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto__INCLUDED
#define PROTOBUF_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/devtools/build/v1/build_status.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsBuildEvent_InvocationAttemptStartedImpl();
void InitDefaultsBuildEvent_InvocationAttemptStarted();
void InitDefaultsBuildEvent_InvocationAttemptFinishedImpl();
void InitDefaultsBuildEvent_InvocationAttemptFinished();
void InitDefaultsBuildEvent_BuildEnqueuedImpl();
void InitDefaultsBuildEvent_BuildEnqueued();
void InitDefaultsBuildEvent_BuildFinishedImpl();
void InitDefaultsBuildEvent_BuildFinished();
void InitDefaultsBuildEvent_ConsoleOutputImpl();
void InitDefaultsBuildEvent_ConsoleOutput();
void InitDefaultsBuildEvent_BuildComponentStreamFinishedImpl();
void InitDefaultsBuildEvent_BuildComponentStreamFinished();
void InitDefaultsBuildEventImpl();
void InitDefaultsBuildEvent();
void InitDefaultsStreamIdImpl();
void InitDefaultsStreamId();
inline void InitDefaults() {
  InitDefaultsBuildEvent_InvocationAttemptStarted();
  InitDefaultsBuildEvent_InvocationAttemptFinished();
  InitDefaultsBuildEvent_BuildEnqueued();
  InitDefaultsBuildEvent_BuildFinished();
  InitDefaultsBuildEvent_ConsoleOutput();
  InitDefaultsBuildEvent_BuildComponentStreamFinished();
  InitDefaultsBuildEvent();
  InitDefaultsStreamId();
}
}  // namespace protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto
namespace google {
namespace devtools {
namespace build {
namespace v1 {
class BuildEvent;
class BuildEventDefaultTypeInternal;
extern BuildEventDefaultTypeInternal _BuildEvent_default_instance_;
class BuildEvent_BuildComponentStreamFinished;
class BuildEvent_BuildComponentStreamFinishedDefaultTypeInternal;
extern BuildEvent_BuildComponentStreamFinishedDefaultTypeInternal _BuildEvent_BuildComponentStreamFinished_default_instance_;
class BuildEvent_BuildEnqueued;
class BuildEvent_BuildEnqueuedDefaultTypeInternal;
extern BuildEvent_BuildEnqueuedDefaultTypeInternal _BuildEvent_BuildEnqueued_default_instance_;
class BuildEvent_BuildFinished;
class BuildEvent_BuildFinishedDefaultTypeInternal;
extern BuildEvent_BuildFinishedDefaultTypeInternal _BuildEvent_BuildFinished_default_instance_;
class BuildEvent_ConsoleOutput;
class BuildEvent_ConsoleOutputDefaultTypeInternal;
extern BuildEvent_ConsoleOutputDefaultTypeInternal _BuildEvent_ConsoleOutput_default_instance_;
class BuildEvent_InvocationAttemptFinished;
class BuildEvent_InvocationAttemptFinishedDefaultTypeInternal;
extern BuildEvent_InvocationAttemptFinishedDefaultTypeInternal _BuildEvent_InvocationAttemptFinished_default_instance_;
class BuildEvent_InvocationAttemptStarted;
class BuildEvent_InvocationAttemptStartedDefaultTypeInternal;
extern BuildEvent_InvocationAttemptStartedDefaultTypeInternal _BuildEvent_InvocationAttemptStarted_default_instance_;
class StreamId;
class StreamIdDefaultTypeInternal;
extern StreamIdDefaultTypeInternal _StreamId_default_instance_;
}  // namespace v1
}  // namespace build
}  // namespace devtools
}  // namespace google
namespace google {
namespace devtools {
namespace build {
namespace v1 {

enum BuildEvent_BuildComponentStreamFinished_FinishType {
  BuildEvent_BuildComponentStreamFinished_FinishType_FINISH_TYPE_UNSPECIFIED = 0,
  BuildEvent_BuildComponentStreamFinished_FinishType_FINISHED = 1,
  BuildEvent_BuildComponentStreamFinished_FinishType_EXPIRED = 2,
  BuildEvent_BuildComponentStreamFinished_FinishType_BuildEvent_BuildComponentStreamFinished_FinishType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BuildEvent_BuildComponentStreamFinished_FinishType_BuildEvent_BuildComponentStreamFinished_FinishType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BuildEvent_BuildComponentStreamFinished_FinishType_IsValid(int value);
const BuildEvent_BuildComponentStreamFinished_FinishType BuildEvent_BuildComponentStreamFinished_FinishType_FinishType_MIN = BuildEvent_BuildComponentStreamFinished_FinishType_FINISH_TYPE_UNSPECIFIED;
const BuildEvent_BuildComponentStreamFinished_FinishType BuildEvent_BuildComponentStreamFinished_FinishType_FinishType_MAX = BuildEvent_BuildComponentStreamFinished_FinishType_EXPIRED;
const int BuildEvent_BuildComponentStreamFinished_FinishType_FinishType_ARRAYSIZE = BuildEvent_BuildComponentStreamFinished_FinishType_FinishType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildEvent_BuildComponentStreamFinished_FinishType_descriptor();
inline const ::std::string& BuildEvent_BuildComponentStreamFinished_FinishType_Name(BuildEvent_BuildComponentStreamFinished_FinishType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildEvent_BuildComponentStreamFinished_FinishType_descriptor(), value);
}
inline bool BuildEvent_BuildComponentStreamFinished_FinishType_Parse(
    const ::std::string& name, BuildEvent_BuildComponentStreamFinished_FinishType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildEvent_BuildComponentStreamFinished_FinishType>(
    BuildEvent_BuildComponentStreamFinished_FinishType_descriptor(), name, value);
}
enum StreamId_BuildComponent {
  StreamId_BuildComponent_UNKNOWN_COMPONENT = 0,
  StreamId_BuildComponent_CONTROLLER = 1,
  StreamId_BuildComponent_WORKER = 2,
  StreamId_BuildComponent_TOOL = 3,
  StreamId_BuildComponent_StreamId_BuildComponent_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StreamId_BuildComponent_StreamId_BuildComponent_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StreamId_BuildComponent_IsValid(int value);
const StreamId_BuildComponent StreamId_BuildComponent_BuildComponent_MIN = StreamId_BuildComponent_UNKNOWN_COMPONENT;
const StreamId_BuildComponent StreamId_BuildComponent_BuildComponent_MAX = StreamId_BuildComponent_TOOL;
const int StreamId_BuildComponent_BuildComponent_ARRAYSIZE = StreamId_BuildComponent_BuildComponent_MAX + 1;

const ::google::protobuf::EnumDescriptor* StreamId_BuildComponent_descriptor();
inline const ::std::string& StreamId_BuildComponent_Name(StreamId_BuildComponent value) {
  return ::google::protobuf::internal::NameOfEnum(
    StreamId_BuildComponent_descriptor(), value);
}
inline bool StreamId_BuildComponent_Parse(
    const ::std::string& name, StreamId_BuildComponent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StreamId_BuildComponent>(
    StreamId_BuildComponent_descriptor(), name, value);
}
enum ConsoleOutputStream {
  UNKNOWN = 0,
  STDOUT = 1,
  STDERR = 2,
  ConsoleOutputStream_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConsoleOutputStream_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConsoleOutputStream_IsValid(int value);
const ConsoleOutputStream ConsoleOutputStream_MIN = UNKNOWN;
const ConsoleOutputStream ConsoleOutputStream_MAX = STDERR;
const int ConsoleOutputStream_ARRAYSIZE = ConsoleOutputStream_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConsoleOutputStream_descriptor();
inline const ::std::string& ConsoleOutputStream_Name(ConsoleOutputStream value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConsoleOutputStream_descriptor(), value);
}
inline bool ConsoleOutputStream_Parse(
    const ::std::string& name, ConsoleOutputStream* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConsoleOutputStream>(
    ConsoleOutputStream_descriptor(), name, value);
}
// ===================================================================

class BuildEvent_InvocationAttemptStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.BuildEvent.InvocationAttemptStarted) */ {
 public:
  BuildEvent_InvocationAttemptStarted();
  virtual ~BuildEvent_InvocationAttemptStarted();

  BuildEvent_InvocationAttemptStarted(const BuildEvent_InvocationAttemptStarted& from);

  inline BuildEvent_InvocationAttemptStarted& operator=(const BuildEvent_InvocationAttemptStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildEvent_InvocationAttemptStarted(BuildEvent_InvocationAttemptStarted&& from) noexcept
    : BuildEvent_InvocationAttemptStarted() {
    *this = ::std::move(from);
  }

  inline BuildEvent_InvocationAttemptStarted& operator=(BuildEvent_InvocationAttemptStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildEvent_InvocationAttemptStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildEvent_InvocationAttemptStarted* internal_default_instance() {
    return reinterpret_cast<const BuildEvent_InvocationAttemptStarted*>(
               &_BuildEvent_InvocationAttemptStarted_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(BuildEvent_InvocationAttemptStarted* other);
  void Swap(BuildEvent_InvocationAttemptStarted* other);
  friend void swap(BuildEvent_InvocationAttemptStarted& a, BuildEvent_InvocationAttemptStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildEvent_InvocationAttemptStarted* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildEvent_InvocationAttemptStarted* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildEvent_InvocationAttemptStarted& from);
  void MergeFrom(const BuildEvent_InvocationAttemptStarted& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildEvent_InvocationAttemptStarted* other);
  protected:
  explicit BuildEvent_InvocationAttemptStarted(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 attempt_number = 1;
  void clear_attempt_number();
  static const int kAttemptNumberFieldNumber = 1;
  ::google::protobuf::int64 attempt_number() const;
  void set_attempt_number(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.BuildEvent.InvocationAttemptStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 attempt_number_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsBuildEvent_InvocationAttemptStartedImpl();
};
// -------------------------------------------------------------------

class BuildEvent_InvocationAttemptFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished) */ {
 public:
  BuildEvent_InvocationAttemptFinished();
  virtual ~BuildEvent_InvocationAttemptFinished();

  BuildEvent_InvocationAttemptFinished(const BuildEvent_InvocationAttemptFinished& from);

  inline BuildEvent_InvocationAttemptFinished& operator=(const BuildEvent_InvocationAttemptFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildEvent_InvocationAttemptFinished(BuildEvent_InvocationAttemptFinished&& from) noexcept
    : BuildEvent_InvocationAttemptFinished() {
    *this = ::std::move(from);
  }

  inline BuildEvent_InvocationAttemptFinished& operator=(BuildEvent_InvocationAttemptFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildEvent_InvocationAttemptFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildEvent_InvocationAttemptFinished* internal_default_instance() {
    return reinterpret_cast<const BuildEvent_InvocationAttemptFinished*>(
               &_BuildEvent_InvocationAttemptFinished_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(BuildEvent_InvocationAttemptFinished* other);
  void Swap(BuildEvent_InvocationAttemptFinished* other);
  friend void swap(BuildEvent_InvocationAttemptFinished& a, BuildEvent_InvocationAttemptFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildEvent_InvocationAttemptFinished* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildEvent_InvocationAttemptFinished* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildEvent_InvocationAttemptFinished& from);
  void MergeFrom(const BuildEvent_InvocationAttemptFinished& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildEvent_InvocationAttemptFinished* other);
  protected:
  explicit BuildEvent_InvocationAttemptFinished(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int32Value exit_code = 2;
  bool has_exit_code() const;
  void clear_exit_code();
  static const int kExitCodeFieldNumber = 2;
  private:
  void _slow_mutable_exit_code();
  public:
  const ::google::protobuf::Int32Value& exit_code() const;
  ::google::protobuf::Int32Value* release_exit_code();
  ::google::protobuf::Int32Value* mutable_exit_code();
  void set_allocated_exit_code(::google::protobuf::Int32Value* exit_code);
  void unsafe_arena_set_allocated_exit_code(
      ::google::protobuf::Int32Value* exit_code);
  ::google::protobuf::Int32Value* unsafe_arena_release_exit_code();

  // .google.devtools.build.v1.BuildStatus invocation_status = 3;
  bool has_invocation_status() const;
  void clear_invocation_status();
  static const int kInvocationStatusFieldNumber = 3;
  private:
  void _slow_mutable_invocation_status();
  public:
  const ::google::devtools::build::v1::BuildStatus& invocation_status() const;
  ::google::devtools::build::v1::BuildStatus* release_invocation_status();
  ::google::devtools::build::v1::BuildStatus* mutable_invocation_status();
  void set_allocated_invocation_status(::google::devtools::build::v1::BuildStatus* invocation_status);
  void unsafe_arena_set_allocated_invocation_status(
      ::google::devtools::build::v1::BuildStatus* invocation_status);
  ::google::devtools::build::v1::BuildStatus* unsafe_arena_release_invocation_status();

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int32Value* exit_code_;
  ::google::devtools::build::v1::BuildStatus* invocation_status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsBuildEvent_InvocationAttemptFinishedImpl();
};
// -------------------------------------------------------------------

class BuildEvent_BuildEnqueued : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.BuildEvent.BuildEnqueued) */ {
 public:
  BuildEvent_BuildEnqueued();
  virtual ~BuildEvent_BuildEnqueued();

  BuildEvent_BuildEnqueued(const BuildEvent_BuildEnqueued& from);

  inline BuildEvent_BuildEnqueued& operator=(const BuildEvent_BuildEnqueued& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildEvent_BuildEnqueued(BuildEvent_BuildEnqueued&& from) noexcept
    : BuildEvent_BuildEnqueued() {
    *this = ::std::move(from);
  }

  inline BuildEvent_BuildEnqueued& operator=(BuildEvent_BuildEnqueued&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildEvent_BuildEnqueued& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildEvent_BuildEnqueued* internal_default_instance() {
    return reinterpret_cast<const BuildEvent_BuildEnqueued*>(
               &_BuildEvent_BuildEnqueued_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(BuildEvent_BuildEnqueued* other);
  void Swap(BuildEvent_BuildEnqueued* other);
  friend void swap(BuildEvent_BuildEnqueued& a, BuildEvent_BuildEnqueued& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildEvent_BuildEnqueued* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildEvent_BuildEnqueued* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildEvent_BuildEnqueued& from);
  void MergeFrom(const BuildEvent_BuildEnqueued& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildEvent_BuildEnqueued* other);
  protected:
  explicit BuildEvent_BuildEnqueued(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.BuildEvent.BuildEnqueued)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsBuildEvent_BuildEnqueuedImpl();
};
// -------------------------------------------------------------------

class BuildEvent_BuildFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.BuildEvent.BuildFinished) */ {
 public:
  BuildEvent_BuildFinished();
  virtual ~BuildEvent_BuildFinished();

  BuildEvent_BuildFinished(const BuildEvent_BuildFinished& from);

  inline BuildEvent_BuildFinished& operator=(const BuildEvent_BuildFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildEvent_BuildFinished(BuildEvent_BuildFinished&& from) noexcept
    : BuildEvent_BuildFinished() {
    *this = ::std::move(from);
  }

  inline BuildEvent_BuildFinished& operator=(BuildEvent_BuildFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildEvent_BuildFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildEvent_BuildFinished* internal_default_instance() {
    return reinterpret_cast<const BuildEvent_BuildFinished*>(
               &_BuildEvent_BuildFinished_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(BuildEvent_BuildFinished* other);
  void Swap(BuildEvent_BuildFinished* other);
  friend void swap(BuildEvent_BuildFinished& a, BuildEvent_BuildFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildEvent_BuildFinished* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildEvent_BuildFinished* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildEvent_BuildFinished& from);
  void MergeFrom(const BuildEvent_BuildFinished& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildEvent_BuildFinished* other);
  protected:
  explicit BuildEvent_BuildFinished(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.build.v1.BuildStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  private:
  void _slow_mutable_status();
  public:
  const ::google::devtools::build::v1::BuildStatus& status() const;
  ::google::devtools::build::v1::BuildStatus* release_status();
  ::google::devtools::build::v1::BuildStatus* mutable_status();
  void set_allocated_status(::google::devtools::build::v1::BuildStatus* status);
  void unsafe_arena_set_allocated_status(
      ::google::devtools::build::v1::BuildStatus* status);
  ::google::devtools::build::v1::BuildStatus* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.BuildEvent.BuildFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::devtools::build::v1::BuildStatus* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsBuildEvent_BuildFinishedImpl();
};
// -------------------------------------------------------------------

class BuildEvent_ConsoleOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.BuildEvent.ConsoleOutput) */ {
 public:
  BuildEvent_ConsoleOutput();
  virtual ~BuildEvent_ConsoleOutput();

  BuildEvent_ConsoleOutput(const BuildEvent_ConsoleOutput& from);

  inline BuildEvent_ConsoleOutput& operator=(const BuildEvent_ConsoleOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildEvent_ConsoleOutput(BuildEvent_ConsoleOutput&& from) noexcept
    : BuildEvent_ConsoleOutput() {
    *this = ::std::move(from);
  }

  inline BuildEvent_ConsoleOutput& operator=(BuildEvent_ConsoleOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildEvent_ConsoleOutput& default_instance();

  enum OutputCase {
    kTextOutput = 2,
    kBinaryOutput = 3,
    OUTPUT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildEvent_ConsoleOutput* internal_default_instance() {
    return reinterpret_cast<const BuildEvent_ConsoleOutput*>(
               &_BuildEvent_ConsoleOutput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(BuildEvent_ConsoleOutput* other);
  void Swap(BuildEvent_ConsoleOutput* other);
  friend void swap(BuildEvent_ConsoleOutput& a, BuildEvent_ConsoleOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildEvent_ConsoleOutput* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildEvent_ConsoleOutput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildEvent_ConsoleOutput& from);
  void MergeFrom(const BuildEvent_ConsoleOutput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildEvent_ConsoleOutput* other);
  protected:
  explicit BuildEvent_ConsoleOutput(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.build.v1.ConsoleOutputStream type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::devtools::build::v1::ConsoleOutputStream type() const;
  void set_type(::google::devtools::build::v1::ConsoleOutputStream value);

  // string text_output = 2;
  private:
  bool has_text_output() const;
  public:
  void clear_text_output();
  static const int kTextOutputFieldNumber = 2;
  const ::std::string& text_output() const;
  void set_text_output(const ::std::string& value);
  #if LANG_CXX11
  void set_text_output(::std::string&& value);
  #endif
  void set_text_output(const char* value);
  void set_text_output(const char* value, size_t size);
  ::std::string* mutable_text_output();
  ::std::string* release_text_output();
  void set_allocated_text_output(::std::string* text_output);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_text_output();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_text_output(
      ::std::string* text_output);

  // bytes binary_output = 3;
  private:
  bool has_binary_output() const;
  public:
  void clear_binary_output();
  static const int kBinaryOutputFieldNumber = 3;
  const ::std::string& binary_output() const;
  void set_binary_output(const ::std::string& value);
  #if LANG_CXX11
  void set_binary_output(::std::string&& value);
  #endif
  void set_binary_output(const char* value);
  void set_binary_output(const void* value, size_t size);
  ::std::string* mutable_binary_output();
  ::std::string* release_binary_output();
  void set_allocated_binary_output(::std::string* binary_output);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_binary_output();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_binary_output(
      ::std::string* binary_output);

  OutputCase output_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.BuildEvent.ConsoleOutput)
 private:
  void set_has_text_output();
  void set_has_binary_output();

  inline bool has_output() const;
  void clear_output();
  inline void clear_has_output();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  union OutputUnion {
    OutputUnion() {}
    ::google::protobuf::internal::ArenaStringPtr text_output_;
    ::google::protobuf::internal::ArenaStringPtr binary_output_;
  } output_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsBuildEvent_ConsoleOutputImpl();
};
// -------------------------------------------------------------------

class BuildEvent_BuildComponentStreamFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished) */ {
 public:
  BuildEvent_BuildComponentStreamFinished();
  virtual ~BuildEvent_BuildComponentStreamFinished();

  BuildEvent_BuildComponentStreamFinished(const BuildEvent_BuildComponentStreamFinished& from);

  inline BuildEvent_BuildComponentStreamFinished& operator=(const BuildEvent_BuildComponentStreamFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildEvent_BuildComponentStreamFinished(BuildEvent_BuildComponentStreamFinished&& from) noexcept
    : BuildEvent_BuildComponentStreamFinished() {
    *this = ::std::move(from);
  }

  inline BuildEvent_BuildComponentStreamFinished& operator=(BuildEvent_BuildComponentStreamFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildEvent_BuildComponentStreamFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildEvent_BuildComponentStreamFinished* internal_default_instance() {
    return reinterpret_cast<const BuildEvent_BuildComponentStreamFinished*>(
               &_BuildEvent_BuildComponentStreamFinished_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(BuildEvent_BuildComponentStreamFinished* other);
  void Swap(BuildEvent_BuildComponentStreamFinished* other);
  friend void swap(BuildEvent_BuildComponentStreamFinished& a, BuildEvent_BuildComponentStreamFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildEvent_BuildComponentStreamFinished* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildEvent_BuildComponentStreamFinished* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildEvent_BuildComponentStreamFinished& from);
  void MergeFrom(const BuildEvent_BuildComponentStreamFinished& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildEvent_BuildComponentStreamFinished* other);
  protected:
  explicit BuildEvent_BuildComponentStreamFinished(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BuildEvent_BuildComponentStreamFinished_FinishType FinishType;
  static const FinishType FINISH_TYPE_UNSPECIFIED =
    BuildEvent_BuildComponentStreamFinished_FinishType_FINISH_TYPE_UNSPECIFIED;
  static const FinishType FINISHED =
    BuildEvent_BuildComponentStreamFinished_FinishType_FINISHED;
  static const FinishType EXPIRED =
    BuildEvent_BuildComponentStreamFinished_FinishType_EXPIRED;
  static inline bool FinishType_IsValid(int value) {
    return BuildEvent_BuildComponentStreamFinished_FinishType_IsValid(value);
  }
  static const FinishType FinishType_MIN =
    BuildEvent_BuildComponentStreamFinished_FinishType_FinishType_MIN;
  static const FinishType FinishType_MAX =
    BuildEvent_BuildComponentStreamFinished_FinishType_FinishType_MAX;
  static const int FinishType_ARRAYSIZE =
    BuildEvent_BuildComponentStreamFinished_FinishType_FinishType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FinishType_descriptor() {
    return BuildEvent_BuildComponentStreamFinished_FinishType_descriptor();
  }
  static inline const ::std::string& FinishType_Name(FinishType value) {
    return BuildEvent_BuildComponentStreamFinished_FinishType_Name(value);
  }
  static inline bool FinishType_Parse(const ::std::string& name,
      FinishType* value) {
    return BuildEvent_BuildComponentStreamFinished_FinishType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished.FinishType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType type() const;
  void set_type(::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType value);

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsBuildEvent_BuildComponentStreamFinishedImpl();
};
// -------------------------------------------------------------------

class BuildEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.BuildEvent) */ {
 public:
  BuildEvent();
  virtual ~BuildEvent();

  BuildEvent(const BuildEvent& from);

  inline BuildEvent& operator=(const BuildEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildEvent(BuildEvent&& from) noexcept
    : BuildEvent() {
    *this = ::std::move(from);
  }

  inline BuildEvent& operator=(BuildEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildEvent& default_instance();

  enum EventCase {
    kInvocationAttemptStarted = 51,
    kInvocationAttemptFinished = 52,
    kBuildEnqueued = 53,
    kBuildFinished = 55,
    kConsoleOutput = 56,
    kComponentStreamFinished = 59,
    kBazelEvent = 60,
    kBuildExecutionEvent = 61,
    kSourceFetchEvent = 62,
    EVENT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildEvent* internal_default_instance() {
    return reinterpret_cast<const BuildEvent*>(
               &_BuildEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(BuildEvent* other);
  void Swap(BuildEvent* other);
  friend void swap(BuildEvent& a, BuildEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildEvent& from);
  void MergeFrom(const BuildEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildEvent* other);
  protected:
  explicit BuildEvent(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BuildEvent_InvocationAttemptStarted InvocationAttemptStarted;
  typedef BuildEvent_InvocationAttemptFinished InvocationAttemptFinished;
  typedef BuildEvent_BuildEnqueued BuildEnqueued;
  typedef BuildEvent_BuildFinished BuildFinished;
  typedef BuildEvent_ConsoleOutput ConsoleOutput;
  typedef BuildEvent_BuildComponentStreamFinished BuildComponentStreamFinished;

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp event_time = 1;
  bool has_event_time() const;
  void clear_event_time();
  static const int kEventTimeFieldNumber = 1;
  private:
  void _slow_mutable_event_time();
  public:
  const ::google::protobuf::Timestamp& event_time() const;
  ::google::protobuf::Timestamp* release_event_time();
  ::google::protobuf::Timestamp* mutable_event_time();
  void set_allocated_event_time(::google::protobuf::Timestamp* event_time);
  void unsafe_arena_set_allocated_event_time(
      ::google::protobuf::Timestamp* event_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_event_time();

  // .google.devtools.build.v1.BuildEvent.InvocationAttemptStarted invocation_attempt_started = 51;
  bool has_invocation_attempt_started() const;
  void clear_invocation_attempt_started();
  static const int kInvocationAttemptStartedFieldNumber = 51;
  private:
  void _slow_mutable_invocation_attempt_started();
  public:
  const ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted& invocation_attempt_started() const;
  ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* release_invocation_attempt_started();
  ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* mutable_invocation_attempt_started();
  void set_allocated_invocation_attempt_started(::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* invocation_attempt_started);
  void unsafe_arena_set_allocated_invocation_attempt_started(
      ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* invocation_attempt_started);
  ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* unsafe_arena_release_invocation_attempt_started();

  // .google.devtools.build.v1.BuildEvent.InvocationAttemptFinished invocation_attempt_finished = 52;
  bool has_invocation_attempt_finished() const;
  void clear_invocation_attempt_finished();
  static const int kInvocationAttemptFinishedFieldNumber = 52;
  private:
  void _slow_mutable_invocation_attempt_finished();
  public:
  const ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished& invocation_attempt_finished() const;
  ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* release_invocation_attempt_finished();
  ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* mutable_invocation_attempt_finished();
  void set_allocated_invocation_attempt_finished(::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* invocation_attempt_finished);
  void unsafe_arena_set_allocated_invocation_attempt_finished(
      ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* invocation_attempt_finished);
  ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* unsafe_arena_release_invocation_attempt_finished();

  // .google.devtools.build.v1.BuildEvent.BuildEnqueued build_enqueued = 53;
  bool has_build_enqueued() const;
  void clear_build_enqueued();
  static const int kBuildEnqueuedFieldNumber = 53;
  private:
  void _slow_mutable_build_enqueued();
  public:
  const ::google::devtools::build::v1::BuildEvent_BuildEnqueued& build_enqueued() const;
  ::google::devtools::build::v1::BuildEvent_BuildEnqueued* release_build_enqueued();
  ::google::devtools::build::v1::BuildEvent_BuildEnqueued* mutable_build_enqueued();
  void set_allocated_build_enqueued(::google::devtools::build::v1::BuildEvent_BuildEnqueued* build_enqueued);
  void unsafe_arena_set_allocated_build_enqueued(
      ::google::devtools::build::v1::BuildEvent_BuildEnqueued* build_enqueued);
  ::google::devtools::build::v1::BuildEvent_BuildEnqueued* unsafe_arena_release_build_enqueued();

  // .google.devtools.build.v1.BuildEvent.BuildFinished build_finished = 55;
  bool has_build_finished() const;
  void clear_build_finished();
  static const int kBuildFinishedFieldNumber = 55;
  private:
  void _slow_mutable_build_finished();
  public:
  const ::google::devtools::build::v1::BuildEvent_BuildFinished& build_finished() const;
  ::google::devtools::build::v1::BuildEvent_BuildFinished* release_build_finished();
  ::google::devtools::build::v1::BuildEvent_BuildFinished* mutable_build_finished();
  void set_allocated_build_finished(::google::devtools::build::v1::BuildEvent_BuildFinished* build_finished);
  void unsafe_arena_set_allocated_build_finished(
      ::google::devtools::build::v1::BuildEvent_BuildFinished* build_finished);
  ::google::devtools::build::v1::BuildEvent_BuildFinished* unsafe_arena_release_build_finished();

  // .google.devtools.build.v1.BuildEvent.ConsoleOutput console_output = 56;
  bool has_console_output() const;
  void clear_console_output();
  static const int kConsoleOutputFieldNumber = 56;
  private:
  void _slow_mutable_console_output();
  public:
  const ::google::devtools::build::v1::BuildEvent_ConsoleOutput& console_output() const;
  ::google::devtools::build::v1::BuildEvent_ConsoleOutput* release_console_output();
  ::google::devtools::build::v1::BuildEvent_ConsoleOutput* mutable_console_output();
  void set_allocated_console_output(::google::devtools::build::v1::BuildEvent_ConsoleOutput* console_output);
  void unsafe_arena_set_allocated_console_output(
      ::google::devtools::build::v1::BuildEvent_ConsoleOutput* console_output);
  ::google::devtools::build::v1::BuildEvent_ConsoleOutput* unsafe_arena_release_console_output();

  // .google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished component_stream_finished = 59;
  bool has_component_stream_finished() const;
  void clear_component_stream_finished();
  static const int kComponentStreamFinishedFieldNumber = 59;
  private:
  void _slow_mutable_component_stream_finished();
  public:
  const ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished& component_stream_finished() const;
  ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* release_component_stream_finished();
  ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* mutable_component_stream_finished();
  void set_allocated_component_stream_finished(::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* component_stream_finished);
  void unsafe_arena_set_allocated_component_stream_finished(
      ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* component_stream_finished);
  ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* unsafe_arena_release_component_stream_finished();

  // .google.protobuf.Any bazel_event = 60;
  bool has_bazel_event() const;
  void clear_bazel_event();
  static const int kBazelEventFieldNumber = 60;
  private:
  void _slow_mutable_bazel_event();
  public:
  const ::google::protobuf::Any& bazel_event() const;
  ::google::protobuf::Any* release_bazel_event();
  ::google::protobuf::Any* mutable_bazel_event();
  void set_allocated_bazel_event(::google::protobuf::Any* bazel_event);
  void unsafe_arena_set_allocated_bazel_event(
      ::google::protobuf::Any* bazel_event);
  ::google::protobuf::Any* unsafe_arena_release_bazel_event();

  // .google.protobuf.Any build_execution_event = 61;
  bool has_build_execution_event() const;
  void clear_build_execution_event();
  static const int kBuildExecutionEventFieldNumber = 61;
  private:
  void _slow_mutable_build_execution_event();
  public:
  const ::google::protobuf::Any& build_execution_event() const;
  ::google::protobuf::Any* release_build_execution_event();
  ::google::protobuf::Any* mutable_build_execution_event();
  void set_allocated_build_execution_event(::google::protobuf::Any* build_execution_event);
  void unsafe_arena_set_allocated_build_execution_event(
      ::google::protobuf::Any* build_execution_event);
  ::google::protobuf::Any* unsafe_arena_release_build_execution_event();

  // .google.protobuf.Any source_fetch_event = 62;
  bool has_source_fetch_event() const;
  void clear_source_fetch_event();
  static const int kSourceFetchEventFieldNumber = 62;
  private:
  void _slow_mutable_source_fetch_event();
  public:
  const ::google::protobuf::Any& source_fetch_event() const;
  ::google::protobuf::Any* release_source_fetch_event();
  ::google::protobuf::Any* mutable_source_fetch_event();
  void set_allocated_source_fetch_event(::google::protobuf::Any* source_fetch_event);
  void unsafe_arena_set_allocated_source_fetch_event(
      ::google::protobuf::Any* source_fetch_event);
  ::google::protobuf::Any* unsafe_arena_release_source_fetch_event();

  EventCase event_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.BuildEvent)
 private:
  void set_has_invocation_attempt_started();
  void set_has_invocation_attempt_finished();
  void set_has_build_enqueued();
  void set_has_build_finished();
  void set_has_console_output();
  void set_has_component_stream_finished();
  void set_has_bazel_event();
  void set_has_build_execution_event();
  void set_has_source_fetch_event();

  inline bool has_event() const;
  void clear_event();
  inline void clear_has_event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Timestamp* event_time_;
  union EventUnion {
    EventUnion() {}
    ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* invocation_attempt_started_;
    ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* invocation_attempt_finished_;
    ::google::devtools::build::v1::BuildEvent_BuildEnqueued* build_enqueued_;
    ::google::devtools::build::v1::BuildEvent_BuildFinished* build_finished_;
    ::google::devtools::build::v1::BuildEvent_ConsoleOutput* console_output_;
    ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* component_stream_finished_;
    ::google::protobuf::Any* bazel_event_;
    ::google::protobuf::Any* build_execution_event_;
    ::google::protobuf::Any* source_fetch_event_;
  } event_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsBuildEventImpl();
};
// -------------------------------------------------------------------

class StreamId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.StreamId) */ {
 public:
  StreamId();
  virtual ~StreamId();

  StreamId(const StreamId& from);

  inline StreamId& operator=(const StreamId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamId(StreamId&& from) noexcept
    : StreamId() {
    *this = ::std::move(from);
  }

  inline StreamId& operator=(StreamId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamId* internal_default_instance() {
    return reinterpret_cast<const StreamId*>(
               &_StreamId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(StreamId* other);
  void Swap(StreamId* other);
  friend void swap(StreamId& a, StreamId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamId* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamId& from);
  void MergeFrom(const StreamId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamId* other);
  protected:
  explicit StreamId(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef StreamId_BuildComponent BuildComponent;
  static const BuildComponent UNKNOWN_COMPONENT =
    StreamId_BuildComponent_UNKNOWN_COMPONENT;
  static const BuildComponent CONTROLLER =
    StreamId_BuildComponent_CONTROLLER;
  static const BuildComponent WORKER =
    StreamId_BuildComponent_WORKER;
  static const BuildComponent TOOL =
    StreamId_BuildComponent_TOOL;
  static inline bool BuildComponent_IsValid(int value) {
    return StreamId_BuildComponent_IsValid(value);
  }
  static const BuildComponent BuildComponent_MIN =
    StreamId_BuildComponent_BuildComponent_MIN;
  static const BuildComponent BuildComponent_MAX =
    StreamId_BuildComponent_BuildComponent_MAX;
  static const int BuildComponent_ARRAYSIZE =
    StreamId_BuildComponent_BuildComponent_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BuildComponent_descriptor() {
    return StreamId_BuildComponent_descriptor();
  }
  static inline const ::std::string& BuildComponent_Name(BuildComponent value) {
    return StreamId_BuildComponent_Name(value);
  }
  static inline bool BuildComponent_Parse(const ::std::string& name,
      BuildComponent* value) {
    return StreamId_BuildComponent_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string build_id = 1;
  void clear_build_id();
  static const int kBuildIdFieldNumber = 1;
  const ::std::string& build_id() const;
  void set_build_id(const ::std::string& value);
  #if LANG_CXX11
  void set_build_id(::std::string&& value);
  #endif
  void set_build_id(const char* value);
  void set_build_id(const char* value, size_t size);
  ::std::string* mutable_build_id();
  ::std::string* release_build_id();
  void set_allocated_build_id(::std::string* build_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_build_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_build_id(
      ::std::string* build_id);

  // string invocation_id = 6;
  void clear_invocation_id();
  static const int kInvocationIdFieldNumber = 6;
  const ::std::string& invocation_id() const;
  void set_invocation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_invocation_id(::std::string&& value);
  #endif
  void set_invocation_id(const char* value);
  void set_invocation_id(const char* value, size_t size);
  ::std::string* mutable_invocation_id();
  ::std::string* release_invocation_id();
  void set_allocated_invocation_id(::std::string* invocation_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_invocation_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_invocation_id(
      ::std::string* invocation_id);

  // .google.devtools.build.v1.StreamId.BuildComponent component = 3;
  void clear_component();
  static const int kComponentFieldNumber = 3;
  ::google::devtools::build::v1::StreamId_BuildComponent component() const;
  void set_component(::google::devtools::build::v1::StreamId_BuildComponent value);

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.StreamId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr build_id_;
  ::google::protobuf::internal::ArenaStringPtr invocation_id_;
  int component_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto::InitDefaultsStreamIdImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BuildEvent_InvocationAttemptStarted

// int64 attempt_number = 1;
inline void BuildEvent_InvocationAttemptStarted::clear_attempt_number() {
  attempt_number_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BuildEvent_InvocationAttemptStarted::attempt_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.InvocationAttemptStarted.attempt_number)
  return attempt_number_;
}
inline void BuildEvent_InvocationAttemptStarted::set_attempt_number(::google::protobuf::int64 value) {
  
  attempt_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.BuildEvent.InvocationAttemptStarted.attempt_number)
}

// -------------------------------------------------------------------

// BuildEvent_InvocationAttemptFinished

// .google.protobuf.Int32Value exit_code = 2;
inline bool BuildEvent_InvocationAttemptFinished::has_exit_code() const {
  return this != internal_default_instance() && exit_code_ != NULL;
}
inline const ::google::protobuf::Int32Value& BuildEvent_InvocationAttemptFinished::exit_code() const {
  const ::google::protobuf::Int32Value* p = exit_code_;
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.exit_code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int32Value*>(
      &::google::protobuf::_Int32Value_default_instance_);
}
inline ::google::protobuf::Int32Value* BuildEvent_InvocationAttemptFinished::release_exit_code() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.exit_code)
  
  ::google::protobuf::Int32Value* temp = exit_code_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  exit_code_ = NULL;
  return temp;
}
inline ::google::protobuf::Int32Value* BuildEvent_InvocationAttemptFinished::unsafe_arena_release_exit_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.exit_code)
  
  ::google::protobuf::Int32Value* temp = exit_code_;
  exit_code_ = NULL;
  return temp;
}
inline ::google::protobuf::Int32Value* BuildEvent_InvocationAttemptFinished::mutable_exit_code() {
  
  if (exit_code_ == NULL) {
    _slow_mutable_exit_code();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.exit_code)
  return exit_code_;
}
inline void BuildEvent_InvocationAttemptFinished::set_allocated_exit_code(::google::protobuf::Int32Value* exit_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(exit_code_);
  }
  if (exit_code) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(exit_code)->GetArena();
    if (message_arena != submessage_arena) {
      exit_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exit_code, submessage_arena);
    }
    
  } else {
    
  }
  exit_code_ = exit_code;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.exit_code)
}

// .google.devtools.build.v1.BuildStatus invocation_status = 3;
inline bool BuildEvent_InvocationAttemptFinished::has_invocation_status() const {
  return this != internal_default_instance() && invocation_status_ != NULL;
}
inline const ::google::devtools::build::v1::BuildStatus& BuildEvent_InvocationAttemptFinished::invocation_status() const {
  const ::google::devtools::build::v1::BuildStatus* p = invocation_status_;
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.invocation_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::build::v1::BuildStatus*>(
      &::google::devtools::build::v1::_BuildStatus_default_instance_);
}
inline ::google::devtools::build::v1::BuildStatus* BuildEvent_InvocationAttemptFinished::release_invocation_status() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.invocation_status)
  
  ::google::devtools::build::v1::BuildStatus* temp = invocation_status_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  invocation_status_ = NULL;
  return temp;
}
inline ::google::devtools::build::v1::BuildStatus* BuildEvent_InvocationAttemptFinished::unsafe_arena_release_invocation_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.invocation_status)
  
  ::google::devtools::build::v1::BuildStatus* temp = invocation_status_;
  invocation_status_ = NULL;
  return temp;
}
inline ::google::devtools::build::v1::BuildStatus* BuildEvent_InvocationAttemptFinished::mutable_invocation_status() {
  
  if (invocation_status_ == NULL) {
    _slow_mutable_invocation_status();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.invocation_status)
  return invocation_status_;
}
inline void BuildEvent_InvocationAttemptFinished::set_allocated_invocation_status(::google::devtools::build::v1::BuildStatus* invocation_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(invocation_status_);
  }
  if (invocation_status) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(invocation_status)->GetArena();
    if (message_arena != submessage_arena) {
      invocation_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invocation_status, submessage_arena);
    }
    
  } else {
    
  }
  invocation_status_ = invocation_status;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.BuildEvent.InvocationAttemptFinished.invocation_status)
}

// -------------------------------------------------------------------

// BuildEvent_BuildEnqueued

// -------------------------------------------------------------------

// BuildEvent_BuildFinished

// .google.devtools.build.v1.BuildStatus status = 1;
inline bool BuildEvent_BuildFinished::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::devtools::build::v1::BuildStatus& BuildEvent_BuildFinished::status() const {
  const ::google::devtools::build::v1::BuildStatus* p = status_;
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.BuildFinished.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::build::v1::BuildStatus*>(
      &::google::devtools::build::v1::_BuildStatus_default_instance_);
}
inline ::google::devtools::build::v1::BuildStatus* BuildEvent_BuildFinished::release_status() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.BuildFinished.status)
  
  ::google::devtools::build::v1::BuildStatus* temp = status_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  status_ = NULL;
  return temp;
}
inline ::google::devtools::build::v1::BuildStatus* BuildEvent_BuildFinished::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.BuildFinished.status)
  
  ::google::devtools::build::v1::BuildStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::devtools::build::v1::BuildStatus* BuildEvent_BuildFinished::mutable_status() {
  
  if (status_ == NULL) {
    _slow_mutable_status();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.BuildFinished.status)
  return status_;
}
inline void BuildEvent_BuildFinished::set_allocated_status(::google::devtools::build::v1::BuildStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.BuildEvent.BuildFinished.status)
}

// -------------------------------------------------------------------

// BuildEvent_ConsoleOutput

// .google.devtools.build.v1.ConsoleOutputStream type = 1;
inline void BuildEvent_ConsoleOutput::clear_type() {
  type_ = 0;
}
inline ::google::devtools::build::v1::ConsoleOutputStream BuildEvent_ConsoleOutput::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.ConsoleOutput.type)
  return static_cast< ::google::devtools::build::v1::ConsoleOutputStream >(type_);
}
inline void BuildEvent_ConsoleOutput::set_type(::google::devtools::build::v1::ConsoleOutputStream value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.BuildEvent.ConsoleOutput.type)
}

// string text_output = 2;
inline bool BuildEvent_ConsoleOutput::has_text_output() const {
  return output_case() == kTextOutput;
}
inline void BuildEvent_ConsoleOutput::set_has_text_output() {
  _oneof_case_[0] = kTextOutput;
}
inline void BuildEvent_ConsoleOutput::clear_text_output() {
  if (has_text_output()) {
    output_.text_output_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_output();
  }
}
inline const ::std::string& BuildEvent_ConsoleOutput::text_output() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
  if (has_text_output()) {
    return output_.text_output_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void BuildEvent_ConsoleOutput::set_text_output(const ::std::string& value) {
  if (!has_text_output()) {
    clear_output();
    set_has_text_output();
    output_.text_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.text_output_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
}
#if LANG_CXX11
inline void BuildEvent_ConsoleOutput::set_text_output(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
  if (!has_text_output()) {
    clear_output();
    set_has_text_output();
    output_.text_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.text_output_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
}
#endif
inline void BuildEvent_ConsoleOutput::set_text_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_text_output()) {
    clear_output();
    set_has_text_output();
    output_.text_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.text_output_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
}
inline void BuildEvent_ConsoleOutput::set_text_output(const char* value,
                             size_t size) {
  if (!has_text_output()) {
    clear_output();
    set_has_text_output();
    output_.text_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.text_output_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
}
inline ::std::string* BuildEvent_ConsoleOutput::mutable_text_output() {
  if (!has_text_output()) {
    clear_output();
    set_has_text_output();
    output_.text_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return output_.text_output_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
}
inline ::std::string* BuildEvent_ConsoleOutput::release_text_output() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
  if (has_text_output()) {
    clear_has_output();
    return output_.text_output_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void BuildEvent_ConsoleOutput::set_allocated_text_output(::std::string* text_output) {
  if (!has_text_output()) {
    output_.text_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_output();
  if (text_output != NULL) {
    set_has_text_output();
    output_.text_output_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_output,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
}
inline ::std::string* BuildEvent_ConsoleOutput::unsafe_arena_release_text_output() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_text_output()) {
    clear_has_output();
    return output_.text_output_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void BuildEvent_ConsoleOutput::unsafe_arena_set_allocated_text_output(::std::string* text_output) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_text_output()) {
    output_.text_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_output();
  if (text_output) {
    set_has_text_output();
    output_.text_output_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_output, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.ConsoleOutput.text_output)
}

// bytes binary_output = 3;
inline bool BuildEvent_ConsoleOutput::has_binary_output() const {
  return output_case() == kBinaryOutput;
}
inline void BuildEvent_ConsoleOutput::set_has_binary_output() {
  _oneof_case_[0] = kBinaryOutput;
}
inline void BuildEvent_ConsoleOutput::clear_binary_output() {
  if (has_binary_output()) {
    output_.binary_output_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_output();
  }
}
inline const ::std::string& BuildEvent_ConsoleOutput::binary_output() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
  if (has_binary_output()) {
    return output_.binary_output_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void BuildEvent_ConsoleOutput::set_binary_output(const ::std::string& value) {
  if (!has_binary_output()) {
    clear_output();
    set_has_binary_output();
    output_.binary_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.binary_output_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
}
#if LANG_CXX11
inline void BuildEvent_ConsoleOutput::set_binary_output(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
  if (!has_binary_output()) {
    clear_output();
    set_has_binary_output();
    output_.binary_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.binary_output_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
}
#endif
inline void BuildEvent_ConsoleOutput::set_binary_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_binary_output()) {
    clear_output();
    set_has_binary_output();
    output_.binary_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.binary_output_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
}
inline void BuildEvent_ConsoleOutput::set_binary_output(const void* value,
                             size_t size) {
  if (!has_binary_output()) {
    clear_output();
    set_has_binary_output();
    output_.binary_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  output_.binary_output_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
}
inline ::std::string* BuildEvent_ConsoleOutput::mutable_binary_output() {
  if (!has_binary_output()) {
    clear_output();
    set_has_binary_output();
    output_.binary_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return output_.binary_output_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
}
inline ::std::string* BuildEvent_ConsoleOutput::release_binary_output() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
  if (has_binary_output()) {
    clear_has_output();
    return output_.binary_output_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void BuildEvent_ConsoleOutput::set_allocated_binary_output(::std::string* binary_output) {
  if (!has_binary_output()) {
    output_.binary_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_output();
  if (binary_output != NULL) {
    set_has_binary_output();
    output_.binary_output_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_output,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
}
inline ::std::string* BuildEvent_ConsoleOutput::unsafe_arena_release_binary_output() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_binary_output()) {
    clear_has_output();
    return output_.binary_output_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void BuildEvent_ConsoleOutput::unsafe_arena_set_allocated_binary_output(::std::string* binary_output) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_binary_output()) {
    output_.binary_output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_output();
  if (binary_output) {
    set_has_binary_output();
    output_.binary_output_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_output, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.ConsoleOutput.binary_output)
}

inline bool BuildEvent_ConsoleOutput::has_output() const {
  return output_case() != OUTPUT_NOT_SET;
}
inline void BuildEvent_ConsoleOutput::clear_has_output() {
  _oneof_case_[0] = OUTPUT_NOT_SET;
}
inline BuildEvent_ConsoleOutput::OutputCase BuildEvent_ConsoleOutput::output_case() const {
  return BuildEvent_ConsoleOutput::OutputCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BuildEvent_BuildComponentStreamFinished

// .google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished.FinishType type = 1;
inline void BuildEvent_BuildComponentStreamFinished::clear_type() {
  type_ = 0;
}
inline ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType BuildEvent_BuildComponentStreamFinished::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished.type)
  return static_cast< ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType >(type_);
}
inline void BuildEvent_BuildComponentStreamFinished::set_type(::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished.type)
}

// -------------------------------------------------------------------

// BuildEvent

// .google.protobuf.Timestamp event_time = 1;
inline bool BuildEvent::has_event_time() const {
  return this != internal_default_instance() && event_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& BuildEvent::event_time() const {
  const ::google::protobuf::Timestamp* p = event_time_;
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.event_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* BuildEvent::release_event_time() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.event_time)
  
  ::google::protobuf::Timestamp* temp = event_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  event_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BuildEvent::unsafe_arena_release_event_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.event_time)
  
  ::google::protobuf::Timestamp* temp = event_time_;
  event_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BuildEvent::mutable_event_time() {
  
  if (event_time_ == NULL) {
    _slow_mutable_event_time();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.event_time)
  return event_time_;
}
inline void BuildEvent::set_allocated_event_time(::google::protobuf::Timestamp* event_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_time_);
  }
  if (event_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(event_time)->GetArena();
    if (message_arena != submessage_arena) {
      event_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_time, submessage_arena);
    }
    
  } else {
    
  }
  event_time_ = event_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.BuildEvent.event_time)
}

// .google.devtools.build.v1.BuildEvent.InvocationAttemptStarted invocation_attempt_started = 51;
inline bool BuildEvent::has_invocation_attempt_started() const {
  return event_case() == kInvocationAttemptStarted;
}
inline void BuildEvent::set_has_invocation_attempt_started() {
  _oneof_case_[0] = kInvocationAttemptStarted;
}
inline void BuildEvent::clear_invocation_attempt_started() {
  if (has_invocation_attempt_started()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_.invocation_attempt_started_;
    }
    clear_has_event();
  }
}
inline ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* BuildEvent::release_invocation_attempt_started() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.invocation_attempt_started)
  if (has_invocation_attempt_started()) {
    clear_has_event();
      ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* temp = event_.invocation_attempt_started_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.invocation_attempt_started_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted& BuildEvent::invocation_attempt_started() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.invocation_attempt_started)
  return has_invocation_attempt_started()
      ? *event_.invocation_attempt_started_
      : *reinterpret_cast< ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted*>(&::google::devtools::build::v1::_BuildEvent_InvocationAttemptStarted_default_instance_);
}
inline ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* BuildEvent::unsafe_arena_release_invocation_attempt_started() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.invocation_attempt_started)
  if (has_invocation_attempt_started()) {
    clear_has_event();
    ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* temp = event_.invocation_attempt_started_;
    event_.invocation_attempt_started_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_invocation_attempt_started(::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* invocation_attempt_started) {
  clear_event();
  if (invocation_attempt_started) {
    set_has_invocation_attempt_started();
    event_.invocation_attempt_started_ = invocation_attempt_started;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.invocation_attempt_started)
}
inline ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted* BuildEvent::mutable_invocation_attempt_started() {
  if (!has_invocation_attempt_started()) {
    clear_event();
    set_has_invocation_attempt_started();
    event_.invocation_attempt_started_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::devtools::build::v1::BuildEvent_InvocationAttemptStarted >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.invocation_attempt_started)
  return event_.invocation_attempt_started_;
}

// .google.devtools.build.v1.BuildEvent.InvocationAttemptFinished invocation_attempt_finished = 52;
inline bool BuildEvent::has_invocation_attempt_finished() const {
  return event_case() == kInvocationAttemptFinished;
}
inline void BuildEvent::set_has_invocation_attempt_finished() {
  _oneof_case_[0] = kInvocationAttemptFinished;
}
inline void BuildEvent::clear_invocation_attempt_finished() {
  if (has_invocation_attempt_finished()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_.invocation_attempt_finished_;
    }
    clear_has_event();
  }
}
inline ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* BuildEvent::release_invocation_attempt_finished() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.invocation_attempt_finished)
  if (has_invocation_attempt_finished()) {
    clear_has_event();
      ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* temp = event_.invocation_attempt_finished_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.invocation_attempt_finished_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished& BuildEvent::invocation_attempt_finished() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.invocation_attempt_finished)
  return has_invocation_attempt_finished()
      ? *event_.invocation_attempt_finished_
      : *reinterpret_cast< ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished*>(&::google::devtools::build::v1::_BuildEvent_InvocationAttemptFinished_default_instance_);
}
inline ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* BuildEvent::unsafe_arena_release_invocation_attempt_finished() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.invocation_attempt_finished)
  if (has_invocation_attempt_finished()) {
    clear_has_event();
    ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* temp = event_.invocation_attempt_finished_;
    event_.invocation_attempt_finished_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_invocation_attempt_finished(::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* invocation_attempt_finished) {
  clear_event();
  if (invocation_attempt_finished) {
    set_has_invocation_attempt_finished();
    event_.invocation_attempt_finished_ = invocation_attempt_finished;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.invocation_attempt_finished)
}
inline ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished* BuildEvent::mutable_invocation_attempt_finished() {
  if (!has_invocation_attempt_finished()) {
    clear_event();
    set_has_invocation_attempt_finished();
    event_.invocation_attempt_finished_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::devtools::build::v1::BuildEvent_InvocationAttemptFinished >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.invocation_attempt_finished)
  return event_.invocation_attempt_finished_;
}

// .google.devtools.build.v1.BuildEvent.BuildEnqueued build_enqueued = 53;
inline bool BuildEvent::has_build_enqueued() const {
  return event_case() == kBuildEnqueued;
}
inline void BuildEvent::set_has_build_enqueued() {
  _oneof_case_[0] = kBuildEnqueued;
}
inline void BuildEvent::clear_build_enqueued() {
  if (has_build_enqueued()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_.build_enqueued_;
    }
    clear_has_event();
  }
}
inline ::google::devtools::build::v1::BuildEvent_BuildEnqueued* BuildEvent::release_build_enqueued() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.build_enqueued)
  if (has_build_enqueued()) {
    clear_has_event();
      ::google::devtools::build::v1::BuildEvent_BuildEnqueued* temp = event_.build_enqueued_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.build_enqueued_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::build::v1::BuildEvent_BuildEnqueued& BuildEvent::build_enqueued() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.build_enqueued)
  return has_build_enqueued()
      ? *event_.build_enqueued_
      : *reinterpret_cast< ::google::devtools::build::v1::BuildEvent_BuildEnqueued*>(&::google::devtools::build::v1::_BuildEvent_BuildEnqueued_default_instance_);
}
inline ::google::devtools::build::v1::BuildEvent_BuildEnqueued* BuildEvent::unsafe_arena_release_build_enqueued() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.build_enqueued)
  if (has_build_enqueued()) {
    clear_has_event();
    ::google::devtools::build::v1::BuildEvent_BuildEnqueued* temp = event_.build_enqueued_;
    event_.build_enqueued_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_build_enqueued(::google::devtools::build::v1::BuildEvent_BuildEnqueued* build_enqueued) {
  clear_event();
  if (build_enqueued) {
    set_has_build_enqueued();
    event_.build_enqueued_ = build_enqueued;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.build_enqueued)
}
inline ::google::devtools::build::v1::BuildEvent_BuildEnqueued* BuildEvent::mutable_build_enqueued() {
  if (!has_build_enqueued()) {
    clear_event();
    set_has_build_enqueued();
    event_.build_enqueued_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::devtools::build::v1::BuildEvent_BuildEnqueued >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.build_enqueued)
  return event_.build_enqueued_;
}

// .google.devtools.build.v1.BuildEvent.BuildFinished build_finished = 55;
inline bool BuildEvent::has_build_finished() const {
  return event_case() == kBuildFinished;
}
inline void BuildEvent::set_has_build_finished() {
  _oneof_case_[0] = kBuildFinished;
}
inline void BuildEvent::clear_build_finished() {
  if (has_build_finished()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_.build_finished_;
    }
    clear_has_event();
  }
}
inline ::google::devtools::build::v1::BuildEvent_BuildFinished* BuildEvent::release_build_finished() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.build_finished)
  if (has_build_finished()) {
    clear_has_event();
      ::google::devtools::build::v1::BuildEvent_BuildFinished* temp = event_.build_finished_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.build_finished_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::build::v1::BuildEvent_BuildFinished& BuildEvent::build_finished() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.build_finished)
  return has_build_finished()
      ? *event_.build_finished_
      : *reinterpret_cast< ::google::devtools::build::v1::BuildEvent_BuildFinished*>(&::google::devtools::build::v1::_BuildEvent_BuildFinished_default_instance_);
}
inline ::google::devtools::build::v1::BuildEvent_BuildFinished* BuildEvent::unsafe_arena_release_build_finished() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.build_finished)
  if (has_build_finished()) {
    clear_has_event();
    ::google::devtools::build::v1::BuildEvent_BuildFinished* temp = event_.build_finished_;
    event_.build_finished_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_build_finished(::google::devtools::build::v1::BuildEvent_BuildFinished* build_finished) {
  clear_event();
  if (build_finished) {
    set_has_build_finished();
    event_.build_finished_ = build_finished;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.build_finished)
}
inline ::google::devtools::build::v1::BuildEvent_BuildFinished* BuildEvent::mutable_build_finished() {
  if (!has_build_finished()) {
    clear_event();
    set_has_build_finished();
    event_.build_finished_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::devtools::build::v1::BuildEvent_BuildFinished >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.build_finished)
  return event_.build_finished_;
}

// .google.devtools.build.v1.BuildEvent.ConsoleOutput console_output = 56;
inline bool BuildEvent::has_console_output() const {
  return event_case() == kConsoleOutput;
}
inline void BuildEvent::set_has_console_output() {
  _oneof_case_[0] = kConsoleOutput;
}
inline void BuildEvent::clear_console_output() {
  if (has_console_output()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_.console_output_;
    }
    clear_has_event();
  }
}
inline ::google::devtools::build::v1::BuildEvent_ConsoleOutput* BuildEvent::release_console_output() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.console_output)
  if (has_console_output()) {
    clear_has_event();
      ::google::devtools::build::v1::BuildEvent_ConsoleOutput* temp = event_.console_output_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.console_output_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::build::v1::BuildEvent_ConsoleOutput& BuildEvent::console_output() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.console_output)
  return has_console_output()
      ? *event_.console_output_
      : *reinterpret_cast< ::google::devtools::build::v1::BuildEvent_ConsoleOutput*>(&::google::devtools::build::v1::_BuildEvent_ConsoleOutput_default_instance_);
}
inline ::google::devtools::build::v1::BuildEvent_ConsoleOutput* BuildEvent::unsafe_arena_release_console_output() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.console_output)
  if (has_console_output()) {
    clear_has_event();
    ::google::devtools::build::v1::BuildEvent_ConsoleOutput* temp = event_.console_output_;
    event_.console_output_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_console_output(::google::devtools::build::v1::BuildEvent_ConsoleOutput* console_output) {
  clear_event();
  if (console_output) {
    set_has_console_output();
    event_.console_output_ = console_output;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.console_output)
}
inline ::google::devtools::build::v1::BuildEvent_ConsoleOutput* BuildEvent::mutable_console_output() {
  if (!has_console_output()) {
    clear_event();
    set_has_console_output();
    event_.console_output_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::devtools::build::v1::BuildEvent_ConsoleOutput >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.console_output)
  return event_.console_output_;
}

// .google.devtools.build.v1.BuildEvent.BuildComponentStreamFinished component_stream_finished = 59;
inline bool BuildEvent::has_component_stream_finished() const {
  return event_case() == kComponentStreamFinished;
}
inline void BuildEvent::set_has_component_stream_finished() {
  _oneof_case_[0] = kComponentStreamFinished;
}
inline void BuildEvent::clear_component_stream_finished() {
  if (has_component_stream_finished()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_.component_stream_finished_;
    }
    clear_has_event();
  }
}
inline ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* BuildEvent::release_component_stream_finished() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.component_stream_finished)
  if (has_component_stream_finished()) {
    clear_has_event();
      ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* temp = event_.component_stream_finished_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.component_stream_finished_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished& BuildEvent::component_stream_finished() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.component_stream_finished)
  return has_component_stream_finished()
      ? *event_.component_stream_finished_
      : *reinterpret_cast< ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished*>(&::google::devtools::build::v1::_BuildEvent_BuildComponentStreamFinished_default_instance_);
}
inline ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* BuildEvent::unsafe_arena_release_component_stream_finished() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.component_stream_finished)
  if (has_component_stream_finished()) {
    clear_has_event();
    ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* temp = event_.component_stream_finished_;
    event_.component_stream_finished_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_component_stream_finished(::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* component_stream_finished) {
  clear_event();
  if (component_stream_finished) {
    set_has_component_stream_finished();
    event_.component_stream_finished_ = component_stream_finished;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.component_stream_finished)
}
inline ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished* BuildEvent::mutable_component_stream_finished() {
  if (!has_component_stream_finished()) {
    clear_event();
    set_has_component_stream_finished();
    event_.component_stream_finished_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.component_stream_finished)
  return event_.component_stream_finished_;
}

// .google.protobuf.Any bazel_event = 60;
inline bool BuildEvent::has_bazel_event() const {
  return event_case() == kBazelEvent;
}
inline void BuildEvent::set_has_bazel_event() {
  _oneof_case_[0] = kBazelEvent;
}
inline ::google::protobuf::Any* BuildEvent::release_bazel_event() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.bazel_event)
  if (has_bazel_event()) {
    clear_has_event();
      ::google::protobuf::Any* temp = event_.bazel_event_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.bazel_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::protobuf::Any& BuildEvent::bazel_event() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.bazel_event)
  return has_bazel_event()
      ? *event_.bazel_event_
      : *reinterpret_cast< ::google::protobuf::Any*>(&::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* BuildEvent::unsafe_arena_release_bazel_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.bazel_event)
  if (has_bazel_event()) {
    clear_has_event();
    ::google::protobuf::Any* temp = event_.bazel_event_;
    event_.bazel_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_bazel_event(::google::protobuf::Any* bazel_event) {
  clear_event();
  if (bazel_event) {
    set_has_bazel_event();
    event_.bazel_event_ = bazel_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.bazel_event)
}
inline ::google::protobuf::Any* BuildEvent::mutable_bazel_event() {
  if (!has_bazel_event()) {
    clear_event();
    set_has_bazel_event();
    event_.bazel_event_ = 
      ::google::protobuf::Arena::Create< ::google::protobuf::Any >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.bazel_event)
  return event_.bazel_event_;
}

// .google.protobuf.Any build_execution_event = 61;
inline bool BuildEvent::has_build_execution_event() const {
  return event_case() == kBuildExecutionEvent;
}
inline void BuildEvent::set_has_build_execution_event() {
  _oneof_case_[0] = kBuildExecutionEvent;
}
inline ::google::protobuf::Any* BuildEvent::release_build_execution_event() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.build_execution_event)
  if (has_build_execution_event()) {
    clear_has_event();
      ::google::protobuf::Any* temp = event_.build_execution_event_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.build_execution_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::protobuf::Any& BuildEvent::build_execution_event() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.build_execution_event)
  return has_build_execution_event()
      ? *event_.build_execution_event_
      : *reinterpret_cast< ::google::protobuf::Any*>(&::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* BuildEvent::unsafe_arena_release_build_execution_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.build_execution_event)
  if (has_build_execution_event()) {
    clear_has_event();
    ::google::protobuf::Any* temp = event_.build_execution_event_;
    event_.build_execution_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_build_execution_event(::google::protobuf::Any* build_execution_event) {
  clear_event();
  if (build_execution_event) {
    set_has_build_execution_event();
    event_.build_execution_event_ = build_execution_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.build_execution_event)
}
inline ::google::protobuf::Any* BuildEvent::mutable_build_execution_event() {
  if (!has_build_execution_event()) {
    clear_event();
    set_has_build_execution_event();
    event_.build_execution_event_ = 
      ::google::protobuf::Arena::Create< ::google::protobuf::Any >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.build_execution_event)
  return event_.build_execution_event_;
}

// .google.protobuf.Any source_fetch_event = 62;
inline bool BuildEvent::has_source_fetch_event() const {
  return event_case() == kSourceFetchEvent;
}
inline void BuildEvent::set_has_source_fetch_event() {
  _oneof_case_[0] = kSourceFetchEvent;
}
inline ::google::protobuf::Any* BuildEvent::release_source_fetch_event() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.BuildEvent.source_fetch_event)
  if (has_source_fetch_event()) {
    clear_has_event();
      ::google::protobuf::Any* temp = event_.source_fetch_event_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    event_.source_fetch_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::protobuf::Any& BuildEvent::source_fetch_event() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.BuildEvent.source_fetch_event)
  return has_source_fetch_event()
      ? *event_.source_fetch_event_
      : *reinterpret_cast< ::google::protobuf::Any*>(&::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* BuildEvent::unsafe_arena_release_source_fetch_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.BuildEvent.source_fetch_event)
  if (has_source_fetch_event()) {
    clear_has_event();
    ::google::protobuf::Any* temp = event_.source_fetch_event_;
    event_.source_fetch_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BuildEvent::unsafe_arena_set_allocated_source_fetch_event(::google::protobuf::Any* source_fetch_event) {
  clear_event();
  if (source_fetch_event) {
    set_has_source_fetch_event();
    event_.source_fetch_event_ = source_fetch_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.BuildEvent.source_fetch_event)
}
inline ::google::protobuf::Any* BuildEvent::mutable_source_fetch_event() {
  if (!has_source_fetch_event()) {
    clear_event();
    set_has_source_fetch_event();
    event_.source_fetch_event_ = 
      ::google::protobuf::Arena::Create< ::google::protobuf::Any >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.BuildEvent.source_fetch_event)
  return event_.source_fetch_event_;
}

inline bool BuildEvent::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
inline void BuildEvent::clear_has_event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
inline BuildEvent::EventCase BuildEvent::event_case() const {
  return BuildEvent::EventCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StreamId

// string build_id = 1;
inline void StreamId::clear_build_id() {
  build_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamId::build_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.StreamId.build_id)
  return build_id_.Get();
}
inline void StreamId::set_build_id(const ::std::string& value) {
  
  build_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.StreamId.build_id)
}
#if LANG_CXX11
inline void StreamId::set_build_id(::std::string&& value) {
  
  build_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.build.v1.StreamId.build_id)
}
#endif
inline void StreamId::set_build_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  build_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.devtools.build.v1.StreamId.build_id)
}
inline void StreamId::set_build_id(const char* value,
    size_t size) {
  
  build_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.devtools.build.v1.StreamId.build_id)
}
inline ::std::string* StreamId::mutable_build_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.StreamId.build_id)
  return build_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamId::release_build_id() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.StreamId.build_id)
  
  return build_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StreamId::set_allocated_build_id(::std::string* build_id) {
  if (build_id != NULL) {
    
  } else {
    
  }
  build_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.StreamId.build_id)
}
inline ::std::string* StreamId::unsafe_arena_release_build_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.StreamId.build_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return build_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamId::unsafe_arena_set_allocated_build_id(
    ::std::string* build_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (build_id != NULL) {
    
  } else {
    
  }
  build_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      build_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.StreamId.build_id)
}

// string invocation_id = 6;
inline void StreamId::clear_invocation_id() {
  invocation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamId::invocation_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.StreamId.invocation_id)
  return invocation_id_.Get();
}
inline void StreamId::set_invocation_id(const ::std::string& value) {
  
  invocation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.StreamId.invocation_id)
}
#if LANG_CXX11
inline void StreamId::set_invocation_id(::std::string&& value) {
  
  invocation_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.build.v1.StreamId.invocation_id)
}
#endif
inline void StreamId::set_invocation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invocation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.devtools.build.v1.StreamId.invocation_id)
}
inline void StreamId::set_invocation_id(const char* value,
    size_t size) {
  
  invocation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.devtools.build.v1.StreamId.invocation_id)
}
inline ::std::string* StreamId::mutable_invocation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.StreamId.invocation_id)
  return invocation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamId::release_invocation_id() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.StreamId.invocation_id)
  
  return invocation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StreamId::set_allocated_invocation_id(::std::string* invocation_id) {
  if (invocation_id != NULL) {
    
  } else {
    
  }
  invocation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invocation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.StreamId.invocation_id)
}
inline ::std::string* StreamId::unsafe_arena_release_invocation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.StreamId.invocation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return invocation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamId::unsafe_arena_set_allocated_invocation_id(
    ::std::string* invocation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (invocation_id != NULL) {
    
  } else {
    
  }
  invocation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      invocation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.StreamId.invocation_id)
}

// .google.devtools.build.v1.StreamId.BuildComponent component = 3;
inline void StreamId::clear_component() {
  component_ = 0;
}
inline ::google::devtools::build::v1::StreamId_BuildComponent StreamId::component() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.StreamId.component)
  return static_cast< ::google::devtools::build::v1::StreamId_BuildComponent >(component_);
}
inline void StreamId::set_component(::google::devtools::build::v1::StreamId_BuildComponent value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.StreamId.component)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace build
}  // namespace devtools
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType>() {
  return ::google::devtools::build::v1::BuildEvent_BuildComponentStreamFinished_FinishType_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::build::v1::StreamId_BuildComponent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::build::v1::StreamId_BuildComponent>() {
  return ::google::devtools::build::v1::StreamId_BuildComponent_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::build::v1::ConsoleOutputStream> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::build::v1::ConsoleOutputStream>() {
  return ::google::devtools::build::v1::ConsoleOutputStream_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fdevtools_2fbuild_2fv1_2fbuild_5fevents_2eproto__INCLUDED
