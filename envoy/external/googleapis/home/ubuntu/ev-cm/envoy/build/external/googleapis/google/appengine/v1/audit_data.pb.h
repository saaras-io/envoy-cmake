// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/audit_data.proto

#ifndef PROTOBUF_google_2fappengine_2fv1_2faudit_5fdata_2eproto__INCLUDED
#define PROTOBUF_google_2fappengine_2fv1_2faudit_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/appengine/v1/appengine.pb.h"
#include "google/iam/v1/iam_policy.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAuditDataImpl();
void InitDefaultsAuditData();
void InitDefaultsUpdateServiceMethodImpl();
void InitDefaultsUpdateServiceMethod();
void InitDefaultsCreateVersionMethodImpl();
void InitDefaultsCreateVersionMethod();
inline void InitDefaults() {
  InitDefaultsAuditData();
  InitDefaultsUpdateServiceMethod();
  InitDefaultsCreateVersionMethod();
}
}  // namespace protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto
namespace google {
namespace appengine {
namespace v1 {
class AuditData;
class AuditDataDefaultTypeInternal;
extern AuditDataDefaultTypeInternal _AuditData_default_instance_;
class CreateVersionMethod;
class CreateVersionMethodDefaultTypeInternal;
extern CreateVersionMethodDefaultTypeInternal _CreateVersionMethod_default_instance_;
class UpdateServiceMethod;
class UpdateServiceMethodDefaultTypeInternal;
extern UpdateServiceMethodDefaultTypeInternal _UpdateServiceMethod_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace google {
namespace appengine {
namespace v1 {

// ===================================================================

class AuditData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.AuditData) */ {
 public:
  AuditData();
  virtual ~AuditData();

  AuditData(const AuditData& from);

  inline AuditData& operator=(const AuditData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuditData(AuditData&& from) noexcept
    : AuditData() {
    *this = ::std::move(from);
  }

  inline AuditData& operator=(AuditData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuditData& default_instance();

  enum MethodCase {
    kUpdateService = 1,
    kCreateVersion = 2,
    METHOD_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuditData* internal_default_instance() {
    return reinterpret_cast<const AuditData*>(
               &_AuditData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AuditData* other);
  friend void swap(AuditData& a, AuditData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuditData* New() const PROTOBUF_FINAL { return New(NULL); }

  AuditData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuditData& from);
  void MergeFrom(const AuditData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuditData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.appengine.v1.UpdateServiceMethod update_service = 1;
  bool has_update_service() const;
  void clear_update_service();
  static const int kUpdateServiceFieldNumber = 1;
  const ::google::appengine::v1::UpdateServiceMethod& update_service() const;
  ::google::appengine::v1::UpdateServiceMethod* release_update_service();
  ::google::appengine::v1::UpdateServiceMethod* mutable_update_service();
  void set_allocated_update_service(::google::appengine::v1::UpdateServiceMethod* update_service);

  // .google.appengine.v1.CreateVersionMethod create_version = 2;
  bool has_create_version() const;
  void clear_create_version();
  static const int kCreateVersionFieldNumber = 2;
  const ::google::appengine::v1::CreateVersionMethod& create_version() const;
  ::google::appengine::v1::CreateVersionMethod* release_create_version();
  ::google::appengine::v1::CreateVersionMethod* mutable_create_version();
  void set_allocated_create_version(::google::appengine::v1::CreateVersionMethod* create_version);

  MethodCase method_case() const;
  // @@protoc_insertion_point(class_scope:google.appengine.v1.AuditData)
 private:
  void set_has_update_service();
  void set_has_create_version();

  inline bool has_method() const;
  void clear_method();
  inline void clear_has_method();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MethodUnion {
    MethodUnion() {}
    ::google::appengine::v1::UpdateServiceMethod* update_service_;
    ::google::appengine::v1::CreateVersionMethod* create_version_;
  } method_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto::InitDefaultsAuditDataImpl();
};
// -------------------------------------------------------------------

class UpdateServiceMethod : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.UpdateServiceMethod) */ {
 public:
  UpdateServiceMethod();
  virtual ~UpdateServiceMethod();

  UpdateServiceMethod(const UpdateServiceMethod& from);

  inline UpdateServiceMethod& operator=(const UpdateServiceMethod& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateServiceMethod(UpdateServiceMethod&& from) noexcept
    : UpdateServiceMethod() {
    *this = ::std::move(from);
  }

  inline UpdateServiceMethod& operator=(UpdateServiceMethod&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateServiceMethod& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateServiceMethod* internal_default_instance() {
    return reinterpret_cast<const UpdateServiceMethod*>(
               &_UpdateServiceMethod_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UpdateServiceMethod* other);
  friend void swap(UpdateServiceMethod& a, UpdateServiceMethod& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateServiceMethod* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateServiceMethod* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateServiceMethod& from);
  void MergeFrom(const UpdateServiceMethod& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateServiceMethod* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.appengine.v1.UpdateServiceRequest request = 1;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 1;
  const ::google::appengine::v1::UpdateServiceRequest& request() const;
  ::google::appengine::v1::UpdateServiceRequest* release_request();
  ::google::appengine::v1::UpdateServiceRequest* mutable_request();
  void set_allocated_request(::google::appengine::v1::UpdateServiceRequest* request);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.UpdateServiceMethod)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::appengine::v1::UpdateServiceRequest* request_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto::InitDefaultsUpdateServiceMethodImpl();
};
// -------------------------------------------------------------------

class CreateVersionMethod : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.CreateVersionMethod) */ {
 public:
  CreateVersionMethod();
  virtual ~CreateVersionMethod();

  CreateVersionMethod(const CreateVersionMethod& from);

  inline CreateVersionMethod& operator=(const CreateVersionMethod& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateVersionMethod(CreateVersionMethod&& from) noexcept
    : CreateVersionMethod() {
    *this = ::std::move(from);
  }

  inline CreateVersionMethod& operator=(CreateVersionMethod&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVersionMethod& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateVersionMethod* internal_default_instance() {
    return reinterpret_cast<const CreateVersionMethod*>(
               &_CreateVersionMethod_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateVersionMethod* other);
  friend void swap(CreateVersionMethod& a, CreateVersionMethod& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateVersionMethod* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVersionMethod* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVersionMethod& from);
  void MergeFrom(const CreateVersionMethod& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVersionMethod* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.appengine.v1.CreateVersionRequest request = 1;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 1;
  const ::google::appengine::v1::CreateVersionRequest& request() const;
  ::google::appengine::v1::CreateVersionRequest* release_request();
  ::google::appengine::v1::CreateVersionRequest* mutable_request();
  void set_allocated_request(::google::appengine::v1::CreateVersionRequest* request);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.CreateVersionMethod)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::appengine::v1::CreateVersionRequest* request_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2faudit_5fdata_2eproto::InitDefaultsCreateVersionMethodImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AuditData

// .google.appengine.v1.UpdateServiceMethod update_service = 1;
inline bool AuditData::has_update_service() const {
  return method_case() == kUpdateService;
}
inline void AuditData::set_has_update_service() {
  _oneof_case_[0] = kUpdateService;
}
inline void AuditData::clear_update_service() {
  if (has_update_service()) {
    delete method_.update_service_;
    clear_has_method();
  }
}
inline ::google::appengine::v1::UpdateServiceMethod* AuditData::release_update_service() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AuditData.update_service)
  if (has_update_service()) {
    clear_has_method();
      ::google::appengine::v1::UpdateServiceMethod* temp = method_.update_service_;
    method_.update_service_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::UpdateServiceMethod& AuditData::update_service() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.AuditData.update_service)
  return has_update_service()
      ? *method_.update_service_
      : *reinterpret_cast< ::google::appengine::v1::UpdateServiceMethod*>(&::google::appengine::v1::_UpdateServiceMethod_default_instance_);
}
inline ::google::appengine::v1::UpdateServiceMethod* AuditData::mutable_update_service() {
  if (!has_update_service()) {
    clear_method();
    set_has_update_service();
    method_.update_service_ = new ::google::appengine::v1::UpdateServiceMethod;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AuditData.update_service)
  return method_.update_service_;
}

// .google.appengine.v1.CreateVersionMethod create_version = 2;
inline bool AuditData::has_create_version() const {
  return method_case() == kCreateVersion;
}
inline void AuditData::set_has_create_version() {
  _oneof_case_[0] = kCreateVersion;
}
inline void AuditData::clear_create_version() {
  if (has_create_version()) {
    delete method_.create_version_;
    clear_has_method();
  }
}
inline ::google::appengine::v1::CreateVersionMethod* AuditData::release_create_version() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AuditData.create_version)
  if (has_create_version()) {
    clear_has_method();
      ::google::appengine::v1::CreateVersionMethod* temp = method_.create_version_;
    method_.create_version_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::CreateVersionMethod& AuditData::create_version() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.AuditData.create_version)
  return has_create_version()
      ? *method_.create_version_
      : *reinterpret_cast< ::google::appengine::v1::CreateVersionMethod*>(&::google::appengine::v1::_CreateVersionMethod_default_instance_);
}
inline ::google::appengine::v1::CreateVersionMethod* AuditData::mutable_create_version() {
  if (!has_create_version()) {
    clear_method();
    set_has_create_version();
    method_.create_version_ = new ::google::appengine::v1::CreateVersionMethod;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AuditData.create_version)
  return method_.create_version_;
}

inline bool AuditData::has_method() const {
  return method_case() != METHOD_NOT_SET;
}
inline void AuditData::clear_has_method() {
  _oneof_case_[0] = METHOD_NOT_SET;
}
inline AuditData::MethodCase AuditData::method_case() const {
  return AuditData::MethodCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UpdateServiceMethod

// .google.appengine.v1.UpdateServiceRequest request = 1;
inline bool UpdateServiceMethod::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline const ::google::appengine::v1::UpdateServiceRequest& UpdateServiceMethod::request() const {
  const ::google::appengine::v1::UpdateServiceRequest* p = request_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateServiceMethod.request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::UpdateServiceRequest*>(
      &::google::appengine::v1::_UpdateServiceRequest_default_instance_);
}
inline ::google::appengine::v1::UpdateServiceRequest* UpdateServiceMethod::release_request() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UpdateServiceMethod.request)
  
  ::google::appengine::v1::UpdateServiceRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::google::appengine::v1::UpdateServiceRequest* UpdateServiceMethod::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::google::appengine::v1::UpdateServiceRequest;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UpdateServiceMethod.request)
  return request_;
}
inline void UpdateServiceMethod::set_allocated_request(::google::appengine::v1::UpdateServiceRequest* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_);
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    
  } else {
    
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UpdateServiceMethod.request)
}

// -------------------------------------------------------------------

// CreateVersionMethod

// .google.appengine.v1.CreateVersionRequest request = 1;
inline bool CreateVersionMethod::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline const ::google::appengine::v1::CreateVersionRequest& CreateVersionMethod::request() const {
  const ::google::appengine::v1::CreateVersionRequest* p = request_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.CreateVersionMethod.request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::CreateVersionRequest*>(
      &::google::appengine::v1::_CreateVersionRequest_default_instance_);
}
inline ::google::appengine::v1::CreateVersionRequest* CreateVersionMethod::release_request() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.CreateVersionMethod.request)
  
  ::google::appengine::v1::CreateVersionRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::google::appengine::v1::CreateVersionRequest* CreateVersionMethod::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::google::appengine::v1::CreateVersionRequest;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.CreateVersionMethod.request)
  return request_;
}
inline void CreateVersionMethod::set_allocated_request(::google::appengine::v1::CreateVersionRequest* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_);
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    
  } else {
    
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.CreateVersionMethod.request)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fappengine_2fv1_2faudit_5fdata_2eproto__INCLUDED
