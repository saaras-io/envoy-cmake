// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1/model_service.proto

#ifndef PROTOBUF_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/auth.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsModelImpl();
void InitDefaultsModel();
void InitDefaultsVersionImpl();
void InitDefaultsVersion();
void InitDefaultsManualScalingImpl();
void InitDefaultsManualScaling();
void InitDefaultsCreateModelRequestImpl();
void InitDefaultsCreateModelRequest();
void InitDefaultsListModelsRequestImpl();
void InitDefaultsListModelsRequest();
void InitDefaultsListModelsResponseImpl();
void InitDefaultsListModelsResponse();
void InitDefaultsGetModelRequestImpl();
void InitDefaultsGetModelRequest();
void InitDefaultsDeleteModelRequestImpl();
void InitDefaultsDeleteModelRequest();
void InitDefaultsCreateVersionRequestImpl();
void InitDefaultsCreateVersionRequest();
void InitDefaultsListVersionsRequestImpl();
void InitDefaultsListVersionsRequest();
void InitDefaultsListVersionsResponseImpl();
void InitDefaultsListVersionsResponse();
void InitDefaultsGetVersionRequestImpl();
void InitDefaultsGetVersionRequest();
void InitDefaultsDeleteVersionRequestImpl();
void InitDefaultsDeleteVersionRequest();
void InitDefaultsSetDefaultVersionRequestImpl();
void InitDefaultsSetDefaultVersionRequest();
inline void InitDefaults() {
  InitDefaultsModel();
  InitDefaultsVersion();
  InitDefaultsManualScaling();
  InitDefaultsCreateModelRequest();
  InitDefaultsListModelsRequest();
  InitDefaultsListModelsResponse();
  InitDefaultsGetModelRequest();
  InitDefaultsDeleteModelRequest();
  InitDefaultsCreateVersionRequest();
  InitDefaultsListVersionsRequest();
  InitDefaultsListVersionsResponse();
  InitDefaultsGetVersionRequest();
  InitDefaultsDeleteVersionRequest();
  InitDefaultsSetDefaultVersionRequest();
}
}  // namespace protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto
namespace google {
namespace cloud {
namespace ml {
namespace v1 {
class CreateModelRequest;
class CreateModelRequestDefaultTypeInternal;
extern CreateModelRequestDefaultTypeInternal _CreateModelRequest_default_instance_;
class CreateVersionRequest;
class CreateVersionRequestDefaultTypeInternal;
extern CreateVersionRequestDefaultTypeInternal _CreateVersionRequest_default_instance_;
class DeleteModelRequest;
class DeleteModelRequestDefaultTypeInternal;
extern DeleteModelRequestDefaultTypeInternal _DeleteModelRequest_default_instance_;
class DeleteVersionRequest;
class DeleteVersionRequestDefaultTypeInternal;
extern DeleteVersionRequestDefaultTypeInternal _DeleteVersionRequest_default_instance_;
class GetModelRequest;
class GetModelRequestDefaultTypeInternal;
extern GetModelRequestDefaultTypeInternal _GetModelRequest_default_instance_;
class GetVersionRequest;
class GetVersionRequestDefaultTypeInternal;
extern GetVersionRequestDefaultTypeInternal _GetVersionRequest_default_instance_;
class ListModelsRequest;
class ListModelsRequestDefaultTypeInternal;
extern ListModelsRequestDefaultTypeInternal _ListModelsRequest_default_instance_;
class ListModelsResponse;
class ListModelsResponseDefaultTypeInternal;
extern ListModelsResponseDefaultTypeInternal _ListModelsResponse_default_instance_;
class ListVersionsRequest;
class ListVersionsRequestDefaultTypeInternal;
extern ListVersionsRequestDefaultTypeInternal _ListVersionsRequest_default_instance_;
class ListVersionsResponse;
class ListVersionsResponseDefaultTypeInternal;
extern ListVersionsResponseDefaultTypeInternal _ListVersionsResponse_default_instance_;
class ManualScaling;
class ManualScalingDefaultTypeInternal;
extern ManualScalingDefaultTypeInternal _ManualScaling_default_instance_;
class Model;
class ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
class SetDefaultVersionRequest;
class SetDefaultVersionRequestDefaultTypeInternal;
extern SetDefaultVersionRequestDefaultTypeInternal _SetDefaultVersionRequest_default_instance_;
class Version;
class VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
}  // namespace v1
}  // namespace ml
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace ml {
namespace v1 {

// ===================================================================

class Model : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.Model) */ {
 public:
  Model();
  virtual ~Model();

  Model(const Model& from);

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Model(Model&& from) noexcept
    : Model() {
    *this = ::std::move(from);
  }

  inline Model& operator=(Model&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Model& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
               &_Model_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Model* other);
  friend void swap(Model& a, Model& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Model* New() const PROTOBUF_FINAL { return New(NULL); }

  Model* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Model& from);
  void MergeFrom(const Model& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Model* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string regions = 4;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 4;
  const ::std::string& regions(int index) const;
  ::std::string* mutable_regions(int index);
  void set_regions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_regions(int index, ::std::string&& value);
  #endif
  void set_regions(int index, const char* value);
  void set_regions(int index, const char* value, size_t size);
  ::std::string* add_regions();
  void add_regions(const ::std::string& value);
  #if LANG_CXX11
  void add_regions(::std::string&& value);
  #endif
  void add_regions(const char* value);
  void add_regions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& regions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_regions();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .google.cloud.ml.v1.Version default_version = 3;
  bool has_default_version() const;
  void clear_default_version();
  static const int kDefaultVersionFieldNumber = 3;
  const ::google::cloud::ml::v1::Version& default_version() const;
  ::google::cloud::ml::v1::Version* release_default_version();
  ::google::cloud::ml::v1::Version* mutable_default_version();
  void set_allocated_default_version(::google::cloud::ml::v1::Version* default_version);

  // bool online_prediction_logging = 5;
  void clear_online_prediction_logging();
  static const int kOnlinePredictionLoggingFieldNumber = 5;
  bool online_prediction_logging() const;
  void set_online_prediction_logging(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.Model)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> regions_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::cloud::ml::v1::Version* default_version_;
  bool online_prediction_logging_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsModelImpl();
};
// -------------------------------------------------------------------

class Version : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.Version) */ {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Version(Version&& from) noexcept
    : Version() {
    *this = ::std::move(from);
  }

  inline Version& operator=(Version&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Version& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version* internal_default_instance() {
    return reinterpret_cast<const Version*>(
               &_Version_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Version* other);
  friend void swap(Version& a, Version& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Version* New() const PROTOBUF_FINAL { return New(NULL); }

  Version* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Version* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string deployment_uri = 4;
  void clear_deployment_uri();
  static const int kDeploymentUriFieldNumber = 4;
  const ::std::string& deployment_uri() const;
  void set_deployment_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_deployment_uri(::std::string&& value);
  #endif
  void set_deployment_uri(const char* value);
  void set_deployment_uri(const char* value, size_t size);
  ::std::string* mutable_deployment_uri();
  ::std::string* release_deployment_uri();
  void set_allocated_deployment_uri(::std::string* deployment_uri);

  // string runtime_version = 8;
  void clear_runtime_version();
  static const int kRuntimeVersionFieldNumber = 8;
  const ::std::string& runtime_version() const;
  void set_runtime_version(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime_version(::std::string&& value);
  #endif
  void set_runtime_version(const char* value);
  void set_runtime_version(const char* value, size_t size);
  ::std::string* mutable_runtime_version();
  ::std::string* release_runtime_version();
  void set_allocated_runtime_version(::std::string* runtime_version);

  // .google.protobuf.Timestamp create_time = 5;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp last_use_time = 6;
  bool has_last_use_time() const;
  void clear_last_use_time();
  static const int kLastUseTimeFieldNumber = 6;
  const ::google::protobuf::Timestamp& last_use_time() const;
  ::google::protobuf::Timestamp* release_last_use_time();
  ::google::protobuf::Timestamp* mutable_last_use_time();
  void set_allocated_last_use_time(::google::protobuf::Timestamp* last_use_time);

  // .google.cloud.ml.v1.ManualScaling manual_scaling = 9;
  bool has_manual_scaling() const;
  void clear_manual_scaling();
  static const int kManualScalingFieldNumber = 9;
  const ::google::cloud::ml::v1::ManualScaling& manual_scaling() const;
  ::google::cloud::ml::v1::ManualScaling* release_manual_scaling();
  ::google::cloud::ml::v1::ManualScaling* mutable_manual_scaling();
  void set_allocated_manual_scaling(::google::cloud::ml::v1::ManualScaling* manual_scaling);

  // bool is_default = 3;
  void clear_is_default();
  static const int kIsDefaultFieldNumber = 3;
  bool is_default() const;
  void set_is_default(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.Version)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr deployment_uri_;
  ::google::protobuf::internal::ArenaStringPtr runtime_version_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* last_use_time_;
  ::google::cloud::ml::v1::ManualScaling* manual_scaling_;
  bool is_default_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsVersionImpl();
};
// -------------------------------------------------------------------

class ManualScaling : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ManualScaling) */ {
 public:
  ManualScaling();
  virtual ~ManualScaling();

  ManualScaling(const ManualScaling& from);

  inline ManualScaling& operator=(const ManualScaling& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ManualScaling(ManualScaling&& from) noexcept
    : ManualScaling() {
    *this = ::std::move(from);
  }

  inline ManualScaling& operator=(ManualScaling&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualScaling& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualScaling* internal_default_instance() {
    return reinterpret_cast<const ManualScaling*>(
               &_ManualScaling_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ManualScaling* other);
  friend void swap(ManualScaling& a, ManualScaling& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ManualScaling* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualScaling* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualScaling& from);
  void MergeFrom(const ManualScaling& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualScaling* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nodes = 1;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  ::google::protobuf::int32 nodes() const;
  void set_nodes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ManualScaling)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nodes_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsManualScalingImpl();
};
// -------------------------------------------------------------------

class CreateModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.CreateModelRequest) */ {
 public:
  CreateModelRequest();
  virtual ~CreateModelRequest();

  CreateModelRequest(const CreateModelRequest& from);

  inline CreateModelRequest& operator=(const CreateModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateModelRequest(CreateModelRequest&& from) noexcept
    : CreateModelRequest() {
    *this = ::std::move(from);
  }

  inline CreateModelRequest& operator=(CreateModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateModelRequest* internal_default_instance() {
    return reinterpret_cast<const CreateModelRequest*>(
               &_CreateModelRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CreateModelRequest* other);
  friend void swap(CreateModelRequest& a, CreateModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateModelRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateModelRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateModelRequest& from);
  void MergeFrom(const CreateModelRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.cloud.ml.v1.Model model = 2;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 2;
  const ::google::cloud::ml::v1::Model& model() const;
  ::google::cloud::ml::v1::Model* release_model();
  ::google::cloud::ml::v1::Model* mutable_model();
  void set_allocated_model(::google::cloud::ml::v1::Model* model);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.CreateModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::ml::v1::Model* model_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsCreateModelRequestImpl();
};
// -------------------------------------------------------------------

class ListModelsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ListModelsRequest) */ {
 public:
  ListModelsRequest();
  virtual ~ListModelsRequest();

  ListModelsRequest(const ListModelsRequest& from);

  inline ListModelsRequest& operator=(const ListModelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListModelsRequest(ListModelsRequest&& from) noexcept
    : ListModelsRequest() {
    *this = ::std::move(from);
  }

  inline ListModelsRequest& operator=(ListModelsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModelsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListModelsRequest* internal_default_instance() {
    return reinterpret_cast<const ListModelsRequest*>(
               &_ListModelsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListModelsRequest* other);
  friend void swap(ListModelsRequest& a, ListModelsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListModelsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListModelsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListModelsRequest& from);
  void MergeFrom(const ListModelsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListModelsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 5;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 5;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ListModelsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsListModelsRequestImpl();
};
// -------------------------------------------------------------------

class ListModelsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ListModelsResponse) */ {
 public:
  ListModelsResponse();
  virtual ~ListModelsResponse();

  ListModelsResponse(const ListModelsResponse& from);

  inline ListModelsResponse& operator=(const ListModelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListModelsResponse(ListModelsResponse&& from) noexcept
    : ListModelsResponse() {
    *this = ::std::move(from);
  }

  inline ListModelsResponse& operator=(ListModelsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModelsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListModelsResponse* internal_default_instance() {
    return reinterpret_cast<const ListModelsResponse*>(
               &_ListModelsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ListModelsResponse* other);
  friend void swap(ListModelsResponse& a, ListModelsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListModelsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListModelsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListModelsResponse& from);
  void MergeFrom(const ListModelsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListModelsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.ml.v1.Model models = 1;
  int models_size() const;
  void clear_models();
  static const int kModelsFieldNumber = 1;
  const ::google::cloud::ml::v1::Model& models(int index) const;
  ::google::cloud::ml::v1::Model* mutable_models(int index);
  ::google::cloud::ml::v1::Model* add_models();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Model >*
      mutable_models();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Model >&
      models() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ListModelsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Model > models_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsListModelsResponseImpl();
};
// -------------------------------------------------------------------

class GetModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.GetModelRequest) */ {
 public:
  GetModelRequest();
  virtual ~GetModelRequest();

  GetModelRequest(const GetModelRequest& from);

  inline GetModelRequest& operator=(const GetModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetModelRequest(GetModelRequest&& from) noexcept
    : GetModelRequest() {
    *this = ::std::move(from);
  }

  inline GetModelRequest& operator=(GetModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetModelRequest* internal_default_instance() {
    return reinterpret_cast<const GetModelRequest*>(
               &_GetModelRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetModelRequest* other);
  friend void swap(GetModelRequest& a, GetModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetModelRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetModelRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetModelRequest& from);
  void MergeFrom(const GetModelRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.GetModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsGetModelRequestImpl();
};
// -------------------------------------------------------------------

class DeleteModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.DeleteModelRequest) */ {
 public:
  DeleteModelRequest();
  virtual ~DeleteModelRequest();

  DeleteModelRequest(const DeleteModelRequest& from);

  inline DeleteModelRequest& operator=(const DeleteModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteModelRequest(DeleteModelRequest&& from) noexcept
    : DeleteModelRequest() {
    *this = ::std::move(from);
  }

  inline DeleteModelRequest& operator=(DeleteModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteModelRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteModelRequest*>(
               &_DeleteModelRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DeleteModelRequest* other);
  friend void swap(DeleteModelRequest& a, DeleteModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteModelRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteModelRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteModelRequest& from);
  void MergeFrom(const DeleteModelRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.DeleteModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsDeleteModelRequestImpl();
};
// -------------------------------------------------------------------

class CreateVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.CreateVersionRequest) */ {
 public:
  CreateVersionRequest();
  virtual ~CreateVersionRequest();

  CreateVersionRequest(const CreateVersionRequest& from);

  inline CreateVersionRequest& operator=(const CreateVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateVersionRequest(CreateVersionRequest&& from) noexcept
    : CreateVersionRequest() {
    *this = ::std::move(from);
  }

  inline CreateVersionRequest& operator=(CreateVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateVersionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateVersionRequest*>(
               &_CreateVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CreateVersionRequest* other);
  friend void swap(CreateVersionRequest& a, CreateVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVersionRequest& from);
  void MergeFrom(const CreateVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.cloud.ml.v1.Version version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::google::cloud::ml::v1::Version& version() const;
  ::google::cloud::ml::v1::Version* release_version();
  ::google::cloud::ml::v1::Version* mutable_version();
  void set_allocated_version(::google::cloud::ml::v1::Version* version);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.CreateVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::ml::v1::Version* version_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsCreateVersionRequestImpl();
};
// -------------------------------------------------------------------

class ListVersionsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ListVersionsRequest) */ {
 public:
  ListVersionsRequest();
  virtual ~ListVersionsRequest();

  ListVersionsRequest(const ListVersionsRequest& from);

  inline ListVersionsRequest& operator=(const ListVersionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVersionsRequest(ListVersionsRequest&& from) noexcept
    : ListVersionsRequest() {
    *this = ::std::move(from);
  }

  inline ListVersionsRequest& operator=(ListVersionsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVersionsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVersionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListVersionsRequest*>(
               &_ListVersionsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ListVersionsRequest* other);
  friend void swap(ListVersionsRequest& a, ListVersionsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVersionsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVersionsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVersionsRequest& from);
  void MergeFrom(const ListVersionsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVersionsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 5;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 5;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ListVersionsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsListVersionsRequestImpl();
};
// -------------------------------------------------------------------

class ListVersionsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ListVersionsResponse) */ {
 public:
  ListVersionsResponse();
  virtual ~ListVersionsResponse();

  ListVersionsResponse(const ListVersionsResponse& from);

  inline ListVersionsResponse& operator=(const ListVersionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVersionsResponse(ListVersionsResponse&& from) noexcept
    : ListVersionsResponse() {
    *this = ::std::move(from);
  }

  inline ListVersionsResponse& operator=(ListVersionsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVersionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVersionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListVersionsResponse*>(
               &_ListVersionsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ListVersionsResponse* other);
  friend void swap(ListVersionsResponse& a, ListVersionsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVersionsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVersionsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVersionsResponse& from);
  void MergeFrom(const ListVersionsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVersionsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.ml.v1.Version versions = 1;
  int versions_size() const;
  void clear_versions();
  static const int kVersionsFieldNumber = 1;
  const ::google::cloud::ml::v1::Version& versions(int index) const;
  ::google::cloud::ml::v1::Version* mutable_versions(int index);
  ::google::cloud::ml::v1::Version* add_versions();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Version >*
      mutable_versions();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Version >&
      versions() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ListVersionsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Version > versions_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsListVersionsResponseImpl();
};
// -------------------------------------------------------------------

class GetVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.GetVersionRequest) */ {
 public:
  GetVersionRequest();
  virtual ~GetVersionRequest();

  GetVersionRequest(const GetVersionRequest& from);

  inline GetVersionRequest& operator=(const GetVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVersionRequest(GetVersionRequest&& from) noexcept
    : GetVersionRequest() {
    *this = ::std::move(from);
  }

  inline GetVersionRequest& operator=(GetVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVersionRequest* internal_default_instance() {
    return reinterpret_cast<const GetVersionRequest*>(
               &_GetVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetVersionRequest* other);
  friend void swap(GetVersionRequest& a, GetVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVersionRequest& from);
  void MergeFrom(const GetVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.GetVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsGetVersionRequestImpl();
};
// -------------------------------------------------------------------

class DeleteVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.DeleteVersionRequest) */ {
 public:
  DeleteVersionRequest();
  virtual ~DeleteVersionRequest();

  DeleteVersionRequest(const DeleteVersionRequest& from);

  inline DeleteVersionRequest& operator=(const DeleteVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteVersionRequest(DeleteVersionRequest&& from) noexcept
    : DeleteVersionRequest() {
    *this = ::std::move(from);
  }

  inline DeleteVersionRequest& operator=(DeleteVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteVersionRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteVersionRequest*>(
               &_DeleteVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DeleteVersionRequest* other);
  friend void swap(DeleteVersionRequest& a, DeleteVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVersionRequest& from);
  void MergeFrom(const DeleteVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.DeleteVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsDeleteVersionRequestImpl();
};
// -------------------------------------------------------------------

class SetDefaultVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.SetDefaultVersionRequest) */ {
 public:
  SetDefaultVersionRequest();
  virtual ~SetDefaultVersionRequest();

  SetDefaultVersionRequest(const SetDefaultVersionRequest& from);

  inline SetDefaultVersionRequest& operator=(const SetDefaultVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetDefaultVersionRequest(SetDefaultVersionRequest&& from) noexcept
    : SetDefaultVersionRequest() {
    *this = ::std::move(from);
  }

  inline SetDefaultVersionRequest& operator=(SetDefaultVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDefaultVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetDefaultVersionRequest* internal_default_instance() {
    return reinterpret_cast<const SetDefaultVersionRequest*>(
               &_SetDefaultVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SetDefaultVersionRequest* other);
  friend void swap(SetDefaultVersionRequest& a, SetDefaultVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetDefaultVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDefaultVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetDefaultVersionRequest& from);
  void MergeFrom(const SetDefaultVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetDefaultVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.SetDefaultVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto::InitDefaultsSetDefaultVersionRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Model

// string name = 1;
inline void Model::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Model.name)
  return name_.GetNoArena();
}
inline void Model::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Model.name)
}
#if LANG_CXX11
inline void Model::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Model.name)
}
#endif
inline void Model::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Model.name)
}
inline void Model::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Model.name)
}
inline ::std::string* Model::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Model.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Model.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Model.name)
}

// string description = 2;
inline void Model::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Model.description)
  return description_.GetNoArena();
}
inline void Model::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Model.description)
}
#if LANG_CXX11
inline void Model::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Model.description)
}
#endif
inline void Model::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Model.description)
}
inline void Model::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Model.description)
}
inline ::std::string* Model::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Model.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Model.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Model.description)
}

// .google.cloud.ml.v1.Version default_version = 3;
inline bool Model::has_default_version() const {
  return this != internal_default_instance() && default_version_ != NULL;
}
inline void Model::clear_default_version() {
  if (GetArenaNoVirtual() == NULL && default_version_ != NULL) {
    delete default_version_;
  }
  default_version_ = NULL;
}
inline const ::google::cloud::ml::v1::Version& Model::default_version() const {
  const ::google::cloud::ml::v1::Version* p = default_version_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Model.default_version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::ml::v1::Version*>(
      &::google::cloud::ml::v1::_Version_default_instance_);
}
inline ::google::cloud::ml::v1::Version* Model::release_default_version() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Model.default_version)
  
  ::google::cloud::ml::v1::Version* temp = default_version_;
  default_version_ = NULL;
  return temp;
}
inline ::google::cloud::ml::v1::Version* Model::mutable_default_version() {
  
  if (default_version_ == NULL) {
    default_version_ = new ::google::cloud::ml::v1::Version;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Model.default_version)
  return default_version_;
}
inline void Model::set_allocated_default_version(::google::cloud::ml::v1::Version* default_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete default_version_;
  }
  if (default_version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      default_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_version, submessage_arena);
    }
    
  } else {
    
  }
  default_version_ = default_version;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Model.default_version)
}

// repeated string regions = 4;
inline int Model::regions_size() const {
  return regions_.size();
}
inline void Model::clear_regions() {
  regions_.Clear();
}
inline const ::std::string& Model::regions(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Model.regions)
  return regions_.Get(index);
}
inline ::std::string* Model::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Model.regions)
  return regions_.Mutable(index);
}
inline void Model::set_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Model.regions)
  regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Model::set_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Model.regions)
  regions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Model::set_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Model.regions)
}
inline void Model::set_regions(int index, const char* value, size_t size) {
  regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Model.regions)
}
inline ::std::string* Model::add_regions() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1.Model.regions)
  return regions_.Add();
}
inline void Model::add_regions(const ::std::string& value) {
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.Model.regions)
}
#if LANG_CXX11
inline void Model::add_regions(::std::string&& value) {
  regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.Model.regions)
}
#endif
inline void Model::add_regions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1.Model.regions)
}
inline void Model::add_regions(const char* value, size_t size) {
  regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1.Model.regions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Model::regions() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.Model.regions)
  return regions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Model::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.Model.regions)
  return &regions_;
}

// bool online_prediction_logging = 5;
inline void Model::clear_online_prediction_logging() {
  online_prediction_logging_ = false;
}
inline bool Model::online_prediction_logging() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Model.online_prediction_logging)
  return online_prediction_logging_;
}
inline void Model::set_online_prediction_logging(bool value) {
  
  online_prediction_logging_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Model.online_prediction_logging)
}

// -------------------------------------------------------------------

// Version

// string name = 1;
inline void Version::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.name)
  return name_.GetNoArena();
}
inline void Version::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Version.name)
}
#if LANG_CXX11
inline void Version::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Version.name)
}
#endif
inline void Version::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Version.name)
}
inline void Version::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Version.name)
}
inline ::std::string* Version::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Version.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Version.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Version.name)
}

// string description = 2;
inline void Version::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.description)
  return description_.GetNoArena();
}
inline void Version::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Version.description)
}
#if LANG_CXX11
inline void Version::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Version.description)
}
#endif
inline void Version::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Version.description)
}
inline void Version::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Version.description)
}
inline ::std::string* Version::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Version.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Version.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Version.description)
}

// bool is_default = 3;
inline void Version::clear_is_default() {
  is_default_ = false;
}
inline bool Version::is_default() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.is_default)
  return is_default_;
}
inline void Version::set_is_default(bool value) {
  
  is_default_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Version.is_default)
}

// string deployment_uri = 4;
inline void Version::clear_deployment_uri() {
  deployment_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::deployment_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.deployment_uri)
  return deployment_uri_.GetNoArena();
}
inline void Version::set_deployment_uri(const ::std::string& value) {
  
  deployment_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Version.deployment_uri)
}
#if LANG_CXX11
inline void Version::set_deployment_uri(::std::string&& value) {
  
  deployment_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Version.deployment_uri)
}
#endif
inline void Version::set_deployment_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deployment_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Version.deployment_uri)
}
inline void Version::set_deployment_uri(const char* value, size_t size) {
  
  deployment_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Version.deployment_uri)
}
inline ::std::string* Version::mutable_deployment_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Version.deployment_uri)
  return deployment_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_deployment_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Version.deployment_uri)
  
  return deployment_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_deployment_uri(::std::string* deployment_uri) {
  if (deployment_uri != NULL) {
    
  } else {
    
  }
  deployment_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deployment_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Version.deployment_uri)
}

// .google.protobuf.Timestamp create_time = 5;
inline bool Version::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Version::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Version::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Version.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Version::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Version.create_time)
  return create_time_;
}
inline void Version::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Version.create_time)
}

// .google.protobuf.Timestamp last_use_time = 6;
inline bool Version::has_last_use_time() const {
  return this != internal_default_instance() && last_use_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Version::last_use_time() const {
  const ::google::protobuf::Timestamp* p = last_use_time_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.last_use_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Version::release_last_use_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Version.last_use_time)
  
  ::google::protobuf::Timestamp* temp = last_use_time_;
  last_use_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Version::mutable_last_use_time() {
  
  if (last_use_time_ == NULL) {
    last_use_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Version.last_use_time)
  return last_use_time_;
}
inline void Version::set_allocated_last_use_time(::google::protobuf::Timestamp* last_use_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_use_time_);
  }
  if (last_use_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(last_use_time)->GetArena();
    if (message_arena != submessage_arena) {
      last_use_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_use_time, submessage_arena);
    }
    
  } else {
    
  }
  last_use_time_ = last_use_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Version.last_use_time)
}

// string runtime_version = 8;
inline void Version::clear_runtime_version() {
  runtime_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::runtime_version() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.runtime_version)
  return runtime_version_.GetNoArena();
}
inline void Version::set_runtime_version(const ::std::string& value) {
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Version.runtime_version)
}
#if LANG_CXX11
inline void Version::set_runtime_version(::std::string&& value) {
  
  runtime_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Version.runtime_version)
}
#endif
inline void Version::set_runtime_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Version.runtime_version)
}
inline void Version::set_runtime_version(const char* value, size_t size) {
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Version.runtime_version)
}
inline ::std::string* Version::mutable_runtime_version() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Version.runtime_version)
  return runtime_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_runtime_version() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Version.runtime_version)
  
  return runtime_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_runtime_version(::std::string* runtime_version) {
  if (runtime_version != NULL) {
    
  } else {
    
  }
  runtime_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_version);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Version.runtime_version)
}

// .google.cloud.ml.v1.ManualScaling manual_scaling = 9;
inline bool Version::has_manual_scaling() const {
  return this != internal_default_instance() && manual_scaling_ != NULL;
}
inline void Version::clear_manual_scaling() {
  if (GetArenaNoVirtual() == NULL && manual_scaling_ != NULL) {
    delete manual_scaling_;
  }
  manual_scaling_ = NULL;
}
inline const ::google::cloud::ml::v1::ManualScaling& Version::manual_scaling() const {
  const ::google::cloud::ml::v1::ManualScaling* p = manual_scaling_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Version.manual_scaling)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::ml::v1::ManualScaling*>(
      &::google::cloud::ml::v1::_ManualScaling_default_instance_);
}
inline ::google::cloud::ml::v1::ManualScaling* Version::release_manual_scaling() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Version.manual_scaling)
  
  ::google::cloud::ml::v1::ManualScaling* temp = manual_scaling_;
  manual_scaling_ = NULL;
  return temp;
}
inline ::google::cloud::ml::v1::ManualScaling* Version::mutable_manual_scaling() {
  
  if (manual_scaling_ == NULL) {
    manual_scaling_ = new ::google::cloud::ml::v1::ManualScaling;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Version.manual_scaling)
  return manual_scaling_;
}
inline void Version::set_allocated_manual_scaling(::google::cloud::ml::v1::ManualScaling* manual_scaling) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete manual_scaling_;
  }
  if (manual_scaling) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manual_scaling = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manual_scaling, submessage_arena);
    }
    
  } else {
    
  }
  manual_scaling_ = manual_scaling;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Version.manual_scaling)
}

// -------------------------------------------------------------------

// ManualScaling

// int32 nodes = 1;
inline void ManualScaling::clear_nodes() {
  nodes_ = 0;
}
inline ::google::protobuf::int32 ManualScaling::nodes() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ManualScaling.nodes)
  return nodes_;
}
inline void ManualScaling::set_nodes(::google::protobuf::int32 value) {
  
  nodes_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ManualScaling.nodes)
}

// -------------------------------------------------------------------

// CreateModelRequest

// string parent = 1;
inline void CreateModelRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateModelRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.CreateModelRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateModelRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.CreateModelRequest.parent)
}
#if LANG_CXX11
inline void CreateModelRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.CreateModelRequest.parent)
}
#endif
inline void CreateModelRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.CreateModelRequest.parent)
}
inline void CreateModelRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.CreateModelRequest.parent)
}
inline ::std::string* CreateModelRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.CreateModelRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateModelRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.CreateModelRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModelRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.CreateModelRequest.parent)
}

// .google.cloud.ml.v1.Model model = 2;
inline bool CreateModelRequest::has_model() const {
  return this != internal_default_instance() && model_ != NULL;
}
inline void CreateModelRequest::clear_model() {
  if (GetArenaNoVirtual() == NULL && model_ != NULL) {
    delete model_;
  }
  model_ = NULL;
}
inline const ::google::cloud::ml::v1::Model& CreateModelRequest::model() const {
  const ::google::cloud::ml::v1::Model* p = model_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.CreateModelRequest.model)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::ml::v1::Model*>(
      &::google::cloud::ml::v1::_Model_default_instance_);
}
inline ::google::cloud::ml::v1::Model* CreateModelRequest::release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.CreateModelRequest.model)
  
  ::google::cloud::ml::v1::Model* temp = model_;
  model_ = NULL;
  return temp;
}
inline ::google::cloud::ml::v1::Model* CreateModelRequest::mutable_model() {
  
  if (model_ == NULL) {
    model_ = new ::google::cloud::ml::v1::Model;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.CreateModelRequest.model)
  return model_;
}
inline void CreateModelRequest::set_allocated_model(::google::cloud::ml::v1::Model* model) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete model_;
  }
  if (model) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      model = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, model, submessage_arena);
    }
    
  } else {
    
  }
  model_ = model;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.CreateModelRequest.model)
}

// -------------------------------------------------------------------

// ListModelsRequest

// string parent = 1;
inline void ListModelsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListModelsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListModelsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListModelsRequest.parent)
}
#if LANG_CXX11
inline void ListModelsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListModelsRequest.parent)
}
#endif
inline void ListModelsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListModelsRequest.parent)
}
inline void ListModelsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListModelsRequest.parent)
}
inline ::std::string* ListModelsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListModelsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListModelsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListModelsRequest.parent)
}

// string page_token = 4;
inline void ListModelsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListModelsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListModelsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListModelsRequest.page_token)
}
#if LANG_CXX11
inline void ListModelsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListModelsRequest.page_token)
}
#endif
inline void ListModelsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListModelsRequest.page_token)
}
inline void ListModelsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListModelsRequest.page_token)
}
inline ::std::string* ListModelsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListModelsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListModelsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListModelsRequest.page_token)
}

// int32 page_size = 5;
inline void ListModelsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListModelsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListModelsRequest.page_size)
  return page_size_;
}
inline void ListModelsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListModelsRequest.page_size)
}

// -------------------------------------------------------------------

// ListModelsResponse

// repeated .google.cloud.ml.v1.Model models = 1;
inline int ListModelsResponse::models_size() const {
  return models_.size();
}
inline void ListModelsResponse::clear_models() {
  models_.Clear();
}
inline const ::google::cloud::ml::v1::Model& ListModelsResponse::models(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListModelsResponse.models)
  return models_.Get(index);
}
inline ::google::cloud::ml::v1::Model* ListModelsResponse::mutable_models(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListModelsResponse.models)
  return models_.Mutable(index);
}
inline ::google::cloud::ml::v1::Model* ListModelsResponse::add_models() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.ListModelsResponse.models)
  return models_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Model >*
ListModelsResponse::mutable_models() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.ListModelsResponse.models)
  return &models_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Model >&
ListModelsResponse::models() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.ListModelsResponse.models)
  return models_;
}

// string next_page_token = 2;
inline void ListModelsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListModelsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListModelsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListModelsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListModelsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListModelsResponse.next_page_token)
}
#endif
inline void ListModelsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListModelsResponse.next_page_token)
}
inline void ListModelsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListModelsResponse.next_page_token)
}
inline ::std::string* ListModelsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListModelsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListModelsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListModelsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetModelRequest

// string name = 1;
inline void GetModelRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.GetModelRequest.name)
  return name_.GetNoArena();
}
inline void GetModelRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.GetModelRequest.name)
}
#if LANG_CXX11
inline void GetModelRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.GetModelRequest.name)
}
#endif
inline void GetModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.GetModelRequest.name)
}
inline void GetModelRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.GetModelRequest.name)
}
inline ::std::string* GetModelRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.GetModelRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.GetModelRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModelRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.GetModelRequest.name)
}

// -------------------------------------------------------------------

// DeleteModelRequest

// string name = 1;
inline void DeleteModelRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.DeleteModelRequest.name)
  return name_.GetNoArena();
}
inline void DeleteModelRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.DeleteModelRequest.name)
}
#if LANG_CXX11
inline void DeleteModelRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.DeleteModelRequest.name)
}
#endif
inline void DeleteModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.DeleteModelRequest.name)
}
inline void DeleteModelRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.DeleteModelRequest.name)
}
inline ::std::string* DeleteModelRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.DeleteModelRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.DeleteModelRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteModelRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.DeleteModelRequest.name)
}

// -------------------------------------------------------------------

// CreateVersionRequest

// string parent = 1;
inline void CreateVersionRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateVersionRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.CreateVersionRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateVersionRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.CreateVersionRequest.parent)
}
#if LANG_CXX11
inline void CreateVersionRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.CreateVersionRequest.parent)
}
#endif
inline void CreateVersionRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.CreateVersionRequest.parent)
}
inline void CreateVersionRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.CreateVersionRequest.parent)
}
inline ::std::string* CreateVersionRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.CreateVersionRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateVersionRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.CreateVersionRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateVersionRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.CreateVersionRequest.parent)
}

// .google.cloud.ml.v1.Version version = 2;
inline bool CreateVersionRequest::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline void CreateVersionRequest::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
inline const ::google::cloud::ml::v1::Version& CreateVersionRequest::version() const {
  const ::google::cloud::ml::v1::Version* p = version_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.CreateVersionRequest.version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::ml::v1::Version*>(
      &::google::cloud::ml::v1::_Version_default_instance_);
}
inline ::google::cloud::ml::v1::Version* CreateVersionRequest::release_version() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.CreateVersionRequest.version)
  
  ::google::cloud::ml::v1::Version* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::google::cloud::ml::v1::Version* CreateVersionRequest::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::google::cloud::ml::v1::Version;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.CreateVersionRequest.version)
  return version_;
}
inline void CreateVersionRequest::set_allocated_version(::google::cloud::ml::v1::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete version_;
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.CreateVersionRequest.version)
}

// -------------------------------------------------------------------

// ListVersionsRequest

// string parent = 1;
inline void ListVersionsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVersionsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListVersionsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListVersionsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListVersionsRequest.parent)
}
#if LANG_CXX11
inline void ListVersionsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListVersionsRequest.parent)
}
#endif
inline void ListVersionsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListVersionsRequest.parent)
}
inline void ListVersionsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListVersionsRequest.parent)
}
inline ::std::string* ListVersionsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListVersionsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVersionsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListVersionsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVersionsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListVersionsRequest.parent)
}

// string page_token = 4;
inline void ListVersionsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVersionsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListVersionsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListVersionsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListVersionsRequest.page_token)
}
#if LANG_CXX11
inline void ListVersionsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListVersionsRequest.page_token)
}
#endif
inline void ListVersionsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListVersionsRequest.page_token)
}
inline void ListVersionsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListVersionsRequest.page_token)
}
inline ::std::string* ListVersionsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListVersionsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVersionsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListVersionsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVersionsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListVersionsRequest.page_token)
}

// int32 page_size = 5;
inline void ListVersionsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListVersionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListVersionsRequest.page_size)
  return page_size_;
}
inline void ListVersionsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListVersionsRequest.page_size)
}

// -------------------------------------------------------------------

// ListVersionsResponse

// repeated .google.cloud.ml.v1.Version versions = 1;
inline int ListVersionsResponse::versions_size() const {
  return versions_.size();
}
inline void ListVersionsResponse::clear_versions() {
  versions_.Clear();
}
inline const ::google::cloud::ml::v1::Version& ListVersionsResponse::versions(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListVersionsResponse.versions)
  return versions_.Get(index);
}
inline ::google::cloud::ml::v1::Version* ListVersionsResponse::mutable_versions(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListVersionsResponse.versions)
  return versions_.Mutable(index);
}
inline ::google::cloud::ml::v1::Version* ListVersionsResponse::add_versions() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.ListVersionsResponse.versions)
  return versions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Version >*
ListVersionsResponse::mutable_versions() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.ListVersionsResponse.versions)
  return &versions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Version >&
ListVersionsResponse::versions() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.ListVersionsResponse.versions)
  return versions_;
}

// string next_page_token = 2;
inline void ListVersionsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVersionsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListVersionsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListVersionsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
}
#endif
inline void ListVersionsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
}
inline void ListVersionsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
}
inline ::std::string* ListVersionsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVersionsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVersionsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListVersionsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetVersionRequest

// string name = 1;
inline void GetVersionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.GetVersionRequest.name)
  return name_.GetNoArena();
}
inline void GetVersionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.GetVersionRequest.name)
}
#if LANG_CXX11
inline void GetVersionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.GetVersionRequest.name)
}
#endif
inline void GetVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.GetVersionRequest.name)
}
inline void GetVersionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.GetVersionRequest.name)
}
inline ::std::string* GetVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.GetVersionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.GetVersionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.GetVersionRequest.name)
}

// -------------------------------------------------------------------

// DeleteVersionRequest

// string name = 1;
inline void DeleteVersionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.DeleteVersionRequest.name)
  return name_.GetNoArena();
}
inline void DeleteVersionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.DeleteVersionRequest.name)
}
#if LANG_CXX11
inline void DeleteVersionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.DeleteVersionRequest.name)
}
#endif
inline void DeleteVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.DeleteVersionRequest.name)
}
inline void DeleteVersionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.DeleteVersionRequest.name)
}
inline ::std::string* DeleteVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.DeleteVersionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.DeleteVersionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.DeleteVersionRequest.name)
}

// -------------------------------------------------------------------

// SetDefaultVersionRequest

// string name = 1;
inline void SetDefaultVersionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDefaultVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.SetDefaultVersionRequest.name)
  return name_.GetNoArena();
}
inline void SetDefaultVersionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.SetDefaultVersionRequest.name)
}
#if LANG_CXX11
inline void SetDefaultVersionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.SetDefaultVersionRequest.name)
}
#endif
inline void SetDefaultVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.SetDefaultVersionRequest.name)
}
inline void SetDefaultVersionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.SetDefaultVersionRequest.name)
}
inline ::std::string* SetDefaultVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.SetDefaultVersionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDefaultVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.SetDefaultVersionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDefaultVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.SetDefaultVersionRequest.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace ml
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fml_2fv1_2fmodel_5fservice_2eproto__INCLUDED
