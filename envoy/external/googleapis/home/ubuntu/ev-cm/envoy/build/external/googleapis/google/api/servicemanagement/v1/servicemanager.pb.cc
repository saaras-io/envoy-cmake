// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/servicemanager.proto

#include "google/api/servicemanagement/v1/servicemanager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
class ListServicesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListServicesRequest>
      _instance;
} _ListServicesRequest_default_instance_;
class ListServicesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListServicesResponse>
      _instance;
} _ListServicesResponse_default_instance_;
class GetServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceRequest>
      _instance;
} _GetServiceRequest_default_instance_;
class CreateServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateServiceRequest>
      _instance;
} _CreateServiceRequest_default_instance_;
class DeleteServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteServiceRequest>
      _instance;
} _DeleteServiceRequest_default_instance_;
class UndeleteServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UndeleteServiceRequest>
      _instance;
} _UndeleteServiceRequest_default_instance_;
class UndeleteServiceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UndeleteServiceResponse>
      _instance;
} _UndeleteServiceResponse_default_instance_;
class GetServiceConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceConfigRequest>
      _instance;
} _GetServiceConfigRequest_default_instance_;
class ListServiceConfigsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListServiceConfigsRequest>
      _instance;
} _ListServiceConfigsRequest_default_instance_;
class ListServiceConfigsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListServiceConfigsResponse>
      _instance;
} _ListServiceConfigsResponse_default_instance_;
class CreateServiceConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateServiceConfigRequest>
      _instance;
} _CreateServiceConfigRequest_default_instance_;
class SubmitConfigSourceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubmitConfigSourceRequest>
      _instance;
} _SubmitConfigSourceRequest_default_instance_;
class SubmitConfigSourceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubmitConfigSourceResponse>
      _instance;
} _SubmitConfigSourceResponse_default_instance_;
class CreateServiceRolloutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateServiceRolloutRequest>
      _instance;
} _CreateServiceRolloutRequest_default_instance_;
class ListServiceRolloutsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListServiceRolloutsRequest>
      _instance;
} _ListServiceRolloutsRequest_default_instance_;
class ListServiceRolloutsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListServiceRolloutsResponse>
      _instance;
} _ListServiceRolloutsResponse_default_instance_;
class GetServiceRolloutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceRolloutRequest>
      _instance;
} _GetServiceRolloutRequest_default_instance_;
class EnableServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnableServiceRequest>
      _instance;
} _EnableServiceRequest_default_instance_;
class DisableServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisableServiceRequest>
      _instance;
} _DisableServiceRequest_default_instance_;
class GenerateConfigReportRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateConfigReportRequest>
      _instance;
} _GenerateConfigReportRequest_default_instance_;
class GenerateConfigReportResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateConfigReportResponse>
      _instance;
} _GenerateConfigReportResponse_default_instance_;
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto {
void InitDefaultsListServicesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServicesRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServicesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServicesRequest::InitAsDefaultInstance();
}

void InitDefaultsListServicesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListServicesRequestImpl);
}

void InitDefaultsListServicesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsManagedService();
  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServicesResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServicesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServicesResponse::InitAsDefaultInstance();
}

void InitDefaultsListServicesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListServicesResponseImpl);
}

void InitDefaultsGetServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_GetServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GetServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GetServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsGetServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServiceRequestImpl);
}

void InitDefaultsCreateServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsManagedService();
  {
    void* ptr = &::google::api::servicemanagement::v1::_CreateServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::CreateServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::CreateServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateServiceRequestImpl);
}

void InitDefaultsDeleteServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_DeleteServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::DeleteServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::DeleteServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteServiceRequestImpl);
}

void InitDefaultsUndeleteServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_UndeleteServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::UndeleteServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::UndeleteServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsUndeleteServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUndeleteServiceRequestImpl);
}

void InitDefaultsUndeleteServiceResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsManagedService();
  {
    void* ptr = &::google::api::servicemanagement::v1::_UndeleteServiceResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::UndeleteServiceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::UndeleteServiceResponse::InitAsDefaultInstance();
}

void InitDefaultsUndeleteServiceResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUndeleteServiceResponseImpl);
}

void InitDefaultsGetServiceConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_GetServiceConfigRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GetServiceConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GetServiceConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsGetServiceConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServiceConfigRequestImpl);
}

void InitDefaultsListServiceConfigsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceConfigsRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceConfigsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceConfigsRequest::InitAsDefaultInstance();
}

void InitDefaultsListServiceConfigsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListServiceConfigsRequestImpl);
}

void InitDefaultsListServiceConfigsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservice_2eproto::InitDefaultsService();
  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceConfigsResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceConfigsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceConfigsResponse::InitAsDefaultInstance();
}

void InitDefaultsListServiceConfigsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListServiceConfigsResponseImpl);
}

void InitDefaultsCreateServiceConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservice_2eproto::InitDefaultsService();
  {
    void* ptr = &::google::api::servicemanagement::v1::_CreateServiceConfigRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::CreateServiceConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::CreateServiceConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateServiceConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateServiceConfigRequestImpl);
}

void InitDefaultsSubmitConfigSourceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsConfigSource();
  {
    void* ptr = &::google::api::servicemanagement::v1::_SubmitConfigSourceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::SubmitConfigSourceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::SubmitConfigSourceRequest::InitAsDefaultInstance();
}

void InitDefaultsSubmitConfigSourceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubmitConfigSourceRequestImpl);
}

void InitDefaultsSubmitConfigSourceResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservice_2eproto::InitDefaultsService();
  {
    void* ptr = &::google::api::servicemanagement::v1::_SubmitConfigSourceResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::SubmitConfigSourceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::SubmitConfigSourceResponse::InitAsDefaultInstance();
}

void InitDefaultsSubmitConfigSourceResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubmitConfigSourceResponseImpl);
}

void InitDefaultsCreateServiceRolloutRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsRollout();
  {
    void* ptr = &::google::api::servicemanagement::v1::_CreateServiceRolloutRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::CreateServiceRolloutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::CreateServiceRolloutRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateServiceRolloutRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateServiceRolloutRequestImpl);
}

void InitDefaultsListServiceRolloutsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceRolloutsRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceRolloutsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceRolloutsRequest::InitAsDefaultInstance();
}

void InitDefaultsListServiceRolloutsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListServiceRolloutsRequestImpl);
}

void InitDefaultsListServiceRolloutsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsRollout();
  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceRolloutsResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceRolloutsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceRolloutsResponse::InitAsDefaultInstance();
}

void InitDefaultsListServiceRolloutsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListServiceRolloutsResponseImpl);
}

void InitDefaultsGetServiceRolloutRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_GetServiceRolloutRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GetServiceRolloutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GetServiceRolloutRequest::InitAsDefaultInstance();
}

void InitDefaultsGetServiceRolloutRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServiceRolloutRequestImpl);
}

void InitDefaultsEnableServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_EnableServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::EnableServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::EnableServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsEnableServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnableServiceRequestImpl);
}

void InitDefaultsDisableServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::servicemanagement::v1::_DisableServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::DisableServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::DisableServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsDisableServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDisableServiceRequestImpl);
}

void InitDefaultsGenerateConfigReportRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GenerateConfigReportRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GenerateConfigReportRequest::InitAsDefaultInstance();
}

void InitDefaultsGenerateConfigReportRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenerateConfigReportRequestImpl);
}

void InitDefaultsGenerateConfigReportResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsChangeReport();
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::InitDefaultsDiagnostic();
  {
    void* ptr = &::google::api::servicemanagement::v1::_GenerateConfigReportResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GenerateConfigReportResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GenerateConfigReportResponse::InitAsDefaultInstance();
}

void InitDefaultsGenerateConfigReportResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenerateConfigReportResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, producer_project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, consumer_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRequest, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRequest, service_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::DeleteServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::DeleteServiceRequest, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceRequest, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceResponse, service_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, service_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, service_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, config_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, validate_only_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceResponse, service_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, rollout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, rollouts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, rollout_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::EnableServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::EnableServiceRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::EnableServiceRequest, consumer_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::DisableServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::DisableServiceRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::DisableServiceRequest, consumer_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, new_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, old_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, change_reports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, diagnostics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::servicemanagement::v1::ListServicesRequest)},
  { 9, -1, sizeof(::google::api::servicemanagement::v1::ListServicesResponse)},
  { 16, -1, sizeof(::google::api::servicemanagement::v1::GetServiceRequest)},
  { 22, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceRequest)},
  { 28, -1, sizeof(::google::api::servicemanagement::v1::DeleteServiceRequest)},
  { 34, -1, sizeof(::google::api::servicemanagement::v1::UndeleteServiceRequest)},
  { 40, -1, sizeof(::google::api::servicemanagement::v1::UndeleteServiceResponse)},
  { 46, -1, sizeof(::google::api::servicemanagement::v1::GetServiceConfigRequest)},
  { 54, -1, sizeof(::google::api::servicemanagement::v1::ListServiceConfigsRequest)},
  { 62, -1, sizeof(::google::api::servicemanagement::v1::ListServiceConfigsResponse)},
  { 69, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceConfigRequest)},
  { 76, -1, sizeof(::google::api::servicemanagement::v1::SubmitConfigSourceRequest)},
  { 84, -1, sizeof(::google::api::servicemanagement::v1::SubmitConfigSourceResponse)},
  { 90, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceRolloutRequest)},
  { 97, -1, sizeof(::google::api::servicemanagement::v1::ListServiceRolloutsRequest)},
  { 106, -1, sizeof(::google::api::servicemanagement::v1::ListServiceRolloutsResponse)},
  { 113, -1, sizeof(::google::api::servicemanagement::v1::GetServiceRolloutRequest)},
  { 120, -1, sizeof(::google::api::servicemanagement::v1::EnableServiceRequest)},
  { 127, -1, sizeof(::google::api::servicemanagement::v1::DisableServiceRequest)},
  { 134, -1, sizeof(::google::api::servicemanagement::v1::GenerateConfigReportRequest)},
  { 141, -1, sizeof(::google::api::servicemanagement::v1::GenerateConfigReportResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_ListServicesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_ListServicesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_GetServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_CreateServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_DeleteServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_UndeleteServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_UndeleteServiceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_GetServiceConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_ListServiceConfigsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_ListServiceConfigsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_CreateServiceConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_SubmitConfigSourceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_SubmitConfigSourceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_CreateServiceRolloutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_ListServiceRolloutsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_ListServiceRolloutsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_GetServiceRolloutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_EnableServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_DisableServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicemanagement::v1::_GenerateConfigReportResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/api/servicemanagement/v1/servicemanager.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4google/api/servicemanagement/v1/servic"
      "emanager.proto\022\037google.api.servicemanage"
      "ment.v1\032\034google/api/annotations.proto\032\025g"
      "oogle/api/auth.proto\032\030google/api/service"
      ".proto\032/google/api/servicemanagement/v1/"
      "resources.proto\032#google/longrunning/oper"
      "ations.proto\032\031google/protobuf/any.proto\032"
      " google/protobuf/field_mask.proto\032\034googl"
      "e/protobuf/struct.proto\032\027google/rpc/stat"
      "us.proto\"n\n\023ListServicesRequest\022\033\n\023produ"
      "cer_project_id\030\001 \001(\t\022\021\n\tpage_size\030\005 \001(\005\022"
      "\022\n\npage_token\030\006 \001(\t\022\023\n\013consumer_id\030\007 \001(\t"
      "\"r\n\024ListServicesResponse\022A\n\010services\030\001 \003"
      "(\0132/.google.api.servicemanagement.v1.Man"
      "agedService\022\027\n\017next_page_token\030\002 \001(\t\")\n\021"
      "GetServiceRequest\022\024\n\014service_name\030\001 \001(\t\""
      "X\n\024CreateServiceRequest\022@\n\007service\030\001 \001(\013"
      "2/.google.api.servicemanagement.v1.Manag"
      "edService\",\n\024DeleteServiceRequest\022\024\n\014ser"
      "vice_name\030\001 \001(\t\".\n\026UndeleteServiceReques"
      "t\022\024\n\014service_name\030\001 \001(\t\"[\n\027UndeleteServi"
      "ceResponse\022@\n\007service\030\001 \001(\0132/.google.api"
      ".servicemanagement.v1.ManagedService\"\270\001\n"
      "\027GetServiceConfigRequest\022\024\n\014service_name"
      "\030\001 \001(\t\022\021\n\tconfig_id\030\002 \001(\t\022Q\n\004view\030\003 \001(\0162"
      "C.google.api.servicemanagement.v1.GetSer"
      "viceConfigRequest.ConfigView\"!\n\nConfigVi"
      "ew\022\t\n\005BASIC\020\000\022\010\n\004FULL\020\001\"X\n\031ListServiceCo"
      "nfigsRequest\022\024\n\014service_name\030\001 \001(\t\022\022\n\npa"
      "ge_token\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\"c\n\032Lis"
      "tServiceConfigsResponse\022,\n\017service_confi"
      "gs\030\001 \003(\0132\023.google.api.Service\022\027\n\017next_pa"
      "ge_token\030\002 \001(\t\"_\n\032CreateServiceConfigReq"
      "uest\022\024\n\014service_name\030\001 \001(\t\022+\n\016service_co"
      "nfig\030\002 \001(\0132\023.google.api.Service\"\216\001\n\031Subm"
      "itConfigSourceRequest\022\024\n\014service_name\030\001 "
      "\001(\t\022D\n\rconfig_source\030\002 \001(\0132-.google.api."
      "servicemanagement.v1.ConfigSource\022\025\n\rval"
      "idate_only\030\003 \001(\010\"I\n\032SubmitConfigSourceRe"
      "sponse\022+\n\016service_config\030\001 \001(\0132\023.google."
      "api.Service\"n\n\033CreateServiceRolloutReque"
      "st\022\024\n\014service_name\030\001 \001(\t\0229\n\007rollout\030\002 \001("
      "\0132(.google.api.servicemanagement.v1.Roll"
      "out\"i\n\032ListServiceRolloutsRequest\022\024\n\014ser"
      "vice_name\030\001 \001(\t\022\022\n\npage_token\030\002 \001(\t\022\021\n\tp"
      "age_size\030\003 \001(\005\022\016\n\006filter\030\004 \001(\t\"r\n\033ListSe"
      "rviceRolloutsResponse\022:\n\010rollouts\030\001 \003(\0132"
      "(.google.api.servicemanagement.v1.Rollou"
      "t\022\027\n\017next_page_token\030\002 \001(\t\"D\n\030GetService"
      "RolloutRequest\022\024\n\014service_name\030\001 \001(\t\022\022\n\n"
      "rollout_id\030\002 \001(\t\"A\n\024EnableServiceRequest"
      "\022\024\n\014service_name\030\001 \001(\t\022\023\n\013consumer_id\030\002 "
      "\001(\t\"B\n\025DisableServiceRequest\022\024\n\014service_"
      "name\030\001 \001(\t\022\023\n\013consumer_id\030\002 \001(\t\"q\n\033Gener"
      "ateConfigReportRequest\022(\n\nnew_config\030\001 \001"
      "(\0132\024.google.protobuf.Any\022(\n\nold_config\030\002"
      " \001(\0132\024.google.protobuf.Any\"\311\001\n\034GenerateC"
      "onfigReportResponse\022\024\n\014service_name\030\001 \001("
      "\t\022\n\n\002id\030\002 \001(\t\022E\n\016change_reports\030\003 \003(\0132-."
      "google.api.servicemanagement.v1.ChangeRe"
      "port\022@\n\013diagnostics\030\004 \003(\0132+.google.api.s"
      "ervicemanagement.v1.Diagnostic2\256\023\n\016Servi"
      "ceManager\022\221\001\n\014ListServices\0224.google.api."
      "servicemanagement.v1.ListServicesRequest"
      "\0325.google.api.servicemanagement.v1.ListS"
      "ervicesResponse\"\024\202\323\344\223\002\016\022\014/v1/services\022\226\001"
      "\n\nGetService\0222.google.api.servicemanagem"
      "ent.v1.GetServiceRequest\032/.google.api.se"
      "rvicemanagement.v1.ManagedService\"#\202\323\344\223\002"
      "\035\022\033/v1/services/{service_name}\022\204\001\n\rCreat"
      "eService\0225.google.api.servicemanagement."
      "v1.CreateServiceRequest\032\035.google.longrun"
      "ning.Operation\"\035\202\323\344\223\002\027\"\014/v1/services:\007se"
      "rvice\022\212\001\n\rDeleteService\0225.google.api.ser"
      "vicemanagement.v1.DeleteServiceRequest\032\035"
      ".google.longrunning.Operation\"#\202\323\344\223\002\035*\033/"
      "v1/services/{service_name}\022\227\001\n\017UndeleteS"
      "ervice\0227.google.api.servicemanagement.v1"
      ".UndeleteServiceRequest\032\035.google.longrun"
      "ning.Operation\",\202\323\344\223\002&\"$/v1/services/{se"
      "rvice_name}:undelete\022\272\001\n\022ListServiceConf"
      "igs\022:.google.api.servicemanagement.v1.Li"
      "stServiceConfigsRequest\032;.google.api.ser"
      "vicemanagement.v1.ListServiceConfigsResp"
      "onse\"+\202\323\344\223\002%\022#/v1/services/{service_name"
      "}/configs\022\232\001\n\020GetServiceConfig\0228.google."
      "api.servicemanagement.v1.GetServiceConfi"
      "gRequest\032\023.google.api.Service\"7\202\323\344\223\0021\022//"
      "v1/services/{service_name}/configs/{conf"
      "ig_id}\022\244\001\n\023CreateServiceConfig\022;.google."
      "api.servicemanagement.v1.CreateServiceCo"
      "nfigRequest\032\023.google.api.Service\";\202\323\344\223\0025"
      "\"#/v1/services/{service_name}/configs:\016s"
      "ervice_config\022\246\001\n\022SubmitConfigSource\022:.g"
      "oogle.api.servicemanagement.v1.SubmitCon"
      "figSourceRequest\032\035.google.longrunning.Op"
      "eration\"5\202\323\344\223\002/\"*/v1/services/{service_n"
      "ame}/configs:submit:\001*\022\276\001\n\023ListServiceRo"
      "llouts\022;.google.api.servicemanagement.v1"
      ".ListServiceRolloutsRequest\032<.google.api"
      ".servicemanagement.v1.ListServiceRollout"
      "sResponse\",\202\323\344\223\002&\022$/v1/services/{service"
      "_name}/rollouts\022\263\001\n\021GetServiceRollout\0229."
      "google.api.servicemanagement.v1.GetServi"
      "ceRolloutRequest\032(.google.api.serviceman"
      "agement.v1.Rollout\"9\202\323\344\223\0023\0221/v1/services"
      "/{service_name}/rollouts/{rollout_id}\022\252\001"
      "\n\024CreateServiceRollout\022<.google.api.serv"
      "icemanagement.v1.CreateServiceRolloutReq"
      "uest\032\035.google.longrunning.Operation\"5\202\323\344"
      "\223\002/\"$/v1/services/{service_name}/rollout"
      "s:\007rollout\022\301\001\n\024GenerateConfigReport\022<.go"
      "ogle.api.servicemanagement.v1.GenerateCo"
      "nfigReportRequest\032=.google.api.servicema"
      "nagement.v1.GenerateConfigReportResponse"
      "\",\202\323\344\223\002&\"!/v1/services:generateConfigRep"
      "ort:\001*\022\224\001\n\rEnableService\0225.google.api.se"
      "rvicemanagement.v1.EnableServiceRequest\032"
      "\035.google.longrunning.Operation\"-\202\323\344\223\002\'\"\""
      "/v1/services/{service_name}:enable:\001*\022\227\001"
      "\n\016DisableService\0226.google.api.serviceman"
      "agement.v1.DisableServiceRequest\032\035.googl"
      "e.longrunning.Operation\".\202\323\344\223\002(\"#/v1/ser"
      "vices/{service_name}:disable:\001*B\225\001\n#com."
      "google.api.servicemanagement.v1B\023Service"
      "ManagerProtoP\001ZPgoogle.golang.org/genpro"
      "to/googleapis/api/servicemanagement/v1;s"
      "ervicemanagement\242\002\004GASMb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicemanagement/v1/servicemanager.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fauth_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fservice_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
const ::google::protobuf::EnumDescriptor* GetServiceConfigRequest_ConfigView_descriptor() {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_enum_descriptors[0];
}
bool GetServiceConfigRequest_ConfigView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetServiceConfigRequest_ConfigView GetServiceConfigRequest::BASIC;
const GetServiceConfigRequest_ConfigView GetServiceConfigRequest::FULL;
const GetServiceConfigRequest_ConfigView GetServiceConfigRequest::ConfigView_MIN;
const GetServiceConfigRequest_ConfigView GetServiceConfigRequest::ConfigView_MAX;
const int GetServiceConfigRequest::ConfigView_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ListServicesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListServicesRequest::kProducerProjectIdFieldNumber;
const int ListServicesRequest::kPageSizeFieldNumber;
const int ListServicesRequest::kPageTokenFieldNumber;
const int ListServicesRequest::kConsumerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServicesRequest::ListServicesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServicesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServicesRequest)
}
ListServicesRequest::ListServicesRequest(const ListServicesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  producer_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.producer_project_id().size() > 0) {
    producer_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consumer_id().size() > 0) {
    consumer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServicesRequest)
}

void ListServicesRequest::SharedCtor() {
  producer_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListServicesRequest::~ListServicesRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServicesRequest)
  SharedDtor();
}

void ListServicesRequest::SharedDtor() {
  producer_project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListServicesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServicesRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListServicesRequest& ListServicesRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServicesRequest();
  return *internal_default_instance();
}

ListServicesRequest* ListServicesRequest::New(::google::protobuf::Arena* arena) const {
  ListServicesRequest* n = new ListServicesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  producer_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListServicesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.ListServicesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string producer_project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServicesRequest.producer_project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServicesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string consumer_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consumer_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServicesRequest.consumer_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.ListServicesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.ListServicesRequest)
  return false;
#undef DO_
}

void ListServicesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.ListServicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string producer_project_id = 1;
  if (this->producer_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.producer_project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->producer_project_id(), output);
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->page_size(), output);
  }

  // string page_token = 6;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->page_token(), output);
  }

  // string consumer_id = 7;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.consumer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->consumer_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.ListServicesRequest)
}

::google::protobuf::uint8* ListServicesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string producer_project_id = 1;
  if (this->producer_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.producer_project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->producer_project_id(), target);
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->page_size(), target);
  }

  // string page_token = 6;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->page_token(), target);
  }

  // string consumer_id = 7;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.consumer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->consumer_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServicesRequest)
  return target;
}

size_t ListServicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServicesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string producer_project_id = 1;
  if (this->producer_project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->producer_project_id());
  }

  // string page_token = 6;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string consumer_id = 7;
  if (this->consumer_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consumer_id());
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServicesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServicesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListServicesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServicesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServicesRequest)
    MergeFrom(*source);
  }
}

void ListServicesRequest::MergeFrom(const ListServicesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.producer_project_id().size() > 0) {

    producer_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.consumer_id().size() > 0) {

    consumer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListServicesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServicesRequest::CopyFrom(const ListServicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesRequest::IsInitialized() const {
  return true;
}

void ListServicesRequest::Swap(ListServicesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServicesRequest::InternalSwap(ListServicesRequest* other) {
  using std::swap;
  producer_project_id_.Swap(&other->producer_project_id_);
  page_token_.Swap(&other->page_token_);
  consumer_id_.Swap(&other->consumer_id_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServicesRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListServicesResponse::InitAsDefaultInstance() {
}
void ListServicesResponse::clear_services() {
  services_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListServicesResponse::kServicesFieldNumber;
const int ListServicesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServicesResponse::ListServicesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServicesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServicesResponse)
}
ListServicesResponse::ListServicesResponse(const ListServicesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      services_(from.services_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServicesResponse)
}

void ListServicesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListServicesResponse::~ListServicesResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServicesResponse)
  SharedDtor();
}

void ListServicesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListServicesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServicesResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListServicesResponse& ListServicesResponse::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServicesResponse();
  return *internal_default_instance();
}

ListServicesResponse* ListServicesResponse::New(::google::protobuf::Arena* arena) const {
  ListServicesResponse* n = new ListServicesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListServicesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.ListServicesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServicesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.ListServicesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.ListServicesResponse)
  return false;
#undef DO_
}

void ListServicesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.ListServicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->services(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.ListServicesResponse)
}

::google::protobuf::uint8* ListServicesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->services(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServicesResponse)
  return target;
}

size_t ListServicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServicesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServicesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServicesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListServicesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServicesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServicesResponse)
    MergeFrom(*source);
  }
}

void ListServicesResponse::MergeFrom(const ListServicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListServicesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServicesResponse::CopyFrom(const ListServicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesResponse::IsInitialized() const {
  return true;
}

void ListServicesResponse::Swap(ListServicesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServicesResponse::InternalSwap(ListServicesResponse* other) {
  using std::swap;
  services_.InternalSwap(&other->services_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServicesResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceRequest::GetServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGetServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GetServiceRequest)
}
GetServiceRequest::GetServiceRequest(const GetServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceRequest)
}

void GetServiceRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetServiceRequest::~GetServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceRequest)
  SharedDtor();
}

void GetServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceRequest& GetServiceRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGetServiceRequest();
  return *internal_default_instance();
}

GetServiceRequest* GetServiceRequest::New(::google::protobuf::Arena* arena) const {
  GetServiceRequest* n = new GetServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.GetServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.GetServiceRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.GetServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.GetServiceRequest)
  return false;
#undef DO_
}

void GetServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.GetServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.GetServiceRequest)
}

::google::protobuf::uint8* GetServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceRequest)
  return target;
}

size_t GetServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GetServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GetServiceRequest)
    MergeFrom(*source);
  }
}

void GetServiceRequest::MergeFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void GetServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceRequest::CopyFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRequest::IsInitialized() const {
  return true;
}

void GetServiceRequest::Swap(GetServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceRequest::InternalSwap(GetServiceRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateServiceRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_CreateServiceRequest_default_instance_._instance.get_mutable()->service_ = const_cast< ::google::api::servicemanagement::v1::ManagedService*>(
      ::google::api::servicemanagement::v1::ManagedService::internal_default_instance());
}
void CreateServiceRequest::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateServiceRequest::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateServiceRequest::CreateServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsCreateServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.CreateServiceRequest)
}
CreateServiceRequest::CreateServiceRequest(const CreateServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_service()) {
    service_ = new ::google::api::servicemanagement::v1::ManagedService(*from.service_);
  } else {
    service_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceRequest)
}

void CreateServiceRequest::SharedCtor() {
  service_ = NULL;
  _cached_size_ = 0;
}

CreateServiceRequest::~CreateServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceRequest)
  SharedDtor();
}

void CreateServiceRequest::SharedDtor() {
  if (this != internal_default_instance()) delete service_;
}

void CreateServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateServiceRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateServiceRequest& CreateServiceRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsCreateServiceRequest();
  return *internal_default_instance();
}

CreateServiceRequest* CreateServiceRequest::New(::google::protobuf::Arena* arena) const {
  CreateServiceRequest* n = new CreateServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.CreateServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.servicemanagement.v1.ManagedService service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.CreateServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.CreateServiceRequest)
  return false;
#undef DO_
}

void CreateServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.CreateServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->service_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.CreateServiceRequest)
}

::google::protobuf::uint8* CreateServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->service_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceRequest)
  return target;
}

size_t CreateServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.CreateServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.CreateServiceRequest)
    MergeFrom(*source);
  }
}

void CreateServiceRequest::MergeFrom(const CreateServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service()) {
    mutable_service()->::google::api::servicemanagement::v1::ManagedService::MergeFrom(from.service());
  }
}

void CreateServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateServiceRequest::CopyFrom(const CreateServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceRequest::IsInitialized() const {
  return true;
}

void CreateServiceRequest::Swap(CreateServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateServiceRequest::InternalSwap(CreateServiceRequest* other) {
  using std::swap;
  swap(service_, other->service_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateServiceRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteServiceRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteServiceRequest::DeleteServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsDeleteServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.DeleteServiceRequest)
}
DeleteServiceRequest::DeleteServiceRequest(const DeleteServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.DeleteServiceRequest)
}

void DeleteServiceRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteServiceRequest::~DeleteServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.DeleteServiceRequest)
  SharedDtor();
}

void DeleteServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteServiceRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteServiceRequest& DeleteServiceRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsDeleteServiceRequest();
  return *internal_default_instance();
}

DeleteServiceRequest* DeleteServiceRequest::New(::google::protobuf::Arena* arena) const {
  DeleteServiceRequest* n = new DeleteServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.DeleteServiceRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.DeleteServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.DeleteServiceRequest)
  return false;
#undef DO_
}

void DeleteServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DeleteServiceRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.DeleteServiceRequest)
}

::google::protobuf::uint8* DeleteServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DeleteServiceRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.DeleteServiceRequest)
  return target;
}

size_t DeleteServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.DeleteServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.DeleteServiceRequest)
    MergeFrom(*source);
  }
}

void DeleteServiceRequest::MergeFrom(const DeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void DeleteServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteServiceRequest::CopyFrom(const DeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteServiceRequest::IsInitialized() const {
  return true;
}

void DeleteServiceRequest::Swap(DeleteServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteServiceRequest::InternalSwap(DeleteServiceRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteServiceRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UndeleteServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UndeleteServiceRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndeleteServiceRequest::UndeleteServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsUndeleteServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
}
UndeleteServiceRequest::UndeleteServiceRequest(const UndeleteServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
}

void UndeleteServiceRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UndeleteServiceRequest::~UndeleteServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
  SharedDtor();
}

void UndeleteServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UndeleteServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UndeleteServiceRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UndeleteServiceRequest& UndeleteServiceRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsUndeleteServiceRequest();
  return *internal_default_instance();
}

UndeleteServiceRequest* UndeleteServiceRequest::New(::google::protobuf::Arena* arena) const {
  UndeleteServiceRequest* n = new UndeleteServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UndeleteServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UndeleteServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.UndeleteServiceRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.UndeleteServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.UndeleteServiceRequest)
  return false;
#undef DO_
}

void UndeleteServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.UndeleteServiceRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.UndeleteServiceRequest)
}

::google::protobuf::uint8* UndeleteServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.UndeleteServiceRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.UndeleteServiceRequest)
  return target;
}

size_t UndeleteServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UndeleteServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UndeleteServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UndeleteServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.UndeleteServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.UndeleteServiceRequest)
    MergeFrom(*source);
  }
}

void UndeleteServiceRequest::MergeFrom(const UndeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void UndeleteServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndeleteServiceRequest::CopyFrom(const UndeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteServiceRequest::IsInitialized() const {
  return true;
}

void UndeleteServiceRequest::Swap(UndeleteServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UndeleteServiceRequest::InternalSwap(UndeleteServiceRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UndeleteServiceRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UndeleteServiceResponse::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_UndeleteServiceResponse_default_instance_._instance.get_mutable()->service_ = const_cast< ::google::api::servicemanagement::v1::ManagedService*>(
      ::google::api::servicemanagement::v1::ManagedService::internal_default_instance());
}
void UndeleteServiceResponse::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UndeleteServiceResponse::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndeleteServiceResponse::UndeleteServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsUndeleteServiceResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
}
UndeleteServiceResponse::UndeleteServiceResponse(const UndeleteServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_service()) {
    service_ = new ::google::api::servicemanagement::v1::ManagedService(*from.service_);
  } else {
    service_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
}

void UndeleteServiceResponse::SharedCtor() {
  service_ = NULL;
  _cached_size_ = 0;
}

UndeleteServiceResponse::~UndeleteServiceResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
  SharedDtor();
}

void UndeleteServiceResponse::SharedDtor() {
  if (this != internal_default_instance()) delete service_;
}

void UndeleteServiceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UndeleteServiceResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UndeleteServiceResponse& UndeleteServiceResponse::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsUndeleteServiceResponse();
  return *internal_default_instance();
}

UndeleteServiceResponse* UndeleteServiceResponse::New(::google::protobuf::Arena* arena) const {
  UndeleteServiceResponse* n = new UndeleteServiceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UndeleteServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
  _internal_metadata_.Clear();
}

bool UndeleteServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.servicemanagement.v1.ManagedService service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.UndeleteServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.UndeleteServiceResponse)
  return false;
#undef DO_
}

void UndeleteServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->service_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.UndeleteServiceResponse)
}

::google::protobuf::uint8* UndeleteServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->service_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.UndeleteServiceResponse)
  return target;
}

size_t UndeleteServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UndeleteServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UndeleteServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UndeleteServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.UndeleteServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.UndeleteServiceResponse)
    MergeFrom(*source);
  }
}

void UndeleteServiceResponse::MergeFrom(const UndeleteServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service()) {
    mutable_service()->::google::api::servicemanagement::v1::ManagedService::MergeFrom(from.service());
  }
}

void UndeleteServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndeleteServiceResponse::CopyFrom(const UndeleteServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteServiceResponse::IsInitialized() const {
  return true;
}

void UndeleteServiceResponse::Swap(UndeleteServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UndeleteServiceResponse::InternalSwap(UndeleteServiceResponse* other) {
  using std::swap;
  swap(service_, other->service_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UndeleteServiceResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServiceConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceConfigRequest::kServiceNameFieldNumber;
const int GetServiceConfigRequest::kConfigIdFieldNumber;
const int GetServiceConfigRequest::kViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceConfigRequest::GetServiceConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGetServiceConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
}
GetServiceConfigRequest::GetServiceConfigRequest(const GetServiceConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config_id().size() > 0) {
    config_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_id_);
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
}

void GetServiceConfigRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _cached_size_ = 0;
}

GetServiceConfigRequest::~GetServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
  SharedDtor();
}

void GetServiceConfigRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServiceConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceConfigRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceConfigRequest& GetServiceConfigRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGetServiceConfigRequest();
  return *internal_default_instance();
}

GetServiceConfigRequest* GetServiceConfigRequest::New(::google::protobuf::Arena* arena) const {
  GetServiceConfigRequest* n = new GetServiceConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _internal_metadata_.Clear();
}

bool GetServiceConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.GetServiceConfigRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_id().data(), static_cast<int>(this->config_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.GetServiceConfigRequest.config_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::api::servicemanagement::v1::GetServiceConfigRequest_ConfigView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.GetServiceConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.GetServiceConfigRequest)
  return false;
#undef DO_
}

void GetServiceConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // string config_id = 2;
  if (this->config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_id().data(), static_cast<int>(this->config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->config_id(), output);
  }

  // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.GetServiceConfigRequest)
}

::google::protobuf::uint8* GetServiceConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // string config_id = 2;
  if (this->config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_id().data(), static_cast<int>(this->config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->config_id(), target);
  }

  // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceConfigRequest)
  return target;
}

size_t GetServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string config_id = 2;
  if (this->config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_id());
  }

  // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GetServiceConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GetServiceConfigRequest)
    MergeFrom(*source);
  }
}

void GetServiceConfigRequest::MergeFrom(const GetServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.config_id().size() > 0) {

    config_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_id_);
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
}

void GetServiceConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceConfigRequest::CopyFrom(const GetServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceConfigRequest::IsInitialized() const {
  return true;
}

void GetServiceConfigRequest::Swap(GetServiceConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceConfigRequest::InternalSwap(GetServiceConfigRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  config_id_.Swap(&other->config_id_);
  swap(view_, other->view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceConfigRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListServiceConfigsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListServiceConfigsRequest::kServiceNameFieldNumber;
const int ListServiceConfigsRequest::kPageTokenFieldNumber;
const int ListServiceConfigsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServiceConfigsRequest::ListServiceConfigsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceConfigsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
}
ListServiceConfigsRequest::ListServiceConfigsRequest(const ListServiceConfigsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
}

void ListServiceConfigsRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListServiceConfigsRequest::~ListServiceConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  SharedDtor();
}

void ListServiceConfigsRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListServiceConfigsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServiceConfigsRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListServiceConfigsRequest& ListServiceConfigsRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceConfigsRequest();
  return *internal_default_instance();
}

ListServiceConfigsRequest* ListServiceConfigsRequest::New(::google::protobuf::Arena* arena) const {
  ListServiceConfigsRequest* n = new ListServiceConfigsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServiceConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListServiceConfigsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  return false;
#undef DO_
}

void ListServiceConfigsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.ListServiceConfigsRequest)
}

::google::protobuf::uint8* ListServiceConfigsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  return target;
}

size_t ListServiceConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServiceConfigsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceConfigsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListServiceConfigsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceConfigsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceConfigsRequest)
    MergeFrom(*source);
  }
}

void ListServiceConfigsRequest::MergeFrom(const ListServiceConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListServiceConfigsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceConfigsRequest::CopyFrom(const ListServiceConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceConfigsRequest::IsInitialized() const {
  return true;
}

void ListServiceConfigsRequest::Swap(ListServiceConfigsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServiceConfigsRequest::InternalSwap(ListServiceConfigsRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  page_token_.Swap(&other->page_token_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServiceConfigsRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListServiceConfigsResponse::InitAsDefaultInstance() {
}
void ListServiceConfigsResponse::clear_service_configs() {
  service_configs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListServiceConfigsResponse::kServiceConfigsFieldNumber;
const int ListServiceConfigsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServiceConfigsResponse::ListServiceConfigsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceConfigsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
}
ListServiceConfigsResponse::ListServiceConfigsResponse(const ListServiceConfigsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      service_configs_(from.service_configs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
}

void ListServiceConfigsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListServiceConfigsResponse::~ListServiceConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  SharedDtor();
}

void ListServiceConfigsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListServiceConfigsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServiceConfigsResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListServiceConfigsResponse& ListServiceConfigsResponse::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceConfigsResponse();
  return *internal_default_instance();
}

ListServiceConfigsResponse* ListServiceConfigsResponse::New(::google::protobuf::Arena* arena) const {
  ListServiceConfigsResponse* n = new ListServiceConfigsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServiceConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_configs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListServiceConfigsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.Service service_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_service_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  return false;
#undef DO_
}

void ListServiceConfigsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.Service service_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->service_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->service_configs(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.ListServiceConfigsResponse)
}

::google::protobuf::uint8* ListServiceConfigsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.Service service_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->service_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->service_configs(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  return target;
}

size_t ListServiceConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.Service service_configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->service_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->service_configs(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServiceConfigsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceConfigsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListServiceConfigsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceConfigsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceConfigsResponse)
    MergeFrom(*source);
  }
}

void ListServiceConfigsResponse::MergeFrom(const ListServiceConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_configs_.MergeFrom(from.service_configs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListServiceConfigsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceConfigsResponse::CopyFrom(const ListServiceConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceConfigsResponse::IsInitialized() const {
  return true;
}

void ListServiceConfigsResponse::Swap(ListServiceConfigsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServiceConfigsResponse::InternalSwap(ListServiceConfigsResponse* other) {
  using std::swap;
  service_configs_.InternalSwap(&other->service_configs_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServiceConfigsResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateServiceConfigRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_CreateServiceConfigRequest_default_instance_._instance.get_mutable()->service_config_ = const_cast< ::google::api::Service*>(
      ::google::api::Service::internal_default_instance());
}
void CreateServiceConfigRequest::clear_service_config() {
  if (GetArenaNoVirtual() == NULL && service_config_ != NULL) {
    delete service_config_;
  }
  service_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateServiceConfigRequest::kServiceNameFieldNumber;
const int CreateServiceConfigRequest::kServiceConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateServiceConfigRequest::CreateServiceConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsCreateServiceConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
}
CreateServiceConfigRequest::CreateServiceConfigRequest(const CreateServiceConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_service_config()) {
    service_config_ = new ::google::api::Service(*from.service_config_);
  } else {
    service_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
}

void CreateServiceConfigRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_ = NULL;
  _cached_size_ = 0;
}

CreateServiceConfigRequest::~CreateServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  SharedDtor();
}

void CreateServiceConfigRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete service_config_;
}

void CreateServiceConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateServiceConfigRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateServiceConfigRequest& CreateServiceConfigRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsCreateServiceConfigRequest();
  return *internal_default_instance();
}

CreateServiceConfigRequest* CreateServiceConfigRequest::New(::google::protobuf::Arena* arena) const {
  CreateServiceConfigRequest* n = new CreateServiceConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && service_config_ != NULL) {
    delete service_config_;
  }
  service_config_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateServiceConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Service service_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  return false;
#undef DO_
}

void CreateServiceConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // .google.api.Service service_config = 2;
  if (this->has_service_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->service_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.CreateServiceConfigRequest)
}

::google::protobuf::uint8* CreateServiceConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // .google.api.Service service_config = 2;
  if (this->has_service_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->service_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  return target;
}

size_t CreateServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // .google.api.Service service_config = 2;
  if (this->has_service_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateServiceConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateServiceConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateServiceConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.CreateServiceConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.CreateServiceConfigRequest)
    MergeFrom(*source);
  }
}

void CreateServiceConfigRequest::MergeFrom(const CreateServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_service_config()) {
    mutable_service_config()->::google::api::Service::MergeFrom(from.service_config());
  }
}

void CreateServiceConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateServiceConfigRequest::CopyFrom(const CreateServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceConfigRequest::IsInitialized() const {
  return true;
}

void CreateServiceConfigRequest::Swap(CreateServiceConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateServiceConfigRequest::InternalSwap(CreateServiceConfigRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  swap(service_config_, other->service_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateServiceConfigRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubmitConfigSourceRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_SubmitConfigSourceRequest_default_instance_._instance.get_mutable()->config_source_ = const_cast< ::google::api::servicemanagement::v1::ConfigSource*>(
      ::google::api::servicemanagement::v1::ConfigSource::internal_default_instance());
}
void SubmitConfigSourceRequest::clear_config_source() {
  if (GetArenaNoVirtual() == NULL && config_source_ != NULL) {
    delete config_source_;
  }
  config_source_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitConfigSourceRequest::kServiceNameFieldNumber;
const int SubmitConfigSourceRequest::kConfigSourceFieldNumber;
const int SubmitConfigSourceRequest::kValidateOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitConfigSourceRequest::SubmitConfigSourceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsSubmitConfigSourceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
}
SubmitConfigSourceRequest::SubmitConfigSourceRequest(const SubmitConfigSourceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_config_source()) {
    config_source_ = new ::google::api::servicemanagement::v1::ConfigSource(*from.config_source_);
  } else {
    config_source_ = NULL;
  }
  validate_only_ = from.validate_only_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
}

void SubmitConfigSourceRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validate_only_) -
      reinterpret_cast<char*>(&config_source_)) + sizeof(validate_only_));
  _cached_size_ = 0;
}

SubmitConfigSourceRequest::~SubmitConfigSourceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  SharedDtor();
}

void SubmitConfigSourceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_source_;
}

void SubmitConfigSourceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitConfigSourceRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitConfigSourceRequest& SubmitConfigSourceRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsSubmitConfigSourceRequest();
  return *internal_default_instance();
}

SubmitConfigSourceRequest* SubmitConfigSourceRequest::New(::google::protobuf::Arena* arena) const {
  SubmitConfigSourceRequest* n = new SubmitConfigSourceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitConfigSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_source_ != NULL) {
    delete config_source_;
  }
  config_source_ = NULL;
  validate_only_ = false;
  _internal_metadata_.Clear();
}

bool SubmitConfigSourceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicemanagement.v1.ConfigSource config_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool validate_only = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &validate_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  return false;
#undef DO_
}

void SubmitConfigSourceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // .google.api.servicemanagement.v1.ConfigSource config_source = 2;
  if (this->has_config_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_source_, output);
  }

  // bool validate_only = 3;
  if (this->validate_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->validate_only(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
}

::google::protobuf::uint8* SubmitConfigSourceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // .google.api.servicemanagement.v1.ConfigSource config_source = 2;
  if (this->has_config_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->config_source_, deterministic, target);
  }

  // bool validate_only = 3;
  if (this->validate_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->validate_only(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  return target;
}

size_t SubmitConfigSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // .google.api.servicemanagement.v1.ConfigSource config_source = 2;
  if (this->has_config_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_source_);
  }

  // bool validate_only = 3;
  if (this->validate_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitConfigSourceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitConfigSourceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitConfigSourceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
    MergeFrom(*source);
  }
}

void SubmitConfigSourceRequest::MergeFrom(const SubmitConfigSourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_config_source()) {
    mutable_config_source()->::google::api::servicemanagement::v1::ConfigSource::MergeFrom(from.config_source());
  }
  if (from.validate_only() != 0) {
    set_validate_only(from.validate_only());
  }
}

void SubmitConfigSourceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitConfigSourceRequest::CopyFrom(const SubmitConfigSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitConfigSourceRequest::IsInitialized() const {
  return true;
}

void SubmitConfigSourceRequest::Swap(SubmitConfigSourceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitConfigSourceRequest::InternalSwap(SubmitConfigSourceRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  swap(config_source_, other->config_source_);
  swap(validate_only_, other->validate_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitConfigSourceRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubmitConfigSourceResponse::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_SubmitConfigSourceResponse_default_instance_._instance.get_mutable()->service_config_ = const_cast< ::google::api::Service*>(
      ::google::api::Service::internal_default_instance());
}
void SubmitConfigSourceResponse::clear_service_config() {
  if (GetArenaNoVirtual() == NULL && service_config_ != NULL) {
    delete service_config_;
  }
  service_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitConfigSourceResponse::kServiceConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitConfigSourceResponse::SubmitConfigSourceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsSubmitConfigSourceResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
}
SubmitConfigSourceResponse::SubmitConfigSourceResponse(const SubmitConfigSourceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_service_config()) {
    service_config_ = new ::google::api::Service(*from.service_config_);
  } else {
    service_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
}

void SubmitConfigSourceResponse::SharedCtor() {
  service_config_ = NULL;
  _cached_size_ = 0;
}

SubmitConfigSourceResponse::~SubmitConfigSourceResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  SharedDtor();
}

void SubmitConfigSourceResponse::SharedDtor() {
  if (this != internal_default_instance()) delete service_config_;
}

void SubmitConfigSourceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitConfigSourceResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitConfigSourceResponse& SubmitConfigSourceResponse::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsSubmitConfigSourceResponse();
  return *internal_default_instance();
}

SubmitConfigSourceResponse* SubmitConfigSourceResponse::New(::google::protobuf::Arena* arena) const {
  SubmitConfigSourceResponse* n = new SubmitConfigSourceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitConfigSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && service_config_ != NULL) {
    delete service_config_;
  }
  service_config_ = NULL;
  _internal_metadata_.Clear();
}

bool SubmitConfigSourceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.Service service_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  return false;
#undef DO_
}

void SubmitConfigSourceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.Service service_config = 1;
  if (this->has_service_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->service_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
}

::google::protobuf::uint8* SubmitConfigSourceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.Service service_config = 1;
  if (this->has_service_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->service_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  return target;
}

size_t SubmitConfigSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.Service service_config = 1;
  if (this->has_service_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitConfigSourceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitConfigSourceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitConfigSourceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
    MergeFrom(*source);
  }
}

void SubmitConfigSourceResponse::MergeFrom(const SubmitConfigSourceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_config()) {
    mutable_service_config()->::google::api::Service::MergeFrom(from.service_config());
  }
}

void SubmitConfigSourceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitConfigSourceResponse::CopyFrom(const SubmitConfigSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitConfigSourceResponse::IsInitialized() const {
  return true;
}

void SubmitConfigSourceResponse::Swap(SubmitConfigSourceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitConfigSourceResponse::InternalSwap(SubmitConfigSourceResponse* other) {
  using std::swap;
  swap(service_config_, other->service_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitConfigSourceResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateServiceRolloutRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_CreateServiceRolloutRequest_default_instance_._instance.get_mutable()->rollout_ = const_cast< ::google::api::servicemanagement::v1::Rollout*>(
      ::google::api::servicemanagement::v1::Rollout::internal_default_instance());
}
void CreateServiceRolloutRequest::clear_rollout() {
  if (GetArenaNoVirtual() == NULL && rollout_ != NULL) {
    delete rollout_;
  }
  rollout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateServiceRolloutRequest::kServiceNameFieldNumber;
const int CreateServiceRolloutRequest::kRolloutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateServiceRolloutRequest::CreateServiceRolloutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsCreateServiceRolloutRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
}
CreateServiceRolloutRequest::CreateServiceRolloutRequest(const CreateServiceRolloutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_rollout()) {
    rollout_ = new ::google::api::servicemanagement::v1::Rollout(*from.rollout_);
  } else {
    rollout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
}

void CreateServiceRolloutRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rollout_ = NULL;
  _cached_size_ = 0;
}

CreateServiceRolloutRequest::~CreateServiceRolloutRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  SharedDtor();
}

void CreateServiceRolloutRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rollout_;
}

void CreateServiceRolloutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateServiceRolloutRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateServiceRolloutRequest& CreateServiceRolloutRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsCreateServiceRolloutRequest();
  return *internal_default_instance();
}

CreateServiceRolloutRequest* CreateServiceRolloutRequest::New(::google::protobuf::Arena* arena) const {
  CreateServiceRolloutRequest* n = new CreateServiceRolloutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateServiceRolloutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rollout_ != NULL) {
    delete rollout_;
  }
  rollout_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateServiceRolloutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicemanagement.v1.Rollout rollout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rollout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  return false;
#undef DO_
}

void CreateServiceRolloutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // .google.api.servicemanagement.v1.Rollout rollout = 2;
  if (this->has_rollout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rollout_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
}

::google::protobuf::uint8* CreateServiceRolloutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // .google.api.servicemanagement.v1.Rollout rollout = 2;
  if (this->has_rollout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->rollout_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  return target;
}

size_t CreateServiceRolloutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // .google.api.servicemanagement.v1.Rollout rollout = 2;
  if (this->has_rollout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rollout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateServiceRolloutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateServiceRolloutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateServiceRolloutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
    MergeFrom(*source);
  }
}

void CreateServiceRolloutRequest::MergeFrom(const CreateServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_rollout()) {
    mutable_rollout()->::google::api::servicemanagement::v1::Rollout::MergeFrom(from.rollout());
  }
}

void CreateServiceRolloutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateServiceRolloutRequest::CopyFrom(const CreateServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceRolloutRequest::IsInitialized() const {
  return true;
}

void CreateServiceRolloutRequest::Swap(CreateServiceRolloutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateServiceRolloutRequest::InternalSwap(CreateServiceRolloutRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  swap(rollout_, other->rollout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateServiceRolloutRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListServiceRolloutsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListServiceRolloutsRequest::kServiceNameFieldNumber;
const int ListServiceRolloutsRequest::kPageTokenFieldNumber;
const int ListServiceRolloutsRequest::kPageSizeFieldNumber;
const int ListServiceRolloutsRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServiceRolloutsRequest::ListServiceRolloutsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceRolloutsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
}
ListServiceRolloutsRequest::ListServiceRolloutsRequest(const ListServiceRolloutsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
}

void ListServiceRolloutsRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListServiceRolloutsRequest::~ListServiceRolloutsRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  SharedDtor();
}

void ListServiceRolloutsRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListServiceRolloutsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServiceRolloutsRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListServiceRolloutsRequest& ListServiceRolloutsRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceRolloutsRequest();
  return *internal_default_instance();
}

ListServiceRolloutsRequest* ListServiceRolloutsRequest::New(::google::protobuf::Arena* arena) const {
  ListServiceRolloutsRequest* n = new ListServiceRolloutsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServiceRolloutsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListServiceRolloutsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServiceRolloutsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  return false;
#undef DO_
}

void ListServiceRolloutsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
}

::google::protobuf::uint8* ListServiceRolloutsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filter(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  return target;
}

size_t ListServiceRolloutsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServiceRolloutsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceRolloutsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListServiceRolloutsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
    MergeFrom(*source);
  }
}

void ListServiceRolloutsRequest::MergeFrom(const ListServiceRolloutsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListServiceRolloutsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceRolloutsRequest::CopyFrom(const ListServiceRolloutsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRolloutsRequest::IsInitialized() const {
  return true;
}

void ListServiceRolloutsRequest::Swap(ListServiceRolloutsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServiceRolloutsRequest::InternalSwap(ListServiceRolloutsRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  page_token_.Swap(&other->page_token_);
  filter_.Swap(&other->filter_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServiceRolloutsRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListServiceRolloutsResponse::InitAsDefaultInstance() {
}
void ListServiceRolloutsResponse::clear_rollouts() {
  rollouts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListServiceRolloutsResponse::kRolloutsFieldNumber;
const int ListServiceRolloutsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServiceRolloutsResponse::ListServiceRolloutsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceRolloutsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
}
ListServiceRolloutsResponse::ListServiceRolloutsResponse(const ListServiceRolloutsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rollouts_(from.rollouts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
}

void ListServiceRolloutsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListServiceRolloutsResponse::~ListServiceRolloutsResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  SharedDtor();
}

void ListServiceRolloutsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListServiceRolloutsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServiceRolloutsResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListServiceRolloutsResponse& ListServiceRolloutsResponse::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsListServiceRolloutsResponse();
  return *internal_default_instance();
}

ListServiceRolloutsResponse* ListServiceRolloutsResponse::New(::google::protobuf::Arena* arena) const {
  ListServiceRolloutsResponse* n = new ListServiceRolloutsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServiceRolloutsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rollouts_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListServiceRolloutsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rollouts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  return false;
#undef DO_
}

void ListServiceRolloutsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rollouts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rollouts(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
}

::google::protobuf::uint8* ListServiceRolloutsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rollouts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rollouts(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  return target;
}

size_t ListServiceRolloutsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rollouts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rollouts(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServiceRolloutsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceRolloutsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListServiceRolloutsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
    MergeFrom(*source);
  }
}

void ListServiceRolloutsResponse::MergeFrom(const ListServiceRolloutsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rollouts_.MergeFrom(from.rollouts_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListServiceRolloutsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceRolloutsResponse::CopyFrom(const ListServiceRolloutsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRolloutsResponse::IsInitialized() const {
  return true;
}

void ListServiceRolloutsResponse::Swap(ListServiceRolloutsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServiceRolloutsResponse::InternalSwap(ListServiceRolloutsResponse* other) {
  using std::swap;
  rollouts_.InternalSwap(&other->rollouts_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServiceRolloutsResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServiceRolloutRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceRolloutRequest::kServiceNameFieldNumber;
const int GetServiceRolloutRequest::kRolloutIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceRolloutRequest::GetServiceRolloutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGetServiceRolloutRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
}
GetServiceRolloutRequest::GetServiceRolloutRequest(const GetServiceRolloutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  rollout_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rollout_id().size() > 0) {
    rollout_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rollout_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
}

void GetServiceRolloutRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rollout_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetServiceRolloutRequest::~GetServiceRolloutRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  SharedDtor();
}

void GetServiceRolloutRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rollout_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServiceRolloutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceRolloutRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceRolloutRequest& GetServiceRolloutRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGetServiceRolloutRequest();
  return *internal_default_instance();
}

GetServiceRolloutRequest* GetServiceRolloutRequest::New(::google::protobuf::Arena* arena) const {
  GetServiceRolloutRequest* n = new GetServiceRolloutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceRolloutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rollout_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServiceRolloutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rollout_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rollout_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rollout_id().data(), static_cast<int>(this->rollout_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  return false;
#undef DO_
}

void GetServiceRolloutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // string rollout_id = 2;
  if (this->rollout_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rollout_id().data(), static_cast<int>(this->rollout_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rollout_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.GetServiceRolloutRequest)
}

::google::protobuf::uint8* GetServiceRolloutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // string rollout_id = 2;
  if (this->rollout_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rollout_id().data(), static_cast<int>(this->rollout_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rollout_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  return target;
}

size_t GetServiceRolloutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string rollout_id = 2;
  if (this->rollout_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rollout_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceRolloutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceRolloutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceRolloutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GetServiceRolloutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GetServiceRolloutRequest)
    MergeFrom(*source);
  }
}

void GetServiceRolloutRequest::MergeFrom(const GetServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.rollout_id().size() > 0) {

    rollout_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rollout_id_);
  }
}

void GetServiceRolloutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceRolloutRequest::CopyFrom(const GetServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRolloutRequest::IsInitialized() const {
  return true;
}

void GetServiceRolloutRequest::Swap(GetServiceRolloutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceRolloutRequest::InternalSwap(GetServiceRolloutRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  rollout_id_.Swap(&other->rollout_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceRolloutRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnableServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableServiceRequest::kServiceNameFieldNumber;
const int EnableServiceRequest::kConsumerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableServiceRequest::EnableServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsEnableServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.EnableServiceRequest)
}
EnableServiceRequest::EnableServiceRequest(const EnableServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consumer_id().size() > 0) {
    consumer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.EnableServiceRequest)
}

void EnableServiceRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EnableServiceRequest::~EnableServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.EnableServiceRequest)
  SharedDtor();
}

void EnableServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnableServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnableServiceRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnableServiceRequest& EnableServiceRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsEnableServiceRequest();
  return *internal_default_instance();
}

EnableServiceRequest* EnableServiceRequest::New(::google::protobuf::Arena* arena) const {
  EnableServiceRequest* n = new EnableServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.EnableServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EnableServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.EnableServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.EnableServiceRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string consumer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consumer_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.EnableServiceRequest.consumer_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.EnableServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.EnableServiceRequest)
  return false;
#undef DO_
}

void EnableServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.EnableServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.EnableServiceRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.EnableServiceRequest.consumer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consumer_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.EnableServiceRequest)
}

::google::protobuf::uint8* EnableServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.EnableServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.EnableServiceRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.EnableServiceRequest.consumer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consumer_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.EnableServiceRequest)
  return target;
}

size_t EnableServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.EnableServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consumer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnableServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.EnableServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.EnableServiceRequest)
    MergeFrom(*source);
  }
}

void EnableServiceRequest::MergeFrom(const EnableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.consumer_id().size() > 0) {

    consumer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
}

void EnableServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableServiceRequest::CopyFrom(const EnableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableServiceRequest::IsInitialized() const {
  return true;
}

void EnableServiceRequest::Swap(EnableServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableServiceRequest::InternalSwap(EnableServiceRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  consumer_id_.Swap(&other->consumer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnableServiceRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisableServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableServiceRequest::kServiceNameFieldNumber;
const int DisableServiceRequest::kConsumerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableServiceRequest::DisableServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsDisableServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.DisableServiceRequest)
}
DisableServiceRequest::DisableServiceRequest(const DisableServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consumer_id().size() > 0) {
    consumer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.DisableServiceRequest)
}

void DisableServiceRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DisableServiceRequest::~DisableServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.DisableServiceRequest)
  SharedDtor();
}

void DisableServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DisableServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisableServiceRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisableServiceRequest& DisableServiceRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsDisableServiceRequest();
  return *internal_default_instance();
}

DisableServiceRequest* DisableServiceRequest::New(::google::protobuf::Arena* arena) const {
  DisableServiceRequest* n = new DisableServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.DisableServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DisableServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.DisableServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.DisableServiceRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string consumer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consumer_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.DisableServiceRequest.consumer_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.DisableServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.DisableServiceRequest)
  return false;
#undef DO_
}

void DisableServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.DisableServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DisableServiceRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DisableServiceRequest.consumer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consumer_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.DisableServiceRequest)
}

::google::protobuf::uint8* DisableServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.DisableServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DisableServiceRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DisableServiceRequest.consumer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consumer_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.DisableServiceRequest)
  return target;
}

size_t DisableServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.DisableServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consumer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisableServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.DisableServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.DisableServiceRequest)
    MergeFrom(*source);
  }
}

void DisableServiceRequest::MergeFrom(const DisableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.consumer_id().size() > 0) {

    consumer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
}

void DisableServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableServiceRequest::CopyFrom(const DisableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableServiceRequest::IsInitialized() const {
  return true;
}

void DisableServiceRequest::Swap(DisableServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableServiceRequest::InternalSwap(DisableServiceRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  consumer_id_.Swap(&other->consumer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisableServiceRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateConfigReportRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_._instance.get_mutable()->new_config_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_._instance.get_mutable()->old_config_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void GenerateConfigReportRequest::clear_new_config() {
  if (GetArenaNoVirtual() == NULL && new_config_ != NULL) {
    delete new_config_;
  }
  new_config_ = NULL;
}
void GenerateConfigReportRequest::clear_old_config() {
  if (GetArenaNoVirtual() == NULL && old_config_ != NULL) {
    delete old_config_;
  }
  old_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateConfigReportRequest::kNewConfigFieldNumber;
const int GenerateConfigReportRequest::kOldConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateConfigReportRequest::GenerateConfigReportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGenerateConfigReportRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
}
GenerateConfigReportRequest::GenerateConfigReportRequest(const GenerateConfigReportRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_new_config()) {
    new_config_ = new ::google::protobuf::Any(*from.new_config_);
  } else {
    new_config_ = NULL;
  }
  if (from.has_old_config()) {
    old_config_ = new ::google::protobuf::Any(*from.old_config_);
  } else {
    old_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
}

void GenerateConfigReportRequest::SharedCtor() {
  ::memset(&new_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&old_config_) -
      reinterpret_cast<char*>(&new_config_)) + sizeof(old_config_));
  _cached_size_ = 0;
}

GenerateConfigReportRequest::~GenerateConfigReportRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  SharedDtor();
}

void GenerateConfigReportRequest::SharedDtor() {
  if (this != internal_default_instance()) delete new_config_;
  if (this != internal_default_instance()) delete old_config_;
}

void GenerateConfigReportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenerateConfigReportRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateConfigReportRequest& GenerateConfigReportRequest::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGenerateConfigReportRequest();
  return *internal_default_instance();
}

GenerateConfigReportRequest* GenerateConfigReportRequest::New(::google::protobuf::Arena* arena) const {
  GenerateConfigReportRequest* n = new GenerateConfigReportRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenerateConfigReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && new_config_ != NULL) {
    delete new_config_;
  }
  new_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && old_config_ != NULL) {
    delete old_config_;
  }
  old_config_ = NULL;
  _internal_metadata_.Clear();
}

bool GenerateConfigReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any new_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any old_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_old_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  return false;
#undef DO_
}

void GenerateConfigReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any new_config = 1;
  if (this->has_new_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->new_config_, output);
  }

  // .google.protobuf.Any old_config = 2;
  if (this->has_old_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->old_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.GenerateConfigReportRequest)
}

::google::protobuf::uint8* GenerateConfigReportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any new_config = 1;
  if (this->has_new_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->new_config_, deterministic, target);
  }

  // .google.protobuf.Any old_config = 2;
  if (this->has_old_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->old_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  return target;
}

size_t GenerateConfigReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any new_config = 1;
  if (this->has_new_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->new_config_);
  }

  // .google.protobuf.Any old_config = 2;
  if (this->has_old_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->old_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenerateConfigReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateConfigReportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateConfigReportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GenerateConfigReportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GenerateConfigReportRequest)
    MergeFrom(*source);
  }
}

void GenerateConfigReportRequest::MergeFrom(const GenerateConfigReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_new_config()) {
    mutable_new_config()->::google::protobuf::Any::MergeFrom(from.new_config());
  }
  if (from.has_old_config()) {
    mutable_old_config()->::google::protobuf::Any::MergeFrom(from.old_config());
  }
}

void GenerateConfigReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateConfigReportRequest::CopyFrom(const GenerateConfigReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateConfigReportRequest::IsInitialized() const {
  return true;
}

void GenerateConfigReportRequest::Swap(GenerateConfigReportRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateConfigReportRequest::InternalSwap(GenerateConfigReportRequest* other) {
  using std::swap;
  swap(new_config_, other->new_config_);
  swap(old_config_, other->old_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenerateConfigReportRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateConfigReportResponse::InitAsDefaultInstance() {
}
void GenerateConfigReportResponse::clear_change_reports() {
  change_reports_.Clear();
}
void GenerateConfigReportResponse::clear_diagnostics() {
  diagnostics_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateConfigReportResponse::kServiceNameFieldNumber;
const int GenerateConfigReportResponse::kIdFieldNumber;
const int GenerateConfigReportResponse::kChangeReportsFieldNumber;
const int GenerateConfigReportResponse::kDiagnosticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateConfigReportResponse::GenerateConfigReportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGenerateConfigReportResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
}
GenerateConfigReportResponse::GenerateConfigReportResponse(const GenerateConfigReportResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      change_reports_(from.change_reports_),
      diagnostics_(from.diagnostics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
}

void GenerateConfigReportResponse::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GenerateConfigReportResponse::~GenerateConfigReportResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  SharedDtor();
}

void GenerateConfigReportResponse::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateConfigReportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenerateConfigReportResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateConfigReportResponse& GenerateConfigReportResponse::default_instance() {
  ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::InitDefaultsGenerateConfigReportResponse();
  return *internal_default_instance();
}

GenerateConfigReportResponse* GenerateConfigReportResponse::New(::google::protobuf::Arena* arena) const {
  GenerateConfigReportResponse* n = new GenerateConfigReportResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenerateConfigReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  change_reports_.Clear();
  diagnostics_.Clear();
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenerateConfigReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicemanagement.v1.GenerateConfigReportResponse.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_change_reports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  return false;
#undef DO_
}

void GenerateConfigReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_reports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->change_reports(static_cast<int>(i)), output);
  }

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->diagnostics(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicemanagement.v1.GenerateConfigReportResponse)
}

::google::protobuf::uint8* GenerateConfigReportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_reports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->change_reports(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->diagnostics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  return target;
}

size_t GenerateConfigReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->change_reports_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_reports(static_cast<int>(i)));
    }
  }

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->diagnostics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->diagnostics(static_cast<int>(i)));
    }
  }

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenerateConfigReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateConfigReportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateConfigReportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GenerateConfigReportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GenerateConfigReportResponse)
    MergeFrom(*source);
  }
}

void GenerateConfigReportResponse::MergeFrom(const GenerateConfigReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  change_reports_.MergeFrom(from.change_reports_);
  diagnostics_.MergeFrom(from.diagnostics_);
  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void GenerateConfigReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateConfigReportResponse::CopyFrom(const GenerateConfigReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateConfigReportResponse::IsInitialized() const {
  return true;
}

void GenerateConfigReportResponse::Swap(GenerateConfigReportResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateConfigReportResponse::InternalSwap(GenerateConfigReportResponse* other) {
  using std::swap;
  change_reports_.InternalSwap(&other->change_reports_);
  diagnostics_.InternalSwap(&other->diagnostics_);
  service_name_.Swap(&other->service_name_);
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenerateConfigReportResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
