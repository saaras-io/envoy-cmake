// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/backend.proto

#include "google/api/backend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
class BackendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Backend>
      _instance;
} _Backend_default_instance_;
class BackendRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackendRule>
      _instance;
} _BackendRule_default_instance_;
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fbackend_2eproto {
void InitDefaultsBackendImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fbackend_2eproto::InitDefaultsBackendRule();
  {
    void* ptr = &::google::api::_Backend_default_instance_;
    new (ptr) ::google::api::Backend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Backend::InitAsDefaultInstance();
}

void InitDefaultsBackend() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBackendImpl);
}

void InitDefaultsBackendRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::api::_BackendRule_default_instance_;
    new (ptr) ::google::api::BackendRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::BackendRule::InitAsDefaultInstance();
}

void InitDefaultsBackendRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBackendRuleImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Backend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Backend, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::BackendRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::BackendRule, selector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::BackendRule, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::BackendRule, deadline_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::Backend)},
  { 6, -1, sizeof(::google::api::BackendRule)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Backend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_BackendRule_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/api/backend.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030google/api/backend.proto\022\ngoogle.api\"1"
      "\n\007Backend\022&\n\005rules\030\001 \003(\0132\027.google.api.Ba"
      "ckendRule\"B\n\013BackendRule\022\020\n\010selector\030\001 \001"
      "(\t\022\017\n\007address\030\002 \001(\t\022\020\n\010deadline\030\003 \001(\001Bn\n"
      "\016com.google.apiB\014BackendProtoP\001ZEgoogle."
      "golang.org/genproto/googleapis/api/servi"
      "ceconfig;serviceconfig\242\002\004GAPIb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 277);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/backend.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fbackend_2eproto
namespace google {
namespace api {

// ===================================================================

void Backend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Backend::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Backend::Backend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fbackend_2eproto::InitDefaultsBackend();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Backend)
}
Backend::Backend(const Backend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.Backend)
}

void Backend::SharedCtor() {
  _cached_size_ = 0;
}

Backend::~Backend() {
  // @@protoc_insertion_point(destructor:google.api.Backend)
  SharedDtor();
}

void Backend::SharedDtor() {
}

void Backend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Backend::descriptor() {
  ::protobuf_google_2fapi_2fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Backend& Backend::default_instance() {
  ::protobuf_google_2fapi_2fbackend_2eproto::InitDefaultsBackend();
  return *internal_default_instance();
}

Backend* Backend::New(::google::protobuf::Arena* arena) const {
  Backend* n = new Backend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Backend::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Backend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  _internal_metadata_.Clear();
}

bool Backend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Backend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.BackendRule rules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Backend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Backend)
  return false;
#undef DO_
}

void Backend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Backend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.BackendRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rules(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Backend)
}

::google::protobuf::uint8* Backend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Backend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.BackendRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rules(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Backend)
  return target;
}

size_t Backend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Backend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.BackendRule rules = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Backend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Backend)
  GOOGLE_DCHECK_NE(&from, this);
  const Backend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Backend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Backend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Backend)
    MergeFrom(*source);
  }
}

void Backend::MergeFrom(const Backend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Backend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
}

void Backend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Backend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Backend::CopyFrom(const Backend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Backend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Backend::IsInitialized() const {
  return true;
}

void Backend::Swap(Backend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Backend::InternalSwap(Backend* other) {
  using std::swap;
  rules_.InternalSwap(&other->rules_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Backend::GetMetadata() const {
  protobuf_google_2fapi_2fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BackendRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackendRule::kSelectorFieldNumber;
const int BackendRule::kAddressFieldNumber;
const int BackendRule::kDeadlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackendRule::BackendRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fapi_2fbackend_2eproto::InitDefaultsBackendRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.BackendRule)
}
BackendRule::BackendRule(const BackendRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.selector().size() > 0) {
    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  deadline_ = from.deadline_;
  // @@protoc_insertion_point(copy_constructor:google.api.BackendRule)
}

void BackendRule::SharedCtor() {
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deadline_ = 0;
  _cached_size_ = 0;
}

BackendRule::~BackendRule() {
  // @@protoc_insertion_point(destructor:google.api.BackendRule)
  SharedDtor();
}

void BackendRule::SharedDtor() {
  selector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BackendRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackendRule::descriptor() {
  ::protobuf_google_2fapi_2fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackendRule& BackendRule::default_instance() {
  ::protobuf_google_2fapi_2fbackend_2eproto::InitDefaultsBackendRule();
  return *internal_default_instance();
}

BackendRule* BackendRule::New(::google::protobuf::Arena* arena) const {
  BackendRule* n = new BackendRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackendRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.BackendRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deadline_ = 0;
  _internal_metadata_.Clear();
}

bool BackendRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.BackendRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string selector = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selector().data(), static_cast<int>(this->selector().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.BackendRule.selector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.BackendRule.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double deadline = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deadline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.BackendRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.BackendRule)
  return false;
#undef DO_
}

void BackendRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.BackendRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BackendRule.selector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->selector(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BackendRule.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // double deadline = 3;
  if (this->deadline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->deadline(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.BackendRule)
}

::google::protobuf::uint8* BackendRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.BackendRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BackendRule.selector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->selector(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BackendRule.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // double deadline = 3;
  if (this->deadline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->deadline(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.BackendRule)
  return target;
}

size_t BackendRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.BackendRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string selector = 1;
  if (this->selector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selector());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // double deadline = 3;
  if (this->deadline() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackendRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.BackendRule)
  GOOGLE_DCHECK_NE(&from, this);
  const BackendRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackendRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.BackendRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.BackendRule)
    MergeFrom(*source);
  }
}

void BackendRule::MergeFrom(const BackendRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.BackendRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selector().size() > 0) {

    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.deadline() != 0) {
    set_deadline(from.deadline());
  }
}

void BackendRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.BackendRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackendRule::CopyFrom(const BackendRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.BackendRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackendRule::IsInitialized() const {
  return true;
}

void BackendRule::Swap(BackendRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackendRule::InternalSwap(BackendRule* other) {
  using std::swap;
  selector_.Swap(&other->selector_);
  address_.Swap(&other->address_);
  swap(deadline_, other->deadline_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackendRule::GetMetadata() const {
  protobuf_google_2fapi_2fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
