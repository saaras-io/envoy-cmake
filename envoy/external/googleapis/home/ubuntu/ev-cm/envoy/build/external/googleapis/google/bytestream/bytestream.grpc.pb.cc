// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/bytestream/bytestream.proto

#include "google/bytestream/bytestream.pb.h"
#include "google/bytestream/bytestream.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace bytestream {

static const char* ByteStream_method_names[] = {
  "/google.bytestream.ByteStream/Read",
  "/google.bytestream.ByteStream/Write",
  "/google.bytestream.ByteStream/QueryWriteStatus",
};

std::unique_ptr< ByteStream::Stub> ByteStream::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ByteStream::Stub> stub(new ByteStream::Stub(channel));
  return stub;
}

ByteStream::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_Read_(ByteStream_method_names[0], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_Write_(ByteStream_method_names[1], ::grpc::internal::RpcMethod::CLIENT_STREAMING, channel)
  , rpcmethod_QueryWriteStatus_(ByteStream_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::ClientReader< ::google::bytestream::ReadResponse>* ByteStream::Stub::ReadRaw(::grpc::ClientContext* context, const ::google::bytestream::ReadRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::google::bytestream::ReadResponse>::Create(channel_.get(), rpcmethod_Read_, context, request);
}

::grpc::ClientAsyncReader< ::google::bytestream::ReadResponse>* ByteStream::Stub::AsyncReadRaw(::grpc::ClientContext* context, const ::google::bytestream::ReadRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::google::bytestream::ReadResponse>::Create(channel_.get(), cq, rpcmethod_Read_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::google::bytestream::ReadResponse>* ByteStream::Stub::PrepareAsyncReadRaw(::grpc::ClientContext* context, const ::google::bytestream::ReadRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::google::bytestream::ReadResponse>::Create(channel_.get(), cq, rpcmethod_Read_, context, request, false, nullptr);
}

::grpc::ClientWriter< ::google::bytestream::WriteRequest>* ByteStream::Stub::WriteRaw(::grpc::ClientContext* context, ::google::bytestream::WriteResponse* response) {
  return ::grpc::internal::ClientWriterFactory< ::google::bytestream::WriteRequest>::Create(channel_.get(), rpcmethod_Write_, context, response);
}

::grpc::ClientAsyncWriter< ::google::bytestream::WriteRequest>* ByteStream::Stub::AsyncWriteRaw(::grpc::ClientContext* context, ::google::bytestream::WriteResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::bytestream::WriteRequest>::Create(channel_.get(), cq, rpcmethod_Write_, context, response, true, tag);
}

::grpc::ClientAsyncWriter< ::google::bytestream::WriteRequest>* ByteStream::Stub::PrepareAsyncWriteRaw(::grpc::ClientContext* context, ::google::bytestream::WriteResponse* response, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::google::bytestream::WriteRequest>::Create(channel_.get(), cq, rpcmethod_Write_, context, response, false, nullptr);
}

::grpc::Status ByteStream::Stub::QueryWriteStatus(::grpc::ClientContext* context, const ::google::bytestream::QueryWriteStatusRequest& request, ::google::bytestream::QueryWriteStatusResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_QueryWriteStatus_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bytestream::QueryWriteStatusResponse>* ByteStream::Stub::AsyncQueryWriteStatusRaw(::grpc::ClientContext* context, const ::google::bytestream::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bytestream::QueryWriteStatusResponse>::Create(channel_.get(), cq, rpcmethod_QueryWriteStatus_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bytestream::QueryWriteStatusResponse>* ByteStream::Stub::PrepareAsyncQueryWriteStatusRaw(::grpc::ClientContext* context, const ::google::bytestream::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bytestream::QueryWriteStatusResponse>::Create(channel_.get(), cq, rpcmethod_QueryWriteStatus_, context, request, false);
}

ByteStream::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ByteStream_method_names[0],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< ByteStream::Service, ::google::bytestream::ReadRequest, ::google::bytestream::ReadResponse>(
          std::mem_fn(&ByteStream::Service::Read), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ByteStream_method_names[1],
      ::grpc::internal::RpcMethod::CLIENT_STREAMING,
      new ::grpc::internal::ClientStreamingHandler< ByteStream::Service, ::google::bytestream::WriteRequest, ::google::bytestream::WriteResponse>(
          std::mem_fn(&ByteStream::Service::Write), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ByteStream_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ByteStream::Service, ::google::bytestream::QueryWriteStatusRequest, ::google::bytestream::QueryWriteStatusResponse>(
          std::mem_fn(&ByteStream::Service::QueryWriteStatus), this)));
}

ByteStream::Service::~Service() {
}

::grpc::Status ByteStream::Service::Read(::grpc::ServerContext* context, const ::google::bytestream::ReadRequest* request, ::grpc::ServerWriter< ::google::bytestream::ReadResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ByteStream::Service::Write(::grpc::ServerContext* context, ::grpc::ServerReader< ::google::bytestream::WriteRequest>* reader, ::google::bytestream::WriteResponse* response) {
  (void) context;
  (void) reader;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ByteStream::Service::QueryWriteStatus(::grpc::ServerContext* context, const ::google::bytestream::QueryWriteStatusRequest* request, ::google::bytestream::QueryWriteStatusResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace bytestream

