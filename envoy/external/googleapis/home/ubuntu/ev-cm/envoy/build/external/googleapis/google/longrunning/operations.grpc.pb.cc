// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/longrunning/operations.proto

#include "google/longrunning/operations.pb.h"
#include "google/longrunning/operations.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace longrunning {

static const char* Operations_method_names[] = {
  "/google.longrunning.Operations/ListOperations",
  "/google.longrunning.Operations/GetOperation",
  "/google.longrunning.Operations/DeleteOperation",
  "/google.longrunning.Operations/CancelOperation",
};

std::unique_ptr< Operations::Stub> Operations::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Operations::Stub> stub(new Operations::Stub(channel));
  return stub;
}

Operations::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListOperations_(Operations_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetOperation_(Operations_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteOperation_(Operations_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CancelOperation_(Operations_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Operations::Stub::ListOperations(::grpc::ClientContext* context, const ::google::longrunning::ListOperationsRequest& request, ::google::longrunning::ListOperationsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListOperations_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::ListOperationsResponse>* Operations::Stub::AsyncListOperationsRaw(::grpc::ClientContext* context, const ::google::longrunning::ListOperationsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::ListOperationsResponse>::Create(channel_.get(), cq, rpcmethod_ListOperations_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::ListOperationsResponse>* Operations::Stub::PrepareAsyncListOperationsRaw(::grpc::ClientContext* context, const ::google::longrunning::ListOperationsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::ListOperationsResponse>::Create(channel_.get(), cq, rpcmethod_ListOperations_, context, request, false);
}

::grpc::Status Operations::Stub::GetOperation(::grpc::ClientContext* context, const ::google::longrunning::GetOperationRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetOperation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Operations::Stub::AsyncGetOperationRaw(::grpc::ClientContext* context, const ::google::longrunning::GetOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_GetOperation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Operations::Stub::PrepareAsyncGetOperationRaw(::grpc::ClientContext* context, const ::google::longrunning::GetOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_GetOperation_, context, request, false);
}

::grpc::Status Operations::Stub::DeleteOperation(::grpc::ClientContext* context, const ::google::longrunning::DeleteOperationRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteOperation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Operations::Stub::AsyncDeleteOperationRaw(::grpc::ClientContext* context, const ::google::longrunning::DeleteOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteOperation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Operations::Stub::PrepareAsyncDeleteOperationRaw(::grpc::ClientContext* context, const ::google::longrunning::DeleteOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteOperation_, context, request, false);
}

::grpc::Status Operations::Stub::CancelOperation(::grpc::ClientContext* context, const ::google::longrunning::CancelOperationRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CancelOperation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Operations::Stub::AsyncCancelOperationRaw(::grpc::ClientContext* context, const ::google::longrunning::CancelOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_CancelOperation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Operations::Stub::PrepareAsyncCancelOperationRaw(::grpc::ClientContext* context, const ::google::longrunning::CancelOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_CancelOperation_, context, request, false);
}

Operations::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Operations_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Operations::Service, ::google::longrunning::ListOperationsRequest, ::google::longrunning::ListOperationsResponse>(
          std::mem_fn(&Operations::Service::ListOperations), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Operations_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Operations::Service, ::google::longrunning::GetOperationRequest, ::google::longrunning::Operation>(
          std::mem_fn(&Operations::Service::GetOperation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Operations_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Operations::Service, ::google::longrunning::DeleteOperationRequest, ::google::protobuf::Empty>(
          std::mem_fn(&Operations::Service::DeleteOperation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Operations_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Operations::Service, ::google::longrunning::CancelOperationRequest, ::google::protobuf::Empty>(
          std::mem_fn(&Operations::Service::CancelOperation), this)));
}

Operations::Service::~Service() {
}

::grpc::Status Operations::Service::ListOperations(::grpc::ServerContext* context, const ::google::longrunning::ListOperationsRequest* request, ::google::longrunning::ListOperationsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Operations::Service::GetOperation(::grpc::ServerContext* context, const ::google::longrunning::GetOperationRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Operations::Service::DeleteOperation(::grpc::ServerContext* context, const ::google::longrunning::DeleteOperationRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Operations::Service::CancelOperation(::grpc::ServerContext* context, const ::google::longrunning::CancelOperationRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace longrunning

