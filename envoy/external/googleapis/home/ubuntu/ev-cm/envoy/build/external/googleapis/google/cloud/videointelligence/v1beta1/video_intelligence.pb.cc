// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/videointelligence/v1beta1/video_intelligence.proto

#include "google/cloud/videointelligence/v1beta1/video_intelligence.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace videointelligence {
namespace v1beta1 {
class AnnotateVideoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotateVideoRequest>
      _instance;
} _AnnotateVideoRequest_default_instance_;
class VideoContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VideoContext>
      _instance;
} _VideoContext_default_instance_;
class VideoSegmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VideoSegment>
      _instance;
} _VideoSegment_default_instance_;
class LabelLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabelLocation>
      _instance;
} _LabelLocation_default_instance_;
class LabelAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabelAnnotation>
      _instance;
} _LabelAnnotation_default_instance_;
class SafeSearchAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SafeSearchAnnotation>
      _instance;
} _SafeSearchAnnotation_default_instance_;
class BoundingBoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoundingBox>
      _instance;
} _BoundingBox_default_instance_;
class FaceLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceLocation>
      _instance;
} _FaceLocation_default_instance_;
class FaceAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceAnnotation>
      _instance;
} _FaceAnnotation_default_instance_;
class VideoAnnotationResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VideoAnnotationResults>
      _instance;
} _VideoAnnotationResults_default_instance_;
class AnnotateVideoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotateVideoResponse>
      _instance;
} _AnnotateVideoResponse_default_instance_;
class VideoAnnotationProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VideoAnnotationProgress>
      _instance;
} _VideoAnnotationProgress_default_instance_;
class AnnotateVideoProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotateVideoProgress>
      _instance;
} _AnnotateVideoProgress_default_instance_;
}  // namespace v1beta1
}  // namespace videointelligence
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto {
void InitDefaultsAnnotateVideoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoContext();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_AnnotateVideoRequest_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest::InitAsDefaultInstance();
}

void InitDefaultsAnnotateVideoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAnnotateVideoRequestImpl);
}

void InitDefaultsVideoContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegment();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_VideoContext_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::VideoContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::VideoContext::InitAsDefaultInstance();
}

void InitDefaultsVideoContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVideoContextImpl);
}

void InitDefaultsVideoSegmentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_VideoSegment_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::VideoSegment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::VideoSegment::InitAsDefaultInstance();
}

void InitDefaultsVideoSegment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVideoSegmentImpl);
}

void InitDefaultsLabelLocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegment();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_LabelLocation_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::LabelLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::LabelLocation::InitAsDefaultInstance();
}

void InitDefaultsLabelLocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLabelLocationImpl);
}

void InitDefaultsLabelAnnotationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelLocation();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_LabelAnnotation_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::LabelAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::LabelAnnotation::InitAsDefaultInstance();
}

void InitDefaultsLabelAnnotation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLabelAnnotationImpl);
}

void InitDefaultsSafeSearchAnnotationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_SafeSearchAnnotation_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation::InitAsDefaultInstance();
}

void InitDefaultsSafeSearchAnnotation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSafeSearchAnnotationImpl);
}

void InitDefaultsBoundingBoxImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_BoundingBox_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::BoundingBox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::BoundingBox::InitAsDefaultInstance();
}

void InitDefaultsBoundingBox() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBoundingBoxImpl);
}

void InitDefaultsFaceLocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsBoundingBox();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_FaceLocation_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::FaceLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::FaceLocation::InitAsDefaultInstance();
}

void InitDefaultsFaceLocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFaceLocationImpl);
}

void InitDefaultsFaceAnnotationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegment();
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceLocation();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_FaceAnnotation_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::FaceAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::FaceAnnotation::InitAsDefaultInstance();
}

void InitDefaultsFaceAnnotation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFaceAnnotationImpl);
}

void InitDefaultsVideoAnnotationResultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelAnnotation();
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceAnnotation();
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegment();
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsSafeSearchAnnotation();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_VideoAnnotationResults_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults::InitAsDefaultInstance();
}

void InitDefaultsVideoAnnotationResults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVideoAnnotationResultsImpl);
}

void InitDefaultsAnnotateVideoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationResults();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_AnnotateVideoResponse_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::AnnotateVideoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::AnnotateVideoResponse::InitAsDefaultInstance();
}

void InitDefaultsAnnotateVideoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAnnotateVideoResponseImpl);
}

void InitDefaultsVideoAnnotationProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_VideoAnnotationProgress_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress::InitAsDefaultInstance();
}

void InitDefaultsVideoAnnotationProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVideoAnnotationProgressImpl);
}

void InitDefaultsAnnotateVideoProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationProgress();
  {
    void* ptr = &::google::cloud::videointelligence::v1beta1::_AnnotateVideoProgress_default_instance_;
    new (ptr) ::google::cloud::videointelligence::v1beta1::AnnotateVideoProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::videointelligence::v1beta1::AnnotateVideoProgress::InitAsDefaultInstance();
}

void InitDefaultsAnnotateVideoProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAnnotateVideoProgressImpl);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest, input_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest, input_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest, video_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest, output_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest, location_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, segments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, label_detection_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, stationary_camera_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, label_detection_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, face_detection_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, shot_change_detection_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoContext, safe_search_detection_model_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoSegment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoSegment, start_time_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoSegment, end_time_offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelLocation, segment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelLocation, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelLocation, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelAnnotation, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelAnnotation, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::LabelAnnotation, locations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation, adult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation, spoof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation, medical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation, violent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation, racy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation, time_offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::BoundingBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::BoundingBox, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::BoundingBox, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::BoundingBox, bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::BoundingBox, top_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::FaceLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::FaceLocation, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::FaceLocation, time_offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::FaceAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::FaceAnnotation, thumbnail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::FaceAnnotation, segments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::FaceAnnotation, locations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults, input_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults, label_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults, face_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults, shot_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults, safe_search_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoResponse, annotation_results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress, input_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress, progress_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress, update_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::videointelligence::v1beta1::AnnotateVideoProgress, annotation_progress_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::videointelligence::v1beta1::AnnotateVideoRequest)},
  { 11, -1, sizeof(::google::cloud::videointelligence::v1beta1::VideoContext)},
  { 23, -1, sizeof(::google::cloud::videointelligence::v1beta1::VideoSegment)},
  { 30, -1, sizeof(::google::cloud::videointelligence::v1beta1::LabelLocation)},
  { 38, -1, sizeof(::google::cloud::videointelligence::v1beta1::LabelAnnotation)},
  { 46, -1, sizeof(::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation)},
  { 57, -1, sizeof(::google::cloud::videointelligence::v1beta1::BoundingBox)},
  { 66, -1, sizeof(::google::cloud::videointelligence::v1beta1::FaceLocation)},
  { 73, -1, sizeof(::google::cloud::videointelligence::v1beta1::FaceAnnotation)},
  { 81, -1, sizeof(::google::cloud::videointelligence::v1beta1::VideoAnnotationResults)},
  { 92, -1, sizeof(::google::cloud::videointelligence::v1beta1::AnnotateVideoResponse)},
  { 98, -1, sizeof(::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress)},
  { 107, -1, sizeof(::google::cloud::videointelligence::v1beta1::AnnotateVideoProgress)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_AnnotateVideoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_VideoContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_VideoSegment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_LabelLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_LabelAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_SafeSearchAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_BoundingBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_FaceLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_FaceAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_VideoAnnotationResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_AnnotateVideoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_VideoAnnotationProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::videointelligence::v1beta1::_AnnotateVideoProgress_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/videointelligence/v1beta1/video_intelligence.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\?google/cloud/videointelligence/v1beta1"
      "/video_intelligence.proto\022&google.cloud."
      "videointelligence.v1beta1\032\034google/api/an"
      "notations.proto\032#google/longrunning/oper"
      "ations.proto\032\037google/protobuf/timestamp."
      "proto\032\027google/rpc/status.proto\"\371\001\n\024Annot"
      "ateVideoRequest\022\021\n\tinput_uri\030\001 \001(\t\022\025\n\rin"
      "put_content\030\006 \001(\t\022A\n\010features\030\002 \003(\0162/.go"
      "ogle.cloud.videointelligence.v1beta1.Fea"
      "ture\022K\n\rvideo_context\030\003 \001(\01324.google.clo"
      "ud.videointelligence.v1beta1.VideoContex"
      "t\022\022\n\noutput_uri\030\004 \001(\t\022\023\n\013location_id\030\005 \001"
      "(\t\"\322\002\n\014VideoContext\022F\n\010segments\030\001 \003(\01324."
      "google.cloud.videointelligence.v1beta1.V"
      "ideoSegment\022X\n\024label_detection_mode\030\002 \001("
      "\0162:.google.cloud.videointelligence.v1bet"
      "a1.LabelDetectionMode\022\031\n\021stationary_came"
      "ra\030\003 \001(\010\022\035\n\025label_detection_model\030\004 \001(\t\022"
      "\034\n\024face_detection_model\030\005 \001(\t\022#\n\033shot_ch"
      "ange_detection_model\030\006 \001(\t\022#\n\033safe_searc"
      "h_detection_model\030\007 \001(\t\"B\n\014VideoSegment\022"
      "\031\n\021start_time_offset\030\001 \001(\003\022\027\n\017end_time_o"
      "ffset\030\002 \001(\003\"\255\001\n\rLabelLocation\022E\n\007segment"
      "\030\001 \001(\01324.google.cloud.videointelligence."
      "v1beta1.VideoSegment\022\022\n\nconfidence\030\002 \001(\002"
      "\022A\n\005level\030\003 \001(\01622.google.cloud.videointe"
      "lligence.v1beta1.LabelLevel\"\207\001\n\017LabelAnn"
      "otation\022\023\n\013description\030\001 \001(\t\022\025\n\rlanguage"
      "_code\030\002 \001(\t\022H\n\tlocations\030\003 \003(\01325.google."
      "cloud.videointelligence.v1beta1.LabelLoc"
      "ation\"\375\002\n\024SafeSearchAnnotation\022A\n\005adult\030"
      "\001 \001(\01622.google.cloud.videointelligence.v"
      "1beta1.Likelihood\022A\n\005spoof\030\002 \001(\01622.googl"
      "e.cloud.videointelligence.v1beta1.Likeli"
      "hood\022C\n\007medical\030\003 \001(\01622.google.cloud.vid"
      "eointelligence.v1beta1.Likelihood\022C\n\007vio"
      "lent\030\004 \001(\01622.google.cloud.videointellige"
      "nce.v1beta1.Likelihood\022@\n\004racy\030\005 \001(\01622.g"
      "oogle.cloud.videointelligence.v1beta1.Li"
      "kelihood\022\023\n\013time_offset\030\006 \001(\003\"G\n\013Boundin"
      "gBox\022\014\n\004left\030\001 \001(\005\022\r\n\005right\030\002 \001(\005\022\016\n\006bot"
      "tom\030\003 \001(\005\022\013\n\003top\030\004 \001(\005\"n\n\014FaceLocation\022I"
      "\n\014bounding_box\030\001 \001(\01323.google.cloud.vide"
      "ointelligence.v1beta1.BoundingBox\022\023\n\013tim"
      "e_offset\030\002 \001(\003\"\264\001\n\016FaceAnnotation\022\021\n\tthu"
      "mbnail\030\001 \001(\t\022F\n\010segments\030\002 \003(\01324.google."
      "cloud.videointelligence.v1beta1.VideoSeg"
      "ment\022G\n\tlocations\030\003 \003(\01324.google.cloud.v"
      "ideointelligence.v1beta1.FaceLocation\"\243\003"
      "\n\026VideoAnnotationResults\022\021\n\tinput_uri\030\001 "
      "\001(\t\022R\n\021label_annotations\030\002 \003(\01327.google."
      "cloud.videointelligence.v1beta1.LabelAnn"
      "otation\022P\n\020face_annotations\030\003 \003(\01326.goog"
      "le.cloud.videointelligence.v1beta1.FaceA"
      "nnotation\022N\n\020shot_annotations\030\004 \003(\01324.go"
      "ogle.cloud.videointelligence.v1beta1.Vid"
      "eoSegment\022]\n\027safe_search_annotations\030\006 \003"
      "(\0132<.google.cloud.videointelligence.v1be"
      "ta1.SafeSearchAnnotation\022!\n\005error\030\005 \001(\0132"
      "\022.google.rpc.Status\"s\n\025AnnotateVideoResp"
      "onse\022Z\n\022annotation_results\030\001 \003(\0132>.googl"
      "e.cloud.videointelligence.v1beta1.VideoA"
      "nnotationResults\"\247\001\n\027VideoAnnotationProg"
      "ress\022\021\n\tinput_uri\030\001 \001(\t\022\030\n\020progress_perc"
      "ent\030\002 \001(\005\022.\n\nstart_time\030\003 \001(\0132\032.google.p"
      "rotobuf.Timestamp\022/\n\013update_time\030\004 \001(\0132\032"
      ".google.protobuf.Timestamp\"u\n\025AnnotateVi"
      "deoProgress\022\\\n\023annotation_progress\030\001 \003(\013"
      "2\?.google.cloud.videointelligence.v1beta"
      "1.VideoAnnotationProgress*\201\001\n\007Feature\022\027\n"
      "\023FEATURE_UNSPECIFIED\020\000\022\023\n\017LABEL_DETECTIO"
      "N\020\001\022\022\n\016FACE_DETECTION\020\002\022\031\n\025SHOT_CHANGE_D"
      "ETECTION\020\003\022\031\n\025SAFE_SEARCH_DETECTION\020\004*n\n"
      "\nLabelLevel\022\033\n\027LABEL_LEVEL_UNSPECIFIED\020\000"
      "\022\017\n\013VIDEO_LEVEL\020\001\022\021\n\rSEGMENT_LEVEL\020\002\022\016\n\n"
      "SHOT_LEVEL\020\003\022\017\n\013FRAME_LEVEL\020\004*r\n\022LabelDe"
      "tectionMode\022$\n LABEL_DETECTION_MODE_UNSP"
      "ECIFIED\020\000\022\r\n\tSHOT_MODE\020\001\022\016\n\nFRAME_MODE\020\002"
      "\022\027\n\023SHOT_AND_FRAME_MODE\020\003*e\n\nLikelihood\022"
      "\013\n\007UNKNOWN\020\000\022\021\n\rVERY_UNLIKELY\020\001\022\014\n\010UNLIK"
      "ELY\020\002\022\014\n\010POSSIBLE\020\003\022\n\n\006LIKELY\020\004\022\017\n\013VERY_"
      "LIKELY\020\0052\256\001\n\030VideoIntelligenceService\022\221\001"
      "\n\rAnnotateVideo\022<.google.cloud.videointe"
      "lligence.v1beta1.AnnotateVideoRequest\032\035."
      "google.longrunning.Operation\"#\202\323\344\223\002\035\"\030/v"
      "1beta1/videos:annotate:\001*B\317\001\n*com.google"
      ".cloud.videointelligence.v1beta1B\035VideoI"
      "ntelligenceServiceProtoP\001ZWgoogle.golang"
      ".org/genproto/googleapis/cloud/videointe"
      "lligence/v1beta1;videointelligence\252\002&Goo"
      "gle.Cloud.VideoIntelligence.V1Beta1b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3643);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/videointelligence/v1beta1/video_intelligence.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto
namespace google {
namespace cloud {
namespace videointelligence {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* Feature_descriptor() {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_enum_descriptors[0];
}
bool Feature_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LabelLevel_descriptor() {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_enum_descriptors[1];
}
bool LabelLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LabelDetectionMode_descriptor() {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_enum_descriptors[2];
}
bool LabelDetectionMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Likelihood_descriptor() {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_enum_descriptors[3];
}
bool Likelihood_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AnnotateVideoRequest::InitAsDefaultInstance() {
  ::google::cloud::videointelligence::v1beta1::_AnnotateVideoRequest_default_instance_._instance.get_mutable()->video_context_ = const_cast< ::google::cloud::videointelligence::v1beta1::VideoContext*>(
      ::google::cloud::videointelligence::v1beta1::VideoContext::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateVideoRequest::kInputUriFieldNumber;
const int AnnotateVideoRequest::kInputContentFieldNumber;
const int AnnotateVideoRequest::kFeaturesFieldNumber;
const int AnnotateVideoRequest::kVideoContextFieldNumber;
const int AnnotateVideoRequest::kOutputUriFieldNumber;
const int AnnotateVideoRequest::kLocationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateVideoRequest::AnnotateVideoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
}
AnnotateVideoRequest::AnnotateVideoRequest(const AnnotateVideoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      features_(from.features_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_uri().size() > 0) {
    input_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_uri_);
  }
  output_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_uri().size() > 0) {
    output_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_uri_);
  }
  location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_id().size() > 0) {
    location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_id_);
  }
  input_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_content().size() > 0) {
    input_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_content_);
  }
  if (from.has_video_context()) {
    video_context_ = new ::google::cloud::videointelligence::v1beta1::VideoContext(*from.video_context_);
  } else {
    video_context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
}

void AnnotateVideoRequest::SharedCtor() {
  input_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_context_ = NULL;
  _cached_size_ = 0;
}

AnnotateVideoRequest::~AnnotateVideoRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  SharedDtor();
}

void AnnotateVideoRequest::SharedDtor() {
  input_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete video_context_;
}

void AnnotateVideoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnotateVideoRequest::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotateVideoRequest& AnnotateVideoRequest::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoRequest();
  return *internal_default_instance();
}

AnnotateVideoRequest* AnnotateVideoRequest::New(::google::protobuf::Arena* arena) const {
  AnnotateVideoRequest* n = new AnnotateVideoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnnotateVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && video_context_ != NULL) {
    delete video_context_;
  }
  video_context_ = NULL;
  _internal_metadata_.Clear();
}

bool AnnotateVideoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string input_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_uri().data(), static_cast<int>(this->input_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.Feature features = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_features(static_cast< ::google::cloud::videointelligence::v1beta1::Feature >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_features(static_cast< ::google::cloud::videointelligence::v1beta1::Feature >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.videointelligence.v1beta1.VideoContext video_context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_video_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_uri().data(), static_cast<int>(this->output_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_id().data(), static_cast<int>(this->location_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_content().data(), static_cast<int>(this->input_content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  return false;
#undef DO_
}

void AnnotateVideoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uri().data(), static_cast<int>(this->input_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->input_uri(), output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.Feature features = 2;
  if (this->features_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_features_cached_byte_size_));
  }
  for (int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->features(i), output);
  }

  // .google.cloud.videointelligence.v1beta1.VideoContext video_context = 3;
  if (this->has_video_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->video_context_, output);
  }

  // string output_uri = 4;
  if (this->output_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_uri().data(), static_cast<int>(this->output_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_uri(), output);
  }

  // string location_id = 5;
  if (this->location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_id().data(), static_cast<int>(this->location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->location_id(), output);
  }

  // string input_content = 6;
  if (this->input_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_content().data(), static_cast<int>(this->input_content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->input_content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
}

::google::protobuf::uint8* AnnotateVideoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uri().data(), static_cast<int>(this->input_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->input_uri(), target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.Feature features = 2;
  if (this->features_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _features_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->features_, target);
  }

  // .google.cloud.videointelligence.v1beta1.VideoContext video_context = 3;
  if (this->has_video_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->video_context_, deterministic, target);
  }

  // string output_uri = 4;
  if (this->output_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_uri().data(), static_cast<int>(this->output_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_uri(), target);
  }

  // string location_id = 5;
  if (this->location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_id().data(), static_cast<int>(this->location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->location_id(), target);
  }

  // string input_content = 6;
  if (this->input_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_content().data(), static_cast<int>(this->input_content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->input_content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  return target;
}

size_t AnnotateVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.videointelligence.v1beta1.Feature features = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->features_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->features(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _features_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_uri());
  }

  // string output_uri = 4;
  if (this->output_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_uri());
  }

  // string location_id = 5;
  if (this->location_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_id());
  }

  // string input_content = 6;
  if (this->input_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_content());
  }

  // .google.cloud.videointelligence.v1beta1.VideoContext video_context = 3;
  if (this->has_video_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->video_context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnotateVideoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotateVideoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateVideoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
    MergeFrom(*source);
  }
}

void AnnotateVideoRequest::MergeFrom(const AnnotateVideoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from.input_uri().size() > 0) {

    input_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_uri_);
  }
  if (from.output_uri().size() > 0) {

    output_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_uri_);
  }
  if (from.location_id().size() > 0) {

    location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_id_);
  }
  if (from.input_content().size() > 0) {

    input_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_content_);
  }
  if (from.has_video_context()) {
    mutable_video_context()->::google::cloud::videointelligence::v1beta1::VideoContext::MergeFrom(from.video_context());
  }
}

void AnnotateVideoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateVideoRequest::CopyFrom(const AnnotateVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotateVideoRequest::IsInitialized() const {
  return true;
}

void AnnotateVideoRequest::Swap(AnnotateVideoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnnotateVideoRequest::InternalSwap(AnnotateVideoRequest* other) {
  using std::swap;
  features_.InternalSwap(&other->features_);
  input_uri_.Swap(&other->input_uri_);
  output_uri_.Swap(&other->output_uri_);
  location_id_.Swap(&other->location_id_);
  input_content_.Swap(&other->input_content_);
  swap(video_context_, other->video_context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnotateVideoRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VideoContext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VideoContext::kSegmentsFieldNumber;
const int VideoContext::kLabelDetectionModeFieldNumber;
const int VideoContext::kStationaryCameraFieldNumber;
const int VideoContext::kLabelDetectionModelFieldNumber;
const int VideoContext::kFaceDetectionModelFieldNumber;
const int VideoContext::kShotChangeDetectionModelFieldNumber;
const int VideoContext::kSafeSearchDetectionModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VideoContext::VideoContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.VideoContext)
}
VideoContext::VideoContext(const VideoContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      segments_(from.segments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_detection_model().size() > 0) {
    label_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_detection_model_);
  }
  face_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.face_detection_model().size() > 0) {
    face_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_detection_model_);
  }
  shot_change_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shot_change_detection_model().size() > 0) {
    shot_change_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shot_change_detection_model_);
  }
  safe_search_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.safe_search_detection_model().size() > 0) {
    safe_search_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safe_search_detection_model_);
  }
  ::memcpy(&label_detection_mode_, &from.label_detection_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&stationary_camera_) -
    reinterpret_cast<char*>(&label_detection_mode_)) + sizeof(stationary_camera_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.VideoContext)
}

void VideoContext::SharedCtor() {
  label_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shot_change_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_search_detection_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&label_detection_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stationary_camera_) -
      reinterpret_cast<char*>(&label_detection_mode_)) + sizeof(stationary_camera_));
  _cached_size_ = 0;
}

VideoContext::~VideoContext() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.VideoContext)
  SharedDtor();
}

void VideoContext::SharedDtor() {
  label_detection_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_detection_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shot_change_detection_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_search_detection_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VideoContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VideoContext::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VideoContext& VideoContext::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoContext();
  return *internal_default_instance();
}

VideoContext* VideoContext::New(::google::protobuf::Arena* arena) const {
  VideoContext* n = new VideoContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VideoContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.VideoContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segments_.Clear();
  label_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shot_change_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_search_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&label_detection_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stationary_camera_) -
      reinterpret_cast<char*>(&label_detection_mode_)) + sizeof(stationary_camera_));
  _internal_metadata_.Clear();
}

bool VideoContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.VideoContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_segments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.videointelligence.v1beta1.LabelDetectionMode label_detection_mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_label_detection_mode(static_cast< ::google::cloud::videointelligence::v1beta1::LabelDetectionMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stationary_camera = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stationary_camera_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_detection_model = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_detection_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_detection_model().data(), static_cast<int>(this->label_detection_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string face_detection_model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_detection_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->face_detection_model().data(), static_cast<int>(this->face_detection_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shot_change_detection_model = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shot_change_detection_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shot_change_detection_model().data(), static_cast<int>(this->shot_change_detection_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string safe_search_detection_model = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_safe_search_detection_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->safe_search_detection_model().data(), static_cast<int>(this->safe_search_detection_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.VideoContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.VideoContext)
  return false;
#undef DO_
}

void VideoContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.VideoContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->segments(static_cast<int>(i)), output);
  }

  // .google.cloud.videointelligence.v1beta1.LabelDetectionMode label_detection_mode = 2;
  if (this->label_detection_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->label_detection_mode(), output);
  }

  // bool stationary_camera = 3;
  if (this->stationary_camera() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->stationary_camera(), output);
  }

  // string label_detection_model = 4;
  if (this->label_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_detection_model().data(), static_cast<int>(this->label_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->label_detection_model(), output);
  }

  // string face_detection_model = 5;
  if (this->face_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->face_detection_model().data(), static_cast<int>(this->face_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->face_detection_model(), output);
  }

  // string shot_change_detection_model = 6;
  if (this->shot_change_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shot_change_detection_model().data(), static_cast<int>(this->shot_change_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->shot_change_detection_model(), output);
  }

  // string safe_search_detection_model = 7;
  if (this->safe_search_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->safe_search_detection_model().data(), static_cast<int>(this->safe_search_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->safe_search_detection_model(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.VideoContext)
}

::google::protobuf::uint8* VideoContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.VideoContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->segments(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.videointelligence.v1beta1.LabelDetectionMode label_detection_mode = 2;
  if (this->label_detection_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->label_detection_mode(), target);
  }

  // bool stationary_camera = 3;
  if (this->stationary_camera() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->stationary_camera(), target);
  }

  // string label_detection_model = 4;
  if (this->label_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_detection_model().data(), static_cast<int>(this->label_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->label_detection_model(), target);
  }

  // string face_detection_model = 5;
  if (this->face_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->face_detection_model().data(), static_cast<int>(this->face_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->face_detection_model(), target);
  }

  // string shot_change_detection_model = 6;
  if (this->shot_change_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shot_change_detection_model().data(), static_cast<int>(this->shot_change_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->shot_change_detection_model(), target);
  }

  // string safe_search_detection_model = 7;
  if (this->safe_search_detection_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->safe_search_detection_model().data(), static_cast<int>(this->safe_search_detection_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->safe_search_detection_model(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.VideoContext)
  return target;
}

size_t VideoContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.VideoContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->segments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->segments(static_cast<int>(i)));
    }
  }

  // string label_detection_model = 4;
  if (this->label_detection_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_detection_model());
  }

  // string face_detection_model = 5;
  if (this->face_detection_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->face_detection_model());
  }

  // string shot_change_detection_model = 6;
  if (this->shot_change_detection_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shot_change_detection_model());
  }

  // string safe_search_detection_model = 7;
  if (this->safe_search_detection_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->safe_search_detection_model());
  }

  // .google.cloud.videointelligence.v1beta1.LabelDetectionMode label_detection_mode = 2;
  if (this->label_detection_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->label_detection_mode());
  }

  // bool stationary_camera = 3;
  if (this->stationary_camera() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VideoContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.VideoContext)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VideoContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.VideoContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.VideoContext)
    MergeFrom(*source);
  }
}

void VideoContext::MergeFrom(const VideoContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.VideoContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  segments_.MergeFrom(from.segments_);
  if (from.label_detection_model().size() > 0) {

    label_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_detection_model_);
  }
  if (from.face_detection_model().size() > 0) {

    face_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_detection_model_);
  }
  if (from.shot_change_detection_model().size() > 0) {

    shot_change_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shot_change_detection_model_);
  }
  if (from.safe_search_detection_model().size() > 0) {

    safe_search_detection_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safe_search_detection_model_);
  }
  if (from.label_detection_mode() != 0) {
    set_label_detection_mode(from.label_detection_mode());
  }
  if (from.stationary_camera() != 0) {
    set_stationary_camera(from.stationary_camera());
  }
}

void VideoContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.VideoContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoContext::CopyFrom(const VideoContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.VideoContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoContext::IsInitialized() const {
  return true;
}

void VideoContext::Swap(VideoContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VideoContext::InternalSwap(VideoContext* other) {
  using std::swap;
  segments_.InternalSwap(&other->segments_);
  label_detection_model_.Swap(&other->label_detection_model_);
  face_detection_model_.Swap(&other->face_detection_model_);
  shot_change_detection_model_.Swap(&other->shot_change_detection_model_);
  safe_search_detection_model_.Swap(&other->safe_search_detection_model_);
  swap(label_detection_mode_, other->label_detection_mode_);
  swap(stationary_camera_, other->stationary_camera_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VideoContext::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VideoSegment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VideoSegment::kStartTimeOffsetFieldNumber;
const int VideoSegment::kEndTimeOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VideoSegment::VideoSegment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.VideoSegment)
}
VideoSegment::VideoSegment(const VideoSegment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_time_offset_, &from.start_time_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_offset_) -
    reinterpret_cast<char*>(&start_time_offset_)) + sizeof(end_time_offset_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.VideoSegment)
}

void VideoSegment::SharedCtor() {
  ::memset(&start_time_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_offset_) -
      reinterpret_cast<char*>(&start_time_offset_)) + sizeof(end_time_offset_));
  _cached_size_ = 0;
}

VideoSegment::~VideoSegment() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.VideoSegment)
  SharedDtor();
}

void VideoSegment::SharedDtor() {
}

void VideoSegment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VideoSegment::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VideoSegment& VideoSegment::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegment();
  return *internal_default_instance();
}

VideoSegment* VideoSegment::New(::google::protobuf::Arena* arena) const {
  VideoSegment* n = new VideoSegment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VideoSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_time_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_offset_) -
      reinterpret_cast<char*>(&start_time_offset_)) + sizeof(end_time_offset_));
  _internal_metadata_.Clear();
}

bool VideoSegment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 start_time_offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 end_time_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.VideoSegment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.VideoSegment)
  return false;
#undef DO_
}

void VideoSegment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_time_offset = 1;
  if (this->start_time_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time_offset(), output);
  }

  // int64 end_time_offset = 2;
  if (this->end_time_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time_offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.VideoSegment)
}

::google::protobuf::uint8* VideoSegment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_time_offset = 1;
  if (this->start_time_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time_offset(), target);
  }

  // int64 end_time_offset = 2;
  if (this->end_time_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time_offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.VideoSegment)
  return target;
}

size_t VideoSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 start_time_offset = 1;
  if (this->start_time_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time_offset());
  }

  // int64 end_time_offset = 2;
  if (this->end_time_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_time_offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VideoSegment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoSegment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VideoSegment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.VideoSegment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.VideoSegment)
    MergeFrom(*source);
  }
}

void VideoSegment::MergeFrom(const VideoSegment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_time_offset() != 0) {
    set_start_time_offset(from.start_time_offset());
  }
  if (from.end_time_offset() != 0) {
    set_end_time_offset(from.end_time_offset());
  }
}

void VideoSegment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoSegment::CopyFrom(const VideoSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.VideoSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoSegment::IsInitialized() const {
  return true;
}

void VideoSegment::Swap(VideoSegment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VideoSegment::InternalSwap(VideoSegment* other) {
  using std::swap;
  swap(start_time_offset_, other->start_time_offset_);
  swap(end_time_offset_, other->end_time_offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VideoSegment::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabelLocation::InitAsDefaultInstance() {
  ::google::cloud::videointelligence::v1beta1::_LabelLocation_default_instance_._instance.get_mutable()->segment_ = const_cast< ::google::cloud::videointelligence::v1beta1::VideoSegment*>(
      ::google::cloud::videointelligence::v1beta1::VideoSegment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabelLocation::kSegmentFieldNumber;
const int LabelLocation::kConfidenceFieldNumber;
const int LabelLocation::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabelLocation::LabelLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelLocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.LabelLocation)
}
LabelLocation::LabelLocation(const LabelLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_segment()) {
    segment_ = new ::google::cloud::videointelligence::v1beta1::VideoSegment(*from.segment_);
  } else {
    segment_ = NULL;
  }
  ::memcpy(&confidence_, &from.confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&confidence_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.LabelLocation)
}

void LabelLocation::SharedCtor() {
  ::memset(&segment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&segment_)) + sizeof(level_));
  _cached_size_ = 0;
}

LabelLocation::~LabelLocation() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.LabelLocation)
  SharedDtor();
}

void LabelLocation::SharedDtor() {
  if (this != internal_default_instance()) delete segment_;
}

void LabelLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LabelLocation::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabelLocation& LabelLocation::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelLocation();
  return *internal_default_instance();
}

LabelLocation* LabelLocation::New(::google::protobuf::Arena* arena) const {
  LabelLocation* n = new LabelLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LabelLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && segment_ != NULL) {
    delete segment_;
  }
  segment_ = NULL;
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool LabelLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.videointelligence.v1beta1.VideoSegment segment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_segment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.videointelligence.v1beta1.LabelLevel level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_level(static_cast< ::google::cloud::videointelligence::v1beta1::LabelLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.LabelLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.LabelLocation)
  return false;
#undef DO_
}

void LabelLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.videointelligence.v1beta1.VideoSegment segment = 1;
  if (this->has_segment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->segment_, output);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->confidence(), output);
  }

  // .google.cloud.videointelligence.v1beta1.LabelLevel level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.LabelLocation)
}

::google::protobuf::uint8* LabelLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.videointelligence.v1beta1.VideoSegment segment = 1;
  if (this->has_segment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->segment_, deterministic, target);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->confidence(), target);
  }

  // .google.cloud.videointelligence.v1beta1.LabelLevel level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.LabelLocation)
  return target;
}

size_t LabelLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.videointelligence.v1beta1.VideoSegment segment = 1;
  if (this->has_segment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->segment_);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  // .google.cloud.videointelligence.v1beta1.LabelLevel level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LabelLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const LabelLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabelLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.LabelLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.LabelLocation)
    MergeFrom(*source);
  }
}

void LabelLocation::MergeFrom(const LabelLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_segment()) {
    mutable_segment()->::google::cloud::videointelligence::v1beta1::VideoSegment::MergeFrom(from.segment());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void LabelLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabelLocation::CopyFrom(const LabelLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.LabelLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabelLocation::IsInitialized() const {
  return true;
}

void LabelLocation::Swap(LabelLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabelLocation::InternalSwap(LabelLocation* other) {
  using std::swap;
  swap(segment_, other->segment_);
  swap(confidence_, other->confidence_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LabelLocation::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabelAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabelAnnotation::kDescriptionFieldNumber;
const int LabelAnnotation::kLanguageCodeFieldNumber;
const int LabelAnnotation::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabelAnnotation::LabelAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelAnnotation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.LabelAnnotation)
}
LabelAnnotation::LabelAnnotation(const LabelAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locations_(from.locations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.LabelAnnotation)
}

void LabelAnnotation::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LabelAnnotation::~LabelAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  SharedDtor();
}

void LabelAnnotation::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LabelAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LabelAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabelAnnotation& LabelAnnotation::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelAnnotation();
  return *internal_default_instance();
}

LabelAnnotation* LabelAnnotation::New(::google::protobuf::Arena* arena) const {
  LabelAnnotation* n = new LabelAnnotation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LabelAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LabelAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.LabelAnnotation.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.LabelLocation locations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  return false;
#undef DO_
}

void LabelAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.LabelAnnotation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language_code(), output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.LabelLocation locations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->locations(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.LabelAnnotation)
}

::google::protobuf::uint8* LabelAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.LabelAnnotation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language_code(), target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.LabelLocation locations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->locations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  return target;
}

size_t LabelAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.videointelligence.v1beta1.LabelLocation locations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LabelAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const LabelAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabelAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.LabelAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.LabelAnnotation)
    MergeFrom(*source);
  }
}

void LabelAnnotation::MergeFrom(const LabelAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.language_code().size() > 0) {

    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
}

void LabelAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabelAnnotation::CopyFrom(const LabelAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.LabelAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabelAnnotation::IsInitialized() const {
  return true;
}

void LabelAnnotation::Swap(LabelAnnotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabelAnnotation::InternalSwap(LabelAnnotation* other) {
  using std::swap;
  locations_.InternalSwap(&other->locations_);
  description_.Swap(&other->description_);
  language_code_.Swap(&other->language_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LabelAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SafeSearchAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SafeSearchAnnotation::kAdultFieldNumber;
const int SafeSearchAnnotation::kSpoofFieldNumber;
const int SafeSearchAnnotation::kMedicalFieldNumber;
const int SafeSearchAnnotation::kViolentFieldNumber;
const int SafeSearchAnnotation::kRacyFieldNumber;
const int SafeSearchAnnotation::kTimeOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SafeSearchAnnotation::SafeSearchAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsSafeSearchAnnotation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
}
SafeSearchAnnotation::SafeSearchAnnotation(const SafeSearchAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adult_, &from.adult_,
    static_cast<size_t>(reinterpret_cast<char*>(&racy_) -
    reinterpret_cast<char*>(&adult_)) + sizeof(racy_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
}

void SafeSearchAnnotation::SharedCtor() {
  ::memset(&adult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&racy_) -
      reinterpret_cast<char*>(&adult_)) + sizeof(racy_));
  _cached_size_ = 0;
}

SafeSearchAnnotation::~SafeSearchAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  SharedDtor();
}

void SafeSearchAnnotation::SharedDtor() {
}

void SafeSearchAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SafeSearchAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SafeSearchAnnotation& SafeSearchAnnotation::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsSafeSearchAnnotation();
  return *internal_default_instance();
}

SafeSearchAnnotation* SafeSearchAnnotation::New(::google::protobuf::Arena* arena) const {
  SafeSearchAnnotation* n = new SafeSearchAnnotation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SafeSearchAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&adult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&racy_) -
      reinterpret_cast<char*>(&adult_)) + sizeof(racy_));
  _internal_metadata_.Clear();
}

bool SafeSearchAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.videointelligence.v1beta1.Likelihood adult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_adult(static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.videointelligence.v1beta1.Likelihood spoof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_spoof(static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.videointelligence.v1beta1.Likelihood medical = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_medical(static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.videointelligence.v1beta1.Likelihood violent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_violent(static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.videointelligence.v1beta1.Likelihood racy = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_racy(static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time_offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  return false;
#undef DO_
}

void SafeSearchAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.videointelligence.v1beta1.Likelihood adult = 1;
  if (this->adult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->adult(), output);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->spoof(), output);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood medical = 3;
  if (this->medical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->medical(), output);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood violent = 4;
  if (this->violent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->violent(), output);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood racy = 5;
  if (this->racy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->racy(), output);
  }

  // int64 time_offset = 6;
  if (this->time_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->time_offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
}

::google::protobuf::uint8* SafeSearchAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.videointelligence.v1beta1.Likelihood adult = 1;
  if (this->adult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->adult(), target);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->spoof(), target);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood medical = 3;
  if (this->medical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->medical(), target);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood violent = 4;
  if (this->violent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->violent(), target);
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood racy = 5;
  if (this->racy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->racy(), target);
  }

  // int64 time_offset = 6;
  if (this->time_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->time_offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  return target;
}

size_t SafeSearchAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.videointelligence.v1beta1.Likelihood adult = 1;
  if (this->adult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->adult());
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->spoof());
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood medical = 3;
  if (this->medical() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->medical());
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood violent = 4;
  if (this->violent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->violent());
  }

  // int64 time_offset = 6;
  if (this->time_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_offset());
  }

  // .google.cloud.videointelligence.v1beta1.Likelihood racy = 5;
  if (this->racy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->racy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SafeSearchAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const SafeSearchAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SafeSearchAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
    MergeFrom(*source);
  }
}

void SafeSearchAnnotation::MergeFrom(const SafeSearchAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.adult() != 0) {
    set_adult(from.adult());
  }
  if (from.spoof() != 0) {
    set_spoof(from.spoof());
  }
  if (from.medical() != 0) {
    set_medical(from.medical());
  }
  if (from.violent() != 0) {
    set_violent(from.violent());
  }
  if (from.time_offset() != 0) {
    set_time_offset(from.time_offset());
  }
  if (from.racy() != 0) {
    set_racy(from.racy());
  }
}

void SafeSearchAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SafeSearchAnnotation::CopyFrom(const SafeSearchAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SafeSearchAnnotation::IsInitialized() const {
  return true;
}

void SafeSearchAnnotation::Swap(SafeSearchAnnotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SafeSearchAnnotation::InternalSwap(SafeSearchAnnotation* other) {
  using std::swap;
  swap(adult_, other->adult_);
  swap(spoof_, other->spoof_);
  swap(medical_, other->medical_);
  swap(violent_, other->violent_);
  swap(time_offset_, other->time_offset_);
  swap(racy_, other->racy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SafeSearchAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoundingBox::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoundingBox::kLeftFieldNumber;
const int BoundingBox::kRightFieldNumber;
const int BoundingBox::kBottomFieldNumber;
const int BoundingBox::kTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoundingBox::BoundingBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsBoundingBox();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.BoundingBox)
}
BoundingBox::BoundingBox(const BoundingBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&top_) -
    reinterpret_cast<char*>(&left_)) + sizeof(top_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.BoundingBox)
}

void BoundingBox::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_) -
      reinterpret_cast<char*>(&left_)) + sizeof(top_));
  _cached_size_ = 0;
}

BoundingBox::~BoundingBox() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.BoundingBox)
  SharedDtor();
}

void BoundingBox::SharedDtor() {
}

void BoundingBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoundingBox::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoundingBox& BoundingBox::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsBoundingBox();
  return *internal_default_instance();
}

BoundingBox* BoundingBox::New(::google::protobuf::Arena* arena) const {
  BoundingBox* n = new BoundingBox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_) -
      reinterpret_cast<char*>(&left_)) + sizeof(top_));
  _internal_metadata_.Clear();
}

bool BoundingBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bottom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 top = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.BoundingBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.BoundingBox)
  return false;
#undef DO_
}

void BoundingBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 left = 1;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left(), output);
  }

  // int32 right = 2;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->right(), output);
  }

  // int32 bottom = 3;
  if (this->bottom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bottom(), output);
  }

  // int32 top = 4;
  if (this->top() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->top(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.BoundingBox)
}

::google::protobuf::uint8* BoundingBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 left = 1;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left(), target);
  }

  // int32 right = 2;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->right(), target);
  }

  // int32 bottom = 3;
  if (this->bottom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bottom(), target);
  }

  // int32 top = 4;
  if (this->top() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->top(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.BoundingBox)
  return target;
}

size_t BoundingBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 left = 1;
  if (this->left() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->left());
  }

  // int32 right = 2;
  if (this->right() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->right());
  }

  // int32 bottom = 3;
  if (this->bottom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bottom());
  }

  // int32 top = 4;
  if (this->top() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->top());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoundingBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundingBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoundingBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.BoundingBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.BoundingBox)
    MergeFrom(*source);
  }
}

void BoundingBox::MergeFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.bottom() != 0) {
    set_bottom(from.bottom());
  }
  if (from.top() != 0) {
    set_top(from.top());
  }
}

void BoundingBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundingBox::CopyFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundingBox::IsInitialized() const {
  return true;
}

void BoundingBox::Swap(BoundingBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoundingBox::InternalSwap(BoundingBox* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(bottom_, other->bottom_);
  swap(top_, other->top_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoundingBox::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaceLocation::InitAsDefaultInstance() {
  ::google::cloud::videointelligence::v1beta1::_FaceLocation_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::google::cloud::videointelligence::v1beta1::BoundingBox*>(
      ::google::cloud::videointelligence::v1beta1::BoundingBox::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceLocation::kBoundingBoxFieldNumber;
const int FaceLocation::kTimeOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceLocation::FaceLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceLocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.FaceLocation)
}
FaceLocation::FaceLocation(const FaceLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::videointelligence::v1beta1::BoundingBox(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  time_offset_ = from.time_offset_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.FaceLocation)
}

void FaceLocation::SharedCtor() {
  ::memset(&bounding_box_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_offset_) -
      reinterpret_cast<char*>(&bounding_box_)) + sizeof(time_offset_));
  _cached_size_ = 0;
}

FaceLocation::~FaceLocation() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.FaceLocation)
  SharedDtor();
}

void FaceLocation::SharedDtor() {
  if (this != internal_default_instance()) delete bounding_box_;
}

void FaceLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceLocation::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceLocation& FaceLocation::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceLocation();
  return *internal_default_instance();
}

FaceLocation* FaceLocation::New(::google::protobuf::Arena* arena) const {
  FaceLocation* n = new FaceLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaceLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
  time_offset_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool FaceLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.videointelligence.v1beta1.BoundingBox bounding_box = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.FaceLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.FaceLocation)
  return false;
#undef DO_
}

void FaceLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.videointelligence.v1beta1.BoundingBox bounding_box = 1;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bounding_box_, output);
  }

  // int64 time_offset = 2;
  if (this->time_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time_offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.FaceLocation)
}

::google::protobuf::uint8* FaceLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.videointelligence.v1beta1.BoundingBox bounding_box = 1;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->bounding_box_, deterministic, target);
  }

  // int64 time_offset = 2;
  if (this->time_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time_offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.FaceLocation)
  return target;
}

size_t FaceLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.videointelligence.v1beta1.BoundingBox bounding_box = 1;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bounding_box_);
  }

  // int64 time_offset = 2;
  if (this->time_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.FaceLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.FaceLocation)
    MergeFrom(*source);
  }
}

void FaceLocation::MergeFrom(const FaceLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::videointelligence::v1beta1::BoundingBox::MergeFrom(from.bounding_box());
  }
  if (from.time_offset() != 0) {
    set_time_offset(from.time_offset());
  }
}

void FaceLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceLocation::CopyFrom(const FaceLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.FaceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceLocation::IsInitialized() const {
  return true;
}

void FaceLocation::Swap(FaceLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceLocation::InternalSwap(FaceLocation* other) {
  using std::swap;
  swap(bounding_box_, other->bounding_box_);
  swap(time_offset_, other->time_offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceLocation::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaceAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceAnnotation::kThumbnailFieldNumber;
const int FaceAnnotation::kSegmentsFieldNumber;
const int FaceAnnotation::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceAnnotation::FaceAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceAnnotation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.FaceAnnotation)
}
FaceAnnotation::FaceAnnotation(const FaceAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      segments_(from.segments_),
      locations_(from.locations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  thumbnail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail().size() > 0) {
    thumbnail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.FaceAnnotation)
}

void FaceAnnotation::SharedCtor() {
  thumbnail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FaceAnnotation::~FaceAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  SharedDtor();
}

void FaceAnnotation::SharedDtor() {
  thumbnail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FaceAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceAnnotation& FaceAnnotation::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceAnnotation();
  return *internal_default_instance();
}

FaceAnnotation* FaceAnnotation::New(::google::protobuf::Arena* arena) const {
  FaceAnnotation* n = new FaceAnnotation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaceAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segments_.Clear();
  locations_.Clear();
  thumbnail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FaceAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string thumbnail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail().data(), static_cast<int>(this->thumbnail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_segments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.FaceLocation locations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  return false;
#undef DO_
}

void FaceAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string thumbnail = 1;
  if (this->thumbnail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail().data(), static_cast<int>(this->thumbnail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->thumbnail(), output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->segments(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.FaceLocation locations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->locations(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.FaceAnnotation)
}

::google::protobuf::uint8* FaceAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string thumbnail = 1;
  if (this->thumbnail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail().data(), static_cast<int>(this->thumbnail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->thumbnail(), target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->segments(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.FaceLocation locations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->locations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  return target;
}

size_t FaceAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->segments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->segments(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.videointelligence.v1beta1.FaceLocation locations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  // string thumbnail = 1;
  if (this->thumbnail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.FaceAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.FaceAnnotation)
    MergeFrom(*source);
  }
}

void FaceAnnotation::MergeFrom(const FaceAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  segments_.MergeFrom(from.segments_);
  locations_.MergeFrom(from.locations_);
  if (from.thumbnail().size() > 0) {

    thumbnail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_);
  }
}

void FaceAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceAnnotation::CopyFrom(const FaceAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.FaceAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceAnnotation::IsInitialized() const {
  return true;
}

void FaceAnnotation::Swap(FaceAnnotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceAnnotation::InternalSwap(FaceAnnotation* other) {
  using std::swap;
  segments_.InternalSwap(&other->segments_);
  locations_.InternalSwap(&other->locations_);
  thumbnail_.Swap(&other->thumbnail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VideoAnnotationResults::InitAsDefaultInstance() {
  ::google::cloud::videointelligence::v1beta1::_VideoAnnotationResults_default_instance_._instance.get_mutable()->error_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void VideoAnnotationResults::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VideoAnnotationResults::kInputUriFieldNumber;
const int VideoAnnotationResults::kLabelAnnotationsFieldNumber;
const int VideoAnnotationResults::kFaceAnnotationsFieldNumber;
const int VideoAnnotationResults::kShotAnnotationsFieldNumber;
const int VideoAnnotationResults::kSafeSearchAnnotationsFieldNumber;
const int VideoAnnotationResults::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VideoAnnotationResults::VideoAnnotationResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationResults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
}
VideoAnnotationResults::VideoAnnotationResults(const VideoAnnotationResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      label_annotations_(from.label_annotations_),
      face_annotations_(from.face_annotations_),
      shot_annotations_(from.shot_annotations_),
      safe_search_annotations_(from.safe_search_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_uri().size() > 0) {
    input_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_uri_);
  }
  if (from.has_error()) {
    error_ = new ::google::rpc::Status(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
}

void VideoAnnotationResults::SharedCtor() {
  input_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

VideoAnnotationResults::~VideoAnnotationResults() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  SharedDtor();
}

void VideoAnnotationResults::SharedDtor() {
  input_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void VideoAnnotationResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VideoAnnotationResults::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VideoAnnotationResults& VideoAnnotationResults::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationResults();
  return *internal_default_instance();
}

VideoAnnotationResults* VideoAnnotationResults::New(::google::protobuf::Arena* arena) const {
  VideoAnnotationResults* n = new VideoAnnotationResults;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VideoAnnotationResults::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_annotations_.Clear();
  face_annotations_.Clear();
  shot_annotations_.Clear();
  safe_search_annotations_.Clear();
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool VideoAnnotationResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string input_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_uri().data(), static_cast<int>(this->input_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.LabelAnnotation label_annotations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_label_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.FaceAnnotation face_annotations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_face_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.VideoSegment shot_annotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_shot_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.videointelligence.v1beta1.SafeSearchAnnotation safe_search_annotations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_safe_search_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  return false;
#undef DO_
}

void VideoAnnotationResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uri().data(), static_cast<int>(this->input_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->input_uri(), output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.LabelAnnotation label_annotations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->label_annotations(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.FaceAnnotation face_annotations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->face_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->face_annotations(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment shot_annotations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shot_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->shot_annotations(static_cast<int>(i)), output);
  }

  // .google.rpc.Status error = 5;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->error_, output);
  }

  // repeated .google.cloud.videointelligence.v1beta1.SafeSearchAnnotation safe_search_annotations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->safe_search_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->safe_search_annotations(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
}

::google::protobuf::uint8* VideoAnnotationResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uri().data(), static_cast<int>(this->input_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->input_uri(), target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.LabelAnnotation label_annotations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->label_annotations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.FaceAnnotation face_annotations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->face_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->face_annotations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment shot_annotations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shot_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->shot_annotations(static_cast<int>(i)), deterministic, target);
  }

  // .google.rpc.Status error = 5;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->error_, deterministic, target);
  }

  // repeated .google.cloud.videointelligence.v1beta1.SafeSearchAnnotation safe_search_annotations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->safe_search_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->safe_search_annotations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  return target;
}

size_t VideoAnnotationResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.videointelligence.v1beta1.LabelAnnotation label_annotations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->label_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->label_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.videointelligence.v1beta1.FaceAnnotation face_annotations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->face_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->face_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment shot_annotations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->shot_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shot_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.videointelligence.v1beta1.SafeSearchAnnotation safe_search_annotations = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->safe_search_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->safe_search_annotations(static_cast<int>(i)));
    }
  }

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_uri());
  }

  // .google.rpc.Status error = 5;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VideoAnnotationResults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoAnnotationResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VideoAnnotationResults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
    MergeFrom(*source);
  }
}

void VideoAnnotationResults::MergeFrom(const VideoAnnotationResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_annotations_.MergeFrom(from.label_annotations_);
  face_annotations_.MergeFrom(from.face_annotations_);
  shot_annotations_.MergeFrom(from.shot_annotations_);
  safe_search_annotations_.MergeFrom(from.safe_search_annotations_);
  if (from.input_uri().size() > 0) {

    input_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_uri_);
  }
  if (from.has_error()) {
    mutable_error()->::google::rpc::Status::MergeFrom(from.error());
  }
}

void VideoAnnotationResults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoAnnotationResults::CopyFrom(const VideoAnnotationResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoAnnotationResults::IsInitialized() const {
  return true;
}

void VideoAnnotationResults::Swap(VideoAnnotationResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VideoAnnotationResults::InternalSwap(VideoAnnotationResults* other) {
  using std::swap;
  label_annotations_.InternalSwap(&other->label_annotations_);
  face_annotations_.InternalSwap(&other->face_annotations_);
  shot_annotations_.InternalSwap(&other->shot_annotations_);
  safe_search_annotations_.InternalSwap(&other->safe_search_annotations_);
  input_uri_.Swap(&other->input_uri_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VideoAnnotationResults::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnnotateVideoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateVideoResponse::kAnnotationResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateVideoResponse::AnnotateVideoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
}
AnnotateVideoResponse::AnnotateVideoResponse(const AnnotateVideoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotation_results_(from.annotation_results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
}

void AnnotateVideoResponse::SharedCtor() {
  _cached_size_ = 0;
}

AnnotateVideoResponse::~AnnotateVideoResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  SharedDtor();
}

void AnnotateVideoResponse::SharedDtor() {
}

void AnnotateVideoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnotateVideoResponse::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotateVideoResponse& AnnotateVideoResponse::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoResponse();
  return *internal_default_instance();
}

AnnotateVideoResponse* AnnotateVideoResponse::New(::google::protobuf::Arena* arena) const {
  AnnotateVideoResponse* n = new AnnotateVideoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnnotateVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  annotation_results_.Clear();
  _internal_metadata_.Clear();
}

bool AnnotateVideoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationResults annotation_results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_annotation_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  return false;
#undef DO_
}

void AnnotateVideoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationResults annotation_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->annotation_results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
}

::google::protobuf::uint8* AnnotateVideoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationResults annotation_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->annotation_results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  return target;
}

size_t AnnotateVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationResults annotation_results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->annotation_results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->annotation_results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnotateVideoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotateVideoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateVideoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
    MergeFrom(*source);
  }
}

void AnnotateVideoResponse::MergeFrom(const AnnotateVideoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  annotation_results_.MergeFrom(from.annotation_results_);
}

void AnnotateVideoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateVideoResponse::CopyFrom(const AnnotateVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotateVideoResponse::IsInitialized() const {
  return true;
}

void AnnotateVideoResponse::Swap(AnnotateVideoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnnotateVideoResponse::InternalSwap(AnnotateVideoResponse* other) {
  using std::swap;
  annotation_results_.InternalSwap(&other->annotation_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnotateVideoResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VideoAnnotationProgress::InitAsDefaultInstance() {
  ::google::cloud::videointelligence::v1beta1::_VideoAnnotationProgress_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::videointelligence::v1beta1::_VideoAnnotationProgress_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void VideoAnnotationProgress::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void VideoAnnotationProgress::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VideoAnnotationProgress::kInputUriFieldNumber;
const int VideoAnnotationProgress::kProgressPercentFieldNumber;
const int VideoAnnotationProgress::kStartTimeFieldNumber;
const int VideoAnnotationProgress::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VideoAnnotationProgress::VideoAnnotationProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
}
VideoAnnotationProgress::VideoAnnotationProgress(const VideoAnnotationProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_uri().size() > 0) {
    input_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_uri_);
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  progress_percent_ = from.progress_percent_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
}

void VideoAnnotationProgress::SharedCtor() {
  input_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_percent_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(progress_percent_));
  _cached_size_ = 0;
}

VideoAnnotationProgress::~VideoAnnotationProgress() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  SharedDtor();
}

void VideoAnnotationProgress::SharedDtor() {
  input_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void VideoAnnotationProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VideoAnnotationProgress::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VideoAnnotationProgress& VideoAnnotationProgress::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationProgress();
  return *internal_default_instance();
}

VideoAnnotationProgress* VideoAnnotationProgress::New(::google::protobuf::Arena* arena) const {
  VideoAnnotationProgress* n = new VideoAnnotationProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VideoAnnotationProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  progress_percent_ = 0;
  _internal_metadata_.Clear();
}

bool VideoAnnotationProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string input_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_uri().data(), static_cast<int>(this->input_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 progress_percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  return false;
#undef DO_
}

void VideoAnnotationProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uri().data(), static_cast<int>(this->input_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->input_uri(), output);
  }

  // int32 progress_percent = 2;
  if (this->progress_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->progress_percent(), output);
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp update_time = 4;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->update_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
}

::google::protobuf::uint8* VideoAnnotationProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uri().data(), static_cast<int>(this->input_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->input_uri(), target);
  }

  // int32 progress_percent = 2;
  if (this->progress_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->progress_percent(), target);
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 4;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->update_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  return target;
}

size_t VideoAnnotationProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string input_uri = 1;
  if (this->input_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_uri());
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp update_time = 4;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_time_);
  }

  // int32 progress_percent = 2;
  if (this->progress_percent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->progress_percent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VideoAnnotationProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoAnnotationProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VideoAnnotationProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
    MergeFrom(*source);
  }
}

void VideoAnnotationProgress::MergeFrom(const VideoAnnotationProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_uri().size() > 0) {

    input_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_uri_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.progress_percent() != 0) {
    set_progress_percent(from.progress_percent());
  }
}

void VideoAnnotationProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoAnnotationProgress::CopyFrom(const VideoAnnotationProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoAnnotationProgress::IsInitialized() const {
  return true;
}

void VideoAnnotationProgress::Swap(VideoAnnotationProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VideoAnnotationProgress::InternalSwap(VideoAnnotationProgress* other) {
  using std::swap;
  input_uri_.Swap(&other->input_uri_);
  swap(start_time_, other->start_time_);
  swap(update_time_, other->update_time_);
  swap(progress_percent_, other->progress_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VideoAnnotationProgress::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnnotateVideoProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateVideoProgress::kAnnotationProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateVideoProgress::AnnotateVideoProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
}
AnnotateVideoProgress::AnnotateVideoProgress(const AnnotateVideoProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotation_progress_(from.annotation_progress_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
}

void AnnotateVideoProgress::SharedCtor() {
  _cached_size_ = 0;
}

AnnotateVideoProgress::~AnnotateVideoProgress() {
  // @@protoc_insertion_point(destructor:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  SharedDtor();
}

void AnnotateVideoProgress::SharedDtor() {
}

void AnnotateVideoProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnotateVideoProgress::descriptor() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotateVideoProgress& AnnotateVideoProgress::default_instance() {
  ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoProgress();
  return *internal_default_instance();
}

AnnotateVideoProgress* AnnotateVideoProgress::New(::google::protobuf::Arena* arena) const {
  AnnotateVideoProgress* n = new AnnotateVideoProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnnotateVideoProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  annotation_progress_.Clear();
  _internal_metadata_.Clear();
}

bool AnnotateVideoProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationProgress annotation_progress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_annotation_progress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  return false;
#undef DO_
}

void AnnotateVideoProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationProgress annotation_progress = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_progress_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->annotation_progress(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
}

::google::protobuf::uint8* AnnotateVideoProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationProgress annotation_progress = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_progress_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->annotation_progress(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  return target;
}

size_t AnnotateVideoProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationProgress annotation_progress = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->annotation_progress_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->annotation_progress(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnotateVideoProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotateVideoProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateVideoProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
    MergeFrom(*source);
  }
}

void AnnotateVideoProgress::MergeFrom(const AnnotateVideoProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  annotation_progress_.MergeFrom(from.annotation_progress_);
}

void AnnotateVideoProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateVideoProgress::CopyFrom(const AnnotateVideoProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotateVideoProgress::IsInitialized() const {
  return true;
}

void AnnotateVideoProgress::Swap(AnnotateVideoProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnnotateVideoProgress::InternalSwap(AnnotateVideoProgress* other) {
  using std::swap;
  annotation_progress_.InternalSwap(&other->annotation_progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnotateVideoProgress::GetMetadata() const {
  protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace videointelligence
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
