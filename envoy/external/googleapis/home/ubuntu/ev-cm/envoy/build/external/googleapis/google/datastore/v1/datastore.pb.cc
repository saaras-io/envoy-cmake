// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1/datastore.proto

#include "google/datastore/v1/datastore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace datastore {
namespace v1 {
class LookupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LookupRequest>
      _instance;
} _LookupRequest_default_instance_;
class LookupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LookupResponse>
      _instance;
} _LookupResponse_default_instance_;
class RunQueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunQueryRequest>
      _instance;
  const ::google::datastore::v1::Query* query_;
  const ::google::datastore::v1::GqlQuery* gql_query_;
} _RunQueryRequest_default_instance_;
class RunQueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunQueryResponse>
      _instance;
} _RunQueryResponse_default_instance_;
class BeginTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeginTransactionRequest>
      _instance;
} _BeginTransactionRequest_default_instance_;
class BeginTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeginTransactionResponse>
      _instance;
} _BeginTransactionResponse_default_instance_;
class RollbackRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackRequest>
      _instance;
} _RollbackRequest_default_instance_;
class RollbackResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackResponse>
      _instance;
} _RollbackResponse_default_instance_;
class CommitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitRequest>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
} _CommitRequest_default_instance_;
class CommitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitResponse>
      _instance;
} _CommitResponse_default_instance_;
class AllocateIdsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateIdsRequest>
      _instance;
} _AllocateIdsRequest_default_instance_;
class AllocateIdsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateIdsResponse>
      _instance;
} _AllocateIdsResponse_default_instance_;
class MutationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation>
      _instance;
  const ::google::datastore::v1::Entity* insert_;
  const ::google::datastore::v1::Entity* update_;
  const ::google::datastore::v1::Entity* upsert_;
  const ::google::datastore::v1::Key* delete__;
  ::google::protobuf::int64 base_version_;
} _Mutation_default_instance_;
class MutationResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutationResult>
      _instance;
} _MutationResult_default_instance_;
class ReadOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadOptions>
      _instance;
  int read_consistency_;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
} _ReadOptions_default_instance_;
class TransactionOptions_ReadWriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions_ReadWrite>
      _instance;
} _TransactionOptions_ReadWrite_default_instance_;
class TransactionOptions_ReadOnlyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions_ReadOnly>
      _instance;
} _TransactionOptions_ReadOnly_default_instance_;
class TransactionOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions>
      _instance;
  const ::google::datastore::v1::TransactionOptions_ReadWrite* read_write_;
  const ::google::datastore::v1::TransactionOptions_ReadOnly* read_only_;
} _TransactionOptions_default_instance_;
}  // namespace v1
}  // namespace datastore
}  // namespace google
namespace protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto {
void InitDefaultsLookupRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsReadOptions();
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  {
    void* ptr = &::google::datastore::v1::_LookupRequest_default_instance_;
    new (ptr) ::google::datastore::v1::LookupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::LookupRequest::InitAsDefaultInstance();
}

void InitDefaultsLookupRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLookupRequestImpl);
}

void InitDefaultsLookupResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaultsEntityResult();
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  {
    void* ptr = &::google::datastore::v1::_LookupResponse_default_instance_;
    new (ptr) ::google::datastore::v1::LookupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::LookupResponse::InitAsDefaultInstance();
}

void InitDefaultsLookupResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLookupResponseImpl);
}

void InitDefaultsRunQueryRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsPartitionId();
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsReadOptions();
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaultsQuery();
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaultsGqlQuery();
  {
    void* ptr = &::google::datastore::v1::_RunQueryRequest_default_instance_;
    new (ptr) ::google::datastore::v1::RunQueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RunQueryRequest::InitAsDefaultInstance();
}

void InitDefaultsRunQueryRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunQueryRequestImpl);
}

void InitDefaultsRunQueryResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaultsQueryResultBatch();
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaultsQuery();
  {
    void* ptr = &::google::datastore::v1::_RunQueryResponse_default_instance_;
    new (ptr) ::google::datastore::v1::RunQueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RunQueryResponse::InitAsDefaultInstance();
}

void InitDefaultsRunQueryResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunQueryResponseImpl);
}

void InitDefaultsBeginTransactionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions();
  {
    void* ptr = &::google::datastore::v1::_BeginTransactionRequest_default_instance_;
    new (ptr) ::google::datastore::v1::BeginTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::BeginTransactionRequest::InitAsDefaultInstance();
}

void InitDefaultsBeginTransactionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBeginTransactionRequestImpl);
}

void InitDefaultsBeginTransactionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_BeginTransactionResponse_default_instance_;
    new (ptr) ::google::datastore::v1::BeginTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::BeginTransactionResponse::InitAsDefaultInstance();
}

void InitDefaultsBeginTransactionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBeginTransactionResponseImpl);
}

void InitDefaultsRollbackRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_RollbackRequest_default_instance_;
    new (ptr) ::google::datastore::v1::RollbackRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RollbackRequest::InitAsDefaultInstance();
}

void InitDefaultsRollbackRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRollbackRequestImpl);
}

void InitDefaultsRollbackResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_RollbackResponse_default_instance_;
    new (ptr) ::google::datastore::v1::RollbackResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::RollbackResponse::InitAsDefaultInstance();
}

void InitDefaultsRollbackResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRollbackResponseImpl);
}

void InitDefaultsCommitRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsMutation();
  {
    void* ptr = &::google::datastore::v1::_CommitRequest_default_instance_;
    new (ptr) ::google::datastore::v1::CommitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::CommitRequest::InitAsDefaultInstance();
}

void InitDefaultsCommitRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommitRequestImpl);
}

void InitDefaultsCommitResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsMutationResult();
  {
    void* ptr = &::google::datastore::v1::_CommitResponse_default_instance_;
    new (ptr) ::google::datastore::v1::CommitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::CommitResponse::InitAsDefaultInstance();
}

void InitDefaultsCommitResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommitResponseImpl);
}

void InitDefaultsAllocateIdsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  {
    void* ptr = &::google::datastore::v1::_AllocateIdsRequest_default_instance_;
    new (ptr) ::google::datastore::v1::AllocateIdsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::AllocateIdsRequest::InitAsDefaultInstance();
}

void InitDefaultsAllocateIdsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllocateIdsRequestImpl);
}

void InitDefaultsAllocateIdsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  {
    void* ptr = &::google::datastore::v1::_AllocateIdsResponse_default_instance_;
    new (ptr) ::google::datastore::v1::AllocateIdsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::AllocateIdsResponse::InitAsDefaultInstance();
}

void InitDefaultsAllocateIdsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllocateIdsResponseImpl);
}

void InitDefaultsMutationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsArrayValue();
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  {
    void* ptr = &::google::datastore::v1::_Mutation_default_instance_;
    new (ptr) ::google::datastore::v1::Mutation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::Mutation::InitAsDefaultInstance();
}

void InitDefaultsMutation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutationImpl);
}

void InitDefaultsMutationResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  {
    void* ptr = &::google::datastore::v1::_MutationResult_default_instance_;
    new (ptr) ::google::datastore::v1::MutationResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::MutationResult::InitAsDefaultInstance();
}

void InitDefaultsMutationResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutationResultImpl);
}

void InitDefaultsReadOptionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_ReadOptions_default_instance_;
    new (ptr) ::google::datastore::v1::ReadOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::ReadOptions::InitAsDefaultInstance();
}

void InitDefaultsReadOptions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadOptionsImpl);
}

void InitDefaultsTransactionOptions_ReadWriteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_TransactionOptions_ReadWrite_default_instance_;
    new (ptr) ::google::datastore::v1::TransactionOptions_ReadWrite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::TransactionOptions_ReadWrite::InitAsDefaultInstance();
}

void InitDefaultsTransactionOptions_ReadWrite() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionOptions_ReadWriteImpl);
}

void InitDefaultsTransactionOptions_ReadOnlyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_TransactionOptions_ReadOnly_default_instance_;
    new (ptr) ::google::datastore::v1::TransactionOptions_ReadOnly();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::TransactionOptions_ReadOnly::InitAsDefaultInstance();
}

void InitDefaultsTransactionOptions_ReadOnly() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionOptions_ReadOnlyImpl);
}

void InitDefaultsTransactionOptionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions_ReadWrite();
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions_ReadOnly();
  {
    void* ptr = &::google::datastore::v1::_TransactionOptions_default_instance_;
    new (ptr) ::google::datastore::v1::TransactionOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::TransactionOptions::InitAsDefaultInstance();
}

void InitDefaultsTransactionOptions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionOptionsImpl);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupRequest, read_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupRequest, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupResponse, found_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupResponse, missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::LookupResponse, deferred_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, partition_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, read_options_),
  offsetof(::google::datastore::v1::RunQueryRequestDefaultTypeInternal, query_),
  offsetof(::google::datastore::v1::RunQueryRequestDefaultTypeInternal, gql_query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryRequest, query_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryResponse, batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RunQueryResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::BeginTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::BeginTransactionRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::BeginTransactionRequest, transaction_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::BeginTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::BeginTransactionResponse, transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RollbackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RollbackRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RollbackRequest, transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::RollbackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitRequest, mode_),
  offsetof(::google::datastore::v1::CommitRequestDefaultTypeInternal, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitRequest, mutations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitRequest, transaction_selector_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitResponse, mutation_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::CommitResponse, index_updates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::AllocateIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::AllocateIdsRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::AllocateIdsRequest, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::AllocateIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::AllocateIdsResponse, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Mutation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, insert_),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, update_),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, upsert_),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, delete__),
  offsetof(::google::datastore::v1::MutationDefaultTypeInternal, base_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Mutation, operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Mutation, conflict_detection_strategy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::MutationResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::MutationResult, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::MutationResult, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::MutationResult, conflict_detected_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::ReadOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::ReadOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::datastore::v1::ReadOptionsDefaultTypeInternal, read_consistency_),
  offsetof(::google::datastore::v1::ReadOptionsDefaultTypeInternal, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::ReadOptions, consistency_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::TransactionOptions_ReadWrite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::TransactionOptions_ReadWrite, previous_transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::TransactionOptions_ReadOnly, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::TransactionOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::TransactionOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::datastore::v1::TransactionOptionsDefaultTypeInternal, read_write_),
  offsetof(::google::datastore::v1::TransactionOptionsDefaultTypeInternal, read_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::TransactionOptions, mode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::datastore::v1::LookupRequest)},
  { 8, -1, sizeof(::google::datastore::v1::LookupResponse)},
  { 16, -1, sizeof(::google::datastore::v1::RunQueryRequest)},
  { 27, -1, sizeof(::google::datastore::v1::RunQueryResponse)},
  { 34, -1, sizeof(::google::datastore::v1::BeginTransactionRequest)},
  { 41, -1, sizeof(::google::datastore::v1::BeginTransactionResponse)},
  { 47, -1, sizeof(::google::datastore::v1::RollbackRequest)},
  { 54, -1, sizeof(::google::datastore::v1::RollbackResponse)},
  { 59, -1, sizeof(::google::datastore::v1::CommitRequest)},
  { 69, -1, sizeof(::google::datastore::v1::CommitResponse)},
  { 76, -1, sizeof(::google::datastore::v1::AllocateIdsRequest)},
  { 83, -1, sizeof(::google::datastore::v1::AllocateIdsResponse)},
  { 89, -1, sizeof(::google::datastore::v1::Mutation)},
  { 101, -1, sizeof(::google::datastore::v1::MutationResult)},
  { 109, -1, sizeof(::google::datastore::v1::ReadOptions)},
  { 117, -1, sizeof(::google::datastore::v1::TransactionOptions_ReadWrite)},
  { 123, -1, sizeof(::google::datastore::v1::TransactionOptions_ReadOnly)},
  { 128, -1, sizeof(::google::datastore::v1::TransactionOptions)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_LookupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_LookupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RunQueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RunQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_BeginTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_BeginTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RollbackRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_RollbackResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_CommitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_CommitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_AllocateIdsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_AllocateIdsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_Mutation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_MutationResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_ReadOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_TransactionOptions_ReadWrite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_TransactionOptions_ReadOnly_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_TransactionOptions_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/datastore/v1/datastore.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#google/datastore/v1/datastore.proto\022\023g"
      "oogle.datastore.v1\032\034google/api/annotatio"
      "ns.proto\032 google/datastore/v1/entity.pro"
      "to\032\037google/datastore/v1/query.proto\"\203\001\n\r"
      "LookupRequest\022\022\n\nproject_id\030\010 \001(\t\0226\n\014rea"
      "d_options\030\001 \001(\0132 .google.datastore.v1.Re"
      "adOptions\022&\n\004keys\030\003 \003(\0132\030.google.datasto"
      "re.v1.Key\"\242\001\n\016LookupResponse\0220\n\005found\030\001 "
      "\003(\0132!.google.datastore.v1.EntityResult\0222"
      "\n\007missing\030\002 \003(\0132!.google.datastore.v1.En"
      "tityResult\022*\n\010deferred\030\003 \003(\0132\030.google.da"
      "tastore.v1.Key\"\204\002\n\017RunQueryRequest\022\022\n\npr"
      "oject_id\030\010 \001(\t\0226\n\014partition_id\030\002 \001(\0132 .g"
      "oogle.datastore.v1.PartitionId\0226\n\014read_o"
      "ptions\030\001 \001(\0132 .google.datastore.v1.ReadO"
      "ptions\022+\n\005query\030\003 \001(\0132\032.google.datastore"
      ".v1.QueryH\000\0222\n\tgql_query\030\007 \001(\0132\035.google."
      "datastore.v1.GqlQueryH\000B\014\n\nquery_type\"s\n"
      "\020RunQueryResponse\0224\n\005batch\030\001 \001(\0132%.googl"
      "e.datastore.v1.QueryResultBatch\022)\n\005query"
      "\030\002 \001(\0132\032.google.datastore.v1.Query\"s\n\027Be"
      "ginTransactionRequest\022\022\n\nproject_id\030\010 \001("
      "\t\022D\n\023transaction_options\030\n \001(\0132\'.google."
      "datastore.v1.TransactionOptions\"/\n\030Begin"
      "TransactionResponse\022\023\n\013transaction\030\001 \001(\014"
      "\":\n\017RollbackRequest\022\022\n\nproject_id\030\010 \001(\t\022"
      "\023\n\013transaction\030\001 \001(\014\"\022\n\020RollbackResponse"
      "\"\203\002\n\rCommitRequest\022\022\n\nproject_id\030\010 \001(\t\0225"
      "\n\004mode\030\005 \001(\0162\'.google.datastore.v1.Commi"
      "tRequest.Mode\022\025\n\013transaction\030\001 \001(\014H\000\0220\n\t"
      "mutations\030\006 \003(\0132\035.google.datastore.v1.Mu"
      "tation\"F\n\004Mode\022\024\n\020MODE_UNSPECIFIED\020\000\022\021\n\r"
      "TRANSACTIONAL\020\001\022\025\n\021NON_TRANSACTIONAL\020\002B\026"
      "\n\024transaction_selector\"f\n\016CommitResponse"
      "\022=\n\020mutation_results\030\003 \003(\0132#.google.data"
      "store.v1.MutationResult\022\025\n\rindex_updates"
      "\030\004 \001(\005\"P\n\022AllocateIdsRequest\022\022\n\nproject_"
      "id\030\010 \001(\t\022&\n\004keys\030\001 \003(\0132\030.google.datastor"
      "e.v1.Key\"=\n\023AllocateIdsResponse\022&\n\004keys\030"
      "\001 \003(\0132\030.google.datastore.v1.Key\"\207\002\n\010Muta"
      "tion\022-\n\006insert\030\004 \001(\0132\033.google.datastore."
      "v1.EntityH\000\022-\n\006update\030\005 \001(\0132\033.google.dat"
      "astore.v1.EntityH\000\022-\n\006upsert\030\006 \001(\0132\033.goo"
      "gle.datastore.v1.EntityH\000\022*\n\006delete\030\007 \001("
      "\0132\030.google.datastore.v1.KeyH\000\022\026\n\014base_ve"
      "rsion\030\010 \001(\003H\001B\013\n\toperationB\035\n\033conflict_d"
      "etection_strategy\"c\n\016MutationResult\022%\n\003k"
      "ey\030\003 \001(\0132\030.google.datastore.v1.Key\022\017\n\007ve"
      "rsion\030\004 \001(\003\022\031\n\021conflict_detected\030\005 \001(\010\"\325"
      "\001\n\013ReadOptions\022L\n\020read_consistency\030\001 \001(\016"
      "20.google.datastore.v1.ReadOptions.ReadC"
      "onsistencyH\000\022\025\n\013transaction\030\002 \001(\014H\000\"M\n\017R"
      "eadConsistency\022 \n\034READ_CONSISTENCY_UNSPE"
      "CIFIED\020\000\022\n\n\006STRONG\020\001\022\014\n\010EVENTUAL\020\002B\022\n\020co"
      "nsistency_type\"\343\001\n\022TransactionOptions\022G\n"
      "\nread_write\030\001 \001(\01321.google.datastore.v1."
      "TransactionOptions.ReadWriteH\000\022E\n\tread_o"
      "nly\030\002 \001(\01320.google.datastore.v1.Transact"
      "ionOptions.ReadOnlyH\000\032)\n\tReadWrite\022\034\n\024pr"
      "evious_transaction\030\001 \001(\014\032\n\n\010ReadOnlyB\006\n\004"
      "mode2\333\006\n\tDatastore\022~\n\006Lookup\022\".google.da"
      "tastore.v1.LookupRequest\032#.google.datast"
      "ore.v1.LookupResponse\"+\202\323\344\223\002%\" /v1/proje"
      "cts/{project_id}:lookup:\001*\022\206\001\n\010RunQuery\022"
      "$.google.datastore.v1.RunQueryRequest\032%."
      "google.datastore.v1.RunQueryResponse\"-\202\323"
      "\344\223\002\'\"\"/v1/projects/{project_id}:runQuery"
      ":\001*\022\246\001\n\020BeginTransaction\022,.google.datast"
      "ore.v1.BeginTransactionRequest\032-.google."
      "datastore.v1.BeginTransactionResponse\"5\202"
      "\323\344\223\002/\"*/v1/projects/{project_id}:beginTr"
      "ansaction:\001*\022~\n\006Commit\022\".google.datastor"
      "e.v1.CommitRequest\032#.google.datastore.v1"
      ".CommitResponse\"+\202\323\344\223\002%\" /v1/projects/{p"
      "roject_id}:commit:\001*\022\206\001\n\010Rollback\022$.goog"
      "le.datastore.v1.RollbackRequest\032%.google"
      ".datastore.v1.RollbackResponse\"-\202\323\344\223\002\'\"\""
      "/v1/projects/{project_id}:rollback:\001*\022\222\001"
      "\n\013AllocateIds\022\'.google.datastore.v1.Allo"
      "cateIdsRequest\032(.google.datastore.v1.All"
      "ocateIdsResponse\"0\202\323\344\223\002*\"%/v1/projects/{"
      "project_id}:allocateIds:\001*B\205\001\n\027com.googl"
      "e.datastore.v1B\016DatastoreProtoP\001Z<google"
      ".golang.org/genproto/googleapis/datastor"
      "e/v1;datastore\252\002\031Google.Cloud.Datastore."
      "V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3410);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/datastore/v1/datastore.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::AddDescriptors();
  ::protobuf_google_2fdatastore_2fv1_2fquery_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto
namespace google {
namespace datastore {
namespace v1 {
const ::google::protobuf::EnumDescriptor* CommitRequest_Mode_descriptor() {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_enum_descriptors[0];
}
bool CommitRequest_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CommitRequest_Mode CommitRequest::MODE_UNSPECIFIED;
const CommitRequest_Mode CommitRequest::TRANSACTIONAL;
const CommitRequest_Mode CommitRequest::NON_TRANSACTIONAL;
const CommitRequest_Mode CommitRequest::Mode_MIN;
const CommitRequest_Mode CommitRequest::Mode_MAX;
const int CommitRequest::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ReadOptions_ReadConsistency_descriptor() {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_enum_descriptors[1];
}
bool ReadOptions_ReadConsistency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReadOptions_ReadConsistency ReadOptions::READ_CONSISTENCY_UNSPECIFIED;
const ReadOptions_ReadConsistency ReadOptions::STRONG;
const ReadOptions_ReadConsistency ReadOptions::EVENTUAL;
const ReadOptions_ReadConsistency ReadOptions::ReadConsistency_MIN;
const ReadOptions_ReadConsistency ReadOptions::ReadConsistency_MAX;
const int ReadOptions::ReadConsistency_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LookupRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_LookupRequest_default_instance_._instance.get_mutable()->read_options_ = const_cast< ::google::datastore::v1::ReadOptions*>(
      ::google::datastore::v1::ReadOptions::internal_default_instance());
}
void LookupRequest::clear_keys() {
  keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupRequest::kProjectIdFieldNumber;
const int LookupRequest::kReadOptionsFieldNumber;
const int LookupRequest::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupRequest::LookupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsLookupRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.LookupRequest)
}
LookupRequest::LookupRequest(const LookupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    read_options_ = new ::google::datastore::v1::ReadOptions(*from.read_options_);
  } else {
    read_options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.LookupRequest)
}

void LookupRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  read_options_ = NULL;
  _cached_size_ = 0;
}

LookupRequest::~LookupRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.LookupRequest)
  SharedDtor();
}

void LookupRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_options_;
}

void LookupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookupRequest::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LookupRequest& LookupRequest::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsLookupRequest();
  return *internal_default_instance();
}

LookupRequest* LookupRequest::New(::google::protobuf::Arena* arena) const {
  LookupRequest* n = new LookupRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.LookupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && read_options_ != NULL) {
    delete read_options_;
  }
  read_options_ = NULL;
  _internal_metadata_.Clear();
}

bool LookupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.LookupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.ReadOptions read_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Key keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.LookupRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.LookupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.LookupRequest)
  return false;
#undef DO_
}

void LookupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.LookupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->read_options_, output);
  }

  // repeated .google.datastore.v1.Key keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->keys(static_cast<int>(i)), output);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.LookupRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.LookupRequest)
}

::google::protobuf::uint8* LookupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.LookupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->read_options_, deterministic, target);
  }

  // repeated .google.datastore.v1.Key keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->keys(static_cast<int>(i)), deterministic, target);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.LookupRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.LookupRequest)
  return target;
}

size_t LookupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.LookupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.Key keys = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->read_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.LookupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LookupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.LookupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.LookupRequest)
    MergeFrom(*source);
  }
}

void LookupRequest::MergeFrom(const LookupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.LookupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    mutable_read_options()->::google::datastore::v1::ReadOptions::MergeFrom(from.read_options());
  }
}

void LookupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.LookupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupRequest::CopyFrom(const LookupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.LookupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupRequest::IsInitialized() const {
  return true;
}

void LookupRequest::Swap(LookupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupRequest::InternalSwap(LookupRequest* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  project_id_.Swap(&other->project_id_);
  swap(read_options_, other->read_options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookupRequest::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LookupResponse::InitAsDefaultInstance() {
}
void LookupResponse::clear_found() {
  found_.Clear();
}
void LookupResponse::clear_missing() {
  missing_.Clear();
}
void LookupResponse::clear_deferred() {
  deferred_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupResponse::kFoundFieldNumber;
const int LookupResponse::kMissingFieldNumber;
const int LookupResponse::kDeferredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupResponse::LookupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsLookupResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.LookupResponse)
}
LookupResponse::LookupResponse(const LookupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      found_(from.found_),
      missing_(from.missing_),
      deferred_(from.deferred_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.LookupResponse)
}

void LookupResponse::SharedCtor() {
  _cached_size_ = 0;
}

LookupResponse::~LookupResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.LookupResponse)
  SharedDtor();
}

void LookupResponse::SharedDtor() {
}

void LookupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookupResponse::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LookupResponse& LookupResponse::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsLookupResponse();
  return *internal_default_instance();
}

LookupResponse* LookupResponse::New(::google::protobuf::Arena* arena) const {
  LookupResponse* n = new LookupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.LookupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  found_.Clear();
  missing_.Clear();
  deferred_.Clear();
  _internal_metadata_.Clear();
}

bool LookupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.LookupResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.EntityResult found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_found()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.EntityResult missing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Key deferred = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_deferred()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.LookupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.LookupResponse)
  return false;
#undef DO_
}

void LookupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.LookupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.EntityResult found = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->found_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->found(static_cast<int>(i)), output);
  }

  // repeated .google.datastore.v1.EntityResult missing = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missing_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->missing(static_cast<int>(i)), output);
  }

  // repeated .google.datastore.v1.Key deferred = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deferred_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->deferred(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.LookupResponse)
}

::google::protobuf::uint8* LookupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.LookupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.EntityResult found = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->found_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->found(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.datastore.v1.EntityResult missing = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missing_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->missing(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.datastore.v1.Key deferred = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deferred_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->deferred(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.LookupResponse)
  return target;
}

size_t LookupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.LookupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.EntityResult found = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->found_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->found(static_cast<int>(i)));
    }
  }

  // repeated .google.datastore.v1.EntityResult missing = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->missing_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->missing(static_cast<int>(i)));
    }
  }

  // repeated .google.datastore.v1.Key deferred = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->deferred_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deferred(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.LookupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LookupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.LookupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.LookupResponse)
    MergeFrom(*source);
  }
}

void LookupResponse::MergeFrom(const LookupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.LookupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  found_.MergeFrom(from.found_);
  missing_.MergeFrom(from.missing_);
  deferred_.MergeFrom(from.deferred_);
}

void LookupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.LookupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupResponse::CopyFrom(const LookupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.LookupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupResponse::IsInitialized() const {
  return true;
}

void LookupResponse::Swap(LookupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupResponse::InternalSwap(LookupResponse* other) {
  using std::swap;
  found_.InternalSwap(&other->found_);
  missing_.InternalSwap(&other->missing_);
  deferred_.InternalSwap(&other->deferred_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookupResponse::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunQueryRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_RunQueryRequest_default_instance_._instance.get_mutable()->partition_id_ = const_cast< ::google::datastore::v1::PartitionId*>(
      ::google::datastore::v1::PartitionId::internal_default_instance());
  ::google::datastore::v1::_RunQueryRequest_default_instance_._instance.get_mutable()->read_options_ = const_cast< ::google::datastore::v1::ReadOptions*>(
      ::google::datastore::v1::ReadOptions::internal_default_instance());
  ::google::datastore::v1::_RunQueryRequest_default_instance_.query_ = const_cast< ::google::datastore::v1::Query*>(
      ::google::datastore::v1::Query::internal_default_instance());
  ::google::datastore::v1::_RunQueryRequest_default_instance_.gql_query_ = const_cast< ::google::datastore::v1::GqlQuery*>(
      ::google::datastore::v1::GqlQuery::internal_default_instance());
}
void RunQueryRequest::clear_partition_id() {
  if (GetArenaNoVirtual() == NULL && partition_id_ != NULL) {
    delete partition_id_;
  }
  partition_id_ = NULL;
}
void RunQueryRequest::set_allocated_query(::google::datastore::v1::Query* query) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_query_type();
  if (query) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      query = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query, submessage_arena);
    }
    set_has_query();
    query_type_.query_ = query;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.RunQueryRequest.query)
}
void RunQueryRequest::clear_query() {
  if (has_query()) {
    delete query_type_.query_;
    clear_has_query_type();
  }
}
void RunQueryRequest::set_allocated_gql_query(::google::datastore::v1::GqlQuery* gql_query) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_query_type();
  if (gql_query) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gql_query = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gql_query, submessage_arena);
    }
    set_has_gql_query();
    query_type_.gql_query_ = gql_query;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.RunQueryRequest.gql_query)
}
void RunQueryRequest::clear_gql_query() {
  if (has_gql_query()) {
    delete query_type_.gql_query_;
    clear_has_query_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunQueryRequest::kProjectIdFieldNumber;
const int RunQueryRequest::kPartitionIdFieldNumber;
const int RunQueryRequest::kReadOptionsFieldNumber;
const int RunQueryRequest::kQueryFieldNumber;
const int RunQueryRequest::kGqlQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunQueryRequest::RunQueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRunQueryRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RunQueryRequest)
}
RunQueryRequest::RunQueryRequest(const RunQueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    read_options_ = new ::google::datastore::v1::ReadOptions(*from.read_options_);
  } else {
    read_options_ = NULL;
  }
  if (from.has_partition_id()) {
    partition_id_ = new ::google::datastore::v1::PartitionId(*from.partition_id_);
  } else {
    partition_id_ = NULL;
  }
  clear_has_query_type();
  switch (from.query_type_case()) {
    case kQuery: {
      mutable_query()->::google::datastore::v1::Query::MergeFrom(from.query());
      break;
    }
    case kGqlQuery: {
      mutable_gql_query()->::google::datastore::v1::GqlQuery::MergeFrom(from.gql_query());
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RunQueryRequest)
}

void RunQueryRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partition_id_) -
      reinterpret_cast<char*>(&read_options_)) + sizeof(partition_id_));
  clear_has_query_type();
  _cached_size_ = 0;
}

RunQueryRequest::~RunQueryRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RunQueryRequest)
  SharedDtor();
}

void RunQueryRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_options_;
  if (this != internal_default_instance()) delete partition_id_;
  if (has_query_type()) {
    clear_query_type();
  }
}

void RunQueryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunQueryRequest::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunQueryRequest& RunQueryRequest::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRunQueryRequest();
  return *internal_default_instance();
}

RunQueryRequest* RunQueryRequest::New(::google::protobuf::Arena* arena) const {
  RunQueryRequest* n = new RunQueryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunQueryRequest::clear_query_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.RunQueryRequest)
  switch (query_type_case()) {
    case kQuery: {
      delete query_type_.query_;
      break;
    }
    case kGqlQuery: {
      delete query_type_.gql_query_;
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QUERY_TYPE_NOT_SET;
}


void RunQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RunQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && read_options_ != NULL) {
    delete read_options_;
  }
  read_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && partition_id_ != NULL) {
    delete partition_id_;
  }
  partition_id_ = NULL;
  clear_query_type();
  _internal_metadata_.Clear();
}

bool RunQueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RunQueryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.ReadOptions read_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.PartitionId partition_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Query query = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.GqlQuery gql_query = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gql_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.RunQueryRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RunQueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RunQueryRequest)
  return false;
#undef DO_
}

void RunQueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RunQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->read_options_, output);
  }

  // .google.datastore.v1.PartitionId partition_id = 2;
  if (this->has_partition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->partition_id_, output);
  }

  // .google.datastore.v1.Query query = 3;
  if (has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *query_type_.query_, output);
  }

  // .google.datastore.v1.GqlQuery gql_query = 7;
  if (has_gql_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *query_type_.gql_query_, output);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RunQueryRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RunQueryRequest)
}

::google::protobuf::uint8* RunQueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RunQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->read_options_, deterministic, target);
  }

  // .google.datastore.v1.PartitionId partition_id = 2;
  if (this->has_partition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->partition_id_, deterministic, target);
  }

  // .google.datastore.v1.Query query = 3;
  if (has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *query_type_.query_, deterministic, target);
  }

  // .google.datastore.v1.GqlQuery gql_query = 7;
  if (has_gql_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *query_type_.gql_query_, deterministic, target);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RunQueryRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RunQueryRequest)
  return target;
}

size_t RunQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RunQueryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 8;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.ReadOptions read_options = 1;
  if (this->has_read_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->read_options_);
  }

  // .google.datastore.v1.PartitionId partition_id = 2;
  if (this->has_partition_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->partition_id_);
  }

  switch (query_type_case()) {
    // .google.datastore.v1.Query query = 3;
    case kQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *query_type_.query_);
      break;
    }
    // .google.datastore.v1.GqlQuery gql_query = 7;
    case kGqlQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *query_type_.gql_query_);
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunQueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RunQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunQueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunQueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RunQueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RunQueryRequest)
    MergeFrom(*source);
  }
}

void RunQueryRequest::MergeFrom(const RunQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RunQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_read_options()) {
    mutable_read_options()->::google::datastore::v1::ReadOptions::MergeFrom(from.read_options());
  }
  if (from.has_partition_id()) {
    mutable_partition_id()->::google::datastore::v1::PartitionId::MergeFrom(from.partition_id());
  }
  switch (from.query_type_case()) {
    case kQuery: {
      mutable_query()->::google::datastore::v1::Query::MergeFrom(from.query());
      break;
    }
    case kGqlQuery: {
      mutable_gql_query()->::google::datastore::v1::GqlQuery::MergeFrom(from.gql_query());
      break;
    }
    case QUERY_TYPE_NOT_SET: {
      break;
    }
  }
}

void RunQueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RunQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunQueryRequest::CopyFrom(const RunQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RunQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunQueryRequest::IsInitialized() const {
  return true;
}

void RunQueryRequest::Swap(RunQueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunQueryRequest::InternalSwap(RunQueryRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  swap(read_options_, other->read_options_);
  swap(partition_id_, other->partition_id_);
  swap(query_type_, other->query_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunQueryRequest::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunQueryResponse::InitAsDefaultInstance() {
  ::google::datastore::v1::_RunQueryResponse_default_instance_._instance.get_mutable()->batch_ = const_cast< ::google::datastore::v1::QueryResultBatch*>(
      ::google::datastore::v1::QueryResultBatch::internal_default_instance());
  ::google::datastore::v1::_RunQueryResponse_default_instance_._instance.get_mutable()->query_ = const_cast< ::google::datastore::v1::Query*>(
      ::google::datastore::v1::Query::internal_default_instance());
}
void RunQueryResponse::clear_batch() {
  if (GetArenaNoVirtual() == NULL && batch_ != NULL) {
    delete batch_;
  }
  batch_ = NULL;
}
void RunQueryResponse::clear_query() {
  if (GetArenaNoVirtual() == NULL && query_ != NULL) {
    delete query_;
  }
  query_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunQueryResponse::kBatchFieldNumber;
const int RunQueryResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunQueryResponse::RunQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRunQueryResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RunQueryResponse)
}
RunQueryResponse::RunQueryResponse(const RunQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_batch()) {
    batch_ = new ::google::datastore::v1::QueryResultBatch(*from.batch_);
  } else {
    batch_ = NULL;
  }
  if (from.has_query()) {
    query_ = new ::google::datastore::v1::Query(*from.query_);
  } else {
    query_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RunQueryResponse)
}

void RunQueryResponse::SharedCtor() {
  ::memset(&batch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_) -
      reinterpret_cast<char*>(&batch_)) + sizeof(query_));
  _cached_size_ = 0;
}

RunQueryResponse::~RunQueryResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RunQueryResponse)
  SharedDtor();
}

void RunQueryResponse::SharedDtor() {
  if (this != internal_default_instance()) delete batch_;
  if (this != internal_default_instance()) delete query_;
}

void RunQueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunQueryResponse::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunQueryResponse& RunQueryResponse::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRunQueryResponse();
  return *internal_default_instance();
}

RunQueryResponse* RunQueryResponse::New(::google::protobuf::Arena* arena) const {
  RunQueryResponse* n = new RunQueryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RunQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && batch_ != NULL) {
    delete batch_;
  }
  batch_ = NULL;
  if (GetArenaNoVirtual() == NULL && query_ != NULL) {
    delete query_;
  }
  query_ = NULL;
  _internal_metadata_.Clear();
}

bool RunQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RunQueryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.QueryResultBatch batch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_batch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Query query = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RunQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RunQueryResponse)
  return false;
#undef DO_
}

void RunQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RunQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.QueryResultBatch batch = 1;
  if (this->has_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->batch_, output);
  }

  // .google.datastore.v1.Query query = 2;
  if (this->has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->query_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RunQueryResponse)
}

::google::protobuf::uint8* RunQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RunQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.QueryResultBatch batch = 1;
  if (this->has_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->batch_, deterministic, target);
  }

  // .google.datastore.v1.Query query = 2;
  if (this->has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->query_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RunQueryResponse)
  return target;
}

size_t RunQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RunQueryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.datastore.v1.QueryResultBatch batch = 1;
  if (this->has_batch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->batch_);
  }

  // .google.datastore.v1.Query query = 2;
  if (this->has_query()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->query_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RunQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RunQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RunQueryResponse)
    MergeFrom(*source);
  }
}

void RunQueryResponse::MergeFrom(const RunQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RunQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_batch()) {
    mutable_batch()->::google::datastore::v1::QueryResultBatch::MergeFrom(from.batch());
  }
  if (from.has_query()) {
    mutable_query()->::google::datastore::v1::Query::MergeFrom(from.query());
  }
}

void RunQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RunQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunQueryResponse::CopyFrom(const RunQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RunQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunQueryResponse::IsInitialized() const {
  return true;
}

void RunQueryResponse::Swap(RunQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunQueryResponse::InternalSwap(RunQueryResponse* other) {
  using std::swap;
  swap(batch_, other->batch_);
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunQueryResponse::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeginTransactionRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_BeginTransactionRequest_default_instance_._instance.get_mutable()->transaction_options_ = const_cast< ::google::datastore::v1::TransactionOptions*>(
      ::google::datastore::v1::TransactionOptions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginTransactionRequest::kProjectIdFieldNumber;
const int BeginTransactionRequest::kTransactionOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginTransactionRequest::BeginTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsBeginTransactionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.BeginTransactionRequest)
}
BeginTransactionRequest::BeginTransactionRequest(const BeginTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_transaction_options()) {
    transaction_options_ = new ::google::datastore::v1::TransactionOptions(*from.transaction_options_);
  } else {
    transaction_options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.BeginTransactionRequest)
}

void BeginTransactionRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_options_ = NULL;
  _cached_size_ = 0;
}

BeginTransactionRequest::~BeginTransactionRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.BeginTransactionRequest)
  SharedDtor();
}

void BeginTransactionRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transaction_options_;
}

void BeginTransactionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeginTransactionRequest::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeginTransactionRequest& BeginTransactionRequest::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsBeginTransactionRequest();
  return *internal_default_instance();
}

BeginTransactionRequest* BeginTransactionRequest::New(::google::protobuf::Arena* arena) const {
  BeginTransactionRequest* n = new BeginTransactionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeginTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.BeginTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transaction_options_ != NULL) {
    delete transaction_options_;
  }
  transaction_options_ = NULL;
  _internal_metadata_.Clear();
}

bool BeginTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.BeginTransactionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.BeginTransactionRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.TransactionOptions transaction_options = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.BeginTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.BeginTransactionRequest)
  return false;
#undef DO_
}

void BeginTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.BeginTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.BeginTransactionRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  // .google.datastore.v1.TransactionOptions transaction_options = 10;
  if (this->has_transaction_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->transaction_options_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.BeginTransactionRequest)
}

::google::protobuf::uint8* BeginTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.BeginTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.BeginTransactionRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  // .google.datastore.v1.TransactionOptions transaction_options = 10;
  if (this->has_transaction_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->transaction_options_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.BeginTransactionRequest)
  return target;
}

size_t BeginTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.BeginTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 8;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.TransactionOptions transaction_options = 10;
  if (this->has_transaction_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transaction_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeginTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.BeginTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BeginTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeginTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.BeginTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.BeginTransactionRequest)
    MergeFrom(*source);
  }
}

void BeginTransactionRequest::MergeFrom(const BeginTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.BeginTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_transaction_options()) {
    mutable_transaction_options()->::google::datastore::v1::TransactionOptions::MergeFrom(from.transaction_options());
  }
}

void BeginTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.BeginTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginTransactionRequest::CopyFrom(const BeginTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.BeginTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginTransactionRequest::IsInitialized() const {
  return true;
}

void BeginTransactionRequest::Swap(BeginTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginTransactionRequest::InternalSwap(BeginTransactionRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  swap(transaction_options_, other->transaction_options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeginTransactionRequest::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeginTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginTransactionResponse::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginTransactionResponse::BeginTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsBeginTransactionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.BeginTransactionResponse)
}
BeginTransactionResponse::BeginTransactionResponse(const BeginTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transaction().size() > 0) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.BeginTransactionResponse)
}

void BeginTransactionResponse::SharedCtor() {
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BeginTransactionResponse::~BeginTransactionResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.BeginTransactionResponse)
  SharedDtor();
}

void BeginTransactionResponse::SharedDtor() {
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeginTransactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeginTransactionResponse::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeginTransactionResponse& BeginTransactionResponse::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsBeginTransactionResponse();
  return *internal_default_instance();
}

BeginTransactionResponse* BeginTransactionResponse::New(::google::protobuf::Arena* arena) const {
  BeginTransactionResponse* n = new BeginTransactionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeginTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.BeginTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BeginTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.BeginTransactionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.BeginTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.BeginTransactionResponse)
  return false;
#undef DO_
}

void BeginTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.BeginTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.BeginTransactionResponse)
}

::google::protobuf::uint8* BeginTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.BeginTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.BeginTransactionResponse)
  return target;
}

size_t BeginTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.BeginTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->transaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeginTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.BeginTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BeginTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeginTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.BeginTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.BeginTransactionResponse)
    MergeFrom(*source);
  }
}

void BeginTransactionResponse::MergeFrom(const BeginTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.BeginTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction().size() > 0) {

    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
}

void BeginTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.BeginTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginTransactionResponse::CopyFrom(const BeginTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.BeginTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginTransactionResponse::IsInitialized() const {
  return true;
}

void BeginTransactionResponse::Swap(BeginTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginTransactionResponse::InternalSwap(BeginTransactionResponse* other) {
  using std::swap;
  transaction_.Swap(&other->transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeginTransactionResponse::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RollbackRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollbackRequest::kProjectIdFieldNumber;
const int RollbackRequest::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackRequest::RollbackRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRollbackRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RollbackRequest)
}
RollbackRequest::RollbackRequest(const RollbackRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transaction().size() > 0) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RollbackRequest)
}

void RollbackRequest::SharedCtor() {
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RollbackRequest::~RollbackRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RollbackRequest)
  SharedDtor();
}

void RollbackRequest::SharedDtor() {
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RollbackRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RollbackRequest::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RollbackRequest& RollbackRequest::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRollbackRequest();
  return *internal_default_instance();
}

RollbackRequest* RollbackRequest::New(::google::protobuf::Arena* arena) const {
  RollbackRequest* n = new RollbackRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RollbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RollbackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RollbackRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.RollbackRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RollbackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RollbackRequest)
  return false;
#undef DO_
}

void RollbackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transaction(), output);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RollbackRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RollbackRequest)
}

::google::protobuf::uint8* RollbackRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transaction(), target);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.RollbackRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RollbackRequest)
  return target;
}

size_t RollbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RollbackRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes transaction = 1;
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->transaction());
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RollbackRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RollbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RollbackRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RollbackRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RollbackRequest)
    MergeFrom(*source);
  }
}

void RollbackRequest::MergeFrom(const RollbackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RollbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction().size() > 0) {

    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
}

void RollbackRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackRequest::CopyFrom(const RollbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackRequest::IsInitialized() const {
  return true;
}

void RollbackRequest::Swap(RollbackRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackRequest::InternalSwap(RollbackRequest* other) {
  using std::swap;
  transaction_.Swap(&other->transaction_);
  project_id_.Swap(&other->project_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RollbackRequest::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RollbackResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackResponse::RollbackResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRollbackResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.RollbackResponse)
}
RollbackResponse::RollbackResponse(const RollbackResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.RollbackResponse)
}

void RollbackResponse::SharedCtor() {
  _cached_size_ = 0;
}

RollbackResponse::~RollbackResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.RollbackResponse)
  SharedDtor();
}

void RollbackResponse::SharedDtor() {
}

void RollbackResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RollbackResponse::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RollbackResponse& RollbackResponse::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsRollbackResponse();
  return *internal_default_instance();
}

RollbackResponse* RollbackResponse::New(::google::protobuf::Arena* arena) const {
  RollbackResponse* n = new RollbackResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RollbackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.RollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RollbackResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.RollbackResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.RollbackResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.RollbackResponse)
  return false;
#undef DO_
}

void RollbackResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.RollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.RollbackResponse)
}

::google::protobuf::uint8* RollbackResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.RollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.RollbackResponse)
  return target;
}

size_t RollbackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.RollbackResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RollbackResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.RollbackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RollbackResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.RollbackResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.RollbackResponse)
    MergeFrom(*source);
  }
}

void RollbackResponse::MergeFrom(const RollbackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.RollbackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RollbackResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.RollbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackResponse::CopyFrom(const RollbackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.RollbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackResponse::IsInitialized() const {
  return true;
}

void RollbackResponse::Swap(RollbackResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackResponse::InternalSwap(RollbackResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RollbackResponse::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommitRequest::InitAsDefaultInstance() {
  ::google::datastore::v1::_CommitRequest_default_instance_.transaction_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitRequest::kProjectIdFieldNumber;
const int CommitRequest::kModeFieldNumber;
const int CommitRequest::kTransactionFieldNumber;
const int CommitRequest::kMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitRequest::CommitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsCommitRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.CommitRequest)
}
CommitRequest::CommitRequest(const CommitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutations_(from.mutations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  mode_ = from.mode_;
  clear_has_transaction_selector();
  switch (from.transaction_selector_case()) {
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.CommitRequest)
}

void CommitRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  clear_has_transaction_selector();
  _cached_size_ = 0;
}

CommitRequest::~CommitRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.CommitRequest)
  SharedDtor();
}

void CommitRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_transaction_selector()) {
    clear_transaction_selector();
  }
}

void CommitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommitRequest::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommitRequest& CommitRequest::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsCommitRequest();
  return *internal_default_instance();
}

CommitRequest* CommitRequest::New(::google::protobuf::Arena* arena) const {
  CommitRequest* n = new CommitRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommitRequest::clear_transaction_selector() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.CommitRequest)
  switch (transaction_selector_case()) {
    case kTransaction: {
      transaction_selector_.transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TRANSACTION_SELECTOR_NOT_SET;
}


void CommitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  clear_transaction_selector();
  _internal_metadata_.Clear();
}

bool CommitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.CommitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.CommitRequest.Mode mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::google::datastore::v1::CommitRequest_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Mutation mutations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.CommitRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.CommitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.CommitRequest)
  return false;
#undef DO_
}

void CommitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->transaction(), output);
  }

  // .google.datastore.v1.CommitRequest.Mode mode = 5;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mode(), output);
  }

  // repeated .google.datastore.v1.Mutation mutations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->mutations(static_cast<int>(i)), output);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.CommitRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.CommitRequest)
}

::google::protobuf::uint8* CommitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (has_transaction()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->transaction(), target);
  }

  // .google.datastore.v1.CommitRequest.Mode mode = 5;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mode(), target);
  }

  // repeated .google.datastore.v1.Mutation mutations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->mutations(static_cast<int>(i)), deterministic, target);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.CommitRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.CommitRequest)
  return target;
}

size_t CommitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.CommitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.Mutation mutations = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.datastore.v1.CommitRequest.Mode mode = 5;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  switch (transaction_selector_case()) {
    // bytes transaction = 1;
    case kTransaction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->transaction());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.CommitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.CommitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.CommitRequest)
    MergeFrom(*source);
  }
}

void CommitRequest::MergeFrom(const CommitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.CommitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  switch (from.transaction_selector_case()) {
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case TRANSACTION_SELECTOR_NOT_SET: {
      break;
    }
  }
}

void CommitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.CommitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitRequest::CopyFrom(const CommitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.CommitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitRequest::IsInitialized() const {
  return true;
}

void CommitRequest::Swap(CommitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitRequest::InternalSwap(CommitRequest* other) {
  using std::swap;
  mutations_.InternalSwap(&other->mutations_);
  project_id_.Swap(&other->project_id_);
  swap(mode_, other->mode_);
  swap(transaction_selector_, other->transaction_selector_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommitRequest::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommitResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitResponse::kMutationResultsFieldNumber;
const int CommitResponse::kIndexUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitResponse::CommitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsCommitResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.CommitResponse)
}
CommitResponse::CommitResponse(const CommitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutation_results_(from.mutation_results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_updates_ = from.index_updates_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.CommitResponse)
}

void CommitResponse::SharedCtor() {
  index_updates_ = 0;
  _cached_size_ = 0;
}

CommitResponse::~CommitResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.CommitResponse)
  SharedDtor();
}

void CommitResponse::SharedDtor() {
}

void CommitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommitResponse::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommitResponse& CommitResponse::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsCommitResponse();
  return *internal_default_instance();
}

CommitResponse* CommitResponse::New(::google::protobuf::Arena* arena) const {
  CommitResponse* n = new CommitResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutation_results_.Clear();
  index_updates_ = 0;
  _internal_metadata_.Clear();
}

bool CommitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.CommitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.MutationResult mutation_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mutation_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index_updates = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_updates_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.CommitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.CommitResponse)
  return false;
#undef DO_
}

void CommitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.MutationResult mutation_results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutation_results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mutation_results(static_cast<int>(i)), output);
  }

  // int32 index_updates = 4;
  if (this->index_updates() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index_updates(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.CommitResponse)
}

::google::protobuf::uint8* CommitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.MutationResult mutation_results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutation_results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->mutation_results(static_cast<int>(i)), deterministic, target);
  }

  // int32 index_updates = 4;
  if (this->index_updates() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index_updates(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.CommitResponse)
  return target;
}

size_t CommitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.CommitResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.MutationResult mutation_results = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mutation_results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutation_results(static_cast<int>(i)));
    }
  }

  // int32 index_updates = 4;
  if (this->index_updates() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index_updates());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.CommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.CommitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.CommitResponse)
    MergeFrom(*source);
  }
}

void CommitResponse::MergeFrom(const CommitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.CommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutation_results_.MergeFrom(from.mutation_results_);
  if (from.index_updates() != 0) {
    set_index_updates(from.index_updates());
  }
}

void CommitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.CommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitResponse::CopyFrom(const CommitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.CommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitResponse::IsInitialized() const {
  return true;
}

void CommitResponse::Swap(CommitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitResponse::InternalSwap(CommitResponse* other) {
  using std::swap;
  mutation_results_.InternalSwap(&other->mutation_results_);
  swap(index_updates_, other->index_updates_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommitResponse::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllocateIdsRequest::InitAsDefaultInstance() {
}
void AllocateIdsRequest::clear_keys() {
  keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateIdsRequest::kProjectIdFieldNumber;
const int AllocateIdsRequest::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateIdsRequest::AllocateIdsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsAllocateIdsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.AllocateIdsRequest)
}
AllocateIdsRequest::AllocateIdsRequest(const AllocateIdsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.AllocateIdsRequest)
}

void AllocateIdsRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AllocateIdsRequest::~AllocateIdsRequest() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.AllocateIdsRequest)
  SharedDtor();
}

void AllocateIdsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllocateIdsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocateIdsRequest::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllocateIdsRequest& AllocateIdsRequest::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsAllocateIdsRequest();
  return *internal_default_instance();
}

AllocateIdsRequest* AllocateIdsRequest::New(::google::protobuf::Arena* arena) const {
  AllocateIdsRequest* n = new AllocateIdsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocateIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.AllocateIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AllocateIdsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.AllocateIdsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Key keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.AllocateIdsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.AllocateIdsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.AllocateIdsRequest)
  return false;
#undef DO_
}

void AllocateIdsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.AllocateIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->keys(static_cast<int>(i)), output);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.AllocateIdsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->project_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.AllocateIdsRequest)
}

::google::protobuf::uint8* AllocateIdsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.AllocateIdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.AllocateIdsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->project_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.AllocateIdsRequest)
  return target;
}

size_t AllocateIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.AllocateIdsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.Key keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  // string project_id = 8;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocateIdsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.AllocateIdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateIdsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocateIdsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.AllocateIdsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.AllocateIdsRequest)
    MergeFrom(*source);
  }
}

void AllocateIdsRequest::MergeFrom(const AllocateIdsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.AllocateIdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
}

void AllocateIdsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.AllocateIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateIdsRequest::CopyFrom(const AllocateIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.AllocateIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateIdsRequest::IsInitialized() const {
  return true;
}

void AllocateIdsRequest::Swap(AllocateIdsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocateIdsRequest::InternalSwap(AllocateIdsRequest* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  project_id_.Swap(&other->project_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocateIdsRequest::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllocateIdsResponse::InitAsDefaultInstance() {
}
void AllocateIdsResponse::clear_keys() {
  keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateIdsResponse::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateIdsResponse::AllocateIdsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsAllocateIdsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.AllocateIdsResponse)
}
AllocateIdsResponse::AllocateIdsResponse(const AllocateIdsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.AllocateIdsResponse)
}

void AllocateIdsResponse::SharedCtor() {
  _cached_size_ = 0;
}

AllocateIdsResponse::~AllocateIdsResponse() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.AllocateIdsResponse)
  SharedDtor();
}

void AllocateIdsResponse::SharedDtor() {
}

void AllocateIdsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocateIdsResponse::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllocateIdsResponse& AllocateIdsResponse::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsAllocateIdsResponse();
  return *internal_default_instance();
}

AllocateIdsResponse* AllocateIdsResponse::New(::google::protobuf::Arena* arena) const {
  AllocateIdsResponse* n = new AllocateIdsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocateIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.AllocateIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

bool AllocateIdsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.AllocateIdsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Key keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.AllocateIdsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.AllocateIdsResponse)
  return false;
#undef DO_
}

void AllocateIdsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.AllocateIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->keys(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.AllocateIdsResponse)
}

::google::protobuf::uint8* AllocateIdsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.AllocateIdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.AllocateIdsResponse)
  return target;
}

size_t AllocateIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.AllocateIdsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.Key keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocateIdsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.AllocateIdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateIdsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocateIdsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.AllocateIdsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.AllocateIdsResponse)
    MergeFrom(*source);
  }
}

void AllocateIdsResponse::MergeFrom(const AllocateIdsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.AllocateIdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void AllocateIdsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.AllocateIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateIdsResponse::CopyFrom(const AllocateIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.AllocateIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateIdsResponse::IsInitialized() const {
  return true;
}

void AllocateIdsResponse::Swap(AllocateIdsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocateIdsResponse::InternalSwap(AllocateIdsResponse* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocateIdsResponse::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation::InitAsDefaultInstance() {
  ::google::datastore::v1::_Mutation_default_instance_.insert_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.update_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.upsert_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.delete__ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
  ::google::datastore::v1::_Mutation_default_instance_.base_version_ = GOOGLE_LONGLONG(0);
}
void Mutation::set_allocated_insert(::google::datastore::v1::Entity* insert) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (insert) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      insert = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, insert, submessage_arena);
    }
    set_has_insert();
    operation_.insert_ = insert;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.insert)
}
void Mutation::clear_insert() {
  if (has_insert()) {
    delete operation_.insert_;
    clear_has_operation();
  }
}
void Mutation::set_allocated_update(::google::datastore::v1::Entity* update) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (update) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    set_has_update();
    operation_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.update)
}
void Mutation::clear_update() {
  if (has_update()) {
    delete operation_.update_;
    clear_has_operation();
  }
}
void Mutation::set_allocated_upsert(::google::datastore::v1::Entity* upsert) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (upsert) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      upsert = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upsert, submessage_arena);
    }
    set_has_upsert();
    operation_.upsert_ = upsert;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.upsert)
}
void Mutation::clear_upsert() {
  if (has_upsert()) {
    delete operation_.upsert_;
    clear_has_operation();
  }
}
void Mutation::set_allocated_delete_(::google::datastore::v1::Key* delete_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (delete_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delete_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_, submessage_arena);
    }
    set_has_delete_();
    operation_.delete__ = delete_;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Mutation.delete)
}
void Mutation::clear_delete_() {
  if (has_delete_()) {
    delete operation_.delete__;
    clear_has_operation();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kInsertFieldNumber;
const int Mutation::kUpdateFieldNumber;
const int Mutation::kUpsertFieldNumber;
const int Mutation::kDeleteFieldNumber;
const int Mutation::kBaseVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsMutation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Mutation)
}
Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_operation();
  switch (from.operation_case()) {
    case kInsert: {
      mutable_insert()->::google::datastore::v1::Entity::MergeFrom(from.insert());
      break;
    }
    case kUpdate: {
      mutable_update()->::google::datastore::v1::Entity::MergeFrom(from.update());
      break;
    }
    case kUpsert: {
      mutable_upsert()->::google::datastore::v1::Entity::MergeFrom(from.upsert());
      break;
    }
    case kDelete: {
      mutable_delete_()->::google::datastore::v1::Key::MergeFrom(from.delete_());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  clear_has_conflict_detection_strategy();
  switch (from.conflict_detection_strategy_case()) {
    case kBaseVersion: {
      set_base_version(from.base_version());
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Mutation)
}

void Mutation::SharedCtor() {
  clear_has_operation();
  clear_has_conflict_detection_strategy();
  _cached_size_ = 0;
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  if (has_operation()) {
    clear_operation();
  }
  if (has_conflict_detection_strategy()) {
    clear_conflict_detection_strategy();
  }
}

void Mutation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation& Mutation::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsMutation();
  return *internal_default_instance();
}

Mutation* Mutation::New(::google::protobuf::Arena* arena) const {
  Mutation* n = new Mutation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Mutation)
  switch (operation_case()) {
    case kInsert: {
      delete operation_.insert_;
      break;
    }
    case kUpdate: {
      delete operation_.update_;
      break;
    }
    case kUpsert: {
      delete operation_.upsert_;
      break;
    }
    case kDelete: {
      delete operation_.delete__;
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}

void Mutation::clear_conflict_detection_strategy() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Mutation)
  switch (conflict_detection_strategy_case()) {
    case kBaseVersion: {
      // No need to clear
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = CONFLICT_DETECTION_STRATEGY_NOT_SET;
}


void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_operation();
  clear_conflict_detection_strategy();
  _internal_metadata_.Clear();
}

bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Mutation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.Entity insert = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_insert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Entity update = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Entity upsert = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upsert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Key delete = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 base_version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_conflict_detection_strategy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &conflict_detection_strategy_.base_version_)));
          set_has_base_version();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Mutation)
  return false;
#undef DO_
}

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Entity insert = 4;
  if (has_insert()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *operation_.insert_, output);
  }

  // .google.datastore.v1.Entity update = 5;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *operation_.update_, output);
  }

  // .google.datastore.v1.Entity upsert = 6;
  if (has_upsert()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *operation_.upsert_, output);
  }

  // .google.datastore.v1.Key delete = 7;
  if (has_delete_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *operation_.delete__, output);
  }

  // int64 base_version = 8;
  if (has_base_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->base_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Mutation)
}

::google::protobuf::uint8* Mutation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Entity insert = 4;
  if (has_insert()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *operation_.insert_, deterministic, target);
  }

  // .google.datastore.v1.Entity update = 5;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *operation_.update_, deterministic, target);
  }

  // .google.datastore.v1.Entity upsert = 6;
  if (has_upsert()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *operation_.upsert_, deterministic, target);
  }

  // .google.datastore.v1.Key delete = 7;
  if (has_delete_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *operation_.delete__, deterministic, target);
  }

  // int64 base_version = 8;
  if (has_base_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->base_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Mutation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (operation_case()) {
    // .google.datastore.v1.Entity insert = 4;
    case kInsert: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.insert_);
      break;
    }
    // .google.datastore.v1.Entity update = 5;
    case kUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.update_);
      break;
    }
    // .google.datastore.v1.Entity upsert = 6;
    case kUpsert: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.upsert_);
      break;
    }
    // .google.datastore.v1.Key delete = 7;
    case kDelete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.delete__);
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  switch (conflict_detection_strategy_case()) {
    // int64 base_version = 8;
    case kBaseVersion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->base_version());
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.operation_case()) {
    case kInsert: {
      mutable_insert()->::google::datastore::v1::Entity::MergeFrom(from.insert());
      break;
    }
    case kUpdate: {
      mutable_update()->::google::datastore::v1::Entity::MergeFrom(from.update());
      break;
    }
    case kUpsert: {
      mutable_upsert()->::google::datastore::v1::Entity::MergeFrom(from.upsert());
      break;
    }
    case kDelete: {
      mutable_delete_()->::google::datastore::v1::Key::MergeFrom(from.delete_());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  switch (from.conflict_detection_strategy_case()) {
    case kBaseVersion: {
      set_base_version(from.base_version());
      break;
    }
    case CONFLICT_DETECTION_STRATEGY_NOT_SET: {
      break;
    }
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {
  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  using std::swap;
  swap(operation_, other->operation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(conflict_detection_strategy_, other->conflict_detection_strategy_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutationResult::InitAsDefaultInstance() {
  ::google::datastore::v1::_MutationResult_default_instance_._instance.get_mutable()->key_ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
}
void MutationResult::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutationResult::kKeyFieldNumber;
const int MutationResult::kVersionFieldNumber;
const int MutationResult::kConflictDetectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutationResult::MutationResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsMutationResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.MutationResult)
}
MutationResult::MutationResult(const MutationResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::google::datastore::v1::Key(*from.key_);
  } else {
    key_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&conflict_detected_) -
    reinterpret_cast<char*>(&version_)) + sizeof(conflict_detected_));
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.MutationResult)
}

void MutationResult::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conflict_detected_) -
      reinterpret_cast<char*>(&key_)) + sizeof(conflict_detected_));
  _cached_size_ = 0;
}

MutationResult::~MutationResult() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.MutationResult)
  SharedDtor();
}

void MutationResult::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void MutationResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutationResult::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutationResult& MutationResult::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsMutationResult();
  return *internal_default_instance();
}

MutationResult* MutationResult::New(::google::protobuf::Arena* arena) const {
  MutationResult* n = new MutationResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.MutationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conflict_detected_) -
      reinterpret_cast<char*>(&version_)) + sizeof(conflict_detected_));
  _internal_metadata_.Clear();
}

bool MutationResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.MutationResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.Key key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool conflict_detected = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &conflict_detected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.MutationResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.MutationResult)
  return false;
#undef DO_
}

void MutationResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.MutationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Key key = 3;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->key_, output);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->version(), output);
  }

  // bool conflict_detected = 5;
  if (this->conflict_detected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->conflict_detected(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.MutationResult)
}

::google::protobuf::uint8* MutationResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.MutationResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Key key = 3;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->key_, deterministic, target);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->version(), target);
  }

  // bool conflict_detected = 5;
  if (this->conflict_detected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->conflict_detected(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.MutationResult)
  return target;
}

size_t MutationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.MutationResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.datastore.v1.Key key = 3;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // bool conflict_detected = 5;
  if (this->conflict_detected() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutationResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.MutationResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MutationResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutationResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.MutationResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.MutationResult)
    MergeFrom(*source);
  }
}

void MutationResult::MergeFrom(const MutationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.MutationResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::google::datastore::v1::Key::MergeFrom(from.key());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.conflict_detected() != 0) {
    set_conflict_detected(from.conflict_detected());
  }
}

void MutationResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.MutationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutationResult::CopyFrom(const MutationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.MutationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutationResult::IsInitialized() const {
  return true;
}

void MutationResult::Swap(MutationResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutationResult::InternalSwap(MutationResult* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(version_, other->version_);
  swap(conflict_detected_, other->conflict_detected_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutationResult::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadOptions::InitAsDefaultInstance() {
  ::google::datastore::v1::_ReadOptions_default_instance_.read_consistency_ = 0;
  ::google::datastore::v1::_ReadOptions_default_instance_.transaction_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOptions::kReadConsistencyFieldNumber;
const int ReadOptions::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOptions::ReadOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsReadOptions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.ReadOptions)
}
ReadOptions::ReadOptions(const ReadOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_consistency_type();
  switch (from.consistency_type_case()) {
    case kReadConsistency: {
      set_read_consistency(from.read_consistency());
      break;
    }
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.ReadOptions)
}

void ReadOptions::SharedCtor() {
  clear_has_consistency_type();
  _cached_size_ = 0;
}

ReadOptions::~ReadOptions() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.ReadOptions)
  SharedDtor();
}

void ReadOptions::SharedDtor() {
  if (has_consistency_type()) {
    clear_consistency_type();
  }
}

void ReadOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadOptions::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadOptions& ReadOptions::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsReadOptions();
  return *internal_default_instance();
}

ReadOptions* ReadOptions::New(::google::protobuf::Arena* arena) const {
  ReadOptions* n = new ReadOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadOptions::clear_consistency_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.ReadOptions)
  switch (consistency_type_case()) {
    case kReadConsistency: {
      // No need to clear
      break;
    }
    case kTransaction: {
      consistency_type_.transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONSISTENCY_TYPE_NOT_SET;
}


void ReadOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.ReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_consistency_type();
  _internal_metadata_.Clear();
}

bool ReadOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.ReadOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_read_consistency(static_cast< ::google::datastore::v1::ReadOptions_ReadConsistency >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes transaction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.ReadOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.ReadOptions)
  return false;
#undef DO_
}

void ReadOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.ReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
  if (has_read_consistency()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->read_consistency(), output);
  }

  // bytes transaction = 2;
  if (has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.ReadOptions)
}

::google::protobuf::uint8* ReadOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.ReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
  if (has_read_consistency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->read_consistency(), target);
  }

  // bytes transaction = 2;
  if (has_transaction()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.ReadOptions)
  return target;
}

size_t ReadOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.ReadOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (consistency_type_case()) {
    // .google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;
    case kReadConsistency: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->read_consistency());
      break;
    }
    // bytes transaction = 2;
    case kTransaction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->transaction());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.ReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.ReadOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.ReadOptions)
    MergeFrom(*source);
  }
}

void ReadOptions::MergeFrom(const ReadOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.ReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.consistency_type_case()) {
    case kReadConsistency: {
      set_read_consistency(from.read_consistency());
      break;
    }
    case kTransaction: {
      set_transaction(from.transaction());
      break;
    }
    case CONSISTENCY_TYPE_NOT_SET: {
      break;
    }
  }
}

void ReadOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.ReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOptions::CopyFrom(const ReadOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.ReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOptions::IsInitialized() const {
  return true;
}

void ReadOptions::Swap(ReadOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOptions::InternalSwap(ReadOptions* other) {
  using std::swap;
  swap(consistency_type_, other->consistency_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadOptions::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions_ReadWrite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionOptions_ReadWrite::kPreviousTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions_ReadWrite::TransactionOptions_ReadWrite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions_ReadWrite();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.TransactionOptions.ReadWrite)
}
TransactionOptions_ReadWrite::TransactionOptions_ReadWrite(const TransactionOptions_ReadWrite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  previous_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.previous_transaction().size() > 0) {
    previous_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_transaction_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.TransactionOptions.ReadWrite)
}

void TransactionOptions_ReadWrite::SharedCtor() {
  previous_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TransactionOptions_ReadWrite::~TransactionOptions_ReadWrite() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.TransactionOptions.ReadWrite)
  SharedDtor();
}

void TransactionOptions_ReadWrite::SharedDtor() {
  previous_transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransactionOptions_ReadWrite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionOptions_ReadWrite::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionOptions_ReadWrite& TransactionOptions_ReadWrite::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions_ReadWrite();
  return *internal_default_instance();
}

TransactionOptions_ReadWrite* TransactionOptions_ReadWrite::New(::google::protobuf::Arena* arena) const {
  TransactionOptions_ReadWrite* n = new TransactionOptions_ReadWrite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionOptions_ReadWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  previous_transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TransactionOptions_ReadWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.TransactionOptions.ReadWrite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes previous_transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_previous_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.TransactionOptions.ReadWrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.TransactionOptions.ReadWrite)
  return false;
#undef DO_
}

void TransactionOptions_ReadWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes previous_transaction = 1;
  if (this->previous_transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->previous_transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.TransactionOptions.ReadWrite)
}

::google::protobuf::uint8* TransactionOptions_ReadWrite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes previous_transaction = 1;
  if (this->previous_transaction().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->previous_transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.TransactionOptions.ReadWrite)
  return target;
}

size_t TransactionOptions_ReadWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.TransactionOptions.ReadWrite)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes previous_transaction = 1;
  if (this->previous_transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->previous_transaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionOptions_ReadWrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions_ReadWrite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionOptions_ReadWrite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.TransactionOptions.ReadWrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.TransactionOptions.ReadWrite)
    MergeFrom(*source);
  }
}

void TransactionOptions_ReadWrite::MergeFrom(const TransactionOptions_ReadWrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.previous_transaction().size() > 0) {

    previous_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_transaction_);
  }
}

void TransactionOptions_ReadWrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions_ReadWrite::CopyFrom(const TransactionOptions_ReadWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.TransactionOptions.ReadWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions_ReadWrite::IsInitialized() const {
  return true;
}

void TransactionOptions_ReadWrite::Swap(TransactionOptions_ReadWrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions_ReadWrite::InternalSwap(TransactionOptions_ReadWrite* other) {
  using std::swap;
  previous_transaction_.Swap(&other->previous_transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionOptions_ReadWrite::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions_ReadOnly::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions_ReadOnly::TransactionOptions_ReadOnly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions_ReadOnly();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.TransactionOptions.ReadOnly)
}
TransactionOptions_ReadOnly::TransactionOptions_ReadOnly(const TransactionOptions_ReadOnly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.TransactionOptions.ReadOnly)
}

void TransactionOptions_ReadOnly::SharedCtor() {
  _cached_size_ = 0;
}

TransactionOptions_ReadOnly::~TransactionOptions_ReadOnly() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.TransactionOptions.ReadOnly)
  SharedDtor();
}

void TransactionOptions_ReadOnly::SharedDtor() {
}

void TransactionOptions_ReadOnly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionOptions_ReadOnly::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionOptions_ReadOnly& TransactionOptions_ReadOnly::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions_ReadOnly();
  return *internal_default_instance();
}

TransactionOptions_ReadOnly* TransactionOptions_ReadOnly::New(::google::protobuf::Arena* arena) const {
  TransactionOptions_ReadOnly* n = new TransactionOptions_ReadOnly;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionOptions_ReadOnly::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TransactionOptions_ReadOnly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.TransactionOptions.ReadOnly)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.TransactionOptions.ReadOnly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.TransactionOptions.ReadOnly)
  return false;
#undef DO_
}

void TransactionOptions_ReadOnly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.TransactionOptions.ReadOnly)
}

::google::protobuf::uint8* TransactionOptions_ReadOnly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.TransactionOptions.ReadOnly)
  return target;
}

size_t TransactionOptions_ReadOnly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.TransactionOptions.ReadOnly)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionOptions_ReadOnly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions_ReadOnly* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionOptions_ReadOnly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.TransactionOptions.ReadOnly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.TransactionOptions.ReadOnly)
    MergeFrom(*source);
  }
}

void TransactionOptions_ReadOnly::MergeFrom(const TransactionOptions_ReadOnly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransactionOptions_ReadOnly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions_ReadOnly::CopyFrom(const TransactionOptions_ReadOnly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.TransactionOptions.ReadOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions_ReadOnly::IsInitialized() const {
  return true;
}

void TransactionOptions_ReadOnly::Swap(TransactionOptions_ReadOnly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions_ReadOnly::InternalSwap(TransactionOptions_ReadOnly* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionOptions_ReadOnly::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions::InitAsDefaultInstance() {
  ::google::datastore::v1::_TransactionOptions_default_instance_.read_write_ = const_cast< ::google::datastore::v1::TransactionOptions_ReadWrite*>(
      ::google::datastore::v1::TransactionOptions_ReadWrite::internal_default_instance());
  ::google::datastore::v1::_TransactionOptions_default_instance_.read_only_ = const_cast< ::google::datastore::v1::TransactionOptions_ReadOnly*>(
      ::google::datastore::v1::TransactionOptions_ReadOnly::internal_default_instance());
}
void TransactionOptions::set_allocated_read_write(::google::datastore::v1::TransactionOptions_ReadWrite* read_write) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (read_write) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      read_write = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_write, submessage_arena);
    }
    set_has_read_write();
    mode_.read_write_ = read_write;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.TransactionOptions.read_write)
}
void TransactionOptions::set_allocated_read_only(::google::datastore::v1::TransactionOptions_ReadOnly* read_only) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (read_only) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      read_only = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_only, submessage_arena);
    }
    set_has_read_only();
    mode_.read_only_ = read_only;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.TransactionOptions.read_only)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionOptions::kReadWriteFieldNumber;
const int TransactionOptions::kReadOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions::TransactionOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.TransactionOptions)
}
TransactionOptions::TransactionOptions(const TransactionOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_mode();
  switch (from.mode_case()) {
    case kReadWrite: {
      mutable_read_write()->::google::datastore::v1::TransactionOptions_ReadWrite::MergeFrom(from.read_write());
      break;
    }
    case kReadOnly: {
      mutable_read_only()->::google::datastore::v1::TransactionOptions_ReadOnly::MergeFrom(from.read_only());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.TransactionOptions)
}

void TransactionOptions::SharedCtor() {
  clear_has_mode();
  _cached_size_ = 0;
}

TransactionOptions::~TransactionOptions() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.TransactionOptions)
  SharedDtor();
}

void TransactionOptions::SharedDtor() {
  if (has_mode()) {
    clear_mode();
  }
}

void TransactionOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionOptions::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionOptions& TransactionOptions::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::InitDefaultsTransactionOptions();
  return *internal_default_instance();
}

TransactionOptions* TransactionOptions::New(::google::protobuf::Arena* arena) const {
  TransactionOptions* n = new TransactionOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionOptions::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.TransactionOptions)
  switch (mode_case()) {
    case kReadWrite: {
      delete mode_.read_write_;
      break;
    }
    case kReadOnly: {
      delete mode_.read_only_;
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODE_NOT_SET;
}


void TransactionOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mode();
  _internal_metadata_.Clear();
}

bool TransactionOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.TransactionOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_write()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_only()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.TransactionOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.TransactionOptions)
  return false;
#undef DO_
}

void TransactionOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
  if (has_read_write()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *mode_.read_write_, output);
  }

  // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
  if (has_read_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *mode_.read_only_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.TransactionOptions)
}

::google::protobuf::uint8* TransactionOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
  if (has_read_write()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *mode_.read_write_, deterministic, target);
  }

  // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
  if (has_read_only()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *mode_.read_only_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.TransactionOptions)
  return target;
}

size_t TransactionOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.TransactionOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (mode_case()) {
    // .google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;
    case kReadWrite: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mode_.read_write_);
      break;
    }
    // .google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;
    case kReadOnly: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mode_.read_only_);
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.TransactionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.TransactionOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.TransactionOptions)
    MergeFrom(*source);
  }
}

void TransactionOptions::MergeFrom(const TransactionOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.TransactionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mode_case()) {
    case kReadWrite: {
      mutable_read_write()->::google::datastore::v1::TransactionOptions_ReadWrite::MergeFrom(from.read_write());
      break;
    }
    case kReadOnly: {
      mutable_read_only()->::google::datastore::v1::TransactionOptions_ReadOnly::MergeFrom(from.read_only());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
}

void TransactionOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.TransactionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions::CopyFrom(const TransactionOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.TransactionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions::IsInitialized() const {
  return true;
}

void TransactionOptions::Swap(TransactionOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions::InternalSwap(TransactionOptions* other) {
  using std::swap;
  swap(mode_, other->mode_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionOptions::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fdatastore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace datastore
}  // namespace google

// @@protoc_insertion_point(global_scope)
