// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/v1/policy.proto

#include "google/iam/v1/policy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace iam {
namespace v1 {
class PolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Policy>
      _instance;
} _Policy_default_instance_;
class BindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Binding>
      _instance;
} _Binding_default_instance_;
class PolicyDeltaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PolicyDelta>
      _instance;
} _PolicyDelta_default_instance_;
class BindingDeltaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingDelta>
      _instance;
} _BindingDelta_default_instance_;
}  // namespace v1
}  // namespace iam
}  // namespace google
namespace protobuf_google_2fiam_2fv1_2fpolicy_2eproto {
void InitDefaultsPolicyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBinding();
  {
    void* ptr = &::google::iam::v1::_Policy_default_instance_;
    new (ptr) ::google::iam::v1::Policy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::v1::Policy::InitAsDefaultInstance();
}

void InitDefaultsPolicy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolicyImpl);
}

void InitDefaultsBindingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::iam::v1::_Binding_default_instance_;
    new (ptr) ::google::iam::v1::Binding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::v1::Binding::InitAsDefaultInstance();
}

void InitDefaultsBinding() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBindingImpl);
}

void InitDefaultsPolicyDeltaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBindingDelta();
  {
    void* ptr = &::google::iam::v1::_PolicyDelta_default_instance_;
    new (ptr) ::google::iam::v1::PolicyDelta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::v1::PolicyDelta::InitAsDefaultInstance();
}

void InitDefaultsPolicyDelta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolicyDeltaImpl);
}

void InitDefaultsBindingDeltaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::iam::v1::_BindingDelta_default_instance_;
    new (ptr) ::google::iam::v1::BindingDelta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::v1::BindingDelta::InitAsDefaultInstance();
}

void InitDefaultsBindingDelta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBindingDeltaImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::Policy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::Policy, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::Policy, bindings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::Policy, etag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::Binding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::Binding, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::Binding, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::PolicyDelta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::PolicyDelta, binding_deltas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::BindingDelta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::BindingDelta, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::BindingDelta, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::v1::BindingDelta, member_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::iam::v1::Policy)},
  { 8, -1, sizeof(::google::iam::v1::Binding)},
  { 15, -1, sizeof(::google::iam::v1::PolicyDelta)},
  { 21, -1, sizeof(::google::iam::v1::BindingDelta)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::v1::_Policy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::v1::_Binding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::v1::_PolicyDelta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::v1::_BindingDelta_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/iam/v1/policy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032google/iam/v1/policy.proto\022\rgoogle.iam"
      ".v1\032\034google/api/annotations.proto\"Q\n\006Pol"
      "icy\022\017\n\007version\030\001 \001(\005\022(\n\010bindings\030\004 \003(\0132\026"
      ".google.iam.v1.Binding\022\014\n\004etag\030\003 \001(\014\"(\n\007"
      "Binding\022\014\n\004role\030\001 \001(\t\022\017\n\007members\030\002 \003(\t\"B"
      "\n\013PolicyDelta\0223\n\016binding_deltas\030\001 \003(\0132\033."
      "google.iam.v1.BindingDelta\"\227\001\n\014BindingDe"
      "lta\0222\n\006action\030\001 \001(\0162\".google.iam.v1.Bind"
      "ingDelta.Action\022\014\n\004role\030\002 \001(\t\022\016\n\006member\030"
      "\003 \001(\t\"5\n\006Action\022\026\n\022ACTION_UNSPECIFIED\020\000\022"
      "\007\n\003ADD\020\001\022\n\n\006REMOVE\020\002Bm\n\021com.google.iam.v"
      "1B\013PolicyProtoP\001Z0google.golang.org/genp"
      "roto/googleapis/iam/v1;iam\370\001\001\252\002\023Google.C"
      "loud.Iam.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 539);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/iam/v1/policy.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fiam_2fv1_2fpolicy_2eproto
namespace google {
namespace iam {
namespace v1 {
const ::google::protobuf::EnumDescriptor* BindingDelta_Action_descriptor() {
  protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_enum_descriptors[0];
}
bool BindingDelta_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BindingDelta_Action BindingDelta::ACTION_UNSPECIFIED;
const BindingDelta_Action BindingDelta::ADD;
const BindingDelta_Action BindingDelta::REMOVE;
const BindingDelta_Action BindingDelta::Action_MIN;
const BindingDelta_Action BindingDelta::Action_MAX;
const int BindingDelta::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Policy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Policy::kVersionFieldNumber;
const int Policy::kBindingsFieldNumber;
const int Policy::kEtagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Policy::Policy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsPolicy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.v1.Policy)
}
Policy::Policy(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bindings_(arena) {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsPolicy();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.v1.Policy)
}
Policy::Policy(const Policy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bindings_(from.bindings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etag().size() > 0) {
    etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag(),
      GetArenaNoVirtual());
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.iam.v1.Policy)
}

void Policy::SharedCtor() {
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  _cached_size_ = 0;
}

Policy::~Policy() {
  // @@protoc_insertion_point(destructor:google.iam.v1.Policy)
  SharedDtor();
}

void Policy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Policy::ArenaDtor(void* object) {
  Policy* _this = reinterpret_cast< Policy* >(object);
  (void)_this;
}
void Policy::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Policy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Policy::descriptor() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Policy& Policy::default_instance() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsPolicy();
  return *internal_default_instance();
}

Policy* Policy::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Policy>(arena);
}

void Policy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.v1.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindings_.Clear();
  etag_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  version_ = 0;
  _internal_metadata_.Clear();
}

bool Policy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.v1.Policy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes etag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_etag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.iam.v1.Binding bindings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_bindings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.v1.Policy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.v1.Policy)
  return false;
#undef DO_
}

void Policy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.v1.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // bytes etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->etag(), output);
  }

  // repeated .google.iam.v1.Binding bindings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bindings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bindings(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.v1.Policy)
}

::google::protobuf::uint8* Policy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.v1.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // bytes etag = 3;
  if (this->etag().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->etag(), target);
  }

  // repeated .google.iam.v1.Binding bindings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bindings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->bindings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.v1.Policy)
  return target;
}

size_t Policy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.v1.Policy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.iam.v1.Binding bindings = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->bindings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bindings(static_cast<int>(i)));
    }
  }

  // bytes etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->etag());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Policy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.v1.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  const Policy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Policy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.v1.Policy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.v1.Policy)
    MergeFrom(*source);
  }
}

void Policy::MergeFrom(const Policy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.v1.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindings_.MergeFrom(from.bindings_);
  if (from.etag().size() > 0) {
    set_etag(from.etag());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void Policy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.v1.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Policy::CopyFrom(const Policy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.v1.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Policy::IsInitialized() const {
  return true;
}

void Policy::Swap(Policy* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Policy* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Policy::UnsafeArenaSwap(Policy* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Policy::InternalSwap(Policy* other) {
  using std::swap;
  bindings_.InternalSwap(&other->bindings_);
  etag_.Swap(&other->etag_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Policy::GetMetadata() const {
  protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Binding::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Binding::kRoleFieldNumber;
const int Binding::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Binding::Binding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBinding();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.v1.Binding)
}
Binding::Binding(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  members_(arena) {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBinding();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.v1.Binding)
}
Binding::Binding(const Binding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.v1.Binding)
}

void Binding::SharedCtor() {
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Binding::~Binding() {
  // @@protoc_insertion_point(destructor:google.iam.v1.Binding)
  SharedDtor();
}

void Binding::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Binding::ArenaDtor(void* object) {
  Binding* _this = reinterpret_cast< Binding* >(object);
  (void)_this;
}
void Binding::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Binding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Binding::descriptor() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Binding& Binding::default_instance() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBinding();
  return *internal_default_instance();
}

Binding* Binding::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Binding>(arena);
}

void Binding::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.v1.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  role_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Binding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.v1.Binding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.v1.Binding.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_members()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->members(this->members_size() - 1).data(),
            static_cast<int>(this->members(this->members_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.v1.Binding.members"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.v1.Binding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.v1.Binding)
  return false;
#undef DO_
}

void Binding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.v1.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.Binding.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->role(), output);
  }

  // repeated string members = 2;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->members(i).data(), static_cast<int>(this->members(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.Binding.members");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->members(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.v1.Binding)
}

::google::protobuf::uint8* Binding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.v1.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.Binding.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role(), target);
  }

  // repeated string members = 2;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->members(i).data(), static_cast<int>(this->members(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.Binding.members");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->members(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.v1.Binding)
  return target;
}

size_t Binding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.v1.Binding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string members = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->members_size());
  for (int i = 0, n = this->members_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->members(i));
  }

  // string role = 1;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Binding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.v1.Binding)
  GOOGLE_DCHECK_NE(&from, this);
  const Binding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Binding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.v1.Binding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.v1.Binding)
    MergeFrom(*source);
  }
}

void Binding::MergeFrom(const Binding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.v1.Binding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.role().size() > 0) {
    set_role(from.role());
  }
}

void Binding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.v1.Binding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Binding::CopyFrom(const Binding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.v1.Binding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Binding::IsInitialized() const {
  return true;
}

void Binding::Swap(Binding* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Binding* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Binding::UnsafeArenaSwap(Binding* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Binding::InternalSwap(Binding* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  role_.Swap(&other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Binding::GetMetadata() const {
  protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PolicyDelta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PolicyDelta::kBindingDeltasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PolicyDelta::PolicyDelta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsPolicyDelta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.v1.PolicyDelta)
}
PolicyDelta::PolicyDelta(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  binding_deltas_(arena) {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsPolicyDelta();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.v1.PolicyDelta)
}
PolicyDelta::PolicyDelta(const PolicyDelta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      binding_deltas_(from.binding_deltas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.iam.v1.PolicyDelta)
}

void PolicyDelta::SharedCtor() {
  _cached_size_ = 0;
}

PolicyDelta::~PolicyDelta() {
  // @@protoc_insertion_point(destructor:google.iam.v1.PolicyDelta)
  SharedDtor();
}

void PolicyDelta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PolicyDelta::ArenaDtor(void* object) {
  PolicyDelta* _this = reinterpret_cast< PolicyDelta* >(object);
  (void)_this;
}
void PolicyDelta::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PolicyDelta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PolicyDelta::descriptor() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PolicyDelta& PolicyDelta::default_instance() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsPolicyDelta();
  return *internal_default_instance();
}

PolicyDelta* PolicyDelta::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<PolicyDelta>(arena);
}

void PolicyDelta::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.v1.PolicyDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  binding_deltas_.Clear();
  _internal_metadata_.Clear();
}

bool PolicyDelta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.v1.PolicyDelta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.iam.v1.BindingDelta binding_deltas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_binding_deltas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.v1.PolicyDelta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.v1.PolicyDelta)
  return false;
#undef DO_
}

void PolicyDelta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.v1.PolicyDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.iam.v1.BindingDelta binding_deltas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binding_deltas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->binding_deltas(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.v1.PolicyDelta)
}

::google::protobuf::uint8* PolicyDelta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.v1.PolicyDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.iam.v1.BindingDelta binding_deltas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binding_deltas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->binding_deltas(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.v1.PolicyDelta)
  return target;
}

size_t PolicyDelta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.v1.PolicyDelta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.iam.v1.BindingDelta binding_deltas = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->binding_deltas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->binding_deltas(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PolicyDelta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.v1.PolicyDelta)
  GOOGLE_DCHECK_NE(&from, this);
  const PolicyDelta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PolicyDelta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.v1.PolicyDelta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.v1.PolicyDelta)
    MergeFrom(*source);
  }
}

void PolicyDelta::MergeFrom(const PolicyDelta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.v1.PolicyDelta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  binding_deltas_.MergeFrom(from.binding_deltas_);
}

void PolicyDelta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.v1.PolicyDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolicyDelta::CopyFrom(const PolicyDelta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.v1.PolicyDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolicyDelta::IsInitialized() const {
  return true;
}

void PolicyDelta::Swap(PolicyDelta* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PolicyDelta* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PolicyDelta::UnsafeArenaSwap(PolicyDelta* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PolicyDelta::InternalSwap(PolicyDelta* other) {
  using std::swap;
  binding_deltas_.InternalSwap(&other->binding_deltas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PolicyDelta::GetMetadata() const {
  protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BindingDelta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingDelta::kActionFieldNumber;
const int BindingDelta::kRoleFieldNumber;
const int BindingDelta::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingDelta::BindingDelta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBindingDelta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.v1.BindingDelta)
}
BindingDelta::BindingDelta(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBindingDelta();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.v1.BindingDelta)
}
BindingDelta::BindingDelta(const BindingDelta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role(),
      GetArenaNoVirtual());
  }
  member_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.member().size() > 0) {
    member_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.member(),
      GetArenaNoVirtual());
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:google.iam.v1.BindingDelta)
}

void BindingDelta::SharedCtor() {
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  member_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 0;
  _cached_size_ = 0;
}

BindingDelta::~BindingDelta() {
  // @@protoc_insertion_point(destructor:google.iam.v1.BindingDelta)
  SharedDtor();
}

void BindingDelta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  member_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindingDelta::ArenaDtor(void* object) {
  BindingDelta* _this = reinterpret_cast< BindingDelta* >(object);
  (void)_this;
}
void BindingDelta::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BindingDelta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingDelta::descriptor() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BindingDelta& BindingDelta::default_instance() {
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaultsBindingDelta();
  return *internal_default_instance();
}

BindingDelta* BindingDelta::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BindingDelta>(arena);
}

void BindingDelta::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.v1.BindingDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  member_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  action_ = 0;
  _internal_metadata_.Clear();
}

bool BindingDelta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.v1.BindingDelta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.iam.v1.BindingDelta.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::google::iam::v1::BindingDelta_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.v1.BindingDelta.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string member = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_member()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->member().data(), static_cast<int>(this->member().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.v1.BindingDelta.member"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.v1.BindingDelta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.v1.BindingDelta)
  return false;
#undef DO_
}

void BindingDelta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.v1.BindingDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.iam.v1.BindingDelta.Action action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.BindingDelta.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->role(), output);
  }

  // string member = 3;
  if (this->member().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member().data(), static_cast<int>(this->member().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.BindingDelta.member");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->member(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.v1.BindingDelta)
}

::google::protobuf::uint8* BindingDelta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.v1.BindingDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.iam.v1.BindingDelta.Action action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.BindingDelta.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role(), target);
  }

  // string member = 3;
  if (this->member().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member().data(), static_cast<int>(this->member().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.v1.BindingDelta.member");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->member(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.v1.BindingDelta)
  return target;
}

size_t BindingDelta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.v1.BindingDelta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string role = 2;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  // string member = 3;
  if (this->member().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->member());
  }

  // .google.iam.v1.BindingDelta.Action action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingDelta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.v1.BindingDelta)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingDelta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingDelta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.v1.BindingDelta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.v1.BindingDelta)
    MergeFrom(*source);
  }
}

void BindingDelta::MergeFrom(const BindingDelta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.v1.BindingDelta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.role().size() > 0) {
    set_role(from.role());
  }
  if (from.member().size() > 0) {
    set_member(from.member());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void BindingDelta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.v1.BindingDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingDelta::CopyFrom(const BindingDelta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.v1.BindingDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingDelta::IsInitialized() const {
  return true;
}

void BindingDelta::Swap(BindingDelta* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BindingDelta* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BindingDelta::UnsafeArenaSwap(BindingDelta* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BindingDelta::InternalSwap(BindingDelta* other) {
  using std::swap;
  role_.Swap(&other->role_);
  member_.Swap(&other->member_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingDelta::GetMetadata() const {
  protobuf_google_2fiam_2fv1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace iam
}  // namespace google

// @@protoc_insertion_point(global_scope)
