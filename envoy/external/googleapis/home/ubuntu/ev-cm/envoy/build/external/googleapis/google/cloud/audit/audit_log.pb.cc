// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/audit/audit_log.proto

#include "google/cloud/audit/audit_log.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace audit {
class AuditLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuditLog>
      _instance;
} _AuditLog_default_instance_;
class AuthenticationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticationInfo>
      _instance;
} _AuthenticationInfo_default_instance_;
class AuthorizationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthorizationInfo>
      _instance;
} _AuthorizationInfo_default_instance_;
class RequestMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestMetadata>
      _instance;
} _RequestMetadata_default_instance_;
}  // namespace audit
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto {
void InitDefaultsAuditLogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthenticationInfo();
  protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthorizationInfo();
  protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsRequestMetadata();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::google::cloud::audit::_AuditLog_default_instance_;
    new (ptr) ::google::cloud::audit::AuditLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::audit::AuditLog::InitAsDefaultInstance();
}

void InitDefaultsAuditLog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuditLogImpl);
}

void InitDefaultsAuthenticationInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::audit::_AuthenticationInfo_default_instance_;
    new (ptr) ::google::cloud::audit::AuthenticationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::audit::AuthenticationInfo::InitAsDefaultInstance();
}

void InitDefaultsAuthenticationInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthenticationInfoImpl);
}

void InitDefaultsAuthorizationInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::audit::_AuthorizationInfo_default_instance_;
    new (ptr) ::google::cloud::audit::AuthorizationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::audit::AuthorizationInfo::InitAsDefaultInstance();
}

void InitDefaultsAuthorizationInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthorizationInfoImpl);
}

void InitDefaultsRequestMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::audit::_RequestMetadata_default_instance_;
    new (ptr) ::google::cloud::audit::RequestMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::audit::RequestMetadata::InitAsDefaultInstance();
}

void InitDefaultsRequestMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestMetadataImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, num_response_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, authentication_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, authorization_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, request_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuditLog, service_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuthenticationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuthenticationInfo, principal_email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuthorizationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuthorizationInfo, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuthorizationInfo, permission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::AuthorizationInfo, granted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::RequestMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::RequestMetadata, caller_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::audit::RequestMetadata, caller_supplied_user_agent_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::audit::AuditLog)},
  { 16, -1, sizeof(::google::cloud::audit::AuthenticationInfo)},
  { 22, -1, sizeof(::google::cloud::audit::AuthorizationInfo)},
  { 30, -1, sizeof(::google::cloud::audit::RequestMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::audit::_AuditLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::audit::_AuthenticationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::audit::_AuthorizationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::audit::_RequestMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/audit/audit_log.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"google/cloud/audit/audit_log.proto\022\022go"
      "ogle.cloud.audit\032\034google/api/annotations"
      ".proto\032\031google/protobuf/any.proto\032\034googl"
      "e/protobuf/struct.proto\032\027google/rpc/stat"
      "us.proto\"\324\003\n\010AuditLog\022\024\n\014service_name\030\007 "
      "\001(\t\022\023\n\013method_name\030\010 \001(\t\022\025\n\rresource_nam"
      "e\030\013 \001(\t\022\032\n\022num_response_items\030\014 \001(\003\022\"\n\006s"
      "tatus\030\002 \001(\0132\022.google.rpc.Status\022C\n\023authe"
      "ntication_info\030\003 \001(\0132&.google.cloud.audi"
      "t.AuthenticationInfo\022A\n\022authorization_in"
      "fo\030\t \003(\0132%.google.cloud.audit.Authorizat"
      "ionInfo\022=\n\020request_metadata\030\004 \001(\0132#.goog"
      "le.cloud.audit.RequestMetadata\022(\n\007reques"
      "t\030\020 \001(\0132\027.google.protobuf.Struct\022)\n\010resp"
      "onse\030\021 \001(\0132\027.google.protobuf.Struct\022*\n\014s"
      "ervice_data\030\017 \001(\0132\024.google.protobuf.Any\""
      "-\n\022AuthenticationInfo\022\027\n\017principal_email"
      "\030\001 \001(\t\"J\n\021AuthorizationInfo\022\020\n\010resource\030"
      "\001 \001(\t\022\022\n\npermission\030\002 \001(\t\022\017\n\007granted\030\003 \001"
      "(\010\"H\n\017RequestMetadata\022\021\n\tcaller_ip\030\001 \001(\t"
      "\022\"\n\032caller_supplied_user_agent\030\002 \001(\tBb\n\026"
      "com.google.cloud.auditB\rAuditLogProtoP\001Z"
      "7google.golang.org/genproto/googleapis/c"
      "loud/audit;auditb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 944);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/audit/audit_log.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto
namespace google {
namespace cloud {
namespace audit {

// ===================================================================

void AuditLog::InitAsDefaultInstance() {
  ::google::cloud::audit::_AuditLog_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
  ::google::cloud::audit::_AuditLog_default_instance_._instance.get_mutable()->authentication_info_ = const_cast< ::google::cloud::audit::AuthenticationInfo*>(
      ::google::cloud::audit::AuthenticationInfo::internal_default_instance());
  ::google::cloud::audit::_AuditLog_default_instance_._instance.get_mutable()->request_metadata_ = const_cast< ::google::cloud::audit::RequestMetadata*>(
      ::google::cloud::audit::RequestMetadata::internal_default_instance());
  ::google::cloud::audit::_AuditLog_default_instance_._instance.get_mutable()->request_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::cloud::audit::_AuditLog_default_instance_._instance.get_mutable()->response_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::cloud::audit::_AuditLog_default_instance_._instance.get_mutable()->service_data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void AuditLog::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void AuditLog::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
}
void AuditLog::clear_response() {
  if (GetArenaNoVirtual() == NULL && response_ != NULL) {
    delete response_;
  }
  response_ = NULL;
}
void AuditLog::clear_service_data() {
  if (GetArenaNoVirtual() == NULL && service_data_ != NULL) {
    delete service_data_;
  }
  service_data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuditLog::kServiceNameFieldNumber;
const int AuditLog::kMethodNameFieldNumber;
const int AuditLog::kResourceNameFieldNumber;
const int AuditLog::kNumResponseItemsFieldNumber;
const int AuditLog::kStatusFieldNumber;
const int AuditLog::kAuthenticationInfoFieldNumber;
const int AuditLog::kAuthorizationInfoFieldNumber;
const int AuditLog::kRequestMetadataFieldNumber;
const int AuditLog::kRequestFieldNumber;
const int AuditLog::kResponseFieldNumber;
const int AuditLog::kServiceDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuditLog::AuditLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuditLog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.audit.AuditLog)
}
AuditLog::AuditLog(const AuditLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      authorization_info_(from.authorization_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method_name().size() > 0) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_authentication_info()) {
    authentication_info_ = new ::google::cloud::audit::AuthenticationInfo(*from.authentication_info_);
  } else {
    authentication_info_ = NULL;
  }
  if (from.has_request_metadata()) {
    request_metadata_ = new ::google::cloud::audit::RequestMetadata(*from.request_metadata_);
  } else {
    request_metadata_ = NULL;
  }
  if (from.has_service_data()) {
    service_data_ = new ::google::protobuf::Any(*from.service_data_);
  } else {
    service_data_ = NULL;
  }
  if (from.has_request()) {
    request_ = new ::google::protobuf::Struct(*from.request_);
  } else {
    request_ = NULL;
  }
  if (from.has_response()) {
    response_ = new ::google::protobuf::Struct(*from.response_);
  } else {
    response_ = NULL;
  }
  num_response_items_ = from.num_response_items_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.audit.AuditLog)
}

void AuditLog::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_response_items_) -
      reinterpret_cast<char*>(&status_)) + sizeof(num_response_items_));
  _cached_size_ = 0;
}

AuditLog::~AuditLog() {
  // @@protoc_insertion_point(destructor:google.cloud.audit.AuditLog)
  SharedDtor();
}

void AuditLog::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete authentication_info_;
  if (this != internal_default_instance()) delete request_metadata_;
  if (this != internal_default_instance()) delete service_data_;
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete response_;
}

void AuditLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuditLog::descriptor() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuditLog& AuditLog::default_instance() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuditLog();
  return *internal_default_instance();
}

AuditLog* AuditLog::New(::google::protobuf::Arena* arena) const {
  AuditLog* n = new AuditLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuditLog::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.audit.AuditLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_info_.Clear();
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && authentication_info_ != NULL) {
    delete authentication_info_;
  }
  authentication_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_metadata_ != NULL) {
    delete request_metadata_;
  }
  request_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && service_data_ != NULL) {
    delete service_data_;
  }
  service_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  if (GetArenaNoVirtual() == NULL && response_ != NULL) {
    delete response_;
  }
  response_ = NULL;
  num_response_items_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AuditLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.audit.AuditLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.rpc.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.audit.AuthenticationInfo authentication_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_authentication_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.audit.RequestMetadata request_metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.AuditLog.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.AuditLog.method_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.audit.AuthorizationInfo authorization_info = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_authorization_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.AuditLog.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_response_items = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_response_items_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any service_data = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct request = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct response = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.audit.AuditLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.audit.AuditLog)
  return false;
#undef DO_
}

void AuditLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.audit.AuditLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->status_, output);
  }

  // .google.cloud.audit.AuthenticationInfo authentication_info = 3;
  if (this->has_authentication_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->authentication_info_, output);
  }

  // .google.cloud.audit.RequestMetadata request_metadata = 4;
  if (this->has_request_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->request_metadata_, output);
  }

  // string service_name = 7;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuditLog.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->service_name(), output);
  }

  // string method_name = 8;
  if (this->method_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuditLog.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->method_name(), output);
  }

  // repeated .google.cloud.audit.AuthorizationInfo authorization_info = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->authorization_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->authorization_info(static_cast<int>(i)), output);
  }

  // string resource_name = 11;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuditLog.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->resource_name(), output);
  }

  // int64 num_response_items = 12;
  if (this->num_response_items() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->num_response_items(), output);
  }

  // .google.protobuf.Any service_data = 15;
  if (this->has_service_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->service_data_, output);
  }

  // .google.protobuf.Struct request = 16;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->request_, output);
  }

  // .google.protobuf.Struct response = 17;
  if (this->has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->response_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.audit.AuditLog)
}

::google::protobuf::uint8* AuditLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.audit.AuditLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->status_, deterministic, target);
  }

  // .google.cloud.audit.AuthenticationInfo authentication_info = 3;
  if (this->has_authentication_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->authentication_info_, deterministic, target);
  }

  // .google.cloud.audit.RequestMetadata request_metadata = 4;
  if (this->has_request_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->request_metadata_, deterministic, target);
  }

  // string service_name = 7;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuditLog.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->service_name(), target);
  }

  // string method_name = 8;
  if (this->method_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuditLog.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->method_name(), target);
  }

  // repeated .google.cloud.audit.AuthorizationInfo authorization_info = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->authorization_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->authorization_info(static_cast<int>(i)), deterministic, target);
  }

  // string resource_name = 11;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuditLog.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->resource_name(), target);
  }

  // int64 num_response_items = 12;
  if (this->num_response_items() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->num_response_items(), target);
  }

  // .google.protobuf.Any service_data = 15;
  if (this->has_service_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->service_data_, deterministic, target);
  }

  // .google.protobuf.Struct request = 16;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->request_, deterministic, target);
  }

  // .google.protobuf.Struct response = 17;
  if (this->has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->response_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.audit.AuditLog)
  return target;
}

size_t AuditLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.audit.AuditLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.audit.AuthorizationInfo authorization_info = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->authorization_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->authorization_info(static_cast<int>(i)));
    }
  }

  // string service_name = 7;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string method_name = 8;
  if (this->method_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method_name());
  }

  // string resource_name = 11;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  // .google.cloud.audit.AuthenticationInfo authentication_info = 3;
  if (this->has_authentication_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->authentication_info_);
  }

  // .google.cloud.audit.RequestMetadata request_metadata = 4;
  if (this->has_request_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->request_metadata_);
  }

  // .google.protobuf.Any service_data = 15;
  if (this->has_service_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_data_);
  }

  // .google.protobuf.Struct request = 16;
  if (this->has_request()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->request_);
  }

  // .google.protobuf.Struct response = 17;
  if (this->has_response()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->response_);
  }

  // int64 num_response_items = 12;
  if (this->num_response_items() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_response_items());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuditLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.audit.AuditLog)
  GOOGLE_DCHECK_NE(&from, this);
  const AuditLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuditLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.audit.AuditLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.audit.AuditLog)
    MergeFrom(*source);
  }
}

void AuditLog::MergeFrom(const AuditLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.audit.AuditLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authorization_info_.MergeFrom(from.authorization_info_);
  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.method_name().size() > 0) {

    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
  if (from.has_authentication_info()) {
    mutable_authentication_info()->::google::cloud::audit::AuthenticationInfo::MergeFrom(from.authentication_info());
  }
  if (from.has_request_metadata()) {
    mutable_request_metadata()->::google::cloud::audit::RequestMetadata::MergeFrom(from.request_metadata());
  }
  if (from.has_service_data()) {
    mutable_service_data()->::google::protobuf::Any::MergeFrom(from.service_data());
  }
  if (from.has_request()) {
    mutable_request()->::google::protobuf::Struct::MergeFrom(from.request());
  }
  if (from.has_response()) {
    mutable_response()->::google::protobuf::Struct::MergeFrom(from.response());
  }
  if (from.num_response_items() != 0) {
    set_num_response_items(from.num_response_items());
  }
}

void AuditLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.audit.AuditLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuditLog::CopyFrom(const AuditLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.audit.AuditLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuditLog::IsInitialized() const {
  return true;
}

void AuditLog::Swap(AuditLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuditLog::InternalSwap(AuditLog* other) {
  using std::swap;
  authorization_info_.InternalSwap(&other->authorization_info_);
  service_name_.Swap(&other->service_name_);
  method_name_.Swap(&other->method_name_);
  resource_name_.Swap(&other->resource_name_);
  swap(status_, other->status_);
  swap(authentication_info_, other->authentication_info_);
  swap(request_metadata_, other->request_metadata_);
  swap(service_data_, other->service_data_);
  swap(request_, other->request_);
  swap(response_, other->response_);
  swap(num_response_items_, other->num_response_items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuditLog::GetMetadata() const {
  protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticationInfo::kPrincipalEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticationInfo::AuthenticationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthenticationInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.audit.AuthenticationInfo)
}
AuthenticationInfo::AuthenticationInfo(const AuthenticationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  principal_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.principal_email().size() > 0) {
    principal_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.principal_email_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.audit.AuthenticationInfo)
}

void AuthenticationInfo::SharedCtor() {
  principal_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthenticationInfo::~AuthenticationInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.audit.AuthenticationInfo)
  SharedDtor();
}

void AuthenticationInfo::SharedDtor() {
  principal_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticationInfo::descriptor() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticationInfo& AuthenticationInfo::default_instance() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthenticationInfo();
  return *internal_default_instance();
}

AuthenticationInfo* AuthenticationInfo::New(::google::protobuf::Arena* arena) const {
  AuthenticationInfo* n = new AuthenticationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.audit.AuthenticationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  principal_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthenticationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.audit.AuthenticationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string principal_email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_principal_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->principal_email().data(), static_cast<int>(this->principal_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.AuthenticationInfo.principal_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.audit.AuthenticationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.audit.AuthenticationInfo)
  return false;
#undef DO_
}

void AuthenticationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.audit.AuthenticationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string principal_email = 1;
  if (this->principal_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal_email().data(), static_cast<int>(this->principal_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuthenticationInfo.principal_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->principal_email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.audit.AuthenticationInfo)
}

::google::protobuf::uint8* AuthenticationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.audit.AuthenticationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string principal_email = 1;
  if (this->principal_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal_email().data(), static_cast<int>(this->principal_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuthenticationInfo.principal_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->principal_email(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.audit.AuthenticationInfo)
  return target;
}

size_t AuthenticationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.audit.AuthenticationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string principal_email = 1;
  if (this->principal_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->principal_email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.audit.AuthenticationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.audit.AuthenticationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.audit.AuthenticationInfo)
    MergeFrom(*source);
  }
}

void AuthenticationInfo::MergeFrom(const AuthenticationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.audit.AuthenticationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.principal_email().size() > 0) {

    principal_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.principal_email_);
  }
}

void AuthenticationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.audit.AuthenticationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticationInfo::CopyFrom(const AuthenticationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.audit.AuthenticationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationInfo::IsInitialized() const {
  return true;
}

void AuthenticationInfo::Swap(AuthenticationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticationInfo::InternalSwap(AuthenticationInfo* other) {
  using std::swap;
  principal_email_.Swap(&other->principal_email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticationInfo::GetMetadata() const {
  protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthorizationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthorizationInfo::kResourceFieldNumber;
const int AuthorizationInfo::kPermissionFieldNumber;
const int AuthorizationInfo::kGrantedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthorizationInfo::AuthorizationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthorizationInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.audit.AuthorizationInfo)
}
AuthorizationInfo::AuthorizationInfo(const AuthorizationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource().size() > 0) {
    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  permission_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.permission().size() > 0) {
    permission_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_);
  }
  granted_ = from.granted_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.audit.AuthorizationInfo)
}

void AuthorizationInfo::SharedCtor() {
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  granted_ = false;
  _cached_size_ = 0;
}

AuthorizationInfo::~AuthorizationInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.audit.AuthorizationInfo)
  SharedDtor();
}

void AuthorizationInfo::SharedDtor() {
  resource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthorizationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthorizationInfo::descriptor() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthorizationInfo& AuthorizationInfo::default_instance() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthorizationInfo();
  return *internal_default_instance();
}

AuthorizationInfo* AuthorizationInfo::New(::google::protobuf::Arena* arena) const {
  AuthorizationInfo* n = new AuthorizationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthorizationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.audit.AuthorizationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  granted_ = false;
  _internal_metadata_.Clear();
}

bool AuthorizationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.audit.AuthorizationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource().data(), static_cast<int>(this->resource().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.AuthorizationInfo.resource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string permission = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_permission()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->permission().data(), static_cast<int>(this->permission().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.AuthorizationInfo.permission"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool granted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &granted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.audit.AuthorizationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.audit.AuthorizationInfo)
  return false;
#undef DO_
}

void AuthorizationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.audit.AuthorizationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource = 1;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuthorizationInfo.resource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource(), output);
  }

  // string permission = 2;
  if (this->permission().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuthorizationInfo.permission");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->permission(), output);
  }

  // bool granted = 3;
  if (this->granted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->granted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.audit.AuthorizationInfo)
}

::google::protobuf::uint8* AuthorizationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.audit.AuthorizationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource = 1;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuthorizationInfo.resource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource(), target);
  }

  // string permission = 2;
  if (this->permission().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.AuthorizationInfo.permission");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->permission(), target);
  }

  // bool granted = 3;
  if (this->granted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->granted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.audit.AuthorizationInfo)
  return target;
}

size_t AuthorizationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.audit.AuthorizationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource = 1;
  if (this->resource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource());
  }

  // string permission = 2;
  if (this->permission().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->permission());
  }

  // bool granted = 3;
  if (this->granted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthorizationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.audit.AuthorizationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthorizationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthorizationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.audit.AuthorizationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.audit.AuthorizationInfo)
    MergeFrom(*source);
  }
}

void AuthorizationInfo::MergeFrom(const AuthorizationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.audit.AuthorizationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource().size() > 0) {

    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  if (from.permission().size() > 0) {

    permission_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permission_);
  }
  if (from.granted() != 0) {
    set_granted(from.granted());
  }
}

void AuthorizationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.audit.AuthorizationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthorizationInfo::CopyFrom(const AuthorizationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.audit.AuthorizationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorizationInfo::IsInitialized() const {
  return true;
}

void AuthorizationInfo::Swap(AuthorizationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthorizationInfo::InternalSwap(AuthorizationInfo* other) {
  using std::swap;
  resource_.Swap(&other->resource_);
  permission_.Swap(&other->permission_);
  swap(granted_, other->granted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthorizationInfo::GetMetadata() const {
  protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestMetadata::kCallerIpFieldNumber;
const int RequestMetadata::kCallerSuppliedUserAgentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestMetadata::RequestMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsRequestMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.audit.RequestMetadata)
}
RequestMetadata::RequestMetadata(const RequestMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  caller_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.caller_ip().size() > 0) {
    caller_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caller_ip_);
  }
  caller_supplied_user_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.caller_supplied_user_agent().size() > 0) {
    caller_supplied_user_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caller_supplied_user_agent_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.audit.RequestMetadata)
}

void RequestMetadata::SharedCtor() {
  caller_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caller_supplied_user_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RequestMetadata::~RequestMetadata() {
  // @@protoc_insertion_point(destructor:google.cloud.audit.RequestMetadata)
  SharedDtor();
}

void RequestMetadata::SharedDtor() {
  caller_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caller_supplied_user_agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMetadata::descriptor() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestMetadata& RequestMetadata::default_instance() {
  ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsRequestMetadata();
  return *internal_default_instance();
}

RequestMetadata* RequestMetadata::New(::google::protobuf::Arena* arena) const {
  RequestMetadata* n = new RequestMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.audit.RequestMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  caller_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caller_supplied_user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RequestMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.audit.RequestMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string caller_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_caller_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->caller_ip().data(), static_cast<int>(this->caller_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.RequestMetadata.caller_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string caller_supplied_user_agent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_caller_supplied_user_agent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->caller_supplied_user_agent().data(), static_cast<int>(this->caller_supplied_user_agent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.audit.RequestMetadata.caller_supplied_user_agent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.audit.RequestMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.audit.RequestMetadata)
  return false;
#undef DO_
}

void RequestMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.audit.RequestMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string caller_ip = 1;
  if (this->caller_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->caller_ip().data(), static_cast<int>(this->caller_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.RequestMetadata.caller_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->caller_ip(), output);
  }

  // string caller_supplied_user_agent = 2;
  if (this->caller_supplied_user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->caller_supplied_user_agent().data(), static_cast<int>(this->caller_supplied_user_agent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.RequestMetadata.caller_supplied_user_agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->caller_supplied_user_agent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.audit.RequestMetadata)
}

::google::protobuf::uint8* RequestMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.audit.RequestMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string caller_ip = 1;
  if (this->caller_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->caller_ip().data(), static_cast<int>(this->caller_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.RequestMetadata.caller_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->caller_ip(), target);
  }

  // string caller_supplied_user_agent = 2;
  if (this->caller_supplied_user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->caller_supplied_user_agent().data(), static_cast<int>(this->caller_supplied_user_agent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.audit.RequestMetadata.caller_supplied_user_agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->caller_supplied_user_agent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.audit.RequestMetadata)
  return target;
}

size_t RequestMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.audit.RequestMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string caller_ip = 1;
  if (this->caller_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->caller_ip());
  }

  // string caller_supplied_user_agent = 2;
  if (this->caller_supplied_user_agent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->caller_supplied_user_agent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.audit.RequestMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.audit.RequestMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.audit.RequestMetadata)
    MergeFrom(*source);
  }
}

void RequestMetadata::MergeFrom(const RequestMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.audit.RequestMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.caller_ip().size() > 0) {

    caller_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caller_ip_);
  }
  if (from.caller_supplied_user_agent().size() > 0) {

    caller_supplied_user_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caller_supplied_user_agent_);
  }
}

void RequestMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.audit.RequestMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMetadata::CopyFrom(const RequestMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.audit.RequestMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMetadata::IsInitialized() const {
  return true;
}

void RequestMetadata::Swap(RequestMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestMetadata::InternalSwap(RequestMetadata* other) {
  using std::swap;
  caller_ip_.Swap(&other->caller_ip_);
  caller_supplied_user_agent_.Swap(&other->caller_supplied_user_agent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestMetadata::GetMetadata() const {
  protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace audit
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
