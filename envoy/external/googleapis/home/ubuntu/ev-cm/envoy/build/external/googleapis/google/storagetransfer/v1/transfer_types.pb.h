// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storagetransfer/v1/transfer_types.proto

#ifndef PROTOBUF_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto__INCLUDED
#define PROTOBUF_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/code.pb.h"
#include "google/type/date.pb.h"
#include "google/type/timeofday.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGoogleServiceAccountImpl();
void InitDefaultsGoogleServiceAccount();
void InitDefaultsAwsAccessKeyImpl();
void InitDefaultsAwsAccessKey();
void InitDefaultsObjectConditionsImpl();
void InitDefaultsObjectConditions();
void InitDefaultsGcsDataImpl();
void InitDefaultsGcsData();
void InitDefaultsAwsS3DataImpl();
void InitDefaultsAwsS3Data();
void InitDefaultsHttpDataImpl();
void InitDefaultsHttpData();
void InitDefaultsTransferOptionsImpl();
void InitDefaultsTransferOptions();
void InitDefaultsTransferSpecImpl();
void InitDefaultsTransferSpec();
void InitDefaultsScheduleImpl();
void InitDefaultsSchedule();
void InitDefaultsTransferJobImpl();
void InitDefaultsTransferJob();
void InitDefaultsErrorLogEntryImpl();
void InitDefaultsErrorLogEntry();
void InitDefaultsErrorSummaryImpl();
void InitDefaultsErrorSummary();
void InitDefaultsTransferCountersImpl();
void InitDefaultsTransferCounters();
void InitDefaultsTransferOperationImpl();
void InitDefaultsTransferOperation();
inline void InitDefaults() {
  InitDefaultsGoogleServiceAccount();
  InitDefaultsAwsAccessKey();
  InitDefaultsObjectConditions();
  InitDefaultsGcsData();
  InitDefaultsAwsS3Data();
  InitDefaultsHttpData();
  InitDefaultsTransferOptions();
  InitDefaultsTransferSpec();
  InitDefaultsSchedule();
  InitDefaultsTransferJob();
  InitDefaultsErrorLogEntry();
  InitDefaultsErrorSummary();
  InitDefaultsTransferCounters();
  InitDefaultsTransferOperation();
}
}  // namespace protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto
namespace google {
namespace storagetransfer {
namespace v1 {
class AwsAccessKey;
class AwsAccessKeyDefaultTypeInternal;
extern AwsAccessKeyDefaultTypeInternal _AwsAccessKey_default_instance_;
class AwsS3Data;
class AwsS3DataDefaultTypeInternal;
extern AwsS3DataDefaultTypeInternal _AwsS3Data_default_instance_;
class ErrorLogEntry;
class ErrorLogEntryDefaultTypeInternal;
extern ErrorLogEntryDefaultTypeInternal _ErrorLogEntry_default_instance_;
class ErrorSummary;
class ErrorSummaryDefaultTypeInternal;
extern ErrorSummaryDefaultTypeInternal _ErrorSummary_default_instance_;
class GcsData;
class GcsDataDefaultTypeInternal;
extern GcsDataDefaultTypeInternal _GcsData_default_instance_;
class GoogleServiceAccount;
class GoogleServiceAccountDefaultTypeInternal;
extern GoogleServiceAccountDefaultTypeInternal _GoogleServiceAccount_default_instance_;
class HttpData;
class HttpDataDefaultTypeInternal;
extern HttpDataDefaultTypeInternal _HttpData_default_instance_;
class ObjectConditions;
class ObjectConditionsDefaultTypeInternal;
extern ObjectConditionsDefaultTypeInternal _ObjectConditions_default_instance_;
class Schedule;
class ScheduleDefaultTypeInternal;
extern ScheduleDefaultTypeInternal _Schedule_default_instance_;
class TransferCounters;
class TransferCountersDefaultTypeInternal;
extern TransferCountersDefaultTypeInternal _TransferCounters_default_instance_;
class TransferJob;
class TransferJobDefaultTypeInternal;
extern TransferJobDefaultTypeInternal _TransferJob_default_instance_;
class TransferOperation;
class TransferOperationDefaultTypeInternal;
extern TransferOperationDefaultTypeInternal _TransferOperation_default_instance_;
class TransferOptions;
class TransferOptionsDefaultTypeInternal;
extern TransferOptionsDefaultTypeInternal _TransferOptions_default_instance_;
class TransferSpec;
class TransferSpecDefaultTypeInternal;
extern TransferSpecDefaultTypeInternal _TransferSpec_default_instance_;
}  // namespace v1
}  // namespace storagetransfer
}  // namespace google
namespace google {
namespace storagetransfer {
namespace v1 {

enum TransferJob_Status {
  TransferJob_Status_STATUS_UNSPECIFIED = 0,
  TransferJob_Status_ENABLED = 1,
  TransferJob_Status_DISABLED = 2,
  TransferJob_Status_DELETED = 3,
  TransferJob_Status_TransferJob_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TransferJob_Status_TransferJob_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TransferJob_Status_IsValid(int value);
const TransferJob_Status TransferJob_Status_Status_MIN = TransferJob_Status_STATUS_UNSPECIFIED;
const TransferJob_Status TransferJob_Status_Status_MAX = TransferJob_Status_DELETED;
const int TransferJob_Status_Status_ARRAYSIZE = TransferJob_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* TransferJob_Status_descriptor();
inline const ::std::string& TransferJob_Status_Name(TransferJob_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    TransferJob_Status_descriptor(), value);
}
inline bool TransferJob_Status_Parse(
    const ::std::string& name, TransferJob_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransferJob_Status>(
    TransferJob_Status_descriptor(), name, value);
}
enum TransferOperation_Status {
  TransferOperation_Status_STATUS_UNSPECIFIED = 0,
  TransferOperation_Status_IN_PROGRESS = 1,
  TransferOperation_Status_PAUSED = 2,
  TransferOperation_Status_SUCCESS = 3,
  TransferOperation_Status_FAILED = 4,
  TransferOperation_Status_ABORTED = 5,
  TransferOperation_Status_TransferOperation_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TransferOperation_Status_TransferOperation_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TransferOperation_Status_IsValid(int value);
const TransferOperation_Status TransferOperation_Status_Status_MIN = TransferOperation_Status_STATUS_UNSPECIFIED;
const TransferOperation_Status TransferOperation_Status_Status_MAX = TransferOperation_Status_ABORTED;
const int TransferOperation_Status_Status_ARRAYSIZE = TransferOperation_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* TransferOperation_Status_descriptor();
inline const ::std::string& TransferOperation_Status_Name(TransferOperation_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    TransferOperation_Status_descriptor(), value);
}
inline bool TransferOperation_Status_Parse(
    const ::std::string& name, TransferOperation_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransferOperation_Status>(
    TransferOperation_Status_descriptor(), name, value);
}
// ===================================================================

class GoogleServiceAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.GoogleServiceAccount) */ {
 public:
  GoogleServiceAccount();
  virtual ~GoogleServiceAccount();

  GoogleServiceAccount(const GoogleServiceAccount& from);

  inline GoogleServiceAccount& operator=(const GoogleServiceAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoogleServiceAccount(GoogleServiceAccount&& from) noexcept
    : GoogleServiceAccount() {
    *this = ::std::move(from);
  }

  inline GoogleServiceAccount& operator=(GoogleServiceAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoogleServiceAccount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoogleServiceAccount* internal_default_instance() {
    return reinterpret_cast<const GoogleServiceAccount*>(
               &_GoogleServiceAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(GoogleServiceAccount* other);
  void Swap(GoogleServiceAccount* other);
  friend void swap(GoogleServiceAccount& a, GoogleServiceAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoogleServiceAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  GoogleServiceAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GoogleServiceAccount& from);
  void MergeFrom(const GoogleServiceAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GoogleServiceAccount* other);
  protected:
  explicit GoogleServiceAccount(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account_email = 1;
  void clear_account_email();
  static const int kAccountEmailFieldNumber = 1;
  const ::std::string& account_email() const;
  void set_account_email(const ::std::string& value);
  #if LANG_CXX11
  void set_account_email(::std::string&& value);
  #endif
  void set_account_email(const char* value);
  void set_account_email(const char* value, size_t size);
  ::std::string* mutable_account_email();
  ::std::string* release_account_email();
  void set_allocated_account_email(::std::string* account_email);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_account_email();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_account_email(
      ::std::string* account_email);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.GoogleServiceAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr account_email_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGoogleServiceAccountImpl();
};
// -------------------------------------------------------------------

class AwsAccessKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.AwsAccessKey) */ {
 public:
  AwsAccessKey();
  virtual ~AwsAccessKey();

  AwsAccessKey(const AwsAccessKey& from);

  inline AwsAccessKey& operator=(const AwsAccessKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AwsAccessKey(AwsAccessKey&& from) noexcept
    : AwsAccessKey() {
    *this = ::std::move(from);
  }

  inline AwsAccessKey& operator=(AwsAccessKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AwsAccessKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AwsAccessKey* internal_default_instance() {
    return reinterpret_cast<const AwsAccessKey*>(
               &_AwsAccessKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(AwsAccessKey* other);
  void Swap(AwsAccessKey* other);
  friend void swap(AwsAccessKey& a, AwsAccessKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AwsAccessKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AwsAccessKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AwsAccessKey& from);
  void MergeFrom(const AwsAccessKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AwsAccessKey* other);
  protected:
  explicit AwsAccessKey(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string access_key_id = 1;
  void clear_access_key_id();
  static const int kAccessKeyIdFieldNumber = 1;
  const ::std::string& access_key_id() const;
  void set_access_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_access_key_id(::std::string&& value);
  #endif
  void set_access_key_id(const char* value);
  void set_access_key_id(const char* value, size_t size);
  ::std::string* mutable_access_key_id();
  ::std::string* release_access_key_id();
  void set_allocated_access_key_id(::std::string* access_key_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_access_key_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_access_key_id(
      ::std::string* access_key_id);

  // string secret_access_key = 2;
  void clear_secret_access_key();
  static const int kSecretAccessKeyFieldNumber = 2;
  const ::std::string& secret_access_key() const;
  void set_secret_access_key(const ::std::string& value);
  #if LANG_CXX11
  void set_secret_access_key(::std::string&& value);
  #endif
  void set_secret_access_key(const char* value);
  void set_secret_access_key(const char* value, size_t size);
  ::std::string* mutable_secret_access_key();
  ::std::string* release_secret_access_key();
  void set_allocated_secret_access_key(::std::string* secret_access_key);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_secret_access_key();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_secret_access_key(
      ::std::string* secret_access_key);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.AwsAccessKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr access_key_id_;
  ::google::protobuf::internal::ArenaStringPtr secret_access_key_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsAccessKeyImpl();
};
// -------------------------------------------------------------------

class ObjectConditions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.ObjectConditions) */ {
 public:
  ObjectConditions();
  virtual ~ObjectConditions();

  ObjectConditions(const ObjectConditions& from);

  inline ObjectConditions& operator=(const ObjectConditions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectConditions(ObjectConditions&& from) noexcept
    : ObjectConditions() {
    *this = ::std::move(from);
  }

  inline ObjectConditions& operator=(ObjectConditions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectConditions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectConditions* internal_default_instance() {
    return reinterpret_cast<const ObjectConditions*>(
               &_ObjectConditions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ObjectConditions* other);
  void Swap(ObjectConditions* other);
  friend void swap(ObjectConditions& a, ObjectConditions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectConditions* New() const PROTOBUF_FINAL { return New(NULL); }

  ObjectConditions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectConditions& from);
  void MergeFrom(const ObjectConditions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectConditions* other);
  protected:
  explicit ObjectConditions(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string include_prefixes = 3;
  int include_prefixes_size() const;
  void clear_include_prefixes();
  static const int kIncludePrefixesFieldNumber = 3;
  const ::std::string& include_prefixes(int index) const;
  ::std::string* mutable_include_prefixes(int index);
  void set_include_prefixes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_include_prefixes(int index, ::std::string&& value);
  #endif
  void set_include_prefixes(int index, const char* value);
  void set_include_prefixes(int index, const char* value, size_t size);
  ::std::string* add_include_prefixes();
  void add_include_prefixes(const ::std::string& value);
  #if LANG_CXX11
  void add_include_prefixes(::std::string&& value);
  #endif
  void add_include_prefixes(const char* value);
  void add_include_prefixes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& include_prefixes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_include_prefixes();

  // repeated string exclude_prefixes = 4;
  int exclude_prefixes_size() const;
  void clear_exclude_prefixes();
  static const int kExcludePrefixesFieldNumber = 4;
  const ::std::string& exclude_prefixes(int index) const;
  ::std::string* mutable_exclude_prefixes(int index);
  void set_exclude_prefixes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_exclude_prefixes(int index, ::std::string&& value);
  #endif
  void set_exclude_prefixes(int index, const char* value);
  void set_exclude_prefixes(int index, const char* value, size_t size);
  ::std::string* add_exclude_prefixes();
  void add_exclude_prefixes(const ::std::string& value);
  #if LANG_CXX11
  void add_exclude_prefixes(::std::string&& value);
  #endif
  void add_exclude_prefixes(const char* value);
  void add_exclude_prefixes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& exclude_prefixes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_exclude_prefixes();

  // .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
  bool has_min_time_elapsed_since_last_modification() const;
  void clear_min_time_elapsed_since_last_modification();
  static const int kMinTimeElapsedSinceLastModificationFieldNumber = 1;
  private:
  void _slow_mutable_min_time_elapsed_since_last_modification();
  public:
  const ::google::protobuf::Duration& min_time_elapsed_since_last_modification() const;
  ::google::protobuf::Duration* release_min_time_elapsed_since_last_modification();
  ::google::protobuf::Duration* mutable_min_time_elapsed_since_last_modification();
  void set_allocated_min_time_elapsed_since_last_modification(::google::protobuf::Duration* min_time_elapsed_since_last_modification);
  void unsafe_arena_set_allocated_min_time_elapsed_since_last_modification(
      ::google::protobuf::Duration* min_time_elapsed_since_last_modification);
  ::google::protobuf::Duration* unsafe_arena_release_min_time_elapsed_since_last_modification();

  // .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
  bool has_max_time_elapsed_since_last_modification() const;
  void clear_max_time_elapsed_since_last_modification();
  static const int kMaxTimeElapsedSinceLastModificationFieldNumber = 2;
  private:
  void _slow_mutable_max_time_elapsed_since_last_modification();
  public:
  const ::google::protobuf::Duration& max_time_elapsed_since_last_modification() const;
  ::google::protobuf::Duration* release_max_time_elapsed_since_last_modification();
  ::google::protobuf::Duration* mutable_max_time_elapsed_since_last_modification();
  void set_allocated_max_time_elapsed_since_last_modification(::google::protobuf::Duration* max_time_elapsed_since_last_modification);
  void unsafe_arena_set_allocated_max_time_elapsed_since_last_modification(
      ::google::protobuf::Duration* max_time_elapsed_since_last_modification);
  ::google::protobuf::Duration* unsafe_arena_release_max_time_elapsed_since_last_modification();

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.ObjectConditions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> include_prefixes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> exclude_prefixes_;
  ::google::protobuf::Duration* min_time_elapsed_since_last_modification_;
  ::google::protobuf::Duration* max_time_elapsed_since_last_modification_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsObjectConditionsImpl();
};
// -------------------------------------------------------------------

class GcsData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.GcsData) */ {
 public:
  GcsData();
  virtual ~GcsData();

  GcsData(const GcsData& from);

  inline GcsData& operator=(const GcsData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GcsData(GcsData&& from) noexcept
    : GcsData() {
    *this = ::std::move(from);
  }

  inline GcsData& operator=(GcsData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GcsData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GcsData* internal_default_instance() {
    return reinterpret_cast<const GcsData*>(
               &_GcsData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(GcsData* other);
  void Swap(GcsData* other);
  friend void swap(GcsData& a, GcsData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GcsData* New() const PROTOBUF_FINAL { return New(NULL); }

  GcsData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GcsData& from);
  void MergeFrom(const GcsData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GcsData* other);
  protected:
  explicit GcsData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bucket_name = 1;
  void clear_bucket_name();
  static const int kBucketNameFieldNumber = 1;
  const ::std::string& bucket_name() const;
  void set_bucket_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_name(::std::string&& value);
  #endif
  void set_bucket_name(const char* value);
  void set_bucket_name(const char* value, size_t size);
  ::std::string* mutable_bucket_name();
  ::std::string* release_bucket_name();
  void set_allocated_bucket_name(::std::string* bucket_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_bucket_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bucket_name(
      ::std::string* bucket_name);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.GcsData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr bucket_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGcsDataImpl();
};
// -------------------------------------------------------------------

class AwsS3Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.AwsS3Data) */ {
 public:
  AwsS3Data();
  virtual ~AwsS3Data();

  AwsS3Data(const AwsS3Data& from);

  inline AwsS3Data& operator=(const AwsS3Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AwsS3Data(AwsS3Data&& from) noexcept
    : AwsS3Data() {
    *this = ::std::move(from);
  }

  inline AwsS3Data& operator=(AwsS3Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AwsS3Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AwsS3Data* internal_default_instance() {
    return reinterpret_cast<const AwsS3Data*>(
               &_AwsS3Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(AwsS3Data* other);
  void Swap(AwsS3Data* other);
  friend void swap(AwsS3Data& a, AwsS3Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AwsS3Data* New() const PROTOBUF_FINAL { return New(NULL); }

  AwsS3Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AwsS3Data& from);
  void MergeFrom(const AwsS3Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AwsS3Data* other);
  protected:
  explicit AwsS3Data(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bucket_name = 1;
  void clear_bucket_name();
  static const int kBucketNameFieldNumber = 1;
  const ::std::string& bucket_name() const;
  void set_bucket_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_name(::std::string&& value);
  #endif
  void set_bucket_name(const char* value);
  void set_bucket_name(const char* value, size_t size);
  ::std::string* mutable_bucket_name();
  ::std::string* release_bucket_name();
  void set_allocated_bucket_name(::std::string* bucket_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_bucket_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bucket_name(
      ::std::string* bucket_name);

  // .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
  bool has_aws_access_key() const;
  void clear_aws_access_key();
  static const int kAwsAccessKeyFieldNumber = 2;
  private:
  void _slow_mutable_aws_access_key();
  public:
  const ::google::storagetransfer::v1::AwsAccessKey& aws_access_key() const;
  ::google::storagetransfer::v1::AwsAccessKey* release_aws_access_key();
  ::google::storagetransfer::v1::AwsAccessKey* mutable_aws_access_key();
  void set_allocated_aws_access_key(::google::storagetransfer::v1::AwsAccessKey* aws_access_key);
  void unsafe_arena_set_allocated_aws_access_key(
      ::google::storagetransfer::v1::AwsAccessKey* aws_access_key);
  ::google::storagetransfer::v1::AwsAccessKey* unsafe_arena_release_aws_access_key();

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.AwsS3Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr bucket_name_;
  ::google::storagetransfer::v1::AwsAccessKey* aws_access_key_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsS3DataImpl();
};
// -------------------------------------------------------------------

class HttpData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.HttpData) */ {
 public:
  HttpData();
  virtual ~HttpData();

  HttpData(const HttpData& from);

  inline HttpData& operator=(const HttpData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HttpData(HttpData&& from) noexcept
    : HttpData() {
    *this = ::std::move(from);
  }

  inline HttpData& operator=(HttpData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HttpData* internal_default_instance() {
    return reinterpret_cast<const HttpData*>(
               &_HttpData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(HttpData* other);
  void Swap(HttpData* other);
  friend void swap(HttpData& a, HttpData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HttpData* New() const PROTOBUF_FINAL { return New(NULL); }

  HttpData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HttpData& from);
  void MergeFrom(const HttpData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HttpData* other);
  protected:
  explicit HttpData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string list_url = 1;
  void clear_list_url();
  static const int kListUrlFieldNumber = 1;
  const ::std::string& list_url() const;
  void set_list_url(const ::std::string& value);
  #if LANG_CXX11
  void set_list_url(::std::string&& value);
  #endif
  void set_list_url(const char* value);
  void set_list_url(const char* value, size_t size);
  ::std::string* mutable_list_url();
  ::std::string* release_list_url();
  void set_allocated_list_url(::std::string* list_url);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_list_url();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_list_url(
      ::std::string* list_url);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.HttpData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr list_url_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsHttpDataImpl();
};
// -------------------------------------------------------------------

class TransferOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.TransferOptions) */ {
 public:
  TransferOptions();
  virtual ~TransferOptions();

  TransferOptions(const TransferOptions& from);

  inline TransferOptions& operator=(const TransferOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferOptions(TransferOptions&& from) noexcept
    : TransferOptions() {
    *this = ::std::move(from);
  }

  inline TransferOptions& operator=(TransferOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferOptions* internal_default_instance() {
    return reinterpret_cast<const TransferOptions*>(
               &_TransferOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(TransferOptions* other);
  void Swap(TransferOptions* other);
  friend void swap(TransferOptions& a, TransferOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferOptions* New() const PROTOBUF_FINAL { return New(NULL); }

  TransferOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferOptions& from);
  void MergeFrom(const TransferOptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferOptions* other);
  protected:
  explicit TransferOptions(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool overwrite_objects_already_existing_in_sink = 1;
  void clear_overwrite_objects_already_existing_in_sink();
  static const int kOverwriteObjectsAlreadyExistingInSinkFieldNumber = 1;
  bool overwrite_objects_already_existing_in_sink() const;
  void set_overwrite_objects_already_existing_in_sink(bool value);

  // bool delete_objects_unique_in_sink = 2;
  void clear_delete_objects_unique_in_sink();
  static const int kDeleteObjectsUniqueInSinkFieldNumber = 2;
  bool delete_objects_unique_in_sink() const;
  void set_delete_objects_unique_in_sink(bool value);

  // bool delete_objects_from_source_after_transfer = 3;
  void clear_delete_objects_from_source_after_transfer();
  static const int kDeleteObjectsFromSourceAfterTransferFieldNumber = 3;
  bool delete_objects_from_source_after_transfer() const;
  void set_delete_objects_from_source_after_transfer(bool value);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.TransferOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool overwrite_objects_already_existing_in_sink_;
  bool delete_objects_unique_in_sink_;
  bool delete_objects_from_source_after_transfer_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOptionsImpl();
};
// -------------------------------------------------------------------

class TransferSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.TransferSpec) */ {
 public:
  TransferSpec();
  virtual ~TransferSpec();

  TransferSpec(const TransferSpec& from);

  inline TransferSpec& operator=(const TransferSpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferSpec(TransferSpec&& from) noexcept
    : TransferSpec() {
    *this = ::std::move(from);
  }

  inline TransferSpec& operator=(TransferSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferSpec& default_instance();

  enum DataSourceCase {
    kGcsDataSource = 1,
    kAwsS3DataSource = 2,
    kHttpDataSource = 3,
    DATA_SOURCE_NOT_SET = 0,
  };

  enum DataSinkCase {
    kGcsDataSink = 4,
    DATA_SINK_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferSpec* internal_default_instance() {
    return reinterpret_cast<const TransferSpec*>(
               &_TransferSpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(TransferSpec* other);
  void Swap(TransferSpec* other);
  friend void swap(TransferSpec& a, TransferSpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  TransferSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferSpec& from);
  void MergeFrom(const TransferSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferSpec* other);
  protected:
  explicit TransferSpec(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
  bool has_object_conditions() const;
  void clear_object_conditions();
  static const int kObjectConditionsFieldNumber = 5;
  private:
  void _slow_mutable_object_conditions();
  public:
  const ::google::storagetransfer::v1::ObjectConditions& object_conditions() const;
  ::google::storagetransfer::v1::ObjectConditions* release_object_conditions();
  ::google::storagetransfer::v1::ObjectConditions* mutable_object_conditions();
  void set_allocated_object_conditions(::google::storagetransfer::v1::ObjectConditions* object_conditions);
  void unsafe_arena_set_allocated_object_conditions(
      ::google::storagetransfer::v1::ObjectConditions* object_conditions);
  ::google::storagetransfer::v1::ObjectConditions* unsafe_arena_release_object_conditions();

  // .google.storagetransfer.v1.TransferOptions transfer_options = 6;
  bool has_transfer_options() const;
  void clear_transfer_options();
  static const int kTransferOptionsFieldNumber = 6;
  private:
  void _slow_mutable_transfer_options();
  public:
  const ::google::storagetransfer::v1::TransferOptions& transfer_options() const;
  ::google::storagetransfer::v1::TransferOptions* release_transfer_options();
  ::google::storagetransfer::v1::TransferOptions* mutable_transfer_options();
  void set_allocated_transfer_options(::google::storagetransfer::v1::TransferOptions* transfer_options);
  void unsafe_arena_set_allocated_transfer_options(
      ::google::storagetransfer::v1::TransferOptions* transfer_options);
  ::google::storagetransfer::v1::TransferOptions* unsafe_arena_release_transfer_options();

  // .google.storagetransfer.v1.GcsData gcs_data_source = 1;
  bool has_gcs_data_source() const;
  void clear_gcs_data_source();
  static const int kGcsDataSourceFieldNumber = 1;
  private:
  void _slow_mutable_gcs_data_source();
  public:
  const ::google::storagetransfer::v1::GcsData& gcs_data_source() const;
  ::google::storagetransfer::v1::GcsData* release_gcs_data_source();
  ::google::storagetransfer::v1::GcsData* mutable_gcs_data_source();
  void set_allocated_gcs_data_source(::google::storagetransfer::v1::GcsData* gcs_data_source);
  void unsafe_arena_set_allocated_gcs_data_source(
      ::google::storagetransfer::v1::GcsData* gcs_data_source);
  ::google::storagetransfer::v1::GcsData* unsafe_arena_release_gcs_data_source();

  // .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
  bool has_aws_s3_data_source() const;
  void clear_aws_s3_data_source();
  static const int kAwsS3DataSourceFieldNumber = 2;
  private:
  void _slow_mutable_aws_s3_data_source();
  public:
  const ::google::storagetransfer::v1::AwsS3Data& aws_s3_data_source() const;
  ::google::storagetransfer::v1::AwsS3Data* release_aws_s3_data_source();
  ::google::storagetransfer::v1::AwsS3Data* mutable_aws_s3_data_source();
  void set_allocated_aws_s3_data_source(::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source);
  void unsafe_arena_set_allocated_aws_s3_data_source(
      ::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source);
  ::google::storagetransfer::v1::AwsS3Data* unsafe_arena_release_aws_s3_data_source();

  // .google.storagetransfer.v1.HttpData http_data_source = 3;
  bool has_http_data_source() const;
  void clear_http_data_source();
  static const int kHttpDataSourceFieldNumber = 3;
  private:
  void _slow_mutable_http_data_source();
  public:
  const ::google::storagetransfer::v1::HttpData& http_data_source() const;
  ::google::storagetransfer::v1::HttpData* release_http_data_source();
  ::google::storagetransfer::v1::HttpData* mutable_http_data_source();
  void set_allocated_http_data_source(::google::storagetransfer::v1::HttpData* http_data_source);
  void unsafe_arena_set_allocated_http_data_source(
      ::google::storagetransfer::v1::HttpData* http_data_source);
  ::google::storagetransfer::v1::HttpData* unsafe_arena_release_http_data_source();

  // .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
  bool has_gcs_data_sink() const;
  void clear_gcs_data_sink();
  static const int kGcsDataSinkFieldNumber = 4;
  private:
  void _slow_mutable_gcs_data_sink();
  public:
  const ::google::storagetransfer::v1::GcsData& gcs_data_sink() const;
  ::google::storagetransfer::v1::GcsData* release_gcs_data_sink();
  ::google::storagetransfer::v1::GcsData* mutable_gcs_data_sink();
  void set_allocated_gcs_data_sink(::google::storagetransfer::v1::GcsData* gcs_data_sink);
  void unsafe_arena_set_allocated_gcs_data_sink(
      ::google::storagetransfer::v1::GcsData* gcs_data_sink);
  ::google::storagetransfer::v1::GcsData* unsafe_arena_release_gcs_data_sink();

  DataSourceCase data_source_case() const;
  DataSinkCase data_sink_case() const;
  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.TransferSpec)
 private:
  void set_has_gcs_data_source();
  void set_has_aws_s3_data_source();
  void set_has_http_data_source();
  void set_has_gcs_data_sink();

  inline bool has_data_source() const;
  void clear_data_source();
  inline void clear_has_data_source();

  inline bool has_data_sink() const;
  void clear_data_sink();
  inline void clear_has_data_sink();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::storagetransfer::v1::ObjectConditions* object_conditions_;
  ::google::storagetransfer::v1::TransferOptions* transfer_options_;
  union DataSourceUnion {
    DataSourceUnion() {}
    ::google::storagetransfer::v1::GcsData* gcs_data_source_;
    ::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source_;
    ::google::storagetransfer::v1::HttpData* http_data_source_;
  } data_source_;
  union DataSinkUnion {
    DataSinkUnion() {}
    ::google::storagetransfer::v1::GcsData* gcs_data_sink_;
  } data_sink_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferSpecImpl();
};
// -------------------------------------------------------------------

class Schedule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.Schedule) */ {
 public:
  Schedule();
  virtual ~Schedule();

  Schedule(const Schedule& from);

  inline Schedule& operator=(const Schedule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Schedule(Schedule&& from) noexcept
    : Schedule() {
    *this = ::std::move(from);
  }

  inline Schedule& operator=(Schedule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Schedule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Schedule* internal_default_instance() {
    return reinterpret_cast<const Schedule*>(
               &_Schedule_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(Schedule* other);
  void Swap(Schedule* other);
  friend void swap(Schedule& a, Schedule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Schedule* New() const PROTOBUF_FINAL { return New(NULL); }

  Schedule* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Schedule& from);
  void MergeFrom(const Schedule& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Schedule* other);
  protected:
  explicit Schedule(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.type.Date schedule_start_date = 1;
  bool has_schedule_start_date() const;
  void clear_schedule_start_date();
  static const int kScheduleStartDateFieldNumber = 1;
  private:
  void _slow_mutable_schedule_start_date();
  public:
  const ::google::type::Date& schedule_start_date() const;
  ::google::type::Date* release_schedule_start_date();
  ::google::type::Date* mutable_schedule_start_date();
  void set_allocated_schedule_start_date(::google::type::Date* schedule_start_date);
  void unsafe_arena_set_allocated_schedule_start_date(
      ::google::type::Date* schedule_start_date);
  ::google::type::Date* unsafe_arena_release_schedule_start_date();

  // .google.type.Date schedule_end_date = 2;
  bool has_schedule_end_date() const;
  void clear_schedule_end_date();
  static const int kScheduleEndDateFieldNumber = 2;
  private:
  void _slow_mutable_schedule_end_date();
  public:
  const ::google::type::Date& schedule_end_date() const;
  ::google::type::Date* release_schedule_end_date();
  ::google::type::Date* mutable_schedule_end_date();
  void set_allocated_schedule_end_date(::google::type::Date* schedule_end_date);
  void unsafe_arena_set_allocated_schedule_end_date(
      ::google::type::Date* schedule_end_date);
  ::google::type::Date* unsafe_arena_release_schedule_end_date();

  // .google.type.TimeOfDay start_time_of_day = 3;
  bool has_start_time_of_day() const;
  void clear_start_time_of_day();
  static const int kStartTimeOfDayFieldNumber = 3;
  private:
  void _slow_mutable_start_time_of_day();
  public:
  const ::google::type::TimeOfDay& start_time_of_day() const;
  ::google::type::TimeOfDay* release_start_time_of_day();
  ::google::type::TimeOfDay* mutable_start_time_of_day();
  void set_allocated_start_time_of_day(::google::type::TimeOfDay* start_time_of_day);
  void unsafe_arena_set_allocated_start_time_of_day(
      ::google::type::TimeOfDay* start_time_of_day);
  ::google::type::TimeOfDay* unsafe_arena_release_start_time_of_day();

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.Schedule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::type::Date* schedule_start_date_;
  ::google::type::Date* schedule_end_date_;
  ::google::type::TimeOfDay* start_time_of_day_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsScheduleImpl();
};
// -------------------------------------------------------------------

class TransferJob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.TransferJob) */ {
 public:
  TransferJob();
  virtual ~TransferJob();

  TransferJob(const TransferJob& from);

  inline TransferJob& operator=(const TransferJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferJob(TransferJob&& from) noexcept
    : TransferJob() {
    *this = ::std::move(from);
  }

  inline TransferJob& operator=(TransferJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferJob* internal_default_instance() {
    return reinterpret_cast<const TransferJob*>(
               &_TransferJob_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(TransferJob* other);
  void Swap(TransferJob* other);
  friend void swap(TransferJob& a, TransferJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferJob* New() const PROTOBUF_FINAL { return New(NULL); }

  TransferJob* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferJob& from);
  void MergeFrom(const TransferJob& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferJob* other);
  protected:
  explicit TransferJob(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TransferJob_Status Status;
  static const Status STATUS_UNSPECIFIED =
    TransferJob_Status_STATUS_UNSPECIFIED;
  static const Status ENABLED =
    TransferJob_Status_ENABLED;
  static const Status DISABLED =
    TransferJob_Status_DISABLED;
  static const Status DELETED =
    TransferJob_Status_DELETED;
  static inline bool Status_IsValid(int value) {
    return TransferJob_Status_IsValid(value);
  }
  static const Status Status_MIN =
    TransferJob_Status_Status_MIN;
  static const Status Status_MAX =
    TransferJob_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    TransferJob_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return TransferJob_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return TransferJob_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return TransferJob_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // string project_id = 3;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 3;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_project_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
  bool has_transfer_spec() const;
  void clear_transfer_spec();
  static const int kTransferSpecFieldNumber = 4;
  private:
  void _slow_mutable_transfer_spec();
  public:
  const ::google::storagetransfer::v1::TransferSpec& transfer_spec() const;
  ::google::storagetransfer::v1::TransferSpec* release_transfer_spec();
  ::google::storagetransfer::v1::TransferSpec* mutable_transfer_spec();
  void set_allocated_transfer_spec(::google::storagetransfer::v1::TransferSpec* transfer_spec);
  void unsafe_arena_set_allocated_transfer_spec(
      ::google::storagetransfer::v1::TransferSpec* transfer_spec);
  ::google::storagetransfer::v1::TransferSpec* unsafe_arena_release_transfer_spec();

  // .google.storagetransfer.v1.Schedule schedule = 5;
  bool has_schedule() const;
  void clear_schedule();
  static const int kScheduleFieldNumber = 5;
  private:
  void _slow_mutable_schedule();
  public:
  const ::google::storagetransfer::v1::Schedule& schedule() const;
  ::google::storagetransfer::v1::Schedule* release_schedule();
  ::google::storagetransfer::v1::Schedule* mutable_schedule();
  void set_allocated_schedule(::google::storagetransfer::v1::Schedule* schedule);
  void unsafe_arena_set_allocated_schedule(
      ::google::storagetransfer::v1::Schedule* schedule);
  ::google::storagetransfer::v1::Schedule* unsafe_arena_release_schedule();

  // .google.protobuf.Timestamp creation_time = 7;
  bool has_creation_time() const;
  void clear_creation_time();
  static const int kCreationTimeFieldNumber = 7;
  private:
  void _slow_mutable_creation_time();
  public:
  const ::google::protobuf::Timestamp& creation_time() const;
  ::google::protobuf::Timestamp* release_creation_time();
  ::google::protobuf::Timestamp* mutable_creation_time();
  void set_allocated_creation_time(::google::protobuf::Timestamp* creation_time);
  void unsafe_arena_set_allocated_creation_time(
      ::google::protobuf::Timestamp* creation_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_creation_time();

  // .google.protobuf.Timestamp last_modification_time = 8;
  bool has_last_modification_time() const;
  void clear_last_modification_time();
  static const int kLastModificationTimeFieldNumber = 8;
  private:
  void _slow_mutable_last_modification_time();
  public:
  const ::google::protobuf::Timestamp& last_modification_time() const;
  ::google::protobuf::Timestamp* release_last_modification_time();
  ::google::protobuf::Timestamp* mutable_last_modification_time();
  void set_allocated_last_modification_time(::google::protobuf::Timestamp* last_modification_time);
  void unsafe_arena_set_allocated_last_modification_time(
      ::google::protobuf::Timestamp* last_modification_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_last_modification_time();

  // .google.protobuf.Timestamp deletion_time = 9;
  bool has_deletion_time() const;
  void clear_deletion_time();
  static const int kDeletionTimeFieldNumber = 9;
  private:
  void _slow_mutable_deletion_time();
  public:
  const ::google::protobuf::Timestamp& deletion_time() const;
  ::google::protobuf::Timestamp* release_deletion_time();
  ::google::protobuf::Timestamp* mutable_deletion_time();
  void set_allocated_deletion_time(::google::protobuf::Timestamp* deletion_time);
  void unsafe_arena_set_allocated_deletion_time(
      ::google::protobuf::Timestamp* deletion_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_deletion_time();

  // .google.storagetransfer.v1.TransferJob.Status status = 6;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::storagetransfer::v1::TransferJob_Status status() const;
  void set_status(::google::storagetransfer::v1::TransferJob_Status value);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.TransferJob)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::storagetransfer::v1::TransferSpec* transfer_spec_;
  ::google::storagetransfer::v1::Schedule* schedule_;
  ::google::protobuf::Timestamp* creation_time_;
  ::google::protobuf::Timestamp* last_modification_time_;
  ::google::protobuf::Timestamp* deletion_time_;
  int status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferJobImpl();
};
// -------------------------------------------------------------------

class ErrorLogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.ErrorLogEntry) */ {
 public:
  ErrorLogEntry();
  virtual ~ErrorLogEntry();

  ErrorLogEntry(const ErrorLogEntry& from);

  inline ErrorLogEntry& operator=(const ErrorLogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorLogEntry(ErrorLogEntry&& from) noexcept
    : ErrorLogEntry() {
    *this = ::std::move(from);
  }

  inline ErrorLogEntry& operator=(ErrorLogEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorLogEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorLogEntry* internal_default_instance() {
    return reinterpret_cast<const ErrorLogEntry*>(
               &_ErrorLogEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(ErrorLogEntry* other);
  void Swap(ErrorLogEntry* other);
  friend void swap(ErrorLogEntry& a, ErrorLogEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorLogEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  ErrorLogEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ErrorLogEntry& from);
  void MergeFrom(const ErrorLogEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ErrorLogEntry* other);
  protected:
  explicit ErrorLogEntry(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string error_details = 3;
  int error_details_size() const;
  void clear_error_details();
  static const int kErrorDetailsFieldNumber = 3;
  const ::std::string& error_details(int index) const;
  ::std::string* mutable_error_details(int index);
  void set_error_details(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_error_details(int index, ::std::string&& value);
  #endif
  void set_error_details(int index, const char* value);
  void set_error_details(int index, const char* value, size_t size);
  ::std::string* add_error_details();
  void add_error_details(const ::std::string& value);
  #if LANG_CXX11
  void add_error_details(::std::string&& value);
  #endif
  void add_error_details(const char* value);
  void add_error_details(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& error_details() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_error_details();

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_url();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_url(
      ::std::string* url);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.ErrorLogEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> error_details_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorLogEntryImpl();
};
// -------------------------------------------------------------------

class ErrorSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.ErrorSummary) */ {
 public:
  ErrorSummary();
  virtual ~ErrorSummary();

  ErrorSummary(const ErrorSummary& from);

  inline ErrorSummary& operator=(const ErrorSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorSummary(ErrorSummary&& from) noexcept
    : ErrorSummary() {
    *this = ::std::move(from);
  }

  inline ErrorSummary& operator=(ErrorSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorSummary* internal_default_instance() {
    return reinterpret_cast<const ErrorSummary*>(
               &_ErrorSummary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ErrorSummary* other);
  void Swap(ErrorSummary* other);
  friend void swap(ErrorSummary& a, ErrorSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorSummary* New() const PROTOBUF_FINAL { return New(NULL); }

  ErrorSummary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ErrorSummary& from);
  void MergeFrom(const ErrorSummary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ErrorSummary* other);
  protected:
  explicit ErrorSummary(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
  int error_log_entries_size() const;
  void clear_error_log_entries();
  static const int kErrorLogEntriesFieldNumber = 3;
  const ::google::storagetransfer::v1::ErrorLogEntry& error_log_entries(int index) const;
  ::google::storagetransfer::v1::ErrorLogEntry* mutable_error_log_entries(int index);
  ::google::storagetransfer::v1::ErrorLogEntry* add_error_log_entries();
  ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorLogEntry >*
      mutable_error_log_entries();
  const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorLogEntry >&
      error_log_entries() const;

  // int64 error_count = 2;
  void clear_error_count();
  static const int kErrorCountFieldNumber = 2;
  ::google::protobuf::int64 error_count() const;
  void set_error_count(::google::protobuf::int64 value);

  // .google.rpc.Code error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::rpc::Code error_code() const;
  void set_error_code(::google::rpc::Code value);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.ErrorSummary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorLogEntry > error_log_entries_;
  ::google::protobuf::int64 error_count_;
  int error_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorSummaryImpl();
};
// -------------------------------------------------------------------

class TransferCounters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.TransferCounters) */ {
 public:
  TransferCounters();
  virtual ~TransferCounters();

  TransferCounters(const TransferCounters& from);

  inline TransferCounters& operator=(const TransferCounters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferCounters(TransferCounters&& from) noexcept
    : TransferCounters() {
    *this = ::std::move(from);
  }

  inline TransferCounters& operator=(TransferCounters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferCounters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferCounters* internal_default_instance() {
    return reinterpret_cast<const TransferCounters*>(
               &_TransferCounters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(TransferCounters* other);
  void Swap(TransferCounters* other);
  friend void swap(TransferCounters& a, TransferCounters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferCounters* New() const PROTOBUF_FINAL { return New(NULL); }

  TransferCounters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferCounters& from);
  void MergeFrom(const TransferCounters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferCounters* other);
  protected:
  explicit TransferCounters(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 objects_found_from_source = 1;
  void clear_objects_found_from_source();
  static const int kObjectsFoundFromSourceFieldNumber = 1;
  ::google::protobuf::int64 objects_found_from_source() const;
  void set_objects_found_from_source(::google::protobuf::int64 value);

  // int64 bytes_found_from_source = 2;
  void clear_bytes_found_from_source();
  static const int kBytesFoundFromSourceFieldNumber = 2;
  ::google::protobuf::int64 bytes_found_from_source() const;
  void set_bytes_found_from_source(::google::protobuf::int64 value);

  // int64 objects_found_only_from_sink = 3;
  void clear_objects_found_only_from_sink();
  static const int kObjectsFoundOnlyFromSinkFieldNumber = 3;
  ::google::protobuf::int64 objects_found_only_from_sink() const;
  void set_objects_found_only_from_sink(::google::protobuf::int64 value);

  // int64 bytes_found_only_from_sink = 4;
  void clear_bytes_found_only_from_sink();
  static const int kBytesFoundOnlyFromSinkFieldNumber = 4;
  ::google::protobuf::int64 bytes_found_only_from_sink() const;
  void set_bytes_found_only_from_sink(::google::protobuf::int64 value);

  // int64 objects_from_source_skipped_by_sync = 5;
  void clear_objects_from_source_skipped_by_sync();
  static const int kObjectsFromSourceSkippedBySyncFieldNumber = 5;
  ::google::protobuf::int64 objects_from_source_skipped_by_sync() const;
  void set_objects_from_source_skipped_by_sync(::google::protobuf::int64 value);

  // int64 bytes_from_source_skipped_by_sync = 6;
  void clear_bytes_from_source_skipped_by_sync();
  static const int kBytesFromSourceSkippedBySyncFieldNumber = 6;
  ::google::protobuf::int64 bytes_from_source_skipped_by_sync() const;
  void set_bytes_from_source_skipped_by_sync(::google::protobuf::int64 value);

  // int64 objects_copied_to_sink = 7;
  void clear_objects_copied_to_sink();
  static const int kObjectsCopiedToSinkFieldNumber = 7;
  ::google::protobuf::int64 objects_copied_to_sink() const;
  void set_objects_copied_to_sink(::google::protobuf::int64 value);

  // int64 bytes_copied_to_sink = 8;
  void clear_bytes_copied_to_sink();
  static const int kBytesCopiedToSinkFieldNumber = 8;
  ::google::protobuf::int64 bytes_copied_to_sink() const;
  void set_bytes_copied_to_sink(::google::protobuf::int64 value);

  // int64 objects_deleted_from_source = 9;
  void clear_objects_deleted_from_source();
  static const int kObjectsDeletedFromSourceFieldNumber = 9;
  ::google::protobuf::int64 objects_deleted_from_source() const;
  void set_objects_deleted_from_source(::google::protobuf::int64 value);

  // int64 bytes_deleted_from_source = 10;
  void clear_bytes_deleted_from_source();
  static const int kBytesDeletedFromSourceFieldNumber = 10;
  ::google::protobuf::int64 bytes_deleted_from_source() const;
  void set_bytes_deleted_from_source(::google::protobuf::int64 value);

  // int64 objects_deleted_from_sink = 11;
  void clear_objects_deleted_from_sink();
  static const int kObjectsDeletedFromSinkFieldNumber = 11;
  ::google::protobuf::int64 objects_deleted_from_sink() const;
  void set_objects_deleted_from_sink(::google::protobuf::int64 value);

  // int64 bytes_deleted_from_sink = 12;
  void clear_bytes_deleted_from_sink();
  static const int kBytesDeletedFromSinkFieldNumber = 12;
  ::google::protobuf::int64 bytes_deleted_from_sink() const;
  void set_bytes_deleted_from_sink(::google::protobuf::int64 value);

  // int64 objects_from_source_failed = 13;
  void clear_objects_from_source_failed();
  static const int kObjectsFromSourceFailedFieldNumber = 13;
  ::google::protobuf::int64 objects_from_source_failed() const;
  void set_objects_from_source_failed(::google::protobuf::int64 value);

  // int64 bytes_from_source_failed = 14;
  void clear_bytes_from_source_failed();
  static const int kBytesFromSourceFailedFieldNumber = 14;
  ::google::protobuf::int64 bytes_from_source_failed() const;
  void set_bytes_from_source_failed(::google::protobuf::int64 value);

  // int64 objects_failed_to_delete_from_sink = 15;
  void clear_objects_failed_to_delete_from_sink();
  static const int kObjectsFailedToDeleteFromSinkFieldNumber = 15;
  ::google::protobuf::int64 objects_failed_to_delete_from_sink() const;
  void set_objects_failed_to_delete_from_sink(::google::protobuf::int64 value);

  // int64 bytes_failed_to_delete_from_sink = 16;
  void clear_bytes_failed_to_delete_from_sink();
  static const int kBytesFailedToDeleteFromSinkFieldNumber = 16;
  ::google::protobuf::int64 bytes_failed_to_delete_from_sink() const;
  void set_bytes_failed_to_delete_from_sink(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.TransferCounters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 objects_found_from_source_;
  ::google::protobuf::int64 bytes_found_from_source_;
  ::google::protobuf::int64 objects_found_only_from_sink_;
  ::google::protobuf::int64 bytes_found_only_from_sink_;
  ::google::protobuf::int64 objects_from_source_skipped_by_sync_;
  ::google::protobuf::int64 bytes_from_source_skipped_by_sync_;
  ::google::protobuf::int64 objects_copied_to_sink_;
  ::google::protobuf::int64 bytes_copied_to_sink_;
  ::google::protobuf::int64 objects_deleted_from_source_;
  ::google::protobuf::int64 bytes_deleted_from_source_;
  ::google::protobuf::int64 objects_deleted_from_sink_;
  ::google::protobuf::int64 bytes_deleted_from_sink_;
  ::google::protobuf::int64 objects_from_source_failed_;
  ::google::protobuf::int64 bytes_from_source_failed_;
  ::google::protobuf::int64 objects_failed_to_delete_from_sink_;
  ::google::protobuf::int64 bytes_failed_to_delete_from_sink_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferCountersImpl();
};
// -------------------------------------------------------------------

class TransferOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.TransferOperation) */ {
 public:
  TransferOperation();
  virtual ~TransferOperation();

  TransferOperation(const TransferOperation& from);

  inline TransferOperation& operator=(const TransferOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferOperation(TransferOperation&& from) noexcept
    : TransferOperation() {
    *this = ::std::move(from);
  }

  inline TransferOperation& operator=(TransferOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferOperation* internal_default_instance() {
    return reinterpret_cast<const TransferOperation*>(
               &_TransferOperation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(TransferOperation* other);
  void Swap(TransferOperation* other);
  friend void swap(TransferOperation& a, TransferOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferOperation* New() const PROTOBUF_FINAL { return New(NULL); }

  TransferOperation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferOperation& from);
  void MergeFrom(const TransferOperation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferOperation* other);
  protected:
  explicit TransferOperation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TransferOperation_Status Status;
  static const Status STATUS_UNSPECIFIED =
    TransferOperation_Status_STATUS_UNSPECIFIED;
  static const Status IN_PROGRESS =
    TransferOperation_Status_IN_PROGRESS;
  static const Status PAUSED =
    TransferOperation_Status_PAUSED;
  static const Status SUCCESS =
    TransferOperation_Status_SUCCESS;
  static const Status FAILED =
    TransferOperation_Status_FAILED;
  static const Status ABORTED =
    TransferOperation_Status_ABORTED;
  static inline bool Status_IsValid(int value) {
    return TransferOperation_Status_IsValid(value);
  }
  static const Status Status_MIN =
    TransferOperation_Status_Status_MIN;
  static const Status Status_MAX =
    TransferOperation_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    TransferOperation_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return TransferOperation_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return TransferOperation_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return TransferOperation_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
  int error_breakdowns_size() const;
  void clear_error_breakdowns();
  static const int kErrorBreakdownsFieldNumber = 8;
  const ::google::storagetransfer::v1::ErrorSummary& error_breakdowns(int index) const;
  ::google::storagetransfer::v1::ErrorSummary* mutable_error_breakdowns(int index);
  ::google::storagetransfer::v1::ErrorSummary* add_error_breakdowns();
  ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorSummary >*
      mutable_error_breakdowns();
  const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorSummary >&
      error_breakdowns() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string project_id = 2;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 2;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_project_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // string transfer_job_name = 9;
  void clear_transfer_job_name();
  static const int kTransferJobNameFieldNumber = 9;
  const ::std::string& transfer_job_name() const;
  void set_transfer_job_name(const ::std::string& value);
  #if LANG_CXX11
  void set_transfer_job_name(::std::string&& value);
  #endif
  void set_transfer_job_name(const char* value);
  void set_transfer_job_name(const char* value, size_t size);
  ::std::string* mutable_transfer_job_name();
  ::std::string* release_transfer_job_name();
  void set_allocated_transfer_job_name(::std::string* transfer_job_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_transfer_job_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_transfer_job_name(
      ::std::string* transfer_job_name);

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
  bool has_transfer_spec() const;
  void clear_transfer_spec();
  static const int kTransferSpecFieldNumber = 3;
  private:
  void _slow_mutable_transfer_spec();
  public:
  const ::google::storagetransfer::v1::TransferSpec& transfer_spec() const;
  ::google::storagetransfer::v1::TransferSpec* release_transfer_spec();
  ::google::storagetransfer::v1::TransferSpec* mutable_transfer_spec();
  void set_allocated_transfer_spec(::google::storagetransfer::v1::TransferSpec* transfer_spec);
  void unsafe_arena_set_allocated_transfer_spec(
      ::google::storagetransfer::v1::TransferSpec* transfer_spec);
  ::google::storagetransfer::v1::TransferSpec* unsafe_arena_release_transfer_spec();

  // .google.protobuf.Timestamp start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  private:
  void _slow_mutable_start_time();
  public:
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);
  void unsafe_arena_set_allocated_start_time(
      ::google::protobuf::Timestamp* start_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();

  // .google.protobuf.Timestamp end_time = 5;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  private:
  void _slow_mutable_end_time();
  public:
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);
  void unsafe_arena_set_allocated_end_time(
      ::google::protobuf::Timestamp* end_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();

  // .google.storagetransfer.v1.TransferCounters counters = 7;
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 7;
  private:
  void _slow_mutable_counters();
  public:
  const ::google::storagetransfer::v1::TransferCounters& counters() const;
  ::google::storagetransfer::v1::TransferCounters* release_counters();
  ::google::storagetransfer::v1::TransferCounters* mutable_counters();
  void set_allocated_counters(::google::storagetransfer::v1::TransferCounters* counters);
  void unsafe_arena_set_allocated_counters(
      ::google::storagetransfer::v1::TransferCounters* counters);
  ::google::storagetransfer::v1::TransferCounters* unsafe_arena_release_counters();

  // .google.storagetransfer.v1.TransferOperation.Status status = 6;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::storagetransfer::v1::TransferOperation_Status status() const;
  void set_status(::google::storagetransfer::v1::TransferOperation_Status value);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.TransferOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorSummary > error_breakdowns_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr transfer_job_name_;
  ::google::storagetransfer::v1::TransferSpec* transfer_spec_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  ::google::storagetransfer::v1::TransferCounters* counters_;
  int status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::TableStruct;
  friend void ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOperationImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GoogleServiceAccount

// string account_email = 1;
inline void GoogleServiceAccount::clear_account_email() {
  account_email_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GoogleServiceAccount::account_email() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  return account_email_.Get();
}
inline void GoogleServiceAccount::set_account_email(const ::std::string& value) {
  
  account_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
#if LANG_CXX11
inline void GoogleServiceAccount::set_account_email(::std::string&& value) {
  
  account_email_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
#endif
inline void GoogleServiceAccount::set_account_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
inline void GoogleServiceAccount::set_account_email(const char* value,
    size_t size) {
  
  account_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
inline ::std::string* GoogleServiceAccount::mutable_account_email() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  return account_email_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GoogleServiceAccount::release_account_email() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  
  return account_email_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GoogleServiceAccount::set_allocated_account_email(::std::string* account_email) {
  if (account_email != NULL) {
    
  } else {
    
  }
  account_email_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_email,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
inline ::std::string* GoogleServiceAccount::unsafe_arena_release_account_email() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return account_email_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GoogleServiceAccount::unsafe_arena_set_allocated_account_email(
    ::std::string* account_email) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (account_email != NULL) {
    
  } else {
    
  }
  account_email_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      account_email, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}

// -------------------------------------------------------------------

// AwsAccessKey

// string access_key_id = 1;
inline void AwsAccessKey::clear_access_key_id() {
  access_key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AwsAccessKey::access_key_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  return access_key_id_.Get();
}
inline void AwsAccessKey::set_access_key_id(const ::std::string& value) {
  
  access_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
#if LANG_CXX11
inline void AwsAccessKey::set_access_key_id(::std::string&& value) {
  
  access_key_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
#endif
inline void AwsAccessKey::set_access_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
inline void AwsAccessKey::set_access_key_id(const char* value,
    size_t size) {
  
  access_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
inline ::std::string* AwsAccessKey::mutable_access_key_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  return access_key_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AwsAccessKey::release_access_key_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  
  return access_key_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AwsAccessKey::set_allocated_access_key_id(::std::string* access_key_id) {
  if (access_key_id != NULL) {
    
  } else {
    
  }
  access_key_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_key_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
inline ::std::string* AwsAccessKey::unsafe_arena_release_access_key_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return access_key_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AwsAccessKey::unsafe_arena_set_allocated_access_key_id(
    ::std::string* access_key_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (access_key_id != NULL) {
    
  } else {
    
  }
  access_key_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      access_key_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}

// string secret_access_key = 2;
inline void AwsAccessKey::clear_secret_access_key() {
  secret_access_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AwsAccessKey::secret_access_key() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  return secret_access_key_.Get();
}
inline void AwsAccessKey::set_secret_access_key(const ::std::string& value) {
  
  secret_access_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
#if LANG_CXX11
inline void AwsAccessKey::set_secret_access_key(::std::string&& value) {
  
  secret_access_key_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
#endif
inline void AwsAccessKey::set_secret_access_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_access_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
inline void AwsAccessKey::set_secret_access_key(const char* value,
    size_t size) {
  
  secret_access_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
inline ::std::string* AwsAccessKey::mutable_secret_access_key() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  return secret_access_key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AwsAccessKey::release_secret_access_key() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  
  return secret_access_key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AwsAccessKey::set_allocated_secret_access_key(::std::string* secret_access_key) {
  if (secret_access_key != NULL) {
    
  } else {
    
  }
  secret_access_key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_access_key,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
inline ::std::string* AwsAccessKey::unsafe_arena_release_secret_access_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return secret_access_key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AwsAccessKey::unsafe_arena_set_allocated_secret_access_key(
    ::std::string* secret_access_key) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (secret_access_key != NULL) {
    
  } else {
    
  }
  secret_access_key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      secret_access_key, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}

// -------------------------------------------------------------------

// ObjectConditions

// .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
inline bool ObjectConditions::has_min_time_elapsed_since_last_modification() const {
  return this != internal_default_instance() && min_time_elapsed_since_last_modification_ != NULL;
}
inline const ::google::protobuf::Duration& ObjectConditions::min_time_elapsed_since_last_modification() const {
  const ::google::protobuf::Duration* p = min_time_elapsed_since_last_modification_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ObjectConditions::release_min_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  
  ::google::protobuf::Duration* temp = min_time_elapsed_since_last_modification_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  min_time_elapsed_since_last_modification_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ObjectConditions::unsafe_arena_release_min_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  
  ::google::protobuf::Duration* temp = min_time_elapsed_since_last_modification_;
  min_time_elapsed_since_last_modification_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ObjectConditions::mutable_min_time_elapsed_since_last_modification() {
  
  if (min_time_elapsed_since_last_modification_ == NULL) {
    _slow_mutable_min_time_elapsed_since_last_modification();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  return min_time_elapsed_since_last_modification_;
}
inline void ObjectConditions::set_allocated_min_time_elapsed_since_last_modification(::google::protobuf::Duration* min_time_elapsed_since_last_modification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_time_elapsed_since_last_modification_);
  }
  if (min_time_elapsed_since_last_modification) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(min_time_elapsed_since_last_modification)->GetArena();
    if (message_arena != submessage_arena) {
      min_time_elapsed_since_last_modification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_time_elapsed_since_last_modification, submessage_arena);
    }
    
  } else {
    
  }
  min_time_elapsed_since_last_modification_ = min_time_elapsed_since_last_modification;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
}

// .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
inline bool ObjectConditions::has_max_time_elapsed_since_last_modification() const {
  return this != internal_default_instance() && max_time_elapsed_since_last_modification_ != NULL;
}
inline const ::google::protobuf::Duration& ObjectConditions::max_time_elapsed_since_last_modification() const {
  const ::google::protobuf::Duration* p = max_time_elapsed_since_last_modification_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ObjectConditions::release_max_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  
  ::google::protobuf::Duration* temp = max_time_elapsed_since_last_modification_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  max_time_elapsed_since_last_modification_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ObjectConditions::unsafe_arena_release_max_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  
  ::google::protobuf::Duration* temp = max_time_elapsed_since_last_modification_;
  max_time_elapsed_since_last_modification_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ObjectConditions::mutable_max_time_elapsed_since_last_modification() {
  
  if (max_time_elapsed_since_last_modification_ == NULL) {
    _slow_mutable_max_time_elapsed_since_last_modification();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  return max_time_elapsed_since_last_modification_;
}
inline void ObjectConditions::set_allocated_max_time_elapsed_since_last_modification(::google::protobuf::Duration* max_time_elapsed_since_last_modification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_time_elapsed_since_last_modification_);
  }
  if (max_time_elapsed_since_last_modification) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(max_time_elapsed_since_last_modification)->GetArena();
    if (message_arena != submessage_arena) {
      max_time_elapsed_since_last_modification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_time_elapsed_since_last_modification, submessage_arena);
    }
    
  } else {
    
  }
  max_time_elapsed_since_last_modification_ = max_time_elapsed_since_last_modification;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
}

// repeated string include_prefixes = 3;
inline int ObjectConditions::include_prefixes_size() const {
  return include_prefixes_.size();
}
inline void ObjectConditions::clear_include_prefixes() {
  include_prefixes_.Clear();
}
inline const ::std::string& ObjectConditions::include_prefixes(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_.Get(index);
}
inline ::std::string* ObjectConditions::mutable_include_prefixes(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_.Mutable(index);
}
inline void ObjectConditions::set_include_prefixes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  include_prefixes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ObjectConditions::set_include_prefixes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  include_prefixes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ObjectConditions::set_include_prefixes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  include_prefixes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
inline void ObjectConditions::set_include_prefixes(int index, const char* value, size_t size) {
  include_prefixes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
inline ::std::string* ObjectConditions::add_include_prefixes() {
  // @@protoc_insertion_point(field_add_mutable:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_.Add();
}
inline void ObjectConditions::add_include_prefixes(const ::std::string& value) {
  include_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
#if LANG_CXX11
inline void ObjectConditions::add_include_prefixes(::std::string&& value) {
  include_prefixes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
#endif
inline void ObjectConditions::add_include_prefixes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  include_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
inline void ObjectConditions::add_include_prefixes(const char* value, size_t size) {
  include_prefixes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ObjectConditions::include_prefixes() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ObjectConditions::mutable_include_prefixes() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return &include_prefixes_;
}

// repeated string exclude_prefixes = 4;
inline int ObjectConditions::exclude_prefixes_size() const {
  return exclude_prefixes_.size();
}
inline void ObjectConditions::clear_exclude_prefixes() {
  exclude_prefixes_.Clear();
}
inline const ::std::string& ObjectConditions::exclude_prefixes(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_.Get(index);
}
inline ::std::string* ObjectConditions::mutable_exclude_prefixes(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_.Mutable(index);
}
inline void ObjectConditions::set_exclude_prefixes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  exclude_prefixes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ObjectConditions::set_exclude_prefixes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  exclude_prefixes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ObjectConditions::set_exclude_prefixes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  exclude_prefixes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
inline void ObjectConditions::set_exclude_prefixes(int index, const char* value, size_t size) {
  exclude_prefixes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
inline ::std::string* ObjectConditions::add_exclude_prefixes() {
  // @@protoc_insertion_point(field_add_mutable:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_.Add();
}
inline void ObjectConditions::add_exclude_prefixes(const ::std::string& value) {
  exclude_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
#if LANG_CXX11
inline void ObjectConditions::add_exclude_prefixes(::std::string&& value) {
  exclude_prefixes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
#endif
inline void ObjectConditions::add_exclude_prefixes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  exclude_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
inline void ObjectConditions::add_exclude_prefixes(const char* value, size_t size) {
  exclude_prefixes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ObjectConditions::exclude_prefixes() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ObjectConditions::mutable_exclude_prefixes() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return &exclude_prefixes_;
}

// -------------------------------------------------------------------

// GcsData

// string bucket_name = 1;
inline void GcsData::clear_bucket_name() {
  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GcsData::bucket_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GcsData.bucket_name)
  return bucket_name_.Get();
}
inline void GcsData::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GcsData.bucket_name)
}
#if LANG_CXX11
inline void GcsData::set_bucket_name(::std::string&& value) {
  
  bucket_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.GcsData.bucket_name)
}
#endif
inline void GcsData::set_bucket_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GcsData.bucket_name)
}
inline void GcsData::set_bucket_name(const char* value,
    size_t size) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GcsData.bucket_name)
}
inline ::std::string* GcsData::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GcsData.bucket_name)
  return bucket_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GcsData::release_bucket_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GcsData.bucket_name)
  
  return bucket_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GcsData::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GcsData.bucket_name)
}
inline ::std::string* GcsData::unsafe_arena_release_bucket_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GcsData.bucket_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bucket_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GcsData::unsafe_arena_set_allocated_bucket_name(
    ::std::string* bucket_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bucket_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GcsData.bucket_name)
}

// -------------------------------------------------------------------

// AwsS3Data

// string bucket_name = 1;
inline void AwsS3Data::clear_bucket_name() {
  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AwsS3Data::bucket_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsS3Data.bucket_name)
  return bucket_name_.Get();
}
inline void AwsS3Data::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
#if LANG_CXX11
inline void AwsS3Data::set_bucket_name(::std::string&& value) {
  
  bucket_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
#endif
inline void AwsS3Data::set_bucket_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
inline void AwsS3Data::set_bucket_name(const char* value,
    size_t size) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
inline ::std::string* AwsS3Data::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsS3Data.bucket_name)
  return bucket_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AwsS3Data::release_bucket_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsS3Data.bucket_name)
  
  return bucket_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AwsS3Data::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
inline ::std::string* AwsS3Data::unsafe_arena_release_bucket_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsS3Data.bucket_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bucket_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AwsS3Data::unsafe_arena_set_allocated_bucket_name(
    ::std::string* bucket_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bucket_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsS3Data.bucket_name)
}

// .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
inline bool AwsS3Data::has_aws_access_key() const {
  return this != internal_default_instance() && aws_access_key_ != NULL;
}
inline void AwsS3Data::clear_aws_access_key() {
  if (GetArenaNoVirtual() == NULL && aws_access_key_ != NULL) {
    delete aws_access_key_;
  }
  aws_access_key_ = NULL;
}
inline const ::google::storagetransfer::v1::AwsAccessKey& AwsS3Data::aws_access_key() const {
  const ::google::storagetransfer::v1::AwsAccessKey* p = aws_access_key_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  return p != NULL ? *p : *reinterpret_cast<const ::google::storagetransfer::v1::AwsAccessKey*>(
      &::google::storagetransfer::v1::_AwsAccessKey_default_instance_);
}
inline ::google::storagetransfer::v1::AwsAccessKey* AwsS3Data::release_aws_access_key() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  
  ::google::storagetransfer::v1::AwsAccessKey* temp = aws_access_key_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  aws_access_key_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::AwsAccessKey* AwsS3Data::unsafe_arena_release_aws_access_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  
  ::google::storagetransfer::v1::AwsAccessKey* temp = aws_access_key_;
  aws_access_key_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::AwsAccessKey* AwsS3Data::mutable_aws_access_key() {
  
  if (aws_access_key_ == NULL) {
    _slow_mutable_aws_access_key();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  return aws_access_key_;
}
inline void AwsS3Data::set_allocated_aws_access_key(::google::storagetransfer::v1::AwsAccessKey* aws_access_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete aws_access_key_;
  }
  if (aws_access_key) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(aws_access_key);
    if (message_arena != submessage_arena) {
      aws_access_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aws_access_key, submessage_arena);
    }
    
  } else {
    
  }
  aws_access_key_ = aws_access_key;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsS3Data.aws_access_key)
}

// -------------------------------------------------------------------

// HttpData

// string list_url = 1;
inline void HttpData::clear_list_url() {
  list_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& HttpData::list_url() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.HttpData.list_url)
  return list_url_.Get();
}
inline void HttpData::set_list_url(const ::std::string& value) {
  
  list_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.HttpData.list_url)
}
#if LANG_CXX11
inline void HttpData::set_list_url(::std::string&& value) {
  
  list_url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.HttpData.list_url)
}
#endif
inline void HttpData::set_list_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  list_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.HttpData.list_url)
}
inline void HttpData::set_list_url(const char* value,
    size_t size) {
  
  list_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.HttpData.list_url)
}
inline ::std::string* HttpData::mutable_list_url() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.HttpData.list_url)
  return list_url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* HttpData::release_list_url() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.HttpData.list_url)
  
  return list_url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void HttpData::set_allocated_list_url(::std::string* list_url) {
  if (list_url != NULL) {
    
  } else {
    
  }
  list_url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), list_url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.HttpData.list_url)
}
inline ::std::string* HttpData::unsafe_arena_release_list_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.HttpData.list_url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return list_url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void HttpData::unsafe_arena_set_allocated_list_url(
    ::std::string* list_url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (list_url != NULL) {
    
  } else {
    
  }
  list_url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      list_url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.HttpData.list_url)
}

// -------------------------------------------------------------------

// TransferOptions

// bool overwrite_objects_already_existing_in_sink = 1;
inline void TransferOptions::clear_overwrite_objects_already_existing_in_sink() {
  overwrite_objects_already_existing_in_sink_ = false;
}
inline bool TransferOptions::overwrite_objects_already_existing_in_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOptions.overwrite_objects_already_existing_in_sink)
  return overwrite_objects_already_existing_in_sink_;
}
inline void TransferOptions::set_overwrite_objects_already_existing_in_sink(bool value) {
  
  overwrite_objects_already_existing_in_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOptions.overwrite_objects_already_existing_in_sink)
}

// bool delete_objects_unique_in_sink = 2;
inline void TransferOptions::clear_delete_objects_unique_in_sink() {
  delete_objects_unique_in_sink_ = false;
}
inline bool TransferOptions::delete_objects_unique_in_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink)
  return delete_objects_unique_in_sink_;
}
inline void TransferOptions::set_delete_objects_unique_in_sink(bool value) {
  
  delete_objects_unique_in_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink)
}

// bool delete_objects_from_source_after_transfer = 3;
inline void TransferOptions::clear_delete_objects_from_source_after_transfer() {
  delete_objects_from_source_after_transfer_ = false;
}
inline bool TransferOptions::delete_objects_from_source_after_transfer() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOptions.delete_objects_from_source_after_transfer)
  return delete_objects_from_source_after_transfer_;
}
inline void TransferOptions::set_delete_objects_from_source_after_transfer(bool value) {
  
  delete_objects_from_source_after_transfer_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOptions.delete_objects_from_source_after_transfer)
}

// -------------------------------------------------------------------

// TransferSpec

// .google.storagetransfer.v1.GcsData gcs_data_source = 1;
inline bool TransferSpec::has_gcs_data_source() const {
  return data_source_case() == kGcsDataSource;
}
inline void TransferSpec::set_has_gcs_data_source() {
  _oneof_case_[0] = kGcsDataSource;
}
inline void TransferSpec::clear_gcs_data_source() {
  if (has_gcs_data_source()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_source_.gcs_data_source_;
    }
    clear_has_data_source();
  }
}
inline ::google::storagetransfer::v1::GcsData* TransferSpec::release_gcs_data_source() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  if (has_gcs_data_source()) {
    clear_has_data_source();
      ::google::storagetransfer::v1::GcsData* temp = data_source_.gcs_data_source_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    data_source_.gcs_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::storagetransfer::v1::GcsData& TransferSpec::gcs_data_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  return has_gcs_data_source()
      ? *data_source_.gcs_data_source_
      : *reinterpret_cast< ::google::storagetransfer::v1::GcsData*>(&::google::storagetransfer::v1::_GcsData_default_instance_);
}
inline ::google::storagetransfer::v1::GcsData* TransferSpec::unsafe_arena_release_gcs_data_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  if (has_gcs_data_source()) {
    clear_has_data_source();
    ::google::storagetransfer::v1::GcsData* temp = data_source_.gcs_data_source_;
    data_source_.gcs_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TransferSpec::unsafe_arena_set_allocated_gcs_data_source(::google::storagetransfer::v1::GcsData* gcs_data_source) {
  clear_data_source();
  if (gcs_data_source) {
    set_has_gcs_data_source();
    data_source_.gcs_data_source_ = gcs_data_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_source)
}
inline ::google::storagetransfer::v1::GcsData* TransferSpec::mutable_gcs_data_source() {
  if (!has_gcs_data_source()) {
    clear_data_source();
    set_has_gcs_data_source();
    data_source_.gcs_data_source_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::GcsData >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  return data_source_.gcs_data_source_;
}

// .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
inline bool TransferSpec::has_aws_s3_data_source() const {
  return data_source_case() == kAwsS3DataSource;
}
inline void TransferSpec::set_has_aws_s3_data_source() {
  _oneof_case_[0] = kAwsS3DataSource;
}
inline void TransferSpec::clear_aws_s3_data_source() {
  if (has_aws_s3_data_source()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_source_.aws_s3_data_source_;
    }
    clear_has_data_source();
  }
}
inline ::google::storagetransfer::v1::AwsS3Data* TransferSpec::release_aws_s3_data_source() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  if (has_aws_s3_data_source()) {
    clear_has_data_source();
      ::google::storagetransfer::v1::AwsS3Data* temp = data_source_.aws_s3_data_source_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    data_source_.aws_s3_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::storagetransfer::v1::AwsS3Data& TransferSpec::aws_s3_data_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  return has_aws_s3_data_source()
      ? *data_source_.aws_s3_data_source_
      : *reinterpret_cast< ::google::storagetransfer::v1::AwsS3Data*>(&::google::storagetransfer::v1::_AwsS3Data_default_instance_);
}
inline ::google::storagetransfer::v1::AwsS3Data* TransferSpec::unsafe_arena_release_aws_s3_data_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  if (has_aws_s3_data_source()) {
    clear_has_data_source();
    ::google::storagetransfer::v1::AwsS3Data* temp = data_source_.aws_s3_data_source_;
    data_source_.aws_s3_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TransferSpec::unsafe_arena_set_allocated_aws_s3_data_source(::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source) {
  clear_data_source();
  if (aws_s3_data_source) {
    set_has_aws_s3_data_source();
    data_source_.aws_s3_data_source_ = aws_s3_data_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
}
inline ::google::storagetransfer::v1::AwsS3Data* TransferSpec::mutable_aws_s3_data_source() {
  if (!has_aws_s3_data_source()) {
    clear_data_source();
    set_has_aws_s3_data_source();
    data_source_.aws_s3_data_source_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::AwsS3Data >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  return data_source_.aws_s3_data_source_;
}

// .google.storagetransfer.v1.HttpData http_data_source = 3;
inline bool TransferSpec::has_http_data_source() const {
  return data_source_case() == kHttpDataSource;
}
inline void TransferSpec::set_has_http_data_source() {
  _oneof_case_[0] = kHttpDataSource;
}
inline void TransferSpec::clear_http_data_source() {
  if (has_http_data_source()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_source_.http_data_source_;
    }
    clear_has_data_source();
  }
}
inline ::google::storagetransfer::v1::HttpData* TransferSpec::release_http_data_source() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.http_data_source)
  if (has_http_data_source()) {
    clear_has_data_source();
      ::google::storagetransfer::v1::HttpData* temp = data_source_.http_data_source_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    data_source_.http_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::storagetransfer::v1::HttpData& TransferSpec::http_data_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.http_data_source)
  return has_http_data_source()
      ? *data_source_.http_data_source_
      : *reinterpret_cast< ::google::storagetransfer::v1::HttpData*>(&::google::storagetransfer::v1::_HttpData_default_instance_);
}
inline ::google::storagetransfer::v1::HttpData* TransferSpec::unsafe_arena_release_http_data_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.http_data_source)
  if (has_http_data_source()) {
    clear_has_data_source();
    ::google::storagetransfer::v1::HttpData* temp = data_source_.http_data_source_;
    data_source_.http_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TransferSpec::unsafe_arena_set_allocated_http_data_source(::google::storagetransfer::v1::HttpData* http_data_source) {
  clear_data_source();
  if (http_data_source) {
    set_has_http_data_source();
    data_source_.http_data_source_ = http_data_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.http_data_source)
}
inline ::google::storagetransfer::v1::HttpData* TransferSpec::mutable_http_data_source() {
  if (!has_http_data_source()) {
    clear_data_source();
    set_has_http_data_source();
    data_source_.http_data_source_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::HttpData >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.http_data_source)
  return data_source_.http_data_source_;
}

// .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
inline bool TransferSpec::has_gcs_data_sink() const {
  return data_sink_case() == kGcsDataSink;
}
inline void TransferSpec::set_has_gcs_data_sink() {
  _oneof_case_[1] = kGcsDataSink;
}
inline void TransferSpec::clear_gcs_data_sink() {
  if (has_gcs_data_sink()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_sink_.gcs_data_sink_;
    }
    clear_has_data_sink();
  }
}
inline ::google::storagetransfer::v1::GcsData* TransferSpec::release_gcs_data_sink() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  if (has_gcs_data_sink()) {
    clear_has_data_sink();
      ::google::storagetransfer::v1::GcsData* temp = data_sink_.gcs_data_sink_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    data_sink_.gcs_data_sink_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::storagetransfer::v1::GcsData& TransferSpec::gcs_data_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  return has_gcs_data_sink()
      ? *data_sink_.gcs_data_sink_
      : *reinterpret_cast< ::google::storagetransfer::v1::GcsData*>(&::google::storagetransfer::v1::_GcsData_default_instance_);
}
inline ::google::storagetransfer::v1::GcsData* TransferSpec::unsafe_arena_release_gcs_data_sink() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  if (has_gcs_data_sink()) {
    clear_has_data_sink();
    ::google::storagetransfer::v1::GcsData* temp = data_sink_.gcs_data_sink_;
    data_sink_.gcs_data_sink_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TransferSpec::unsafe_arena_set_allocated_gcs_data_sink(::google::storagetransfer::v1::GcsData* gcs_data_sink) {
  clear_data_sink();
  if (gcs_data_sink) {
    set_has_gcs_data_sink();
    data_sink_.gcs_data_sink_ = gcs_data_sink;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
}
inline ::google::storagetransfer::v1::GcsData* TransferSpec::mutable_gcs_data_sink() {
  if (!has_gcs_data_sink()) {
    clear_data_sink();
    set_has_gcs_data_sink();
    data_sink_.gcs_data_sink_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::GcsData >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  return data_sink_.gcs_data_sink_;
}

// .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
inline bool TransferSpec::has_object_conditions() const {
  return this != internal_default_instance() && object_conditions_ != NULL;
}
inline void TransferSpec::clear_object_conditions() {
  if (GetArenaNoVirtual() == NULL && object_conditions_ != NULL) {
    delete object_conditions_;
  }
  object_conditions_ = NULL;
}
inline const ::google::storagetransfer::v1::ObjectConditions& TransferSpec::object_conditions() const {
  const ::google::storagetransfer::v1::ObjectConditions* p = object_conditions_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.object_conditions)
  return p != NULL ? *p : *reinterpret_cast<const ::google::storagetransfer::v1::ObjectConditions*>(
      &::google::storagetransfer::v1::_ObjectConditions_default_instance_);
}
inline ::google::storagetransfer::v1::ObjectConditions* TransferSpec::release_object_conditions() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.object_conditions)
  
  ::google::storagetransfer::v1::ObjectConditions* temp = object_conditions_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  object_conditions_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::ObjectConditions* TransferSpec::unsafe_arena_release_object_conditions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.object_conditions)
  
  ::google::storagetransfer::v1::ObjectConditions* temp = object_conditions_;
  object_conditions_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::ObjectConditions* TransferSpec::mutable_object_conditions() {
  
  if (object_conditions_ == NULL) {
    _slow_mutable_object_conditions();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.object_conditions)
  return object_conditions_;
}
inline void TransferSpec::set_allocated_object_conditions(::google::storagetransfer::v1::ObjectConditions* object_conditions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete object_conditions_;
  }
  if (object_conditions) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(object_conditions);
    if (message_arena != submessage_arena) {
      object_conditions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object_conditions, submessage_arena);
    }
    
  } else {
    
  }
  object_conditions_ = object_conditions;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.object_conditions)
}

// .google.storagetransfer.v1.TransferOptions transfer_options = 6;
inline bool TransferSpec::has_transfer_options() const {
  return this != internal_default_instance() && transfer_options_ != NULL;
}
inline void TransferSpec::clear_transfer_options() {
  if (GetArenaNoVirtual() == NULL && transfer_options_ != NULL) {
    delete transfer_options_;
  }
  transfer_options_ = NULL;
}
inline const ::google::storagetransfer::v1::TransferOptions& TransferSpec::transfer_options() const {
  const ::google::storagetransfer::v1::TransferOptions* p = transfer_options_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.transfer_options)
  return p != NULL ? *p : *reinterpret_cast<const ::google::storagetransfer::v1::TransferOptions*>(
      &::google::storagetransfer::v1::_TransferOptions_default_instance_);
}
inline ::google::storagetransfer::v1::TransferOptions* TransferSpec::release_transfer_options() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.transfer_options)
  
  ::google::storagetransfer::v1::TransferOptions* temp = transfer_options_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  transfer_options_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferOptions* TransferSpec::unsafe_arena_release_transfer_options() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.transfer_options)
  
  ::google::storagetransfer::v1::TransferOptions* temp = transfer_options_;
  transfer_options_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferOptions* TransferSpec::mutable_transfer_options() {
  
  if (transfer_options_ == NULL) {
    _slow_mutable_transfer_options();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.transfer_options)
  return transfer_options_;
}
inline void TransferSpec::set_allocated_transfer_options(::google::storagetransfer::v1::TransferOptions* transfer_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_options_;
  }
  if (transfer_options) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(transfer_options);
    if (message_arena != submessage_arena) {
      transfer_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer_options, submessage_arena);
    }
    
  } else {
    
  }
  transfer_options_ = transfer_options;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.transfer_options)
}

inline bool TransferSpec::has_data_source() const {
  return data_source_case() != DATA_SOURCE_NOT_SET;
}
inline void TransferSpec::clear_has_data_source() {
  _oneof_case_[0] = DATA_SOURCE_NOT_SET;
}
inline bool TransferSpec::has_data_sink() const {
  return data_sink_case() != DATA_SINK_NOT_SET;
}
inline void TransferSpec::clear_has_data_sink() {
  _oneof_case_[1] = DATA_SINK_NOT_SET;
}
inline TransferSpec::DataSourceCase TransferSpec::data_source_case() const {
  return TransferSpec::DataSourceCase(_oneof_case_[0]);
}
inline TransferSpec::DataSinkCase TransferSpec::data_sink_case() const {
  return TransferSpec::DataSinkCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// Schedule

// .google.type.Date schedule_start_date = 1;
inline bool Schedule::has_schedule_start_date() const {
  return this != internal_default_instance() && schedule_start_date_ != NULL;
}
inline const ::google::type::Date& Schedule::schedule_start_date() const {
  const ::google::type::Date* p = schedule_start_date_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.Schedule.schedule_start_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::type::Date*>(
      &::google::type::_Date_default_instance_);
}
inline ::google::type::Date* Schedule::release_schedule_start_date() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.Schedule.schedule_start_date)
  
  ::google::type::Date* temp = schedule_start_date_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  schedule_start_date_ = NULL;
  return temp;
}
inline ::google::type::Date* Schedule::unsafe_arena_release_schedule_start_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.Schedule.schedule_start_date)
  
  ::google::type::Date* temp = schedule_start_date_;
  schedule_start_date_ = NULL;
  return temp;
}
inline ::google::type::Date* Schedule::mutable_schedule_start_date() {
  
  if (schedule_start_date_ == NULL) {
    _slow_mutable_schedule_start_date();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.Schedule.schedule_start_date)
  return schedule_start_date_;
}
inline void Schedule::set_allocated_schedule_start_date(::google::type::Date* schedule_start_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(schedule_start_date_);
  }
  if (schedule_start_date) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(schedule_start_date)->GetArena();
    if (message_arena != submessage_arena) {
      schedule_start_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schedule_start_date, submessage_arena);
    }
    
  } else {
    
  }
  schedule_start_date_ = schedule_start_date;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.Schedule.schedule_start_date)
}

// .google.type.Date schedule_end_date = 2;
inline bool Schedule::has_schedule_end_date() const {
  return this != internal_default_instance() && schedule_end_date_ != NULL;
}
inline const ::google::type::Date& Schedule::schedule_end_date() const {
  const ::google::type::Date* p = schedule_end_date_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.Schedule.schedule_end_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::type::Date*>(
      &::google::type::_Date_default_instance_);
}
inline ::google::type::Date* Schedule::release_schedule_end_date() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.Schedule.schedule_end_date)
  
  ::google::type::Date* temp = schedule_end_date_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  schedule_end_date_ = NULL;
  return temp;
}
inline ::google::type::Date* Schedule::unsafe_arena_release_schedule_end_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.Schedule.schedule_end_date)
  
  ::google::type::Date* temp = schedule_end_date_;
  schedule_end_date_ = NULL;
  return temp;
}
inline ::google::type::Date* Schedule::mutable_schedule_end_date() {
  
  if (schedule_end_date_ == NULL) {
    _slow_mutable_schedule_end_date();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.Schedule.schedule_end_date)
  return schedule_end_date_;
}
inline void Schedule::set_allocated_schedule_end_date(::google::type::Date* schedule_end_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(schedule_end_date_);
  }
  if (schedule_end_date) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(schedule_end_date)->GetArena();
    if (message_arena != submessage_arena) {
      schedule_end_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schedule_end_date, submessage_arena);
    }
    
  } else {
    
  }
  schedule_end_date_ = schedule_end_date;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.Schedule.schedule_end_date)
}

// .google.type.TimeOfDay start_time_of_day = 3;
inline bool Schedule::has_start_time_of_day() const {
  return this != internal_default_instance() && start_time_of_day_ != NULL;
}
inline const ::google::type::TimeOfDay& Schedule::start_time_of_day() const {
  const ::google::type::TimeOfDay* p = start_time_of_day_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.Schedule.start_time_of_day)
  return p != NULL ? *p : *reinterpret_cast<const ::google::type::TimeOfDay*>(
      &::google::type::_TimeOfDay_default_instance_);
}
inline ::google::type::TimeOfDay* Schedule::release_start_time_of_day() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.Schedule.start_time_of_day)
  
  ::google::type::TimeOfDay* temp = start_time_of_day_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  start_time_of_day_ = NULL;
  return temp;
}
inline ::google::type::TimeOfDay* Schedule::unsafe_arena_release_start_time_of_day() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.Schedule.start_time_of_day)
  
  ::google::type::TimeOfDay* temp = start_time_of_day_;
  start_time_of_day_ = NULL;
  return temp;
}
inline ::google::type::TimeOfDay* Schedule::mutable_start_time_of_day() {
  
  if (start_time_of_day_ == NULL) {
    _slow_mutable_start_time_of_day();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.Schedule.start_time_of_day)
  return start_time_of_day_;
}
inline void Schedule::set_allocated_start_time_of_day(::google::type::TimeOfDay* start_time_of_day) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_of_day_);
  }
  if (start_time_of_day) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_time_of_day = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time_of_day, submessage_arena);
    }
    
  } else {
    
  }
  start_time_of_day_ = start_time_of_day;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.Schedule.start_time_of_day)
}

// -------------------------------------------------------------------

// TransferJob

// string name = 1;
inline void TransferJob::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TransferJob::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.name)
  return name_.Get();
}
inline void TransferJob::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.name)
}
#if LANG_CXX11
inline void TransferJob::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.TransferJob.name)
}
#endif
inline void TransferJob::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferJob.name)
}
inline void TransferJob::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferJob.name)
}
inline ::std::string* TransferJob::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TransferJob::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TransferJob::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.name)
}
inline ::std::string* TransferJob::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TransferJob::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.name)
}

// string description = 2;
inline void TransferJob::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TransferJob::description() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.description)
  return description_.Get();
}
inline void TransferJob::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.description)
}
#if LANG_CXX11
inline void TransferJob::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.TransferJob.description)
}
#endif
inline void TransferJob::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferJob.description)
}
inline void TransferJob::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferJob.description)
}
inline ::std::string* TransferJob::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TransferJob::release_description() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TransferJob::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.description)
}
inline ::std::string* TransferJob::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TransferJob::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.description)
}

// string project_id = 3;
inline void TransferJob::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TransferJob::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.project_id)
  return project_id_.Get();
}
inline void TransferJob::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.project_id)
}
#if LANG_CXX11
inline void TransferJob::set_project_id(::std::string&& value) {
  
  project_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.TransferJob.project_id)
}
#endif
inline void TransferJob::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferJob.project_id)
}
inline void TransferJob::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferJob.project_id)
}
inline ::std::string* TransferJob::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TransferJob::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TransferJob::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.project_id)
}
inline ::std::string* TransferJob::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TransferJob::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.project_id)
}

// .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
inline bool TransferJob::has_transfer_spec() const {
  return this != internal_default_instance() && transfer_spec_ != NULL;
}
inline void TransferJob::clear_transfer_spec() {
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = NULL;
}
inline const ::google::storagetransfer::v1::TransferSpec& TransferJob::transfer_spec() const {
  const ::google::storagetransfer::v1::TransferSpec* p = transfer_spec_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.transfer_spec)
  return p != NULL ? *p : *reinterpret_cast<const ::google::storagetransfer::v1::TransferSpec*>(
      &::google::storagetransfer::v1::_TransferSpec_default_instance_);
}
inline ::google::storagetransfer::v1::TransferSpec* TransferJob::release_transfer_spec() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.transfer_spec)
  
  ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  transfer_spec_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferSpec* TransferJob::unsafe_arena_release_transfer_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.transfer_spec)
  
  ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
  transfer_spec_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferSpec* TransferJob::mutable_transfer_spec() {
  
  if (transfer_spec_ == NULL) {
    _slow_mutable_transfer_spec();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.transfer_spec)
  return transfer_spec_;
}
inline void TransferJob::set_allocated_transfer_spec(::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_spec_;
  }
  if (transfer_spec) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(transfer_spec);
    if (message_arena != submessage_arena) {
      transfer_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer_spec, submessage_arena);
    }
    
  } else {
    
  }
  transfer_spec_ = transfer_spec;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.transfer_spec)
}

// .google.storagetransfer.v1.Schedule schedule = 5;
inline bool TransferJob::has_schedule() const {
  return this != internal_default_instance() && schedule_ != NULL;
}
inline void TransferJob::clear_schedule() {
  if (GetArenaNoVirtual() == NULL && schedule_ != NULL) {
    delete schedule_;
  }
  schedule_ = NULL;
}
inline const ::google::storagetransfer::v1::Schedule& TransferJob::schedule() const {
  const ::google::storagetransfer::v1::Schedule* p = schedule_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.schedule)
  return p != NULL ? *p : *reinterpret_cast<const ::google::storagetransfer::v1::Schedule*>(
      &::google::storagetransfer::v1::_Schedule_default_instance_);
}
inline ::google::storagetransfer::v1::Schedule* TransferJob::release_schedule() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.schedule)
  
  ::google::storagetransfer::v1::Schedule* temp = schedule_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  schedule_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::Schedule* TransferJob::unsafe_arena_release_schedule() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.schedule)
  
  ::google::storagetransfer::v1::Schedule* temp = schedule_;
  schedule_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::Schedule* TransferJob::mutable_schedule() {
  
  if (schedule_ == NULL) {
    _slow_mutable_schedule();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.schedule)
  return schedule_;
}
inline void TransferJob::set_allocated_schedule(::google::storagetransfer::v1::Schedule* schedule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete schedule_;
  }
  if (schedule) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(schedule);
    if (message_arena != submessage_arena) {
      schedule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schedule, submessage_arena);
    }
    
  } else {
    
  }
  schedule_ = schedule;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.schedule)
}

// .google.storagetransfer.v1.TransferJob.Status status = 6;
inline void TransferJob::clear_status() {
  status_ = 0;
}
inline ::google::storagetransfer::v1::TransferJob_Status TransferJob::status() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.status)
  return static_cast< ::google::storagetransfer::v1::TransferJob_Status >(status_);
}
inline void TransferJob::set_status(::google::storagetransfer::v1::TransferJob_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.status)
}

// .google.protobuf.Timestamp creation_time = 7;
inline bool TransferJob::has_creation_time() const {
  return this != internal_default_instance() && creation_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& TransferJob::creation_time() const {
  const ::google::protobuf::Timestamp* p = creation_time_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.creation_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* TransferJob::release_creation_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.creation_time)
  
  ::google::protobuf::Timestamp* temp = creation_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  creation_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferJob::unsafe_arena_release_creation_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.creation_time)
  
  ::google::protobuf::Timestamp* temp = creation_time_;
  creation_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferJob::mutable_creation_time() {
  
  if (creation_time_ == NULL) {
    _slow_mutable_creation_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.creation_time)
  return creation_time_;
}
inline void TransferJob::set_allocated_creation_time(::google::protobuf::Timestamp* creation_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(creation_time_);
  }
  if (creation_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(creation_time)->GetArena();
    if (message_arena != submessage_arena) {
      creation_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, creation_time, submessage_arena);
    }
    
  } else {
    
  }
  creation_time_ = creation_time;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.creation_time)
}

// .google.protobuf.Timestamp last_modification_time = 8;
inline bool TransferJob::has_last_modification_time() const {
  return this != internal_default_instance() && last_modification_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& TransferJob::last_modification_time() const {
  const ::google::protobuf::Timestamp* p = last_modification_time_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.last_modification_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* TransferJob::release_last_modification_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.last_modification_time)
  
  ::google::protobuf::Timestamp* temp = last_modification_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  last_modification_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferJob::unsafe_arena_release_last_modification_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.last_modification_time)
  
  ::google::protobuf::Timestamp* temp = last_modification_time_;
  last_modification_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferJob::mutable_last_modification_time() {
  
  if (last_modification_time_ == NULL) {
    _slow_mutable_last_modification_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.last_modification_time)
  return last_modification_time_;
}
inline void TransferJob::set_allocated_last_modification_time(::google::protobuf::Timestamp* last_modification_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_modification_time_);
  }
  if (last_modification_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(last_modification_time)->GetArena();
    if (message_arena != submessage_arena) {
      last_modification_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_modification_time, submessage_arena);
    }
    
  } else {
    
  }
  last_modification_time_ = last_modification_time;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.last_modification_time)
}

// .google.protobuf.Timestamp deletion_time = 9;
inline bool TransferJob::has_deletion_time() const {
  return this != internal_default_instance() && deletion_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& TransferJob::deletion_time() const {
  const ::google::protobuf::Timestamp* p = deletion_time_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.deletion_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* TransferJob::release_deletion_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.deletion_time)
  
  ::google::protobuf::Timestamp* temp = deletion_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  deletion_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferJob::unsafe_arena_release_deletion_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.deletion_time)
  
  ::google::protobuf::Timestamp* temp = deletion_time_;
  deletion_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferJob::mutable_deletion_time() {
  
  if (deletion_time_ == NULL) {
    _slow_mutable_deletion_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.deletion_time)
  return deletion_time_;
}
inline void TransferJob::set_allocated_deletion_time(::google::protobuf::Timestamp* deletion_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(deletion_time_);
  }
  if (deletion_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(deletion_time)->GetArena();
    if (message_arena != submessage_arena) {
      deletion_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deletion_time, submessage_arena);
    }
    
  } else {
    
  }
  deletion_time_ = deletion_time;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.deletion_time)
}

// -------------------------------------------------------------------

// ErrorLogEntry

// string url = 1;
inline void ErrorLogEntry::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ErrorLogEntry::url() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorLogEntry.url)
  return url_.Get();
}
inline void ErrorLogEntry::set_url(const ::std::string& value) {
  
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorLogEntry.url)
}
#if LANG_CXX11
inline void ErrorLogEntry::set_url(::std::string&& value) {
  
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.ErrorLogEntry.url)
}
#endif
inline void ErrorLogEntry::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ErrorLogEntry.url)
}
inline void ErrorLogEntry::set_url(const char* value,
    size_t size) {
  
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ErrorLogEntry.url)
}
inline ::std::string* ErrorLogEntry::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ErrorLogEntry.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ErrorLogEntry::release_url() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ErrorLogEntry.url)
  
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ErrorLogEntry::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ErrorLogEntry.url)
}
inline ::std::string* ErrorLogEntry::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ErrorLogEntry.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ErrorLogEntry::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    
  } else {
    
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ErrorLogEntry.url)
}

// repeated string error_details = 3;
inline int ErrorLogEntry::error_details_size() const {
  return error_details_.size();
}
inline void ErrorLogEntry::clear_error_details() {
  error_details_.Clear();
}
inline const ::std::string& ErrorLogEntry::error_details(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_.Get(index);
}
inline ::std::string* ErrorLogEntry::mutable_error_details(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_.Mutable(index);
}
inline void ErrorLogEntry::set_error_details(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorLogEntry.error_details)
  error_details_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ErrorLogEntry::set_error_details(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorLogEntry.error_details)
  error_details_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ErrorLogEntry::set_error_details(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  error_details_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
inline void ErrorLogEntry::set_error_details(int index, const char* value, size_t size) {
  error_details_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
inline ::std::string* ErrorLogEntry::add_error_details() {
  // @@protoc_insertion_point(field_add_mutable:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_.Add();
}
inline void ErrorLogEntry::add_error_details(const ::std::string& value) {
  error_details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
#if LANG_CXX11
inline void ErrorLogEntry::add_error_details(::std::string&& value) {
  error_details_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
#endif
inline void ErrorLogEntry::add_error_details(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  error_details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
inline void ErrorLogEntry::add_error_details(const char* value, size_t size) {
  error_details_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ErrorLogEntry::error_details() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ErrorLogEntry::mutable_error_details() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return &error_details_;
}

// -------------------------------------------------------------------

// ErrorSummary

// .google.rpc.Code error_code = 1;
inline void ErrorSummary::clear_error_code() {
  error_code_ = 0;
}
inline ::google::rpc::Code ErrorSummary::error_code() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorSummary.error_code)
  return static_cast< ::google::rpc::Code >(error_code_);
}
inline void ErrorSummary::set_error_code(::google::rpc::Code value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorSummary.error_code)
}

// int64 error_count = 2;
inline void ErrorSummary::clear_error_count() {
  error_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ErrorSummary::error_count() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorSummary.error_count)
  return error_count_;
}
inline void ErrorSummary::set_error_count(::google::protobuf::int64 value) {
  
  error_count_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorSummary.error_count)
}

// repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
inline int ErrorSummary::error_log_entries_size() const {
  return error_log_entries_.size();
}
inline void ErrorSummary::clear_error_log_entries() {
  error_log_entries_.Clear();
}
inline const ::google::storagetransfer::v1::ErrorLogEntry& ErrorSummary::error_log_entries(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_.Get(index);
}
inline ::google::storagetransfer::v1::ErrorLogEntry* ErrorSummary::mutable_error_log_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_.Mutable(index);
}
inline ::google::storagetransfer::v1::ErrorLogEntry* ErrorSummary::add_error_log_entries() {
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorLogEntry >*
ErrorSummary::mutable_error_log_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return &error_log_entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorLogEntry >&
ErrorSummary::error_log_entries() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_;
}

// -------------------------------------------------------------------

// TransferCounters

// int64 objects_found_from_source = 1;
inline void TransferCounters::clear_objects_found_from_source() {
  objects_found_from_source_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_found_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_found_from_source)
  return objects_found_from_source_;
}
inline void TransferCounters::set_objects_found_from_source(::google::protobuf::int64 value) {
  
  objects_found_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_found_from_source)
}

// int64 bytes_found_from_source = 2;
inline void TransferCounters::clear_bytes_found_from_source() {
  bytes_found_from_source_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_found_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_found_from_source)
  return bytes_found_from_source_;
}
inline void TransferCounters::set_bytes_found_from_source(::google::protobuf::int64 value) {
  
  bytes_found_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_found_from_source)
}

// int64 objects_found_only_from_sink = 3;
inline void TransferCounters::clear_objects_found_only_from_sink() {
  objects_found_only_from_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_found_only_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_found_only_from_sink)
  return objects_found_only_from_sink_;
}
inline void TransferCounters::set_objects_found_only_from_sink(::google::protobuf::int64 value) {
  
  objects_found_only_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_found_only_from_sink)
}

// int64 bytes_found_only_from_sink = 4;
inline void TransferCounters::clear_bytes_found_only_from_sink() {
  bytes_found_only_from_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_found_only_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_found_only_from_sink)
  return bytes_found_only_from_sink_;
}
inline void TransferCounters::set_bytes_found_only_from_sink(::google::protobuf::int64 value) {
  
  bytes_found_only_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_found_only_from_sink)
}

// int64 objects_from_source_skipped_by_sync = 5;
inline void TransferCounters::clear_objects_from_source_skipped_by_sync() {
  objects_from_source_skipped_by_sync_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_from_source_skipped_by_sync() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_from_source_skipped_by_sync)
  return objects_from_source_skipped_by_sync_;
}
inline void TransferCounters::set_objects_from_source_skipped_by_sync(::google::protobuf::int64 value) {
  
  objects_from_source_skipped_by_sync_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_from_source_skipped_by_sync)
}

// int64 bytes_from_source_skipped_by_sync = 6;
inline void TransferCounters::clear_bytes_from_source_skipped_by_sync() {
  bytes_from_source_skipped_by_sync_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_from_source_skipped_by_sync() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_from_source_skipped_by_sync)
  return bytes_from_source_skipped_by_sync_;
}
inline void TransferCounters::set_bytes_from_source_skipped_by_sync(::google::protobuf::int64 value) {
  
  bytes_from_source_skipped_by_sync_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_from_source_skipped_by_sync)
}

// int64 objects_copied_to_sink = 7;
inline void TransferCounters::clear_objects_copied_to_sink() {
  objects_copied_to_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_copied_to_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_copied_to_sink)
  return objects_copied_to_sink_;
}
inline void TransferCounters::set_objects_copied_to_sink(::google::protobuf::int64 value) {
  
  objects_copied_to_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_copied_to_sink)
}

// int64 bytes_copied_to_sink = 8;
inline void TransferCounters::clear_bytes_copied_to_sink() {
  bytes_copied_to_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_copied_to_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_copied_to_sink)
  return bytes_copied_to_sink_;
}
inline void TransferCounters::set_bytes_copied_to_sink(::google::protobuf::int64 value) {
  
  bytes_copied_to_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_copied_to_sink)
}

// int64 objects_deleted_from_source = 9;
inline void TransferCounters::clear_objects_deleted_from_source() {
  objects_deleted_from_source_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_deleted_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_deleted_from_source)
  return objects_deleted_from_source_;
}
inline void TransferCounters::set_objects_deleted_from_source(::google::protobuf::int64 value) {
  
  objects_deleted_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_deleted_from_source)
}

// int64 bytes_deleted_from_source = 10;
inline void TransferCounters::clear_bytes_deleted_from_source() {
  bytes_deleted_from_source_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_deleted_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_source)
  return bytes_deleted_from_source_;
}
inline void TransferCounters::set_bytes_deleted_from_source(::google::protobuf::int64 value) {
  
  bytes_deleted_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_source)
}

// int64 objects_deleted_from_sink = 11;
inline void TransferCounters::clear_objects_deleted_from_sink() {
  objects_deleted_from_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_deleted_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_deleted_from_sink)
  return objects_deleted_from_sink_;
}
inline void TransferCounters::set_objects_deleted_from_sink(::google::protobuf::int64 value) {
  
  objects_deleted_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_deleted_from_sink)
}

// int64 bytes_deleted_from_sink = 12;
inline void TransferCounters::clear_bytes_deleted_from_sink() {
  bytes_deleted_from_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_deleted_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_sink)
  return bytes_deleted_from_sink_;
}
inline void TransferCounters::set_bytes_deleted_from_sink(::google::protobuf::int64 value) {
  
  bytes_deleted_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_sink)
}

// int64 objects_from_source_failed = 13;
inline void TransferCounters::clear_objects_from_source_failed() {
  objects_from_source_failed_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_from_source_failed() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_from_source_failed)
  return objects_from_source_failed_;
}
inline void TransferCounters::set_objects_from_source_failed(::google::protobuf::int64 value) {
  
  objects_from_source_failed_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_from_source_failed)
}

// int64 bytes_from_source_failed = 14;
inline void TransferCounters::clear_bytes_from_source_failed() {
  bytes_from_source_failed_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_from_source_failed() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_from_source_failed)
  return bytes_from_source_failed_;
}
inline void TransferCounters::set_bytes_from_source_failed(::google::protobuf::int64 value) {
  
  bytes_from_source_failed_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_from_source_failed)
}

// int64 objects_failed_to_delete_from_sink = 15;
inline void TransferCounters::clear_objects_failed_to_delete_from_sink() {
  objects_failed_to_delete_from_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::objects_failed_to_delete_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_failed_to_delete_from_sink)
  return objects_failed_to_delete_from_sink_;
}
inline void TransferCounters::set_objects_failed_to_delete_from_sink(::google::protobuf::int64 value) {
  
  objects_failed_to_delete_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_failed_to_delete_from_sink)
}

// int64 bytes_failed_to_delete_from_sink = 16;
inline void TransferCounters::clear_bytes_failed_to_delete_from_sink() {
  bytes_failed_to_delete_from_sink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferCounters::bytes_failed_to_delete_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_failed_to_delete_from_sink)
  return bytes_failed_to_delete_from_sink_;
}
inline void TransferCounters::set_bytes_failed_to_delete_from_sink(::google::protobuf::int64 value) {
  
  bytes_failed_to_delete_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_failed_to_delete_from_sink)
}

// -------------------------------------------------------------------

// TransferOperation

// string name = 1;
inline void TransferOperation::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TransferOperation::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.name)
  return name_.Get();
}
inline void TransferOperation::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.name)
}
#if LANG_CXX11
inline void TransferOperation::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.TransferOperation.name)
}
#endif
inline void TransferOperation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferOperation.name)
}
inline void TransferOperation::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferOperation.name)
}
inline ::std::string* TransferOperation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TransferOperation::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TransferOperation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.name)
}
inline ::std::string* TransferOperation::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TransferOperation::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.name)
}

// string project_id = 2;
inline void TransferOperation::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TransferOperation::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.project_id)
  return project_id_.Get();
}
inline void TransferOperation::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.project_id)
}
#if LANG_CXX11
inline void TransferOperation::set_project_id(::std::string&& value) {
  
  project_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.TransferOperation.project_id)
}
#endif
inline void TransferOperation::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferOperation.project_id)
}
inline void TransferOperation::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferOperation.project_id)
}
inline ::std::string* TransferOperation::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TransferOperation::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TransferOperation::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.project_id)
}
inline ::std::string* TransferOperation::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TransferOperation::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.project_id)
}

// .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
inline bool TransferOperation::has_transfer_spec() const {
  return this != internal_default_instance() && transfer_spec_ != NULL;
}
inline void TransferOperation::clear_transfer_spec() {
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = NULL;
}
inline const ::google::storagetransfer::v1::TransferSpec& TransferOperation::transfer_spec() const {
  const ::google::storagetransfer::v1::TransferSpec* p = transfer_spec_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.transfer_spec)
  return p != NULL ? *p : *reinterpret_cast<const ::google::storagetransfer::v1::TransferSpec*>(
      &::google::storagetransfer::v1::_TransferSpec_default_instance_);
}
inline ::google::storagetransfer::v1::TransferSpec* TransferOperation::release_transfer_spec() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.transfer_spec)
  
  ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  transfer_spec_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferSpec* TransferOperation::unsafe_arena_release_transfer_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.transfer_spec)
  
  ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
  transfer_spec_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferSpec* TransferOperation::mutable_transfer_spec() {
  
  if (transfer_spec_ == NULL) {
    _slow_mutable_transfer_spec();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.transfer_spec)
  return transfer_spec_;
}
inline void TransferOperation::set_allocated_transfer_spec(::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_spec_;
  }
  if (transfer_spec) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(transfer_spec);
    if (message_arena != submessage_arena) {
      transfer_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer_spec, submessage_arena);
    }
    
  } else {
    
  }
  transfer_spec_ = transfer_spec;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_spec)
}

// .google.protobuf.Timestamp start_time = 4;
inline bool TransferOperation::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& TransferOperation::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* TransferOperation::release_start_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferOperation::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferOperation::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.start_time)
  return start_time_;
}
inline void TransferOperation::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.start_time)
}

// .google.protobuf.Timestamp end_time = 5;
inline bool TransferOperation::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& TransferOperation::end_time() const {
  const ::google::protobuf::Timestamp* p = end_time_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.end_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* TransferOperation::release_end_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  end_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferOperation::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* TransferOperation::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.end_time)
  return end_time_;
}
inline void TransferOperation::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.end_time)
}

// .google.storagetransfer.v1.TransferOperation.Status status = 6;
inline void TransferOperation::clear_status() {
  status_ = 0;
}
inline ::google::storagetransfer::v1::TransferOperation_Status TransferOperation::status() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.status)
  return static_cast< ::google::storagetransfer::v1::TransferOperation_Status >(status_);
}
inline void TransferOperation::set_status(::google::storagetransfer::v1::TransferOperation_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.status)
}

// .google.storagetransfer.v1.TransferCounters counters = 7;
inline bool TransferOperation::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void TransferOperation::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::google::storagetransfer::v1::TransferCounters& TransferOperation::counters() const {
  const ::google::storagetransfer::v1::TransferCounters* p = counters_;
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::google::storagetransfer::v1::TransferCounters*>(
      &::google::storagetransfer::v1::_TransferCounters_default_instance_);
}
inline ::google::storagetransfer::v1::TransferCounters* TransferOperation::release_counters() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.counters)
  
  ::google::storagetransfer::v1::TransferCounters* temp = counters_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  counters_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferCounters* TransferOperation::unsafe_arena_release_counters() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.counters)
  
  ::google::storagetransfer::v1::TransferCounters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::google::storagetransfer::v1::TransferCounters* TransferOperation::mutable_counters() {
  
  if (counters_ == NULL) {
    _slow_mutable_counters();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.counters)
  return counters_;
}
inline void TransferOperation::set_allocated_counters(::google::storagetransfer::v1::TransferCounters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(counters);
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.counters)
}

// repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
inline int TransferOperation::error_breakdowns_size() const {
  return error_breakdowns_.size();
}
inline void TransferOperation::clear_error_breakdowns() {
  error_breakdowns_.Clear();
}
inline const ::google::storagetransfer::v1::ErrorSummary& TransferOperation::error_breakdowns(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_.Get(index);
}
inline ::google::storagetransfer::v1::ErrorSummary* TransferOperation::mutable_error_breakdowns(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_.Mutable(index);
}
inline ::google::storagetransfer::v1::ErrorSummary* TransferOperation::add_error_breakdowns() {
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorSummary >*
TransferOperation::mutable_error_breakdowns() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return &error_breakdowns_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorSummary >&
TransferOperation::error_breakdowns() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_;
}

// string transfer_job_name = 9;
inline void TransferOperation::clear_transfer_job_name() {
  transfer_job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TransferOperation::transfer_job_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  return transfer_job_name_.Get();
}
inline void TransferOperation::set_transfer_job_name(const ::std::string& value) {
  
  transfer_job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
#if LANG_CXX11
inline void TransferOperation::set_transfer_job_name(::std::string&& value) {
  
  transfer_job_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
#endif
inline void TransferOperation::set_transfer_job_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transfer_job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
inline void TransferOperation::set_transfer_job_name(const char* value,
    size_t size) {
  
  transfer_job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
inline ::std::string* TransferOperation::mutable_transfer_job_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  return transfer_job_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TransferOperation::release_transfer_job_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  
  return transfer_job_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TransferOperation::set_allocated_transfer_job_name(::std::string* transfer_job_name) {
  if (transfer_job_name != NULL) {
    
  } else {
    
  }
  transfer_job_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transfer_job_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
inline ::std::string* TransferOperation::unsafe_arena_release_transfer_job_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return transfer_job_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TransferOperation::unsafe_arena_set_allocated_transfer_job_name(
    ::std::string* transfer_job_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (transfer_job_name != NULL) {
    
  } else {
    
  }
  transfer_job_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      transfer_job_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace storagetransfer
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::storagetransfer::v1::TransferJob_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::storagetransfer::v1::TransferJob_Status>() {
  return ::google::storagetransfer::v1::TransferJob_Status_descriptor();
}
template <> struct is_proto_enum< ::google::storagetransfer::v1::TransferOperation_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::storagetransfer::v1::TransferOperation_Status>() {
  return ::google::storagetransfer::v1::TransferOperation_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto__INCLUDED
