// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v2/bigtable.proto

#include "google/bigtable/v2/bigtable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace bigtable {
namespace v2 {
class ReadRowsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRowsRequest>
      _instance;
} _ReadRowsRequest_default_instance_;
class ReadRowsResponse_CellChunkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRowsResponse_CellChunk>
      _instance;
  bool reset_row_;
  bool commit_row_;
} _ReadRowsResponse_CellChunk_default_instance_;
class ReadRowsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRowsResponse>
      _instance;
} _ReadRowsResponse_default_instance_;
class SampleRowKeysRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SampleRowKeysRequest>
      _instance;
} _SampleRowKeysRequest_default_instance_;
class SampleRowKeysResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SampleRowKeysResponse>
      _instance;
} _SampleRowKeysResponse_default_instance_;
class MutateRowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutateRowRequest>
      _instance;
} _MutateRowRequest_default_instance_;
class MutateRowResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutateRowResponse>
      _instance;
} _MutateRowResponse_default_instance_;
class MutateRowsRequest_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutateRowsRequest_Entry>
      _instance;
} _MutateRowsRequest_Entry_default_instance_;
class MutateRowsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutateRowsRequest>
      _instance;
} _MutateRowsRequest_default_instance_;
class MutateRowsResponse_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutateRowsResponse_Entry>
      _instance;
} _MutateRowsResponse_Entry_default_instance_;
class MutateRowsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutateRowsResponse>
      _instance;
} _MutateRowsResponse_default_instance_;
class CheckAndMutateRowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckAndMutateRowRequest>
      _instance;
} _CheckAndMutateRowRequest_default_instance_;
class CheckAndMutateRowResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckAndMutateRowResponse>
      _instance;
} _CheckAndMutateRowResponse_default_instance_;
class ReadModifyWriteRowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadModifyWriteRowRequest>
      _instance;
} _ReadModifyWriteRowRequest_default_instance_;
class ReadModifyWriteRowResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadModifyWriteRowResponse>
      _instance;
} _ReadModifyWriteRowResponse_default_instance_;
}  // namespace v2
}  // namespace bigtable
}  // namespace google
namespace protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto {
void InitDefaultsReadRowsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsRowSet();
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsRowFilter();
  {
    void* ptr = &::google::bigtable::v2::_ReadRowsRequest_default_instance_;
    new (ptr) ::google::bigtable::v2::ReadRowsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::ReadRowsRequest::InitAsDefaultInstance();
}

void InitDefaultsReadRowsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadRowsRequestImpl);
}

void InitDefaultsReadRowsResponse_CellChunkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsStringValue();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsBytesValue();
  {
    void* ptr = &::google::bigtable::v2::_ReadRowsResponse_CellChunk_default_instance_;
    new (ptr) ::google::bigtable::v2::ReadRowsResponse_CellChunk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::ReadRowsResponse_CellChunk::InitAsDefaultInstance();
}

void InitDefaultsReadRowsResponse_CellChunk() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadRowsResponse_CellChunkImpl);
}

void InitDefaultsReadRowsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadRowsResponse_CellChunk();
  {
    void* ptr = &::google::bigtable::v2::_ReadRowsResponse_default_instance_;
    new (ptr) ::google::bigtable::v2::ReadRowsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::ReadRowsResponse::InitAsDefaultInstance();
}

void InitDefaultsReadRowsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadRowsResponseImpl);
}

void InitDefaultsSampleRowKeysRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v2::_SampleRowKeysRequest_default_instance_;
    new (ptr) ::google::bigtable::v2::SampleRowKeysRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::SampleRowKeysRequest::InitAsDefaultInstance();
}

void InitDefaultsSampleRowKeysRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSampleRowKeysRequestImpl);
}

void InitDefaultsSampleRowKeysResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v2::_SampleRowKeysResponse_default_instance_;
    new (ptr) ::google::bigtable::v2::SampleRowKeysResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::SampleRowKeysResponse::InitAsDefaultInstance();
}

void InitDefaultsSampleRowKeysResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSampleRowKeysResponseImpl);
}

void InitDefaultsMutateRowRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsMutation();
  {
    void* ptr = &::google::bigtable::v2::_MutateRowRequest_default_instance_;
    new (ptr) ::google::bigtable::v2::MutateRowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::MutateRowRequest::InitAsDefaultInstance();
}

void InitDefaultsMutateRowRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutateRowRequestImpl);
}

void InitDefaultsMutateRowResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v2::_MutateRowResponse_default_instance_;
    new (ptr) ::google::bigtable::v2::MutateRowResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::MutateRowResponse::InitAsDefaultInstance();
}

void InitDefaultsMutateRowResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutateRowResponseImpl);
}

void InitDefaultsMutateRowsRequest_EntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsMutation();
  {
    void* ptr = &::google::bigtable::v2::_MutateRowsRequest_Entry_default_instance_;
    new (ptr) ::google::bigtable::v2::MutateRowsRequest_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::MutateRowsRequest_Entry::InitAsDefaultInstance();
}

void InitDefaultsMutateRowsRequest_Entry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutateRowsRequest_EntryImpl);
}

void InitDefaultsMutateRowsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsRequest_Entry();
  {
    void* ptr = &::google::bigtable::v2::_MutateRowsRequest_default_instance_;
    new (ptr) ::google::bigtable::v2::MutateRowsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::MutateRowsRequest::InitAsDefaultInstance();
}

void InitDefaultsMutateRowsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutateRowsRequestImpl);
}

void InitDefaultsMutateRowsResponse_EntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::google::bigtable::v2::_MutateRowsResponse_Entry_default_instance_;
    new (ptr) ::google::bigtable::v2::MutateRowsResponse_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::MutateRowsResponse_Entry::InitAsDefaultInstance();
}

void InitDefaultsMutateRowsResponse_Entry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutateRowsResponse_EntryImpl);
}

void InitDefaultsMutateRowsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsResponse_Entry();
  {
    void* ptr = &::google::bigtable::v2::_MutateRowsResponse_default_instance_;
    new (ptr) ::google::bigtable::v2::MutateRowsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::MutateRowsResponse::InitAsDefaultInstance();
}

void InitDefaultsMutateRowsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutateRowsResponseImpl);
}

void InitDefaultsCheckAndMutateRowRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsRowFilter();
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsMutation();
  {
    void* ptr = &::google::bigtable::v2::_CheckAndMutateRowRequest_default_instance_;
    new (ptr) ::google::bigtable::v2::CheckAndMutateRowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::CheckAndMutateRowRequest::InitAsDefaultInstance();
}

void InitDefaultsCheckAndMutateRowRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckAndMutateRowRequestImpl);
}

void InitDefaultsCheckAndMutateRowResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v2::_CheckAndMutateRowResponse_default_instance_;
    new (ptr) ::google::bigtable::v2::CheckAndMutateRowResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::CheckAndMutateRowResponse::InitAsDefaultInstance();
}

void InitDefaultsCheckAndMutateRowResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckAndMutateRowResponseImpl);
}

void InitDefaultsReadModifyWriteRowRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsReadModifyWriteRule();
  {
    void* ptr = &::google::bigtable::v2::_ReadModifyWriteRowRequest_default_instance_;
    new (ptr) ::google::bigtable::v2::ReadModifyWriteRowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::ReadModifyWriteRowRequest::InitAsDefaultInstance();
}

void InitDefaultsReadModifyWriteRowRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadModifyWriteRowRequestImpl);
}

void InitDefaultsReadModifyWriteRowResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv2_2fdata_2eproto::InitDefaultsRow();
  {
    void* ptr = &::google::bigtable::v2::_ReadModifyWriteRowResponse_default_instance_;
    new (ptr) ::google::bigtable::v2::ReadModifyWriteRowResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v2::ReadModifyWriteRowResponse::InitAsDefaultInstance();
}

void InitDefaultsReadModifyWriteRowResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadModifyWriteRowResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsRequest, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsRequest, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsRequest, rows_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, row_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, timestamp_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, value_size_),
  offsetof(::google::bigtable::v2::ReadRowsResponse_CellChunkDefaultTypeInternal, reset_row_),
  offsetof(::google::bigtable::v2::ReadRowsResponse_CellChunkDefaultTypeInternal, commit_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse_CellChunk, row_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse, chunks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadRowsResponse, last_scanned_row_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::SampleRowKeysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::SampleRowKeysRequest, table_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::SampleRowKeysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::SampleRowKeysResponse, row_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::SampleRowKeysResponse, offset_bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowRequest, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowRequest, row_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowRequest, mutations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsRequest_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsRequest_Entry, row_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsRequest_Entry, mutations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsRequest, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsRequest, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsResponse_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsResponse_Entry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsResponse_Entry, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::MutateRowsResponse, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowRequest, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowRequest, row_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowRequest, predicate_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowRequest, true_mutations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowRequest, false_mutations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::CheckAndMutateRowResponse, predicate_matched_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadModifyWriteRowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadModifyWriteRowRequest, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadModifyWriteRowRequest, row_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadModifyWriteRowRequest, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadModifyWriteRowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v2::ReadModifyWriteRowResponse, row_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::bigtable::v2::ReadRowsRequest)},
  { 9, -1, sizeof(::google::bigtable::v2::ReadRowsResponse_CellChunk)},
  { 24, -1, sizeof(::google::bigtable::v2::ReadRowsResponse)},
  { 31, -1, sizeof(::google::bigtable::v2::SampleRowKeysRequest)},
  { 37, -1, sizeof(::google::bigtable::v2::SampleRowKeysResponse)},
  { 44, -1, sizeof(::google::bigtable::v2::MutateRowRequest)},
  { 52, -1, sizeof(::google::bigtable::v2::MutateRowResponse)},
  { 57, -1, sizeof(::google::bigtable::v2::MutateRowsRequest_Entry)},
  { 64, -1, sizeof(::google::bigtable::v2::MutateRowsRequest)},
  { 71, -1, sizeof(::google::bigtable::v2::MutateRowsResponse_Entry)},
  { 78, -1, sizeof(::google::bigtable::v2::MutateRowsResponse)},
  { 84, -1, sizeof(::google::bigtable::v2::CheckAndMutateRowRequest)},
  { 94, -1, sizeof(::google::bigtable::v2::CheckAndMutateRowResponse)},
  { 100, -1, sizeof(::google::bigtable::v2::ReadModifyWriteRowRequest)},
  { 108, -1, sizeof(::google::bigtable::v2::ReadModifyWriteRowResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_ReadRowsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_ReadRowsResponse_CellChunk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_ReadRowsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_SampleRowKeysRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_SampleRowKeysResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_MutateRowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_MutateRowResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_MutateRowsRequest_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_MutateRowsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_MutateRowsResponse_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_MutateRowsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_CheckAndMutateRowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_CheckAndMutateRowResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_ReadModifyWriteRowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v2::_ReadModifyWriteRowResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/bigtable/v2/bigtable.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!google/bigtable/v2/bigtable.proto\022\022goo"
      "gle.bigtable.v2\032\034google/api/annotations."
      "proto\032\035google/bigtable/v2/data.proto\032\036go"
      "ogle/protobuf/wrappers.proto\032\027google/rpc"
      "/status.proto\"\222\001\n\017ReadRowsRequest\022\022\n\ntab"
      "le_name\030\001 \001(\t\022(\n\004rows\030\002 \001(\0132\032.google.big"
      "table.v2.RowSet\022-\n\006filter\030\003 \001(\0132\035.google"
      ".bigtable.v2.RowFilter\022\022\n\nrows_limit\030\004 \001"
      "(\003\"\370\002\n\020ReadRowsResponse\022>\n\006chunks\030\001 \003(\0132"
      "..google.bigtable.v2.ReadRowsResponse.Ce"
      "llChunk\022\034\n\024last_scanned_row_key\030\002 \001(\014\032\205\002"
      "\n\tCellChunk\022\017\n\007row_key\030\001 \001(\014\0221\n\013family_n"
      "ame\030\002 \001(\0132\034.google.protobuf.StringValue\022"
      ".\n\tqualifier\030\003 \001(\0132\033.google.protobuf.Byt"
      "esValue\022\030\n\020timestamp_micros\030\004 \001(\003\022\016\n\006lab"
      "els\030\005 \003(\t\022\r\n\005value\030\006 \001(\014\022\022\n\nvalue_size\030\007"
      " \001(\005\022\023\n\treset_row\030\010 \001(\010H\000\022\024\n\ncommit_row\030"
      "\t \001(\010H\000B\014\n\nrow_status\"*\n\024SampleRowKeysRe"
      "quest\022\022\n\ntable_name\030\001 \001(\t\">\n\025SampleRowKe"
      "ysResponse\022\017\n\007row_key\030\001 \001(\014\022\024\n\014offset_by"
      "tes\030\002 \001(\003\"h\n\020MutateRowRequest\022\022\n\ntable_n"
      "ame\030\001 \001(\t\022\017\n\007row_key\030\002 \001(\014\022/\n\tmutations\030"
      "\003 \003(\0132\034.google.bigtable.v2.Mutation\"\023\n\021M"
      "utateRowResponse\"\260\001\n\021MutateRowsRequest\022\022"
      "\n\ntable_name\030\001 \001(\t\022<\n\007entries\030\002 \003(\0132+.go"
      "ogle.bigtable.v2.MutateRowsRequest.Entry"
      "\032I\n\005Entry\022\017\n\007row_key\030\001 \001(\014\022/\n\tmutations\030"
      "\002 \003(\0132\034.google.bigtable.v2.Mutation\"\217\001\n\022"
      "MutateRowsResponse\022=\n\007entries\030\001 \003(\0132,.go"
      "ogle.bigtable.v2.MutateRowsResponse.Entr"
      "y\032:\n\005Entry\022\r\n\005index\030\001 \001(\003\022\"\n\006status\030\002 \001("
      "\0132\022.google.rpc.Status\"\345\001\n\030CheckAndMutate"
      "RowRequest\022\022\n\ntable_name\030\001 \001(\t\022\017\n\007row_ke"
      "y\030\002 \001(\014\0227\n\020predicate_filter\030\006 \001(\0132\035.goog"
      "le.bigtable.v2.RowFilter\0224\n\016true_mutatio"
      "ns\030\004 \003(\0132\034.google.bigtable.v2.Mutation\0225"
      "\n\017false_mutations\030\005 \003(\0132\034.google.bigtabl"
      "e.v2.Mutation\"6\n\031CheckAndMutateRowRespon"
      "se\022\031\n\021predicate_matched\030\001 \001(\010\"x\n\031ReadMod"
      "ifyWriteRowRequest\022\022\n\ntable_name\030\001 \001(\t\022\017"
      "\n\007row_key\030\002 \001(\014\0226\n\005rules\030\003 \003(\0132\'.google."
      "bigtable.v2.ReadModifyWriteRule\"B\n\032ReadM"
      "odifyWriteRowResponse\022$\n\003row\030\001 \001(\0132\027.goo"
      "gle.bigtable.v2.Row2\255\010\n\010Bigtable\022\235\001\n\010Rea"
      "dRows\022#.google.bigtable.v2.ReadRowsReque"
      "st\032$.google.bigtable.v2.ReadRowsResponse"
      "\"D\202\323\344\223\002>\"9/v2/{table_name=projects/*/ins"
      "tances/*/tables/*}:readRows:\001*0\001\022\256\001\n\rSam"
      "pleRowKeys\022(.google.bigtable.v2.SampleRo"
      "wKeysRequest\032).google.bigtable.v2.Sample"
      "RowKeysResponse\"F\202\323\344\223\002@\022>/v2/{table_name"
      "=projects/*/instances/*/tables/*}:sample"
      "RowKeys0\001\022\237\001\n\tMutateRow\022$.google.bigtabl"
      "e.v2.MutateRowRequest\032%.google.bigtable."
      "v2.MutateRowResponse\"E\202\323\344\223\002\?\":/v2/{table"
      "_name=projects/*/instances/*/tables/*}:m"
      "utateRow:\001*\022\245\001\n\nMutateRows\022%.google.bigt"
      "able.v2.MutateRowsRequest\032&.google.bigta"
      "ble.v2.MutateRowsResponse\"F\202\323\344\223\002@\";/v2/{"
      "table_name=projects/*/instances/*/tables"
      "/*}:mutateRows:\001*0\001\022\277\001\n\021CheckAndMutateRo"
      "w\022,.google.bigtable.v2.CheckAndMutateRow"
      "Request\032-.google.bigtable.v2.CheckAndMut"
      "ateRowResponse\"M\202\323\344\223\002G\"B/v2/{table_name="
      "projects/*/instances/*/tables/*}:checkAn"
      "dMutateRow:\001*\022\303\001\n\022ReadModifyWriteRow\022-.g"
      "oogle.bigtable.v2.ReadModifyWriteRowRequ"
      "est\032..google.bigtable.v2.ReadModifyWrite"
      "RowResponse\"N\202\323\344\223\002H\"C/v2/{table_name=pro"
      "jects/*/instances/*/tables/*}:readModify"
      "WriteRow:\001*B\200\001\n\026com.google.bigtable.v2B\r"
      "BigtableProtoP\001Z:google.golang.org/genpr"
      "oto/googleapis/bigtable/v2;bigtable\252\002\030Go"
      "ogle.Cloud.Bigtable.V2b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2950);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/v2/bigtable.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fbigtable_2fv2_2fdata_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto
namespace google {
namespace bigtable {
namespace v2 {

// ===================================================================

void ReadRowsRequest::InitAsDefaultInstance() {
  ::google::bigtable::v2::_ReadRowsRequest_default_instance_._instance.get_mutable()->rows_ = const_cast< ::google::bigtable::v2::RowSet*>(
      ::google::bigtable::v2::RowSet::internal_default_instance());
  ::google::bigtable::v2::_ReadRowsRequest_default_instance_._instance.get_mutable()->filter_ = const_cast< ::google::bigtable::v2::RowFilter*>(
      ::google::bigtable::v2::RowFilter::internal_default_instance());
}
void ReadRowsRequest::clear_rows() {
  if (GetArenaNoVirtual() == NULL && rows_ != NULL) {
    delete rows_;
  }
  rows_ = NULL;
}
void ReadRowsRequest::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRowsRequest::kTableNameFieldNumber;
const int ReadRowsRequest::kRowsFieldNumber;
const int ReadRowsRequest::kFilterFieldNumber;
const int ReadRowsRequest::kRowsLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRowsRequest::ReadRowsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadRowsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.ReadRowsRequest)
}
ReadRowsRequest::ReadRowsRequest(const ReadRowsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  if (from.has_rows()) {
    rows_ = new ::google::bigtable::v2::RowSet(*from.rows_);
  } else {
    rows_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::google::bigtable::v2::RowFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  rows_limit_ = from.rows_limit_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.ReadRowsRequest)
}

void ReadRowsRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rows_limit_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(rows_limit_));
  _cached_size_ = 0;
}

ReadRowsRequest::~ReadRowsRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.ReadRowsRequest)
  SharedDtor();
}

void ReadRowsRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rows_;
  if (this != internal_default_instance()) delete filter_;
}

void ReadRowsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRowsRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRowsRequest& ReadRowsRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadRowsRequest();
  return *internal_default_instance();
}

ReadRowsRequest* ReadRowsRequest::New(::google::protobuf::Arena* arena) const {
  ReadRowsRequest* n = new ReadRowsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.ReadRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rows_ != NULL) {
    delete rows_;
  }
  rows_ = NULL;
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  rows_limit_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ReadRowsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.ReadRowsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v2.ReadRowsRequest.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v2.RowSet rows = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v2.RowFilter filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rows_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rows_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.ReadRowsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.ReadRowsRequest)
  return false;
#undef DO_
}

void ReadRowsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.ReadRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.ReadRowsRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // .google.bigtable.v2.RowSet rows = 2;
  if (this->has_rows()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rows_, output);
  }

  // .google.bigtable.v2.RowFilter filter = 3;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->filter_, output);
  }

  // int64 rows_limit = 4;
  if (this->rows_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->rows_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.ReadRowsRequest)
}

::google::protobuf::uint8* ReadRowsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.ReadRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.ReadRowsRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // .google.bigtable.v2.RowSet rows = 2;
  if (this->has_rows()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->rows_, deterministic, target);
  }

  // .google.bigtable.v2.RowFilter filter = 3;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->filter_, deterministic, target);
  }

  // int64 rows_limit = 4;
  if (this->rows_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->rows_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.ReadRowsRequest)
  return target;
}

size_t ReadRowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.ReadRowsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  // .google.bigtable.v2.RowSet rows = 2;
  if (this->has_rows()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rows_);
  }

  // .google.bigtable.v2.RowFilter filter = 3;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filter_);
  }

  // int64 rows_limit = 4;
  if (this->rows_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rows_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRowsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.ReadRowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRowsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRowsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.ReadRowsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.ReadRowsRequest)
    MergeFrom(*source);
  }
}

void ReadRowsRequest::MergeFrom(const ReadRowsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.ReadRowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  if (from.has_rows()) {
    mutable_rows()->::google::bigtable::v2::RowSet::MergeFrom(from.rows());
  }
  if (from.has_filter()) {
    mutable_filter()->::google::bigtable::v2::RowFilter::MergeFrom(from.filter());
  }
  if (from.rows_limit() != 0) {
    set_rows_limit(from.rows_limit());
  }
}

void ReadRowsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.ReadRowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRowsRequest::CopyFrom(const ReadRowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.ReadRowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRowsRequest::IsInitialized() const {
  return true;
}

void ReadRowsRequest::Swap(ReadRowsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRowsRequest::InternalSwap(ReadRowsRequest* other) {
  using std::swap;
  table_name_.Swap(&other->table_name_);
  swap(rows_, other->rows_);
  swap(filter_, other->filter_);
  swap(rows_limit_, other->rows_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRowsRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRowsResponse_CellChunk::InitAsDefaultInstance() {
  ::google::bigtable::v2::_ReadRowsResponse_CellChunk_default_instance_._instance.get_mutable()->family_name_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::bigtable::v2::_ReadRowsResponse_CellChunk_default_instance_._instance.get_mutable()->qualifier_ = const_cast< ::google::protobuf::BytesValue*>(
      ::google::protobuf::BytesValue::internal_default_instance());
  ::google::bigtable::v2::_ReadRowsResponse_CellChunk_default_instance_.reset_row_ = false;
  ::google::bigtable::v2::_ReadRowsResponse_CellChunk_default_instance_.commit_row_ = false;
}
void ReadRowsResponse_CellChunk::clear_family_name() {
  if (GetArenaNoVirtual() == NULL && family_name_ != NULL) {
    delete family_name_;
  }
  family_name_ = NULL;
}
void ReadRowsResponse_CellChunk::clear_qualifier() {
  if (GetArenaNoVirtual() == NULL && qualifier_ != NULL) {
    delete qualifier_;
  }
  qualifier_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRowsResponse_CellChunk::kRowKeyFieldNumber;
const int ReadRowsResponse_CellChunk::kFamilyNameFieldNumber;
const int ReadRowsResponse_CellChunk::kQualifierFieldNumber;
const int ReadRowsResponse_CellChunk::kTimestampMicrosFieldNumber;
const int ReadRowsResponse_CellChunk::kLabelsFieldNumber;
const int ReadRowsResponse_CellChunk::kValueFieldNumber;
const int ReadRowsResponse_CellChunk::kValueSizeFieldNumber;
const int ReadRowsResponse_CellChunk::kResetRowFieldNumber;
const int ReadRowsResponse_CellChunk::kCommitRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRowsResponse_CellChunk::ReadRowsResponse_CellChunk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadRowsResponse_CellChunk();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.ReadRowsResponse.CellChunk)
}
ReadRowsResponse_CellChunk::ReadRowsResponse_CellChunk(const ReadRowsResponse_CellChunk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      labels_(from.labels_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row_key().size() > 0) {
    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_family_name()) {
    family_name_ = new ::google::protobuf::StringValue(*from.family_name_);
  } else {
    family_name_ = NULL;
  }
  if (from.has_qualifier()) {
    qualifier_ = new ::google::protobuf::BytesValue(*from.qualifier_);
  } else {
    qualifier_ = NULL;
  }
  ::memcpy(&timestamp_micros_, &from.timestamp_micros_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_size_) -
    reinterpret_cast<char*>(&timestamp_micros_)) + sizeof(value_size_));
  clear_has_row_status();
  switch (from.row_status_case()) {
    case kResetRow: {
      set_reset_row(from.reset_row());
      break;
    }
    case kCommitRow: {
      set_commit_row(from.commit_row());
      break;
    }
    case ROW_STATUS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.ReadRowsResponse.CellChunk)
}

void ReadRowsResponse_CellChunk::SharedCtor() {
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&family_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_size_) -
      reinterpret_cast<char*>(&family_name_)) + sizeof(value_size_));
  clear_has_row_status();
  _cached_size_ = 0;
}

ReadRowsResponse_CellChunk::~ReadRowsResponse_CellChunk() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.ReadRowsResponse.CellChunk)
  SharedDtor();
}

void ReadRowsResponse_CellChunk::SharedDtor() {
  row_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete family_name_;
  if (this != internal_default_instance()) delete qualifier_;
  if (has_row_status()) {
    clear_row_status();
  }
}

void ReadRowsResponse_CellChunk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRowsResponse_CellChunk::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRowsResponse_CellChunk& ReadRowsResponse_CellChunk::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadRowsResponse_CellChunk();
  return *internal_default_instance();
}

ReadRowsResponse_CellChunk* ReadRowsResponse_CellChunk::New(::google::protobuf::Arena* arena) const {
  ReadRowsResponse_CellChunk* n = new ReadRowsResponse_CellChunk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRowsResponse_CellChunk::clear_row_status() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  switch (row_status_case()) {
    case kResetRow: {
      // No need to clear
      break;
    }
    case kCommitRow: {
      // No need to clear
      break;
    }
    case ROW_STATUS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ROW_STATUS_NOT_SET;
}


void ReadRowsResponse_CellChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  row_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && family_name_ != NULL) {
    delete family_name_;
  }
  family_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && qualifier_ != NULL) {
    delete qualifier_;
  }
  qualifier_ = NULL;
  ::memset(&timestamp_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_size_) -
      reinterpret_cast<char*>(&timestamp_micros_)) + sizeof(value_size_));
  clear_row_status();
  _internal_metadata_.Clear();
}

bool ReadRowsResponse_CellChunk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes row_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue family_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_family_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BytesValue qualifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_qualifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp_micros = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string labels = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->labels(this->labels_size() - 1).data(),
            static_cast<int>(this->labels(this->labels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v2.ReadRowsResponse.CellChunk.labels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reset_row = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_row_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &row_status_.reset_row_)));
          set_has_reset_row();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool commit_row = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          clear_row_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &row_status_.commit_row_)));
          set_has_commit_row();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.ReadRowsResponse.CellChunk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.ReadRowsResponse.CellChunk)
  return false;
#undef DO_
}

void ReadRowsResponse_CellChunk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->row_key(), output);
  }

  // .google.protobuf.StringValue family_name = 2;
  if (this->has_family_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->family_name_, output);
  }

  // .google.protobuf.BytesValue qualifier = 3;
  if (this->has_qualifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->qualifier_, output);
  }

  // int64 timestamp_micros = 4;
  if (this->timestamp_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timestamp_micros(), output);
  }

  // repeated string labels = 5;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.ReadRowsResponse.CellChunk.labels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->labels(i), output);
  }

  // bytes value = 6;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->value(), output);
  }

  // int32 value_size = 7;
  if (this->value_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->value_size(), output);
  }

  // bool reset_row = 8;
  if (has_reset_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->reset_row(), output);
  }

  // bool commit_row = 9;
  if (has_commit_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->commit_row(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.ReadRowsResponse.CellChunk)
}

::google::protobuf::uint8* ReadRowsResponse_CellChunk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->row_key(), target);
  }

  // .google.protobuf.StringValue family_name = 2;
  if (this->has_family_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->family_name_, deterministic, target);
  }

  // .google.protobuf.BytesValue qualifier = 3;
  if (this->has_qualifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->qualifier_, deterministic, target);
  }

  // int64 timestamp_micros = 4;
  if (this->timestamp_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timestamp_micros(), target);
  }

  // repeated string labels = 5;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.ReadRowsResponse.CellChunk.labels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->labels(i), target);
  }

  // bytes value = 6;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->value(), target);
  }

  // int32 value_size = 7;
  if (this->value_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->value_size(), target);
  }

  // bool reset_row = 8;
  if (has_reset_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->reset_row(), target);
  }

  // bool commit_row = 9;
  if (has_commit_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->commit_row(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.ReadRowsResponse.CellChunk)
  return target;
}

size_t ReadRowsResponse_CellChunk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string labels = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labels(i));
  }

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->row_key());
  }

  // bytes value = 6;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .google.protobuf.StringValue family_name = 2;
  if (this->has_family_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->family_name_);
  }

  // .google.protobuf.BytesValue qualifier = 3;
  if (this->has_qualifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->qualifier_);
  }

  // int64 timestamp_micros = 4;
  if (this->timestamp_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp_micros());
  }

  // int32 value_size = 7;
  if (this->value_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value_size());
  }

  switch (row_status_case()) {
    // bool reset_row = 8;
    case kResetRow: {
      total_size += 1 + 1;
      break;
    }
    // bool commit_row = 9;
    case kCommitRow: {
      total_size += 1 + 1;
      break;
    }
    case ROW_STATUS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRowsResponse_CellChunk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRowsResponse_CellChunk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRowsResponse_CellChunk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.ReadRowsResponse.CellChunk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.ReadRowsResponse.CellChunk)
    MergeFrom(*source);
  }
}

void ReadRowsResponse_CellChunk::MergeFrom(const ReadRowsResponse_CellChunk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.row_key().size() > 0) {

    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_family_name()) {
    mutable_family_name()->::google::protobuf::StringValue::MergeFrom(from.family_name());
  }
  if (from.has_qualifier()) {
    mutable_qualifier()->::google::protobuf::BytesValue::MergeFrom(from.qualifier());
  }
  if (from.timestamp_micros() != 0) {
    set_timestamp_micros(from.timestamp_micros());
  }
  if (from.value_size() != 0) {
    set_value_size(from.value_size());
  }
  switch (from.row_status_case()) {
    case kResetRow: {
      set_reset_row(from.reset_row());
      break;
    }
    case kCommitRow: {
      set_commit_row(from.commit_row());
      break;
    }
    case ROW_STATUS_NOT_SET: {
      break;
    }
  }
}

void ReadRowsResponse_CellChunk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRowsResponse_CellChunk::CopyFrom(const ReadRowsResponse_CellChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.ReadRowsResponse.CellChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRowsResponse_CellChunk::IsInitialized() const {
  return true;
}

void ReadRowsResponse_CellChunk::Swap(ReadRowsResponse_CellChunk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRowsResponse_CellChunk::InternalSwap(ReadRowsResponse_CellChunk* other) {
  using std::swap;
  labels_.InternalSwap(&other->labels_);
  row_key_.Swap(&other->row_key_);
  value_.Swap(&other->value_);
  swap(family_name_, other->family_name_);
  swap(qualifier_, other->qualifier_);
  swap(timestamp_micros_, other->timestamp_micros_);
  swap(value_size_, other->value_size_);
  swap(row_status_, other->row_status_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRowsResponse_CellChunk::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRowsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRowsResponse::kChunksFieldNumber;
const int ReadRowsResponse::kLastScannedRowKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRowsResponse::ReadRowsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadRowsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.ReadRowsResponse)
}
ReadRowsResponse::ReadRowsResponse(const ReadRowsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chunks_(from.chunks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_scanned_row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_scanned_row_key().size() > 0) {
    last_scanned_row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_scanned_row_key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.ReadRowsResponse)
}

void ReadRowsResponse::SharedCtor() {
  last_scanned_row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadRowsResponse::~ReadRowsResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.ReadRowsResponse)
  SharedDtor();
}

void ReadRowsResponse::SharedDtor() {
  last_scanned_row_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRowsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRowsResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRowsResponse& ReadRowsResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadRowsResponse();
  return *internal_default_instance();
}

ReadRowsResponse* ReadRowsResponse::New(::google::protobuf::Arena* arena) const {
  ReadRowsResponse* n = new ReadRowsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRowsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.ReadRowsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunks_.Clear();
  last_scanned_row_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReadRowsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.ReadRowsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.v2.ReadRowsResponse.CellChunk chunks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_chunks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes last_scanned_row_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_last_scanned_row_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.ReadRowsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.ReadRowsResponse)
  return false;
#undef DO_
}

void ReadRowsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.ReadRowsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v2.ReadRowsResponse.CellChunk chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chunks(static_cast<int>(i)), output);
  }

  // bytes last_scanned_row_key = 2;
  if (this->last_scanned_row_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->last_scanned_row_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.ReadRowsResponse)
}

::google::protobuf::uint8* ReadRowsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.ReadRowsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v2.ReadRowsResponse.CellChunk chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->chunks(static_cast<int>(i)), deterministic, target);
  }

  // bytes last_scanned_row_key = 2;
  if (this->last_scanned_row_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->last_scanned_row_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.ReadRowsResponse)
  return target;
}

size_t ReadRowsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.ReadRowsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v2.ReadRowsResponse.CellChunk chunks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->chunks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->chunks(static_cast<int>(i)));
    }
  }

  // bytes last_scanned_row_key = 2;
  if (this->last_scanned_row_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->last_scanned_row_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRowsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.ReadRowsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRowsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRowsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.ReadRowsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.ReadRowsResponse)
    MergeFrom(*source);
  }
}

void ReadRowsResponse::MergeFrom(const ReadRowsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.ReadRowsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunks_.MergeFrom(from.chunks_);
  if (from.last_scanned_row_key().size() > 0) {

    last_scanned_row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_scanned_row_key_);
  }
}

void ReadRowsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.ReadRowsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRowsResponse::CopyFrom(const ReadRowsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.ReadRowsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRowsResponse::IsInitialized() const {
  return true;
}

void ReadRowsResponse::Swap(ReadRowsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRowsResponse::InternalSwap(ReadRowsResponse* other) {
  using std::swap;
  chunks_.InternalSwap(&other->chunks_);
  last_scanned_row_key_.Swap(&other->last_scanned_row_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRowsResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SampleRowKeysRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampleRowKeysRequest::kTableNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampleRowKeysRequest::SampleRowKeysRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsSampleRowKeysRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.SampleRowKeysRequest)
}
SampleRowKeysRequest::SampleRowKeysRequest(const SampleRowKeysRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.SampleRowKeysRequest)
}

void SampleRowKeysRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SampleRowKeysRequest::~SampleRowKeysRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.SampleRowKeysRequest)
  SharedDtor();
}

void SampleRowKeysRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SampleRowKeysRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SampleRowKeysRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SampleRowKeysRequest& SampleRowKeysRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsSampleRowKeysRequest();
  return *internal_default_instance();
}

SampleRowKeysRequest* SampleRowKeysRequest::New(::google::protobuf::Arena* arena) const {
  SampleRowKeysRequest* n = new SampleRowKeysRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SampleRowKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.SampleRowKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SampleRowKeysRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.SampleRowKeysRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v2.SampleRowKeysRequest.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.SampleRowKeysRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.SampleRowKeysRequest)
  return false;
#undef DO_
}

void SampleRowKeysRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.SampleRowKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.SampleRowKeysRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.SampleRowKeysRequest)
}

::google::protobuf::uint8* SampleRowKeysRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.SampleRowKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.SampleRowKeysRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.SampleRowKeysRequest)
  return target;
}

size_t SampleRowKeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.SampleRowKeysRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SampleRowKeysRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.SampleRowKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SampleRowKeysRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SampleRowKeysRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.SampleRowKeysRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.SampleRowKeysRequest)
    MergeFrom(*source);
  }
}

void SampleRowKeysRequest::MergeFrom(const SampleRowKeysRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.SampleRowKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
}

void SampleRowKeysRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.SampleRowKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampleRowKeysRequest::CopyFrom(const SampleRowKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.SampleRowKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleRowKeysRequest::IsInitialized() const {
  return true;
}

void SampleRowKeysRequest::Swap(SampleRowKeysRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampleRowKeysRequest::InternalSwap(SampleRowKeysRequest* other) {
  using std::swap;
  table_name_.Swap(&other->table_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SampleRowKeysRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SampleRowKeysResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampleRowKeysResponse::kRowKeyFieldNumber;
const int SampleRowKeysResponse::kOffsetBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampleRowKeysResponse::SampleRowKeysResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsSampleRowKeysResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.SampleRowKeysResponse)
}
SampleRowKeysResponse::SampleRowKeysResponse(const SampleRowKeysResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row_key().size() > 0) {
    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  offset_bytes_ = from.offset_bytes_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.SampleRowKeysResponse)
}

void SampleRowKeysResponse::SharedCtor() {
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_bytes_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

SampleRowKeysResponse::~SampleRowKeysResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.SampleRowKeysResponse)
  SharedDtor();
}

void SampleRowKeysResponse::SharedDtor() {
  row_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SampleRowKeysResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SampleRowKeysResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SampleRowKeysResponse& SampleRowKeysResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsSampleRowKeysResponse();
  return *internal_default_instance();
}

SampleRowKeysResponse* SampleRowKeysResponse::New(::google::protobuf::Arena* arena) const {
  SampleRowKeysResponse* n = new SampleRowKeysResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SampleRowKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.SampleRowKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_bytes_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool SampleRowKeysResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.SampleRowKeysResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes row_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.SampleRowKeysResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.SampleRowKeysResponse)
  return false;
#undef DO_
}

void SampleRowKeysResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.SampleRowKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->row_key(), output);
  }

  // int64 offset_bytes = 2;
  if (this->offset_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->offset_bytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.SampleRowKeysResponse)
}

::google::protobuf::uint8* SampleRowKeysResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.SampleRowKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->row_key(), target);
  }

  // int64 offset_bytes = 2;
  if (this->offset_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->offset_bytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.SampleRowKeysResponse)
  return target;
}

size_t SampleRowKeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.SampleRowKeysResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->row_key());
  }

  // int64 offset_bytes = 2;
  if (this->offset_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SampleRowKeysResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.SampleRowKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SampleRowKeysResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SampleRowKeysResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.SampleRowKeysResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.SampleRowKeysResponse)
    MergeFrom(*source);
  }
}

void SampleRowKeysResponse::MergeFrom(const SampleRowKeysResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.SampleRowKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row_key().size() > 0) {

    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  if (from.offset_bytes() != 0) {
    set_offset_bytes(from.offset_bytes());
  }
}

void SampleRowKeysResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.SampleRowKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampleRowKeysResponse::CopyFrom(const SampleRowKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.SampleRowKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleRowKeysResponse::IsInitialized() const {
  return true;
}

void SampleRowKeysResponse::Swap(SampleRowKeysResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampleRowKeysResponse::InternalSwap(SampleRowKeysResponse* other) {
  using std::swap;
  row_key_.Swap(&other->row_key_);
  swap(offset_bytes_, other->offset_bytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SampleRowKeysResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutateRowRequest::InitAsDefaultInstance() {
}
void MutateRowRequest::clear_mutations() {
  mutations_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutateRowRequest::kTableNameFieldNumber;
const int MutateRowRequest::kRowKeyFieldNumber;
const int MutateRowRequest::kMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutateRowRequest::MutateRowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.MutateRowRequest)
}
MutateRowRequest::MutateRowRequest(const MutateRowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutations_(from.mutations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row_key().size() > 0) {
    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.MutateRowRequest)
}

void MutateRowRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MutateRowRequest::~MutateRowRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.MutateRowRequest)
  SharedDtor();
}

void MutateRowRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MutateRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutateRowRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutateRowRequest& MutateRowRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowRequest();
  return *internal_default_instance();
}

MutateRowRequest* MutateRowRequest::New(::google::protobuf::Arena* arena) const {
  MutateRowRequest* n = new MutateRowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutateRowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.MutateRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MutateRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.MutateRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v2.MutateRowRequest.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes row_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v2.Mutation mutations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.MutateRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.MutateRowRequest)
  return false;
#undef DO_
}

void MutateRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.MutateRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.MutateRowRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->row_key(), output);
  }

  // repeated .google.bigtable.v2.Mutation mutations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mutations(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.MutateRowRequest)
}

::google::protobuf::uint8* MutateRowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.MutateRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.MutateRowRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->row_key(), target);
  }

  // repeated .google.bigtable.v2.Mutation mutations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->mutations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.MutateRowRequest)
  return target;
}

size_t MutateRowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.MutateRowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v2.Mutation mutations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->row_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutateRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.MutateRowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MutateRowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutateRowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.MutateRowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.MutateRowRequest)
    MergeFrom(*source);
  }
}

void MutateRowRequest::MergeFrom(const MutateRowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.MutateRowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  if (from.row_key().size() > 0) {

    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
}

void MutateRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.MutateRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutateRowRequest::CopyFrom(const MutateRowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.MutateRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutateRowRequest::IsInitialized() const {
  return true;
}

void MutateRowRequest::Swap(MutateRowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutateRowRequest::InternalSwap(MutateRowRequest* other) {
  using std::swap;
  mutations_.InternalSwap(&other->mutations_);
  table_name_.Swap(&other->table_name_);
  row_key_.Swap(&other->row_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutateRowRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutateRowResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutateRowResponse::MutateRowResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.MutateRowResponse)
}
MutateRowResponse::MutateRowResponse(const MutateRowResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.MutateRowResponse)
}

void MutateRowResponse::SharedCtor() {
  _cached_size_ = 0;
}

MutateRowResponse::~MutateRowResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.MutateRowResponse)
  SharedDtor();
}

void MutateRowResponse::SharedDtor() {
}

void MutateRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutateRowResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutateRowResponse& MutateRowResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowResponse();
  return *internal_default_instance();
}

MutateRowResponse* MutateRowResponse::New(::google::protobuf::Arena* arena) const {
  MutateRowResponse* n = new MutateRowResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutateRowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.MutateRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MutateRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.MutateRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.MutateRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.MutateRowResponse)
  return false;
#undef DO_
}

void MutateRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.MutateRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.MutateRowResponse)
}

::google::protobuf::uint8* MutateRowResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.MutateRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.MutateRowResponse)
  return target;
}

size_t MutateRowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.MutateRowResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutateRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.MutateRowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MutateRowResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutateRowResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.MutateRowResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.MutateRowResponse)
    MergeFrom(*source);
  }
}

void MutateRowResponse::MergeFrom(const MutateRowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.MutateRowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MutateRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.MutateRowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutateRowResponse::CopyFrom(const MutateRowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.MutateRowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutateRowResponse::IsInitialized() const {
  return true;
}

void MutateRowResponse::Swap(MutateRowResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutateRowResponse::InternalSwap(MutateRowResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutateRowResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutateRowsRequest_Entry::InitAsDefaultInstance() {
}
void MutateRowsRequest_Entry::clear_mutations() {
  mutations_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutateRowsRequest_Entry::kRowKeyFieldNumber;
const int MutateRowsRequest_Entry::kMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutateRowsRequest_Entry::MutateRowsRequest_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsRequest_Entry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.MutateRowsRequest.Entry)
}
MutateRowsRequest_Entry::MutateRowsRequest_Entry(const MutateRowsRequest_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutations_(from.mutations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row_key().size() > 0) {
    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.MutateRowsRequest.Entry)
}

void MutateRowsRequest_Entry::SharedCtor() {
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MutateRowsRequest_Entry::~MutateRowsRequest_Entry() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.MutateRowsRequest.Entry)
  SharedDtor();
}

void MutateRowsRequest_Entry::SharedDtor() {
  row_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MutateRowsRequest_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutateRowsRequest_Entry::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutateRowsRequest_Entry& MutateRowsRequest_Entry::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsRequest_Entry();
  return *internal_default_instance();
}

MutateRowsRequest_Entry* MutateRowsRequest_Entry::New(::google::protobuf::Arena* arena) const {
  MutateRowsRequest_Entry* n = new MutateRowsRequest_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutateRowsRequest_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.MutateRowsRequest.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  row_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MutateRowsRequest_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.MutateRowsRequest.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes row_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v2.Mutation mutations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.MutateRowsRequest.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.MutateRowsRequest.Entry)
  return false;
#undef DO_
}

void MutateRowsRequest_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.MutateRowsRequest.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->row_key(), output);
  }

  // repeated .google.bigtable.v2.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mutations(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.MutateRowsRequest.Entry)
}

::google::protobuf::uint8* MutateRowsRequest_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.MutateRowsRequest.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->row_key(), target);
  }

  // repeated .google.bigtable.v2.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mutations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.MutateRowsRequest.Entry)
  return target;
}

size_t MutateRowsRequest_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.MutateRowsRequest.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v2.Mutation mutations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // bytes row_key = 1;
  if (this->row_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->row_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutateRowsRequest_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.MutateRowsRequest.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const MutateRowsRequest_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutateRowsRequest_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.MutateRowsRequest.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.MutateRowsRequest.Entry)
    MergeFrom(*source);
  }
}

void MutateRowsRequest_Entry::MergeFrom(const MutateRowsRequest_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.MutateRowsRequest.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.row_key().size() > 0) {

    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
}

void MutateRowsRequest_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.MutateRowsRequest.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutateRowsRequest_Entry::CopyFrom(const MutateRowsRequest_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.MutateRowsRequest.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutateRowsRequest_Entry::IsInitialized() const {
  return true;
}

void MutateRowsRequest_Entry::Swap(MutateRowsRequest_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutateRowsRequest_Entry::InternalSwap(MutateRowsRequest_Entry* other) {
  using std::swap;
  mutations_.InternalSwap(&other->mutations_);
  row_key_.Swap(&other->row_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutateRowsRequest_Entry::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutateRowsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutateRowsRequest::kTableNameFieldNumber;
const int MutateRowsRequest::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutateRowsRequest::MutateRowsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.MutateRowsRequest)
}
MutateRowsRequest::MutateRowsRequest(const MutateRowsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.MutateRowsRequest)
}

void MutateRowsRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MutateRowsRequest::~MutateRowsRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.MutateRowsRequest)
  SharedDtor();
}

void MutateRowsRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MutateRowsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutateRowsRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutateRowsRequest& MutateRowsRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsRequest();
  return *internal_default_instance();
}

MutateRowsRequest* MutateRowsRequest::New(::google::protobuf::Arena* arena) const {
  MutateRowsRequest* n = new MutateRowsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutateRowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.MutateRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MutateRowsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.MutateRowsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v2.MutateRowsRequest.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v2.MutateRowsRequest.Entry entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.MutateRowsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.MutateRowsRequest)
  return false;
#undef DO_
}

void MutateRowsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.MutateRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.MutateRowsRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .google.bigtable.v2.MutateRowsRequest.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.MutateRowsRequest)
}

::google::protobuf::uint8* MutateRowsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.MutateRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.MutateRowsRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .google.bigtable.v2.MutateRowsRequest.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.MutateRowsRequest)
  return target;
}

size_t MutateRowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.MutateRowsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v2.MutateRowsRequest.Entry entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutateRowsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.MutateRowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MutateRowsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutateRowsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.MutateRowsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.MutateRowsRequest)
    MergeFrom(*source);
  }
}

void MutateRowsRequest::MergeFrom(const MutateRowsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.MutateRowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
}

void MutateRowsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.MutateRowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutateRowsRequest::CopyFrom(const MutateRowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.MutateRowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutateRowsRequest::IsInitialized() const {
  return true;
}

void MutateRowsRequest::Swap(MutateRowsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutateRowsRequest::InternalSwap(MutateRowsRequest* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  table_name_.Swap(&other->table_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutateRowsRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutateRowsResponse_Entry::InitAsDefaultInstance() {
  ::google::bigtable::v2::_MutateRowsResponse_Entry_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void MutateRowsResponse_Entry::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutateRowsResponse_Entry::kIndexFieldNumber;
const int MutateRowsResponse_Entry::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutateRowsResponse_Entry::MutateRowsResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsResponse_Entry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.MutateRowsResponse.Entry)
}
MutateRowsResponse_Entry::MutateRowsResponse_Entry(const MutateRowsResponse_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.MutateRowsResponse.Entry)
}

void MutateRowsResponse_Entry::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&status_)) + sizeof(index_));
  _cached_size_ = 0;
}

MutateRowsResponse_Entry::~MutateRowsResponse_Entry() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.MutateRowsResponse.Entry)
  SharedDtor();
}

void MutateRowsResponse_Entry::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void MutateRowsResponse_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutateRowsResponse_Entry::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutateRowsResponse_Entry& MutateRowsResponse_Entry::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsResponse_Entry();
  return *internal_default_instance();
}

MutateRowsResponse_Entry* MutateRowsResponse_Entry::New(::google::protobuf::Arena* arena) const {
  MutateRowsResponse_Entry* n = new MutateRowsResponse_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutateRowsResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.MutateRowsResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  index_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MutateRowsResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.MutateRowsResponse.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.MutateRowsResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.MutateRowsResponse.Entry)
  return false;
#undef DO_
}

void MutateRowsResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.MutateRowsResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->index(), output);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->status_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.MutateRowsResponse.Entry)
}

::google::protobuf::uint8* MutateRowsResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.MutateRowsResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->index(), target);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->status_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.MutateRowsResponse.Entry)
  return target;
}

size_t MutateRowsResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.MutateRowsResponse.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  // int64 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutateRowsResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.MutateRowsResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const MutateRowsResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutateRowsResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.MutateRowsResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.MutateRowsResponse.Entry)
    MergeFrom(*source);
  }
}

void MutateRowsResponse_Entry::MergeFrom(const MutateRowsResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.MutateRowsResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void MutateRowsResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.MutateRowsResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutateRowsResponse_Entry::CopyFrom(const MutateRowsResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.MutateRowsResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutateRowsResponse_Entry::IsInitialized() const {
  return true;
}

void MutateRowsResponse_Entry::Swap(MutateRowsResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutateRowsResponse_Entry::InternalSwap(MutateRowsResponse_Entry* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutateRowsResponse_Entry::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutateRowsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutateRowsResponse::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutateRowsResponse::MutateRowsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.MutateRowsResponse)
}
MutateRowsResponse::MutateRowsResponse(const MutateRowsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.MutateRowsResponse)
}

void MutateRowsResponse::SharedCtor() {
  _cached_size_ = 0;
}

MutateRowsResponse::~MutateRowsResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.MutateRowsResponse)
  SharedDtor();
}

void MutateRowsResponse::SharedDtor() {
}

void MutateRowsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutateRowsResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutateRowsResponse& MutateRowsResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsMutateRowsResponse();
  return *internal_default_instance();
}

MutateRowsResponse* MutateRowsResponse::New(::google::protobuf::Arena* arena) const {
  MutateRowsResponse* n = new MutateRowsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutateRowsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.MutateRowsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool MutateRowsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.MutateRowsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.v2.MutateRowsResponse.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.MutateRowsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.MutateRowsResponse)
  return false;
#undef DO_
}

void MutateRowsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.MutateRowsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v2.MutateRowsResponse.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.MutateRowsResponse)
}

::google::protobuf::uint8* MutateRowsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.MutateRowsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v2.MutateRowsResponse.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.MutateRowsResponse)
  return target;
}

size_t MutateRowsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.MutateRowsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v2.MutateRowsResponse.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutateRowsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.MutateRowsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MutateRowsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutateRowsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.MutateRowsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.MutateRowsResponse)
    MergeFrom(*source);
  }
}

void MutateRowsResponse::MergeFrom(const MutateRowsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.MutateRowsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void MutateRowsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.MutateRowsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutateRowsResponse::CopyFrom(const MutateRowsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.MutateRowsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutateRowsResponse::IsInitialized() const {
  return true;
}

void MutateRowsResponse::Swap(MutateRowsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutateRowsResponse::InternalSwap(MutateRowsResponse* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutateRowsResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckAndMutateRowRequest::InitAsDefaultInstance() {
  ::google::bigtable::v2::_CheckAndMutateRowRequest_default_instance_._instance.get_mutable()->predicate_filter_ = const_cast< ::google::bigtable::v2::RowFilter*>(
      ::google::bigtable::v2::RowFilter::internal_default_instance());
}
void CheckAndMutateRowRequest::clear_predicate_filter() {
  if (GetArenaNoVirtual() == NULL && predicate_filter_ != NULL) {
    delete predicate_filter_;
  }
  predicate_filter_ = NULL;
}
void CheckAndMutateRowRequest::clear_true_mutations() {
  true_mutations_.Clear();
}
void CheckAndMutateRowRequest::clear_false_mutations() {
  false_mutations_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckAndMutateRowRequest::kTableNameFieldNumber;
const int CheckAndMutateRowRequest::kRowKeyFieldNumber;
const int CheckAndMutateRowRequest::kPredicateFilterFieldNumber;
const int CheckAndMutateRowRequest::kTrueMutationsFieldNumber;
const int CheckAndMutateRowRequest::kFalseMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckAndMutateRowRequest::CheckAndMutateRowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsCheckAndMutateRowRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.CheckAndMutateRowRequest)
}
CheckAndMutateRowRequest::CheckAndMutateRowRequest(const CheckAndMutateRowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      true_mutations_(from.true_mutations_),
      false_mutations_(from.false_mutations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row_key().size() > 0) {
    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  if (from.has_predicate_filter()) {
    predicate_filter_ = new ::google::bigtable::v2::RowFilter(*from.predicate_filter_);
  } else {
    predicate_filter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.CheckAndMutateRowRequest)
}

void CheckAndMutateRowRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  predicate_filter_ = NULL;
  _cached_size_ = 0;
}

CheckAndMutateRowRequest::~CheckAndMutateRowRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.CheckAndMutateRowRequest)
  SharedDtor();
}

void CheckAndMutateRowRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete predicate_filter_;
}

void CheckAndMutateRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckAndMutateRowRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckAndMutateRowRequest& CheckAndMutateRowRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsCheckAndMutateRowRequest();
  return *internal_default_instance();
}

CheckAndMutateRowRequest* CheckAndMutateRowRequest::New(::google::protobuf::Arena* arena) const {
  CheckAndMutateRowRequest* n = new CheckAndMutateRowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckAndMutateRowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.CheckAndMutateRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  true_mutations_.Clear();
  false_mutations_.Clear();
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && predicate_filter_ != NULL) {
    delete predicate_filter_;
  }
  predicate_filter_ = NULL;
  _internal_metadata_.Clear();
}

bool CheckAndMutateRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.CheckAndMutateRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v2.CheckAndMutateRowRequest.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes row_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v2.Mutation true_mutations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_true_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v2.Mutation false_mutations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_false_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v2.RowFilter predicate_filter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_predicate_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.CheckAndMutateRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.CheckAndMutateRowRequest)
  return false;
#undef DO_
}

void CheckAndMutateRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.CheckAndMutateRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.CheckAndMutateRowRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->row_key(), output);
  }

  // repeated .google.bigtable.v2.Mutation true_mutations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->true_mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->true_mutations(static_cast<int>(i)), output);
  }

  // repeated .google.bigtable.v2.Mutation false_mutations = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->false_mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->false_mutations(static_cast<int>(i)), output);
  }

  // .google.bigtable.v2.RowFilter predicate_filter = 6;
  if (this->has_predicate_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->predicate_filter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.CheckAndMutateRowRequest)
}

::google::protobuf::uint8* CheckAndMutateRowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.CheckAndMutateRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.CheckAndMutateRowRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->row_key(), target);
  }

  // repeated .google.bigtable.v2.Mutation true_mutations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->true_mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->true_mutations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.bigtable.v2.Mutation false_mutations = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->false_mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->false_mutations(static_cast<int>(i)), deterministic, target);
  }

  // .google.bigtable.v2.RowFilter predicate_filter = 6;
  if (this->has_predicate_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->predicate_filter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.CheckAndMutateRowRequest)
  return target;
}

size_t CheckAndMutateRowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.CheckAndMutateRowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v2.Mutation true_mutations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->true_mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->true_mutations(static_cast<int>(i)));
    }
  }

  // repeated .google.bigtable.v2.Mutation false_mutations = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->false_mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->false_mutations(static_cast<int>(i)));
    }
  }

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->row_key());
  }

  // .google.bigtable.v2.RowFilter predicate_filter = 6;
  if (this->has_predicate_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->predicate_filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckAndMutateRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.CheckAndMutateRowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckAndMutateRowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckAndMutateRowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.CheckAndMutateRowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.CheckAndMutateRowRequest)
    MergeFrom(*source);
  }
}

void CheckAndMutateRowRequest::MergeFrom(const CheckAndMutateRowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.CheckAndMutateRowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  true_mutations_.MergeFrom(from.true_mutations_);
  false_mutations_.MergeFrom(from.false_mutations_);
  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  if (from.row_key().size() > 0) {

    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  if (from.has_predicate_filter()) {
    mutable_predicate_filter()->::google::bigtable::v2::RowFilter::MergeFrom(from.predicate_filter());
  }
}

void CheckAndMutateRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.CheckAndMutateRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckAndMutateRowRequest::CopyFrom(const CheckAndMutateRowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.CheckAndMutateRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckAndMutateRowRequest::IsInitialized() const {
  return true;
}

void CheckAndMutateRowRequest::Swap(CheckAndMutateRowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckAndMutateRowRequest::InternalSwap(CheckAndMutateRowRequest* other) {
  using std::swap;
  true_mutations_.InternalSwap(&other->true_mutations_);
  false_mutations_.InternalSwap(&other->false_mutations_);
  table_name_.Swap(&other->table_name_);
  row_key_.Swap(&other->row_key_);
  swap(predicate_filter_, other->predicate_filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckAndMutateRowRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckAndMutateRowResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckAndMutateRowResponse::kPredicateMatchedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckAndMutateRowResponse::CheckAndMutateRowResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsCheckAndMutateRowResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.CheckAndMutateRowResponse)
}
CheckAndMutateRowResponse::CheckAndMutateRowResponse(const CheckAndMutateRowResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  predicate_matched_ = from.predicate_matched_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.CheckAndMutateRowResponse)
}

void CheckAndMutateRowResponse::SharedCtor() {
  predicate_matched_ = false;
  _cached_size_ = 0;
}

CheckAndMutateRowResponse::~CheckAndMutateRowResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.CheckAndMutateRowResponse)
  SharedDtor();
}

void CheckAndMutateRowResponse::SharedDtor() {
}

void CheckAndMutateRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckAndMutateRowResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckAndMutateRowResponse& CheckAndMutateRowResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsCheckAndMutateRowResponse();
  return *internal_default_instance();
}

CheckAndMutateRowResponse* CheckAndMutateRowResponse::New(::google::protobuf::Arena* arena) const {
  CheckAndMutateRowResponse* n = new CheckAndMutateRowResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckAndMutateRowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.CheckAndMutateRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  predicate_matched_ = false;
  _internal_metadata_.Clear();
}

bool CheckAndMutateRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.CheckAndMutateRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool predicate_matched = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &predicate_matched_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.CheckAndMutateRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.CheckAndMutateRowResponse)
  return false;
#undef DO_
}

void CheckAndMutateRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.CheckAndMutateRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool predicate_matched = 1;
  if (this->predicate_matched() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->predicate_matched(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.CheckAndMutateRowResponse)
}

::google::protobuf::uint8* CheckAndMutateRowResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.CheckAndMutateRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool predicate_matched = 1;
  if (this->predicate_matched() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->predicate_matched(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.CheckAndMutateRowResponse)
  return target;
}

size_t CheckAndMutateRowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.CheckAndMutateRowResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool predicate_matched = 1;
  if (this->predicate_matched() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckAndMutateRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.CheckAndMutateRowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckAndMutateRowResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckAndMutateRowResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.CheckAndMutateRowResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.CheckAndMutateRowResponse)
    MergeFrom(*source);
  }
}

void CheckAndMutateRowResponse::MergeFrom(const CheckAndMutateRowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.CheckAndMutateRowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.predicate_matched() != 0) {
    set_predicate_matched(from.predicate_matched());
  }
}

void CheckAndMutateRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.CheckAndMutateRowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckAndMutateRowResponse::CopyFrom(const CheckAndMutateRowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.CheckAndMutateRowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckAndMutateRowResponse::IsInitialized() const {
  return true;
}

void CheckAndMutateRowResponse::Swap(CheckAndMutateRowResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckAndMutateRowResponse::InternalSwap(CheckAndMutateRowResponse* other) {
  using std::swap;
  swap(predicate_matched_, other->predicate_matched_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckAndMutateRowResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadModifyWriteRowRequest::InitAsDefaultInstance() {
}
void ReadModifyWriteRowRequest::clear_rules() {
  rules_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadModifyWriteRowRequest::kTableNameFieldNumber;
const int ReadModifyWriteRowRequest::kRowKeyFieldNumber;
const int ReadModifyWriteRowRequest::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadModifyWriteRowRequest::ReadModifyWriteRowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadModifyWriteRowRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.ReadModifyWriteRowRequest)
}
ReadModifyWriteRowRequest::ReadModifyWriteRowRequest(const ReadModifyWriteRowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.row_key().size() > 0) {
    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.ReadModifyWriteRowRequest)
}

void ReadModifyWriteRowRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadModifyWriteRowRequest::~ReadModifyWriteRowRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.ReadModifyWriteRowRequest)
  SharedDtor();
}

void ReadModifyWriteRowRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadModifyWriteRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadModifyWriteRowRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadModifyWriteRowRequest& ReadModifyWriteRowRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadModifyWriteRowRequest();
  return *internal_default_instance();
}

ReadModifyWriteRowRequest* ReadModifyWriteRowRequest::New(::google::protobuf::Arena* arena) const {
  ReadModifyWriteRowRequest* n = new ReadModifyWriteRowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadModifyWriteRowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReadModifyWriteRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v2.ReadModifyWriteRowRequest.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes row_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.ReadModifyWriteRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.ReadModifyWriteRowRequest)
  return false;
#undef DO_
}

void ReadModifyWriteRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.ReadModifyWriteRowRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->row_key(), output);
  }

  // repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rules(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.ReadModifyWriteRowRequest)
}

::google::protobuf::uint8* ReadModifyWriteRowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v2.ReadModifyWriteRowRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->row_key(), target);
  }

  // repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->rules(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.ReadModifyWriteRowRequest)
  return target;
}

size_t ReadModifyWriteRowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  // bytes row_key = 2;
  if (this->row_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->row_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadModifyWriteRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadModifyWriteRowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadModifyWriteRowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.ReadModifyWriteRowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.ReadModifyWriteRowRequest)
    MergeFrom(*source);
  }
}

void ReadModifyWriteRowRequest::MergeFrom(const ReadModifyWriteRowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  if (from.row_key().size() > 0) {

    row_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_key_);
  }
}

void ReadModifyWriteRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadModifyWriteRowRequest::CopyFrom(const ReadModifyWriteRowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.ReadModifyWriteRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadModifyWriteRowRequest::IsInitialized() const {
  return true;
}

void ReadModifyWriteRowRequest::Swap(ReadModifyWriteRowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadModifyWriteRowRequest::InternalSwap(ReadModifyWriteRowRequest* other) {
  using std::swap;
  rules_.InternalSwap(&other->rules_);
  table_name_.Swap(&other->table_name_);
  row_key_.Swap(&other->row_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadModifyWriteRowRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadModifyWriteRowResponse::InitAsDefaultInstance() {
  ::google::bigtable::v2::_ReadModifyWriteRowResponse_default_instance_._instance.get_mutable()->row_ = const_cast< ::google::bigtable::v2::Row*>(
      ::google::bigtable::v2::Row::internal_default_instance());
}
void ReadModifyWriteRowResponse::clear_row() {
  if (GetArenaNoVirtual() == NULL && row_ != NULL) {
    delete row_;
  }
  row_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadModifyWriteRowResponse::kRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadModifyWriteRowResponse::ReadModifyWriteRowResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadModifyWriteRowResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v2.ReadModifyWriteRowResponse)
}
ReadModifyWriteRowResponse::ReadModifyWriteRowResponse(const ReadModifyWriteRowResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_row()) {
    row_ = new ::google::bigtable::v2::Row(*from.row_);
  } else {
    row_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v2.ReadModifyWriteRowResponse)
}

void ReadModifyWriteRowResponse::SharedCtor() {
  row_ = NULL;
  _cached_size_ = 0;
}

ReadModifyWriteRowResponse::~ReadModifyWriteRowResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.v2.ReadModifyWriteRowResponse)
  SharedDtor();
}

void ReadModifyWriteRowResponse::SharedDtor() {
  if (this != internal_default_instance()) delete row_;
}

void ReadModifyWriteRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadModifyWriteRowResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadModifyWriteRowResponse& ReadModifyWriteRowResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::InitDefaultsReadModifyWriteRowResponse();
  return *internal_default_instance();
}

ReadModifyWriteRowResponse* ReadModifyWriteRowResponse::New(::google::protobuf::Arena* arena) const {
  ReadModifyWriteRowResponse* n = new ReadModifyWriteRowResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadModifyWriteRowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && row_ != NULL) {
    delete row_;
  }
  row_ = NULL;
  _internal_metadata_.Clear();
}

bool ReadModifyWriteRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.v2.Row row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v2.ReadModifyWriteRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v2.ReadModifyWriteRowResponse)
  return false;
#undef DO_
}

void ReadModifyWriteRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v2.Row row = 1;
  if (this->has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->row_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v2.ReadModifyWriteRowResponse)
}

::google::protobuf::uint8* ReadModifyWriteRowResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v2.Row row = 1;
  if (this->has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->row_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v2.ReadModifyWriteRowResponse)
  return target;
}

size_t ReadModifyWriteRowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.bigtable.v2.Row row = 1;
  if (this->has_row()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->row_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadModifyWriteRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadModifyWriteRowResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadModifyWriteRowResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v2.ReadModifyWriteRowResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v2.ReadModifyWriteRowResponse)
    MergeFrom(*source);
  }
}

void ReadModifyWriteRowResponse::MergeFrom(const ReadModifyWriteRowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_row()) {
    mutable_row()->::google::bigtable::v2::Row::MergeFrom(from.row());
  }
}

void ReadModifyWriteRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadModifyWriteRowResponse::CopyFrom(const ReadModifyWriteRowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v2.ReadModifyWriteRowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadModifyWriteRowResponse::IsInitialized() const {
  return true;
}

void ReadModifyWriteRowResponse::Swap(ReadModifyWriteRowResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadModifyWriteRowResponse::InternalSwap(ReadModifyWriteRowResponse* other) {
  using std::swap;
  swap(row_, other->row_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadModifyWriteRowResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv2_2fbigtable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)
