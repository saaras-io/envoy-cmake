// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha1/embedded_assistant.proto

#include "google/assistant/embedded/v1alpha1/embedded_assistant.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace assistant {
namespace embedded {
namespace v1alpha1 {
class ConverseConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConverseConfig>
      _instance;
} _ConverseConfig_default_instance_;
class AudioInConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioInConfig>
      _instance;
} _AudioInConfig_default_instance_;
class AudioOutConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioOutConfig>
      _instance;
} _AudioOutConfig_default_instance_;
class ConverseStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConverseState>
      _instance;
} _ConverseState_default_instance_;
class AudioOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioOut>
      _instance;
} _AudioOut_default_instance_;
class ConverseResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConverseResult>
      _instance;
} _ConverseResult_default_instance_;
class ConverseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConverseRequest>
      _instance;
  const ::google::assistant::embedded::v1alpha1::ConverseConfig* config_;
  ::google::protobuf::internal::ArenaStringPtr audio_in_;
} _ConverseRequest_default_instance_;
class ConverseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConverseResponse>
      _instance;
  const ::google::rpc::Status* error_;
  int event_type_;
  const ::google::assistant::embedded::v1alpha1::AudioOut* audio_out_;
  const ::google::assistant::embedded::v1alpha1::ConverseResult* result_;
} _ConverseResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace embedded
}  // namespace assistant
}  // namespace google
namespace protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto {
void InitDefaultsConverseConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioInConfig();
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioOutConfig();
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseState();
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_ConverseConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::ConverseConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::ConverseConfig::InitAsDefaultInstance();
}

void InitDefaultsConverseConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConverseConfigImpl);
}

void InitDefaultsAudioInConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_AudioInConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::AudioInConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::AudioInConfig::InitAsDefaultInstance();
}

void InitDefaultsAudioInConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAudioInConfigImpl);
}

void InitDefaultsAudioOutConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_AudioOutConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::AudioOutConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::AudioOutConfig::InitAsDefaultInstance();
}

void InitDefaultsAudioOutConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAudioOutConfigImpl);
}

void InitDefaultsConverseStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_ConverseState_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::ConverseState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::ConverseState::InitAsDefaultInstance();
}

void InitDefaultsConverseState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConverseStateImpl);
}

void InitDefaultsAudioOutImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_AudioOut_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::AudioOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::AudioOut::InitAsDefaultInstance();
}

void InitDefaultsAudioOut() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAudioOutImpl);
}

void InitDefaultsConverseResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_ConverseResult_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::ConverseResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::ConverseResult::InitAsDefaultInstance();
}

void InitDefaultsConverseResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConverseResultImpl);
}

void InitDefaultsConverseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseConfig();
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_ConverseRequest_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::ConverseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::ConverseRequest::InitAsDefaultInstance();
}

void InitDefaultsConverseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConverseRequestImpl);
}

void InitDefaultsConverseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioOut();
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseResult();
  {
    void* ptr = &::google::assistant::embedded::v1alpha1::_ConverseResponse_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha1::ConverseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha1::ConverseResponse::InitAsDefaultInstance();
}

void InitDefaultsConverseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConverseResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseConfig, audio_in_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseConfig, audio_out_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseConfig, converse_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioInConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioInConfig, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioInConfig, sample_rate_hertz_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioOutConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioOutConfig, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioOutConfig, sample_rate_hertz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioOutConfig, volume_percentage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseState, conversation_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::AudioOut, audio_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResult, spoken_request_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResult, spoken_response_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResult, conversation_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResult, microphone_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResult, volume_percentage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::assistant::embedded::v1alpha1::ConverseRequestDefaultTypeInternal, config_),
  offsetof(::google::assistant::embedded::v1alpha1::ConverseRequestDefaultTypeInternal, audio_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseRequest, converse_request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::assistant::embedded::v1alpha1::ConverseResponseDefaultTypeInternal, error_),
  offsetof(::google::assistant::embedded::v1alpha1::ConverseResponseDefaultTypeInternal, event_type_),
  offsetof(::google::assistant::embedded::v1alpha1::ConverseResponseDefaultTypeInternal, audio_out_),
  offsetof(::google::assistant::embedded::v1alpha1::ConverseResponseDefaultTypeInternal, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha1::ConverseResponse, converse_response_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::assistant::embedded::v1alpha1::ConverseConfig)},
  { 8, -1, sizeof(::google::assistant::embedded::v1alpha1::AudioInConfig)},
  { 15, -1, sizeof(::google::assistant::embedded::v1alpha1::AudioOutConfig)},
  { 23, -1, sizeof(::google::assistant::embedded::v1alpha1::ConverseState)},
  { 29, -1, sizeof(::google::assistant::embedded::v1alpha1::AudioOut)},
  { 35, -1, sizeof(::google::assistant::embedded::v1alpha1::ConverseResult)},
  { 45, -1, sizeof(::google::assistant::embedded::v1alpha1::ConverseRequest)},
  { 53, -1, sizeof(::google::assistant::embedded::v1alpha1::ConverseResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_ConverseConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_AudioInConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_AudioOutConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_ConverseState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_AudioOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_ConverseResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_ConverseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha1::_ConverseResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/assistant/embedded/v1alpha1/embedded_assistant.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n;google/assistant/embedded/v1alpha1/emb"
      "edded_assistant.proto\022\"google.assistant."
      "embedded.v1alpha1\032\034google/api/annotation"
      "s.proto\032\027google/rpc/status.proto\"\365\001\n\016Con"
      "verseConfig\022J\n\017audio_in_config\030\001 \001(\01321.g"
      "oogle.assistant.embedded.v1alpha1.AudioI"
      "nConfig\022L\n\020audio_out_config\030\002 \001(\01322.goog"
      "le.assistant.embedded.v1alpha1.AudioOutC"
      "onfig\022I\n\016converse_state\030\003 \001(\01321.google.a"
      "ssistant.embedded.v1alpha1.ConverseState"
      "\"\266\001\n\rAudioInConfig\022L\n\010encoding\030\001 \001(\0162:.g"
      "oogle.assistant.embedded.v1alpha1.AudioI"
      "nConfig.Encoding\022\031\n\021sample_rate_hertz\030\002 "
      "\001(\005\"<\n\010Encoding\022\030\n\024ENCODING_UNSPECIFIED\020"
      "\000\022\014\n\010LINEAR16\020\001\022\010\n\004FLAC\020\002\"\343\001\n\016AudioOutCo"
      "nfig\022M\n\010encoding\030\001 \001(\0162;.google.assistan"
      "t.embedded.v1alpha1.AudioOutConfig.Encod"
      "ing\022\031\n\021sample_rate_hertz\030\002 \001(\005\022\031\n\021volume"
      "_percentage\030\003 \001(\005\"L\n\010Encoding\022\030\n\024ENCODIN"
      "G_UNSPECIFIED\020\000\022\014\n\010LINEAR16\020\001\022\007\n\003MP3\020\002\022\017"
      "\n\013OPUS_IN_OGG\020\003\"+\n\rConverseState\022\032\n\022conv"
      "ersation_state\030\001 \001(\014\"\036\n\010AudioOut\022\022\n\naudi"
      "o_data\030\001 \001(\014\"\275\002\n\016ConverseResult\022\033\n\023spoke"
      "n_request_text\030\001 \001(\t\022\034\n\024spoken_response_"
      "text\030\002 \001(\t\022\032\n\022conversation_state\030\003 \001(\014\022Z"
      "\n\017microphone_mode\030\004 \001(\0162A.google.assista"
      "nt.embedded.v1alpha1.ConverseResult.Micr"
      "ophoneMode\022\031\n\021volume_percentage\030\005 \001(\005\"]\n"
      "\016MicrophoneMode\022\037\n\033MICROPHONE_MODE_UNSPE"
      "CIFIED\020\000\022\024\n\020CLOSE_MICROPHONE\020\001\022\024\n\020DIALOG"
      "_FOLLOW_ON\020\002\"\177\n\017ConverseRequest\022D\n\006confi"
      "g\030\001 \001(\01322.google.assistant.embedded.v1al"
      "pha1.ConverseConfigH\000\022\022\n\010audio_in\030\002 \001(\014H"
      "\000B\022\n\020converse_request\"\352\002\n\020ConverseRespon"
      "se\022#\n\005error\030\001 \001(\0132\022.google.rpc.StatusH\000\022"
      "T\n\nevent_type\030\002 \001(\0162>.google.assistant.e"
      "mbedded.v1alpha1.ConverseResponse.EventT"
      "ypeH\000\022A\n\taudio_out\030\003 \001(\0132,.google.assist"
      "ant.embedded.v1alpha1.AudioOutH\000\022D\n\006resu"
      "lt\030\005 \001(\01322.google.assistant.embedded.v1a"
      "lpha1.ConverseResultH\000\"=\n\tEventType\022\032\n\026E"
      "VENT_TYPE_UNSPECIFIED\020\000\022\024\n\020END_OF_UTTERA"
      "NCE\020\001B\023\n\021converse_response2\216\001\n\021EmbeddedA"
      "ssistant\022y\n\010Converse\0223.google.assistant."
      "embedded.v1alpha1.ConverseRequest\0324.goog"
      "le.assistant.embedded.v1alpha1.ConverseR"
      "esponse(\0010\001B\206\001\n&com.google.assistant.emb"
      "edded.v1alpha1B\016AssistantProtoP\001ZJgoogle"
      ".golang.org/genproto/googleapis/assistan"
      "t/embedded/v1alpha1;embeddedb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1996);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/assistant/embedded/v1alpha1/embedded_assistant.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto
namespace google {
namespace assistant {
namespace embedded {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* AudioInConfig_Encoding_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[0];
}
bool AudioInConfig_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AudioInConfig_Encoding AudioInConfig::ENCODING_UNSPECIFIED;
const AudioInConfig_Encoding AudioInConfig::LINEAR16;
const AudioInConfig_Encoding AudioInConfig::FLAC;
const AudioInConfig_Encoding AudioInConfig::Encoding_MIN;
const AudioInConfig_Encoding AudioInConfig::Encoding_MAX;
const int AudioInConfig::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AudioOutConfig_Encoding_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[1];
}
bool AudioOutConfig_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AudioOutConfig_Encoding AudioOutConfig::ENCODING_UNSPECIFIED;
const AudioOutConfig_Encoding AudioOutConfig::LINEAR16;
const AudioOutConfig_Encoding AudioOutConfig::MP3;
const AudioOutConfig_Encoding AudioOutConfig::OPUS_IN_OGG;
const AudioOutConfig_Encoding AudioOutConfig::Encoding_MIN;
const AudioOutConfig_Encoding AudioOutConfig::Encoding_MAX;
const int AudioOutConfig::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ConverseResult_MicrophoneMode_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[2];
}
bool ConverseResult_MicrophoneMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConverseResult_MicrophoneMode ConverseResult::MICROPHONE_MODE_UNSPECIFIED;
const ConverseResult_MicrophoneMode ConverseResult::CLOSE_MICROPHONE;
const ConverseResult_MicrophoneMode ConverseResult::DIALOG_FOLLOW_ON;
const ConverseResult_MicrophoneMode ConverseResult::MicrophoneMode_MIN;
const ConverseResult_MicrophoneMode ConverseResult::MicrophoneMode_MAX;
const int ConverseResult::MicrophoneMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ConverseResponse_EventType_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[3];
}
bool ConverseResponse_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConverseResponse_EventType ConverseResponse::EVENT_TYPE_UNSPECIFIED;
const ConverseResponse_EventType ConverseResponse::END_OF_UTTERANCE;
const ConverseResponse_EventType ConverseResponse::EventType_MIN;
const ConverseResponse_EventType ConverseResponse::EventType_MAX;
const int ConverseResponse::EventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ConverseConfig::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha1::_ConverseConfig_default_instance_._instance.get_mutable()->audio_in_config_ = const_cast< ::google::assistant::embedded::v1alpha1::AudioInConfig*>(
      ::google::assistant::embedded::v1alpha1::AudioInConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha1::_ConverseConfig_default_instance_._instance.get_mutable()->audio_out_config_ = const_cast< ::google::assistant::embedded::v1alpha1::AudioOutConfig*>(
      ::google::assistant::embedded::v1alpha1::AudioOutConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha1::_ConverseConfig_default_instance_._instance.get_mutable()->converse_state_ = const_cast< ::google::assistant::embedded::v1alpha1::ConverseState*>(
      ::google::assistant::embedded::v1alpha1::ConverseState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConverseConfig::kAudioInConfigFieldNumber;
const int ConverseConfig::kAudioOutConfigFieldNumber;
const int ConverseConfig::kConverseStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConverseConfig::ConverseConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.ConverseConfig)
}
ConverseConfig::ConverseConfig(const ConverseConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_audio_in_config()) {
    audio_in_config_ = new ::google::assistant::embedded::v1alpha1::AudioInConfig(*from.audio_in_config_);
  } else {
    audio_in_config_ = NULL;
  }
  if (from.has_audio_out_config()) {
    audio_out_config_ = new ::google::assistant::embedded::v1alpha1::AudioOutConfig(*from.audio_out_config_);
  } else {
    audio_out_config_ = NULL;
  }
  if (from.has_converse_state()) {
    converse_state_ = new ::google::assistant::embedded::v1alpha1::ConverseState(*from.converse_state_);
  } else {
    converse_state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.ConverseConfig)
}

void ConverseConfig::SharedCtor() {
  ::memset(&audio_in_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&converse_state_) -
      reinterpret_cast<char*>(&audio_in_config_)) + sizeof(converse_state_));
  _cached_size_ = 0;
}

ConverseConfig::~ConverseConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.ConverseConfig)
  SharedDtor();
}

void ConverseConfig::SharedDtor() {
  if (this != internal_default_instance()) delete audio_in_config_;
  if (this != internal_default_instance()) delete audio_out_config_;
  if (this != internal_default_instance()) delete converse_state_;
}

void ConverseConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConverseConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConverseConfig& ConverseConfig::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseConfig();
  return *internal_default_instance();
}

ConverseConfig* ConverseConfig::New(::google::protobuf::Arena* arena) const {
  ConverseConfig* n = new ConverseConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConverseConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && audio_in_config_ != NULL) {
    delete audio_in_config_;
  }
  audio_in_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && audio_out_config_ != NULL) {
    delete audio_out_config_;
  }
  audio_out_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && converse_state_ != NULL) {
    delete converse_state_;
  }
  converse_state_ = NULL;
  _internal_metadata_.Clear();
}

bool ConverseConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha1.AudioInConfig audio_in_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_in_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha1.AudioOutConfig audio_out_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_out_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha1.ConverseState converse_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_converse_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.ConverseConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.ConverseConfig)
  return false;
#undef DO_
}

void ConverseConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.AudioInConfig audio_in_config = 1;
  if (this->has_audio_in_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->audio_in_config_, output);
  }

  // .google.assistant.embedded.v1alpha1.AudioOutConfig audio_out_config = 2;
  if (this->has_audio_out_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->audio_out_config_, output);
  }

  // .google.assistant.embedded.v1alpha1.ConverseState converse_state = 3;
  if (this->has_converse_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->converse_state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.ConverseConfig)
}

::google::protobuf::uint8* ConverseConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.AudioInConfig audio_in_config = 1;
  if (this->has_audio_in_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->audio_in_config_, deterministic, target);
  }

  // .google.assistant.embedded.v1alpha1.AudioOutConfig audio_out_config = 2;
  if (this->has_audio_out_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->audio_out_config_, deterministic, target);
  }

  // .google.assistant.embedded.v1alpha1.ConverseState converse_state = 3;
  if (this->has_converse_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->converse_state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.ConverseConfig)
  return target;
}

size_t ConverseConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.assistant.embedded.v1alpha1.AudioInConfig audio_in_config = 1;
  if (this->has_audio_in_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->audio_in_config_);
  }

  // .google.assistant.embedded.v1alpha1.AudioOutConfig audio_out_config = 2;
  if (this->has_audio_out_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->audio_out_config_);
  }

  // .google.assistant.embedded.v1alpha1.ConverseState converse_state = 3;
  if (this->has_converse_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->converse_state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConverseConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ConverseConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConverseConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.ConverseConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.ConverseConfig)
    MergeFrom(*source);
  }
}

void ConverseConfig::MergeFrom(const ConverseConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_audio_in_config()) {
    mutable_audio_in_config()->::google::assistant::embedded::v1alpha1::AudioInConfig::MergeFrom(from.audio_in_config());
  }
  if (from.has_audio_out_config()) {
    mutable_audio_out_config()->::google::assistant::embedded::v1alpha1::AudioOutConfig::MergeFrom(from.audio_out_config());
  }
  if (from.has_converse_state()) {
    mutable_converse_state()->::google::assistant::embedded::v1alpha1::ConverseState::MergeFrom(from.converse_state());
  }
}

void ConverseConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConverseConfig::CopyFrom(const ConverseConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.ConverseConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConverseConfig::IsInitialized() const {
  return true;
}

void ConverseConfig::Swap(ConverseConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConverseConfig::InternalSwap(ConverseConfig* other) {
  using std::swap;
  swap(audio_in_config_, other->audio_in_config_);
  swap(audio_out_config_, other->audio_out_config_);
  swap(converse_state_, other->converse_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConverseConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioInConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioInConfig::kEncodingFieldNumber;
const int AudioInConfig::kSampleRateHertzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioInConfig::AudioInConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioInConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.AudioInConfig)
}
AudioInConfig::AudioInConfig(const AudioInConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&encoding_, &from.encoding_,
    static_cast<size_t>(reinterpret_cast<char*>(&sample_rate_hertz_) -
    reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.AudioInConfig)
}

void AudioInConfig::SharedCtor() {
  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
  _cached_size_ = 0;
}

AudioInConfig::~AudioInConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.AudioInConfig)
  SharedDtor();
}

void AudioInConfig::SharedDtor() {
}

void AudioInConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AudioInConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioInConfig& AudioInConfig::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioInConfig();
  return *internal_default_instance();
}

AudioInConfig* AudioInConfig::New(::google::protobuf::Arena* arena) const {
  AudioInConfig* n = new AudioInConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AudioInConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
  _internal_metadata_.Clear();
}

bool AudioInConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha1.AudioInConfig.Encoding encoding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::google::assistant::embedded::v1alpha1::AudioInConfig_Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate_hertz = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.AudioInConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.AudioInConfig)
  return false;
#undef DO_
}

void AudioInConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.AudioInConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encoding(), output);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sample_rate_hertz(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.AudioInConfig)
}

::google::protobuf::uint8* AudioInConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.AudioInConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->encoding(), target);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sample_rate_hertz(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.AudioInConfig)
  return target;
}

size_t AudioInConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.assistant.embedded.v1alpha1.AudioInConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate_hertz());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AudioInConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioInConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioInConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.AudioInConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.AudioInConfig)
    MergeFrom(*source);
  }
}

void AudioInConfig::MergeFrom(const AudioInConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
}

void AudioInConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioInConfig::CopyFrom(const AudioInConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.AudioInConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioInConfig::IsInitialized() const {
  return true;
}

void AudioInConfig::Swap(AudioInConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioInConfig::InternalSwap(AudioInConfig* other) {
  using std::swap;
  swap(encoding_, other->encoding_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AudioInConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioOutConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioOutConfig::kEncodingFieldNumber;
const int AudioOutConfig::kSampleRateHertzFieldNumber;
const int AudioOutConfig::kVolumePercentageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioOutConfig::AudioOutConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioOutConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.AudioOutConfig)
}
AudioOutConfig::AudioOutConfig(const AudioOutConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&encoding_, &from.encoding_,
    static_cast<size_t>(reinterpret_cast<char*>(&volume_percentage_) -
    reinterpret_cast<char*>(&encoding_)) + sizeof(volume_percentage_));
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.AudioOutConfig)
}

void AudioOutConfig::SharedCtor() {
  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(volume_percentage_));
  _cached_size_ = 0;
}

AudioOutConfig::~AudioOutConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.AudioOutConfig)
  SharedDtor();
}

void AudioOutConfig::SharedDtor() {
}

void AudioOutConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AudioOutConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioOutConfig& AudioOutConfig::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioOutConfig();
  return *internal_default_instance();
}

AudioOutConfig* AudioOutConfig::New(::google::protobuf::Arena* arena) const {
  AudioOutConfig* n = new AudioOutConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AudioOutConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(volume_percentage_));
  _internal_metadata_.Clear();
}

bool AudioOutConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha1.AudioOutConfig.Encoding encoding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::google::assistant::embedded::v1alpha1::AudioOutConfig_Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate_hertz = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume_percentage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.AudioOutConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.AudioOutConfig)
  return false;
#undef DO_
}

void AudioOutConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.AudioOutConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encoding(), output);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sample_rate_hertz(), output);
  }

  // int32 volume_percentage = 3;
  if (this->volume_percentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->volume_percentage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.AudioOutConfig)
}

::google::protobuf::uint8* AudioOutConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.AudioOutConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->encoding(), target);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sample_rate_hertz(), target);
  }

  // int32 volume_percentage = 3;
  if (this->volume_percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->volume_percentage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.AudioOutConfig)
  return target;
}

size_t AudioOutConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.assistant.embedded.v1alpha1.AudioOutConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate_hertz());
  }

  // int32 volume_percentage = 3;
  if (this->volume_percentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume_percentage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AudioOutConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioOutConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioOutConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.AudioOutConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.AudioOutConfig)
    MergeFrom(*source);
  }
}

void AudioOutConfig::MergeFrom(const AudioOutConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
  if (from.volume_percentage() != 0) {
    set_volume_percentage(from.volume_percentage());
  }
}

void AudioOutConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioOutConfig::CopyFrom(const AudioOutConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.AudioOutConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioOutConfig::IsInitialized() const {
  return true;
}

void AudioOutConfig::Swap(AudioOutConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioOutConfig::InternalSwap(AudioOutConfig* other) {
  using std::swap;
  swap(encoding_, other->encoding_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  swap(volume_percentage_, other->volume_percentage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AudioOutConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConverseState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConverseState::kConversationStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConverseState::ConverseState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.ConverseState)
}
ConverseState::ConverseState(const ConverseState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conversation_state().size() > 0) {
    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.ConverseState)
}

void ConverseState::SharedCtor() {
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConverseState::~ConverseState() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.ConverseState)
  SharedDtor();
}

void ConverseState::SharedDtor() {
  conversation_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConverseState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConverseState::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConverseState& ConverseState::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseState();
  return *internal_default_instance();
}

ConverseState* ConverseState::New(::google::protobuf::Arena* arena) const {
  ConverseState* n = new ConverseState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConverseState::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.ConverseState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conversation_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConverseState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.ConverseState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes conversation_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conversation_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.ConverseState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.ConverseState)
  return false;
#undef DO_
}

void ConverseState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.ConverseState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes conversation_state = 1;
  if (this->conversation_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->conversation_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.ConverseState)
}

::google::protobuf::uint8* ConverseState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.ConverseState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes conversation_state = 1;
  if (this->conversation_state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->conversation_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.ConverseState)
  return target;
}

size_t ConverseState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.ConverseState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes conversation_state = 1;
  if (this->conversation_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conversation_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConverseState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.ConverseState)
  GOOGLE_DCHECK_NE(&from, this);
  const ConverseState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConverseState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.ConverseState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.ConverseState)
    MergeFrom(*source);
  }
}

void ConverseState::MergeFrom(const ConverseState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.ConverseState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conversation_state().size() > 0) {

    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
}

void ConverseState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.ConverseState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConverseState::CopyFrom(const ConverseState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.ConverseState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConverseState::IsInitialized() const {
  return true;
}

void ConverseState::Swap(ConverseState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConverseState::InternalSwap(ConverseState* other) {
  using std::swap;
  conversation_state_.Swap(&other->conversation_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConverseState::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioOut::kAudioDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioOut::AudioOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioOut();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.AudioOut)
}
AudioOut::AudioOut(const AudioOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_data().size() > 0) {
    audio_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_data_);
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.AudioOut)
}

void AudioOut::SharedCtor() {
  audio_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AudioOut::~AudioOut() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.AudioOut)
  SharedDtor();
}

void AudioOut::SharedDtor() {
  audio_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AudioOut::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AudioOut::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioOut& AudioOut::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsAudioOut();
  return *internal_default_instance();
}

AudioOut* AudioOut::New(::google::protobuf::Arena* arena) const {
  AudioOut* n = new AudioOut;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AudioOut::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.AudioOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AudioOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.AudioOut)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes audio_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audio_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.AudioOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.AudioOut)
  return false;
#undef DO_
}

void AudioOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.AudioOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->audio_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.AudioOut)
}

::google::protobuf::uint8* AudioOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.AudioOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->audio_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.AudioOut)
  return target;
}

size_t AudioOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.AudioOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->audio_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AudioOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.AudioOut)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.AudioOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.AudioOut)
    MergeFrom(*source);
  }
}

void AudioOut::MergeFrom(const AudioOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.AudioOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_data().size() > 0) {

    audio_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_data_);
  }
}

void AudioOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.AudioOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioOut::CopyFrom(const AudioOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.AudioOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioOut::IsInitialized() const {
  return true;
}

void AudioOut::Swap(AudioOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioOut::InternalSwap(AudioOut* other) {
  using std::swap;
  audio_data_.Swap(&other->audio_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AudioOut::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConverseResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConverseResult::kSpokenRequestTextFieldNumber;
const int ConverseResult::kSpokenResponseTextFieldNumber;
const int ConverseResult::kConversationStateFieldNumber;
const int ConverseResult::kMicrophoneModeFieldNumber;
const int ConverseResult::kVolumePercentageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConverseResult::ConverseResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.ConverseResult)
}
ConverseResult::ConverseResult(const ConverseResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spoken_request_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spoken_request_text().size() > 0) {
    spoken_request_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spoken_request_text_);
  }
  spoken_response_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spoken_response_text().size() > 0) {
    spoken_response_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spoken_response_text_);
  }
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conversation_state().size() > 0) {
    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
  ::memcpy(&microphone_mode_, &from.microphone_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&volume_percentage_) -
    reinterpret_cast<char*>(&microphone_mode_)) + sizeof(volume_percentage_));
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.ConverseResult)
}

void ConverseResult::SharedCtor() {
  spoken_request_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spoken_response_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&microphone_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&microphone_mode_)) + sizeof(volume_percentage_));
  _cached_size_ = 0;
}

ConverseResult::~ConverseResult() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.ConverseResult)
  SharedDtor();
}

void ConverseResult::SharedDtor() {
  spoken_request_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spoken_response_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConverseResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConverseResult::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConverseResult& ConverseResult::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseResult();
  return *internal_default_instance();
}

ConverseResult* ConverseResult::New(::google::protobuf::Arena* arena) const {
  ConverseResult* n = new ConverseResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConverseResult::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.ConverseResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spoken_request_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spoken_response_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&microphone_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&microphone_mode_)) + sizeof(volume_percentage_));
  _internal_metadata_.Clear();
}

bool ConverseResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.ConverseResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string spoken_request_text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spoken_request_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spoken_request_text().data(), static_cast<int>(this->spoken_request_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha1.ConverseResult.spoken_request_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spoken_response_text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spoken_response_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spoken_response_text().data(), static_cast<int>(this->spoken_response_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha1.ConverseResult.spoken_response_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes conversation_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conversation_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha1.ConverseResult.MicrophoneMode microphone_mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_microphone_mode(static_cast< ::google::assistant::embedded::v1alpha1::ConverseResult_MicrophoneMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume_percentage = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.ConverseResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.ConverseResult)
  return false;
#undef DO_
}

void ConverseResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.ConverseResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string spoken_request_text = 1;
  if (this->spoken_request_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spoken_request_text().data(), static_cast<int>(this->spoken_request_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha1.ConverseResult.spoken_request_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->spoken_request_text(), output);
  }

  // string spoken_response_text = 2;
  if (this->spoken_response_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spoken_response_text().data(), static_cast<int>(this->spoken_response_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha1.ConverseResult.spoken_response_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->spoken_response_text(), output);
  }

  // bytes conversation_state = 3;
  if (this->conversation_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->conversation_state(), output);
  }

  // .google.assistant.embedded.v1alpha1.ConverseResult.MicrophoneMode microphone_mode = 4;
  if (this->microphone_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->microphone_mode(), output);
  }

  // int32 volume_percentage = 5;
  if (this->volume_percentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->volume_percentage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.ConverseResult)
}

::google::protobuf::uint8* ConverseResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.ConverseResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string spoken_request_text = 1;
  if (this->spoken_request_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spoken_request_text().data(), static_cast<int>(this->spoken_request_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha1.ConverseResult.spoken_request_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->spoken_request_text(), target);
  }

  // string spoken_response_text = 2;
  if (this->spoken_response_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spoken_response_text().data(), static_cast<int>(this->spoken_response_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha1.ConverseResult.spoken_response_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->spoken_response_text(), target);
  }

  // bytes conversation_state = 3;
  if (this->conversation_state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->conversation_state(), target);
  }

  // .google.assistant.embedded.v1alpha1.ConverseResult.MicrophoneMode microphone_mode = 4;
  if (this->microphone_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->microphone_mode(), target);
  }

  // int32 volume_percentage = 5;
  if (this->volume_percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->volume_percentage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.ConverseResult)
  return target;
}

size_t ConverseResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.ConverseResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string spoken_request_text = 1;
  if (this->spoken_request_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spoken_request_text());
  }

  // string spoken_response_text = 2;
  if (this->spoken_response_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spoken_response_text());
  }

  // bytes conversation_state = 3;
  if (this->conversation_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conversation_state());
  }

  // .google.assistant.embedded.v1alpha1.ConverseResult.MicrophoneMode microphone_mode = 4;
  if (this->microphone_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->microphone_mode());
  }

  // int32 volume_percentage = 5;
  if (this->volume_percentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume_percentage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConverseResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.ConverseResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ConverseResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConverseResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.ConverseResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.ConverseResult)
    MergeFrom(*source);
  }
}

void ConverseResult::MergeFrom(const ConverseResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.ConverseResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spoken_request_text().size() > 0) {

    spoken_request_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spoken_request_text_);
  }
  if (from.spoken_response_text().size() > 0) {

    spoken_response_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spoken_response_text_);
  }
  if (from.conversation_state().size() > 0) {

    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
  if (from.microphone_mode() != 0) {
    set_microphone_mode(from.microphone_mode());
  }
  if (from.volume_percentage() != 0) {
    set_volume_percentage(from.volume_percentage());
  }
}

void ConverseResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.ConverseResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConverseResult::CopyFrom(const ConverseResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.ConverseResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConverseResult::IsInitialized() const {
  return true;
}

void ConverseResult::Swap(ConverseResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConverseResult::InternalSwap(ConverseResult* other) {
  using std::swap;
  spoken_request_text_.Swap(&other->spoken_request_text_);
  spoken_response_text_.Swap(&other->spoken_response_text_);
  conversation_state_.Swap(&other->conversation_state_);
  swap(microphone_mode_, other->microphone_mode_);
  swap(volume_percentage_, other->volume_percentage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConverseResult::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConverseRequest::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha1::_ConverseRequest_default_instance_.config_ = const_cast< ::google::assistant::embedded::v1alpha1::ConverseConfig*>(
      ::google::assistant::embedded::v1alpha1::ConverseConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha1::_ConverseRequest_default_instance_.audio_in_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConverseRequest::set_allocated_config(::google::assistant::embedded::v1alpha1::ConverseConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_converse_request();
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
    converse_request_.config_ = config;
  }
  // @@protoc_insertion_point(field_set_allocated:google.assistant.embedded.v1alpha1.ConverseRequest.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConverseRequest::kConfigFieldNumber;
const int ConverseRequest::kAudioInFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConverseRequest::ConverseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.ConverseRequest)
}
ConverseRequest::ConverseRequest(const ConverseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_converse_request();
  switch (from.converse_request_case()) {
    case kConfig: {
      mutable_config()->::google::assistant::embedded::v1alpha1::ConverseConfig::MergeFrom(from.config());
      break;
    }
    case kAudioIn: {
      set_audio_in(from.audio_in());
      break;
    }
    case CONVERSE_REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.ConverseRequest)
}

void ConverseRequest::SharedCtor() {
  clear_has_converse_request();
  _cached_size_ = 0;
}

ConverseRequest::~ConverseRequest() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.ConverseRequest)
  SharedDtor();
}

void ConverseRequest::SharedDtor() {
  if (has_converse_request()) {
    clear_converse_request();
  }
}

void ConverseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConverseRequest::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConverseRequest& ConverseRequest::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseRequest();
  return *internal_default_instance();
}

ConverseRequest* ConverseRequest::New(::google::protobuf::Arena* arena) const {
  ConverseRequest* n = new ConverseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConverseRequest::clear_converse_request() {
// @@protoc_insertion_point(one_of_clear_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  switch (converse_request_case()) {
    case kConfig: {
      delete converse_request_.config_;
      break;
    }
    case kAudioIn: {
      converse_request_.audio_in_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CONVERSE_REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONVERSE_REQUEST_NOT_SET;
}


void ConverseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_converse_request();
  _internal_metadata_.Clear();
}

bool ConverseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha1.ConverseConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes audio_in = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audio_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.ConverseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.ConverseRequest)
  return false;
#undef DO_
}

void ConverseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.ConverseConfig config = 1;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *converse_request_.config_, output);
  }

  // bytes audio_in = 2;
  if (has_audio_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->audio_in(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.ConverseRequest)
}

::google::protobuf::uint8* ConverseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha1.ConverseConfig config = 1;
  if (has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *converse_request_.config_, deterministic, target);
  }

  // bytes audio_in = 2;
  if (has_audio_in()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->audio_in(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.ConverseRequest)
  return target;
}

size_t ConverseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (converse_request_case()) {
    // .google.assistant.embedded.v1alpha1.ConverseConfig config = 1;
    case kConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *converse_request_.config_);
      break;
    }
    // bytes audio_in = 2;
    case kAudioIn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->audio_in());
      break;
    }
    case CONVERSE_REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConverseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConverseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConverseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.ConverseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.ConverseRequest)
    MergeFrom(*source);
  }
}

void ConverseRequest::MergeFrom(const ConverseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.converse_request_case()) {
    case kConfig: {
      mutable_config()->::google::assistant::embedded::v1alpha1::ConverseConfig::MergeFrom(from.config());
      break;
    }
    case kAudioIn: {
      set_audio_in(from.audio_in());
      break;
    }
    case CONVERSE_REQUEST_NOT_SET: {
      break;
    }
  }
}

void ConverseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConverseRequest::CopyFrom(const ConverseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.ConverseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConverseRequest::IsInitialized() const {
  return true;
}

void ConverseRequest::Swap(ConverseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConverseRequest::InternalSwap(ConverseRequest* other) {
  using std::swap;
  swap(converse_request_, other->converse_request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConverseRequest::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConverseResponse::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha1::_ConverseResponse_default_instance_.error_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
  ::google::assistant::embedded::v1alpha1::_ConverseResponse_default_instance_.event_type_ = 0;
  ::google::assistant::embedded::v1alpha1::_ConverseResponse_default_instance_.audio_out_ = const_cast< ::google::assistant::embedded::v1alpha1::AudioOut*>(
      ::google::assistant::embedded::v1alpha1::AudioOut::internal_default_instance());
  ::google::assistant::embedded::v1alpha1::_ConverseResponse_default_instance_.result_ = const_cast< ::google::assistant::embedded::v1alpha1::ConverseResult*>(
      ::google::assistant::embedded::v1alpha1::ConverseResult::internal_default_instance());
}
void ConverseResponse::set_allocated_error(::google::rpc::Status* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_converse_response();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    converse_response_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:google.assistant.embedded.v1alpha1.ConverseResponse.error)
}
void ConverseResponse::clear_error() {
  if (has_error()) {
    delete converse_response_.error_;
    clear_has_converse_response();
  }
}
void ConverseResponse::set_allocated_audio_out(::google::assistant::embedded::v1alpha1::AudioOut* audio_out) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_converse_response();
  if (audio_out) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      audio_out = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, audio_out, submessage_arena);
    }
    set_has_audio_out();
    converse_response_.audio_out_ = audio_out;
  }
  // @@protoc_insertion_point(field_set_allocated:google.assistant.embedded.v1alpha1.ConverseResponse.audio_out)
}
void ConverseResponse::set_allocated_result(::google::assistant::embedded::v1alpha1::ConverseResult* result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_converse_response();
  if (result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    set_has_result();
    converse_response_.result_ = result;
  }
  // @@protoc_insertion_point(field_set_allocated:google.assistant.embedded.v1alpha1.ConverseResponse.result)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConverseResponse::kErrorFieldNumber;
const int ConverseResponse::kEventTypeFieldNumber;
const int ConverseResponse::kAudioOutFieldNumber;
const int ConverseResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConverseResponse::ConverseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha1.ConverseResponse)
}
ConverseResponse::ConverseResponse(const ConverseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_converse_response();
  switch (from.converse_response_case()) {
    case kError: {
      mutable_error()->::google::rpc::Status::MergeFrom(from.error());
      break;
    }
    case kEventType: {
      set_event_type(from.event_type());
      break;
    }
    case kAudioOut: {
      mutable_audio_out()->::google::assistant::embedded::v1alpha1::AudioOut::MergeFrom(from.audio_out());
      break;
    }
    case kResult: {
      mutable_result()->::google::assistant::embedded::v1alpha1::ConverseResult::MergeFrom(from.result());
      break;
    }
    case CONVERSE_RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha1.ConverseResponse)
}

void ConverseResponse::SharedCtor() {
  clear_has_converse_response();
  _cached_size_ = 0;
}

ConverseResponse::~ConverseResponse() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha1.ConverseResponse)
  SharedDtor();
}

void ConverseResponse::SharedDtor() {
  if (has_converse_response()) {
    clear_converse_response();
  }
}

void ConverseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConverseResponse::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConverseResponse& ConverseResponse::default_instance() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::InitDefaultsConverseResponse();
  return *internal_default_instance();
}

ConverseResponse* ConverseResponse::New(::google::protobuf::Arena* arena) const {
  ConverseResponse* n = new ConverseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConverseResponse::clear_converse_response() {
// @@protoc_insertion_point(one_of_clear_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  switch (converse_response_case()) {
    case kError: {
      delete converse_response_.error_;
      break;
    }
    case kEventType: {
      // No need to clear
      break;
    }
    case kAudioOut: {
      delete converse_response_.audio_out_;
      break;
    }
    case kResult: {
      delete converse_response_.result_;
      break;
    }
    case CONVERSE_RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONVERSE_RESPONSE_NOT_SET;
}


void ConverseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_converse_response();
  _internal_metadata_.Clear();
}

bool ConverseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.rpc.Status error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha1.ConverseResponse.EventType event_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event_type(static_cast< ::google::assistant::embedded::v1alpha1::ConverseResponse_EventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha1.AudioOut audio_out = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha1.ConverseResult result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha1.ConverseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha1.ConverseResponse)
  return false;
#undef DO_
}

void ConverseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *converse_response_.error_, output);
  }

  // .google.assistant.embedded.v1alpha1.ConverseResponse.EventType event_type = 2;
  if (has_event_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->event_type(), output);
  }

  // .google.assistant.embedded.v1alpha1.AudioOut audio_out = 3;
  if (has_audio_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *converse_response_.audio_out_, output);
  }

  // .google.assistant.embedded.v1alpha1.ConverseResult result = 5;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *converse_response_.result_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha1.ConverseResponse)
}

::google::protobuf::uint8* ConverseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *converse_response_.error_, deterministic, target);
  }

  // .google.assistant.embedded.v1alpha1.ConverseResponse.EventType event_type = 2;
  if (has_event_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->event_type(), target);
  }

  // .google.assistant.embedded.v1alpha1.AudioOut audio_out = 3;
  if (has_audio_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *converse_response_.audio_out_, deterministic, target);
  }

  // .google.assistant.embedded.v1alpha1.ConverseResult result = 5;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *converse_response_.result_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha1.ConverseResponse)
  return target;
}

size_t ConverseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (converse_response_case()) {
    // .google.rpc.Status error = 1;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *converse_response_.error_);
      break;
    }
    // .google.assistant.embedded.v1alpha1.ConverseResponse.EventType event_type = 2;
    case kEventType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
      break;
    }
    // .google.assistant.embedded.v1alpha1.AudioOut audio_out = 3;
    case kAudioOut: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *converse_response_.audio_out_);
      break;
    }
    // .google.assistant.embedded.v1alpha1.ConverseResult result = 5;
    case kResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *converse_response_.result_);
      break;
    }
    case CONVERSE_RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConverseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConverseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConverseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha1.ConverseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha1.ConverseResponse)
    MergeFrom(*source);
  }
}

void ConverseResponse::MergeFrom(const ConverseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.converse_response_case()) {
    case kError: {
      mutable_error()->::google::rpc::Status::MergeFrom(from.error());
      break;
    }
    case kEventType: {
      set_event_type(from.event_type());
      break;
    }
    case kAudioOut: {
      mutable_audio_out()->::google::assistant::embedded::v1alpha1::AudioOut::MergeFrom(from.audio_out());
      break;
    }
    case kResult: {
      mutable_result()->::google::assistant::embedded::v1alpha1::ConverseResult::MergeFrom(from.result());
      break;
    }
    case CONVERSE_RESPONSE_NOT_SET: {
      break;
    }
  }
}

void ConverseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConverseResponse::CopyFrom(const ConverseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha1.ConverseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConverseResponse::IsInitialized() const {
  return true;
}

void ConverseResponse::Swap(ConverseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConverseResponse::InternalSwap(ConverseResponse* other) {
  using std::swap;
  swap(converse_response_, other->converse_response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConverseResponse::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha1_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace embedded
}  // namespace assistant
}  // namespace google

// @@protoc_insertion_point(global_scope)
