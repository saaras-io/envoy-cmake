// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudbuild/v1/cloudbuild.proto

#ifndef PROTOBUF_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto__INCLUDED
#define PROTOBUF_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[30];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsStorageSourceImpl();
void InitDefaultsStorageSource();
void InitDefaultsRepoSourceImpl();
void InitDefaultsRepoSource();
void InitDefaultsSourceImpl();
void InitDefaultsSource();
void InitDefaultsBuiltImageImpl();
void InitDefaultsBuiltImage();
void InitDefaultsBuildStepImpl();
void InitDefaultsBuildStep();
void InitDefaultsVolumeImpl();
void InitDefaultsVolume();
void InitDefaultsResultsImpl();
void InitDefaultsResults();
void InitDefaultsBuild_SubstitutionsEntry_DoNotUseImpl();
void InitDefaultsBuild_SubstitutionsEntry_DoNotUse();
void InitDefaultsBuildImpl();
void InitDefaultsBuild();
void InitDefaultsBuildOperationMetadataImpl();
void InitDefaultsBuildOperationMetadata();
void InitDefaultsSourceProvenance_FileHashesEntry_DoNotUseImpl();
void InitDefaultsSourceProvenance_FileHashesEntry_DoNotUse();
void InitDefaultsSourceProvenanceImpl();
void InitDefaultsSourceProvenance();
void InitDefaultsFileHashesImpl();
void InitDefaultsFileHashes();
void InitDefaultsHashImpl();
void InitDefaultsHash();
void InitDefaultsSecret_SecretEnvEntry_DoNotUseImpl();
void InitDefaultsSecret_SecretEnvEntry_DoNotUse();
void InitDefaultsSecretImpl();
void InitDefaultsSecret();
void InitDefaultsCreateBuildRequestImpl();
void InitDefaultsCreateBuildRequest();
void InitDefaultsGetBuildRequestImpl();
void InitDefaultsGetBuildRequest();
void InitDefaultsListBuildsRequestImpl();
void InitDefaultsListBuildsRequest();
void InitDefaultsListBuildsResponseImpl();
void InitDefaultsListBuildsResponse();
void InitDefaultsCancelBuildRequestImpl();
void InitDefaultsCancelBuildRequest();
void InitDefaultsBuildTrigger_SubstitutionsEntry_DoNotUseImpl();
void InitDefaultsBuildTrigger_SubstitutionsEntry_DoNotUse();
void InitDefaultsBuildTriggerImpl();
void InitDefaultsBuildTrigger();
void InitDefaultsCreateBuildTriggerRequestImpl();
void InitDefaultsCreateBuildTriggerRequest();
void InitDefaultsGetBuildTriggerRequestImpl();
void InitDefaultsGetBuildTriggerRequest();
void InitDefaultsListBuildTriggersRequestImpl();
void InitDefaultsListBuildTriggersRequest();
void InitDefaultsListBuildTriggersResponseImpl();
void InitDefaultsListBuildTriggersResponse();
void InitDefaultsDeleteBuildTriggerRequestImpl();
void InitDefaultsDeleteBuildTriggerRequest();
void InitDefaultsUpdateBuildTriggerRequestImpl();
void InitDefaultsUpdateBuildTriggerRequest();
void InitDefaultsBuildOptionsImpl();
void InitDefaultsBuildOptions();
inline void InitDefaults() {
  InitDefaultsStorageSource();
  InitDefaultsRepoSource();
  InitDefaultsSource();
  InitDefaultsBuiltImage();
  InitDefaultsBuildStep();
  InitDefaultsVolume();
  InitDefaultsResults();
  InitDefaultsBuild_SubstitutionsEntry_DoNotUse();
  InitDefaultsBuild();
  InitDefaultsBuildOperationMetadata();
  InitDefaultsSourceProvenance_FileHashesEntry_DoNotUse();
  InitDefaultsSourceProvenance();
  InitDefaultsFileHashes();
  InitDefaultsHash();
  InitDefaultsSecret_SecretEnvEntry_DoNotUse();
  InitDefaultsSecret();
  InitDefaultsCreateBuildRequest();
  InitDefaultsGetBuildRequest();
  InitDefaultsListBuildsRequest();
  InitDefaultsListBuildsResponse();
  InitDefaultsCancelBuildRequest();
  InitDefaultsBuildTrigger_SubstitutionsEntry_DoNotUse();
  InitDefaultsBuildTrigger();
  InitDefaultsCreateBuildTriggerRequest();
  InitDefaultsGetBuildTriggerRequest();
  InitDefaultsListBuildTriggersRequest();
  InitDefaultsListBuildTriggersResponse();
  InitDefaultsDeleteBuildTriggerRequest();
  InitDefaultsUpdateBuildTriggerRequest();
  InitDefaultsBuildOptions();
}
}  // namespace protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto
namespace google {
namespace devtools {
namespace cloudbuild {
namespace v1 {
class Build;
class BuildDefaultTypeInternal;
extern BuildDefaultTypeInternal _Build_default_instance_;
class BuildOperationMetadata;
class BuildOperationMetadataDefaultTypeInternal;
extern BuildOperationMetadataDefaultTypeInternal _BuildOperationMetadata_default_instance_;
class BuildOptions;
class BuildOptionsDefaultTypeInternal;
extern BuildOptionsDefaultTypeInternal _BuildOptions_default_instance_;
class BuildStep;
class BuildStepDefaultTypeInternal;
extern BuildStepDefaultTypeInternal _BuildStep_default_instance_;
class BuildTrigger;
class BuildTriggerDefaultTypeInternal;
extern BuildTriggerDefaultTypeInternal _BuildTrigger_default_instance_;
class BuildTrigger_SubstitutionsEntry_DoNotUse;
class BuildTrigger_SubstitutionsEntry_DoNotUseDefaultTypeInternal;
extern BuildTrigger_SubstitutionsEntry_DoNotUseDefaultTypeInternal _BuildTrigger_SubstitutionsEntry_DoNotUse_default_instance_;
class Build_SubstitutionsEntry_DoNotUse;
class Build_SubstitutionsEntry_DoNotUseDefaultTypeInternal;
extern Build_SubstitutionsEntry_DoNotUseDefaultTypeInternal _Build_SubstitutionsEntry_DoNotUse_default_instance_;
class BuiltImage;
class BuiltImageDefaultTypeInternal;
extern BuiltImageDefaultTypeInternal _BuiltImage_default_instance_;
class CancelBuildRequest;
class CancelBuildRequestDefaultTypeInternal;
extern CancelBuildRequestDefaultTypeInternal _CancelBuildRequest_default_instance_;
class CreateBuildRequest;
class CreateBuildRequestDefaultTypeInternal;
extern CreateBuildRequestDefaultTypeInternal _CreateBuildRequest_default_instance_;
class CreateBuildTriggerRequest;
class CreateBuildTriggerRequestDefaultTypeInternal;
extern CreateBuildTriggerRequestDefaultTypeInternal _CreateBuildTriggerRequest_default_instance_;
class DeleteBuildTriggerRequest;
class DeleteBuildTriggerRequestDefaultTypeInternal;
extern DeleteBuildTriggerRequestDefaultTypeInternal _DeleteBuildTriggerRequest_default_instance_;
class FileHashes;
class FileHashesDefaultTypeInternal;
extern FileHashesDefaultTypeInternal _FileHashes_default_instance_;
class GetBuildRequest;
class GetBuildRequestDefaultTypeInternal;
extern GetBuildRequestDefaultTypeInternal _GetBuildRequest_default_instance_;
class GetBuildTriggerRequest;
class GetBuildTriggerRequestDefaultTypeInternal;
extern GetBuildTriggerRequestDefaultTypeInternal _GetBuildTriggerRequest_default_instance_;
class Hash;
class HashDefaultTypeInternal;
extern HashDefaultTypeInternal _Hash_default_instance_;
class ListBuildTriggersRequest;
class ListBuildTriggersRequestDefaultTypeInternal;
extern ListBuildTriggersRequestDefaultTypeInternal _ListBuildTriggersRequest_default_instance_;
class ListBuildTriggersResponse;
class ListBuildTriggersResponseDefaultTypeInternal;
extern ListBuildTriggersResponseDefaultTypeInternal _ListBuildTriggersResponse_default_instance_;
class ListBuildsRequest;
class ListBuildsRequestDefaultTypeInternal;
extern ListBuildsRequestDefaultTypeInternal _ListBuildsRequest_default_instance_;
class ListBuildsResponse;
class ListBuildsResponseDefaultTypeInternal;
extern ListBuildsResponseDefaultTypeInternal _ListBuildsResponse_default_instance_;
class RepoSource;
class RepoSourceDefaultTypeInternal;
extern RepoSourceDefaultTypeInternal _RepoSource_default_instance_;
class Results;
class ResultsDefaultTypeInternal;
extern ResultsDefaultTypeInternal _Results_default_instance_;
class Secret;
class SecretDefaultTypeInternal;
extern SecretDefaultTypeInternal _Secret_default_instance_;
class Secret_SecretEnvEntry_DoNotUse;
class Secret_SecretEnvEntry_DoNotUseDefaultTypeInternal;
extern Secret_SecretEnvEntry_DoNotUseDefaultTypeInternal _Secret_SecretEnvEntry_DoNotUse_default_instance_;
class Source;
class SourceDefaultTypeInternal;
extern SourceDefaultTypeInternal _Source_default_instance_;
class SourceProvenance;
class SourceProvenanceDefaultTypeInternal;
extern SourceProvenanceDefaultTypeInternal _SourceProvenance_default_instance_;
class SourceProvenance_FileHashesEntry_DoNotUse;
class SourceProvenance_FileHashesEntry_DoNotUseDefaultTypeInternal;
extern SourceProvenance_FileHashesEntry_DoNotUseDefaultTypeInternal _SourceProvenance_FileHashesEntry_DoNotUse_default_instance_;
class StorageSource;
class StorageSourceDefaultTypeInternal;
extern StorageSourceDefaultTypeInternal _StorageSource_default_instance_;
class UpdateBuildTriggerRequest;
class UpdateBuildTriggerRequestDefaultTypeInternal;
extern UpdateBuildTriggerRequestDefaultTypeInternal _UpdateBuildTriggerRequest_default_instance_;
class Volume;
class VolumeDefaultTypeInternal;
extern VolumeDefaultTypeInternal _Volume_default_instance_;
}  // namespace v1
}  // namespace cloudbuild
}  // namespace devtools
}  // namespace google
namespace google {
namespace devtools {
namespace cloudbuild {
namespace v1 {

enum Build_Status {
  Build_Status_STATUS_UNKNOWN = 0,
  Build_Status_QUEUED = 1,
  Build_Status_WORKING = 2,
  Build_Status_SUCCESS = 3,
  Build_Status_FAILURE = 4,
  Build_Status_INTERNAL_ERROR = 5,
  Build_Status_TIMEOUT = 6,
  Build_Status_CANCELLED = 7,
  Build_Status_Build_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Build_Status_Build_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Build_Status_IsValid(int value);
const Build_Status Build_Status_Status_MIN = Build_Status_STATUS_UNKNOWN;
const Build_Status Build_Status_Status_MAX = Build_Status_CANCELLED;
const int Build_Status_Status_ARRAYSIZE = Build_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Build_Status_descriptor();
inline const ::std::string& Build_Status_Name(Build_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Build_Status_descriptor(), value);
}
inline bool Build_Status_Parse(
    const ::std::string& name, Build_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Build_Status>(
    Build_Status_descriptor(), name, value);
}
enum Hash_HashType {
  Hash_HashType_NONE = 0,
  Hash_HashType_SHA256 = 1,
  Hash_HashType_Hash_HashType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Hash_HashType_Hash_HashType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Hash_HashType_IsValid(int value);
const Hash_HashType Hash_HashType_HashType_MIN = Hash_HashType_NONE;
const Hash_HashType Hash_HashType_HashType_MAX = Hash_HashType_SHA256;
const int Hash_HashType_HashType_ARRAYSIZE = Hash_HashType_HashType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Hash_HashType_descriptor();
inline const ::std::string& Hash_HashType_Name(Hash_HashType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Hash_HashType_descriptor(), value);
}
inline bool Hash_HashType_Parse(
    const ::std::string& name, Hash_HashType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Hash_HashType>(
    Hash_HashType_descriptor(), name, value);
}
enum BuildOptions_VerifyOption {
  BuildOptions_VerifyOption_NOT_VERIFIED = 0,
  BuildOptions_VerifyOption_VERIFIED = 1,
  BuildOptions_VerifyOption_BuildOptions_VerifyOption_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BuildOptions_VerifyOption_BuildOptions_VerifyOption_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BuildOptions_VerifyOption_IsValid(int value);
const BuildOptions_VerifyOption BuildOptions_VerifyOption_VerifyOption_MIN = BuildOptions_VerifyOption_NOT_VERIFIED;
const BuildOptions_VerifyOption BuildOptions_VerifyOption_VerifyOption_MAX = BuildOptions_VerifyOption_VERIFIED;
const int BuildOptions_VerifyOption_VerifyOption_ARRAYSIZE = BuildOptions_VerifyOption_VerifyOption_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildOptions_VerifyOption_descriptor();
inline const ::std::string& BuildOptions_VerifyOption_Name(BuildOptions_VerifyOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildOptions_VerifyOption_descriptor(), value);
}
inline bool BuildOptions_VerifyOption_Parse(
    const ::std::string& name, BuildOptions_VerifyOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildOptions_VerifyOption>(
    BuildOptions_VerifyOption_descriptor(), name, value);
}
enum BuildOptions_SubstitutionOption {
  BuildOptions_SubstitutionOption_MUST_MATCH = 0,
  BuildOptions_SubstitutionOption_ALLOW_LOOSE = 1,
  BuildOptions_SubstitutionOption_BuildOptions_SubstitutionOption_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BuildOptions_SubstitutionOption_BuildOptions_SubstitutionOption_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BuildOptions_SubstitutionOption_IsValid(int value);
const BuildOptions_SubstitutionOption BuildOptions_SubstitutionOption_SubstitutionOption_MIN = BuildOptions_SubstitutionOption_MUST_MATCH;
const BuildOptions_SubstitutionOption BuildOptions_SubstitutionOption_SubstitutionOption_MAX = BuildOptions_SubstitutionOption_ALLOW_LOOSE;
const int BuildOptions_SubstitutionOption_SubstitutionOption_ARRAYSIZE = BuildOptions_SubstitutionOption_SubstitutionOption_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildOptions_SubstitutionOption_descriptor();
inline const ::std::string& BuildOptions_SubstitutionOption_Name(BuildOptions_SubstitutionOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildOptions_SubstitutionOption_descriptor(), value);
}
inline bool BuildOptions_SubstitutionOption_Parse(
    const ::std::string& name, BuildOptions_SubstitutionOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildOptions_SubstitutionOption>(
    BuildOptions_SubstitutionOption_descriptor(), name, value);
}
// ===================================================================

class StorageSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.StorageSource) */ {
 public:
  StorageSource();
  virtual ~StorageSource();

  StorageSource(const StorageSource& from);

  inline StorageSource& operator=(const StorageSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageSource(StorageSource&& from) noexcept
    : StorageSource() {
    *this = ::std::move(from);
  }

  inline StorageSource& operator=(StorageSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageSource* internal_default_instance() {
    return reinterpret_cast<const StorageSource*>(
               &_StorageSource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(StorageSource* other);
  friend void swap(StorageSource& a, StorageSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageSource* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageSource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageSource& from);
  void MergeFrom(const StorageSource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bucket = 1;
  void clear_bucket();
  static const int kBucketFieldNumber = 1;
  const ::std::string& bucket() const;
  void set_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket(::std::string&& value);
  #endif
  void set_bucket(const char* value);
  void set_bucket(const char* value, size_t size);
  ::std::string* mutable_bucket();
  ::std::string* release_bucket();
  void set_allocated_bucket(::std::string* bucket);

  // string object = 2;
  void clear_object();
  static const int kObjectFieldNumber = 2;
  const ::std::string& object() const;
  void set_object(const ::std::string& value);
  #if LANG_CXX11
  void set_object(::std::string&& value);
  #endif
  void set_object(const char* value);
  void set_object(const char* value, size_t size);
  ::std::string* mutable_object();
  ::std::string* release_object();
  void set_allocated_object(::std::string* object);

  // int64 generation = 3;
  void clear_generation();
  static const int kGenerationFieldNumber = 3;
  ::google::protobuf::int64 generation() const;
  void set_generation(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.StorageSource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bucket_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  ::google::protobuf::int64 generation_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsStorageSourceImpl();
};
// -------------------------------------------------------------------

class RepoSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.RepoSource) */ {
 public:
  RepoSource();
  virtual ~RepoSource();

  RepoSource(const RepoSource& from);

  inline RepoSource& operator=(const RepoSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RepoSource(RepoSource&& from) noexcept
    : RepoSource() {
    *this = ::std::move(from);
  }

  inline RepoSource& operator=(RepoSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RepoSource& default_instance();

  enum RevisionCase {
    kBranchName = 3,
    kTagName = 4,
    kCommitSha = 5,
    REVISION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RepoSource* internal_default_instance() {
    return reinterpret_cast<const RepoSource*>(
               &_RepoSource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RepoSource* other);
  friend void swap(RepoSource& a, RepoSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RepoSource* New() const PROTOBUF_FINAL { return New(NULL); }

  RepoSource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RepoSource& from);
  void MergeFrom(const RepoSource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RepoSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string repo_name = 2;
  void clear_repo_name();
  static const int kRepoNameFieldNumber = 2;
  const ::std::string& repo_name() const;
  void set_repo_name(const ::std::string& value);
  #if LANG_CXX11
  void set_repo_name(::std::string&& value);
  #endif
  void set_repo_name(const char* value);
  void set_repo_name(const char* value, size_t size);
  ::std::string* mutable_repo_name();
  ::std::string* release_repo_name();
  void set_allocated_repo_name(::std::string* repo_name);

  // string branch_name = 3;
  private:
  bool has_branch_name() const;
  public:
  void clear_branch_name();
  static const int kBranchNameFieldNumber = 3;
  const ::std::string& branch_name() const;
  void set_branch_name(const ::std::string& value);
  #if LANG_CXX11
  void set_branch_name(::std::string&& value);
  #endif
  void set_branch_name(const char* value);
  void set_branch_name(const char* value, size_t size);
  ::std::string* mutable_branch_name();
  ::std::string* release_branch_name();
  void set_allocated_branch_name(::std::string* branch_name);

  // string tag_name = 4;
  private:
  bool has_tag_name() const;
  public:
  void clear_tag_name();
  static const int kTagNameFieldNumber = 4;
  const ::std::string& tag_name() const;
  void set_tag_name(const ::std::string& value);
  #if LANG_CXX11
  void set_tag_name(::std::string&& value);
  #endif
  void set_tag_name(const char* value);
  void set_tag_name(const char* value, size_t size);
  ::std::string* mutable_tag_name();
  ::std::string* release_tag_name();
  void set_allocated_tag_name(::std::string* tag_name);

  // string commit_sha = 5;
  private:
  bool has_commit_sha() const;
  public:
  void clear_commit_sha();
  static const int kCommitShaFieldNumber = 5;
  const ::std::string& commit_sha() const;
  void set_commit_sha(const ::std::string& value);
  #if LANG_CXX11
  void set_commit_sha(::std::string&& value);
  #endif
  void set_commit_sha(const char* value);
  void set_commit_sha(const char* value, size_t size);
  ::std::string* mutable_commit_sha();
  ::std::string* release_commit_sha();
  void set_allocated_commit_sha(::std::string* commit_sha);

  RevisionCase revision_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.RepoSource)
 private:
  void set_has_branch_name();
  void set_has_tag_name();
  void set_has_commit_sha();

  inline bool has_revision() const;
  void clear_revision();
  inline void clear_has_revision();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr repo_name_;
  union RevisionUnion {
    RevisionUnion() {}
    ::google::protobuf::internal::ArenaStringPtr branch_name_;
    ::google::protobuf::internal::ArenaStringPtr tag_name_;
    ::google::protobuf::internal::ArenaStringPtr commit_sha_;
  } revision_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsRepoSourceImpl();
};
// -------------------------------------------------------------------

class Source : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.Source) */ {
 public:
  Source();
  virtual ~Source();

  Source(const Source& from);

  inline Source& operator=(const Source& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Source(Source&& from) noexcept
    : Source() {
    *this = ::std::move(from);
  }

  inline Source& operator=(Source&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Source& default_instance();

  enum SourceCase {
    kStorageSource = 2,
    kRepoSource = 3,
    SOURCE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Source* internal_default_instance() {
    return reinterpret_cast<const Source*>(
               &_Source_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Source* other);
  friend void swap(Source& a, Source& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Source* New() const PROTOBUF_FINAL { return New(NULL); }

  Source* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Source& from);
  void MergeFrom(const Source& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Source* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
  bool has_storage_source() const;
  void clear_storage_source();
  static const int kStorageSourceFieldNumber = 2;
  const ::google::devtools::cloudbuild::v1::StorageSource& storage_source() const;
  ::google::devtools::cloudbuild::v1::StorageSource* release_storage_source();
  ::google::devtools::cloudbuild::v1::StorageSource* mutable_storage_source();
  void set_allocated_storage_source(::google::devtools::cloudbuild::v1::StorageSource* storage_source);

  // .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
  bool has_repo_source() const;
  void clear_repo_source();
  static const int kRepoSourceFieldNumber = 3;
  const ::google::devtools::cloudbuild::v1::RepoSource& repo_source() const;
  ::google::devtools::cloudbuild::v1::RepoSource* release_repo_source();
  ::google::devtools::cloudbuild::v1::RepoSource* mutable_repo_source();
  void set_allocated_repo_source(::google::devtools::cloudbuild::v1::RepoSource* repo_source);

  SourceCase source_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Source)
 private:
  void set_has_storage_source();
  void set_has_repo_source();

  inline bool has_source() const;
  void clear_source();
  inline void clear_has_source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union SourceUnion {
    SourceUnion() {}
    ::google::devtools::cloudbuild::v1::StorageSource* storage_source_;
    ::google::devtools::cloudbuild::v1::RepoSource* repo_source_;
  } source_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsSourceImpl();
};
// -------------------------------------------------------------------

class BuiltImage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.BuiltImage) */ {
 public:
  BuiltImage();
  virtual ~BuiltImage();

  BuiltImage(const BuiltImage& from);

  inline BuiltImage& operator=(const BuiltImage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuiltImage(BuiltImage&& from) noexcept
    : BuiltImage() {
    *this = ::std::move(from);
  }

  inline BuiltImage& operator=(BuiltImage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuiltImage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuiltImage* internal_default_instance() {
    return reinterpret_cast<const BuiltImage*>(
               &_BuiltImage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(BuiltImage* other);
  friend void swap(BuiltImage& a, BuiltImage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuiltImage* New() const PROTOBUF_FINAL { return New(NULL); }

  BuiltImage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuiltImage& from);
  void MergeFrom(const BuiltImage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuiltImage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string digest = 3;
  void clear_digest();
  static const int kDigestFieldNumber = 3;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const char* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.BuiltImage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsBuiltImageImpl();
};
// -------------------------------------------------------------------

class BuildStep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.BuildStep) */ {
 public:
  BuildStep();
  virtual ~BuildStep();

  BuildStep(const BuildStep& from);

  inline BuildStep& operator=(const BuildStep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildStep(BuildStep&& from) noexcept
    : BuildStep() {
    *this = ::std::move(from);
  }

  inline BuildStep& operator=(BuildStep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildStep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildStep* internal_default_instance() {
    return reinterpret_cast<const BuildStep*>(
               &_BuildStep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(BuildStep* other);
  friend void swap(BuildStep& a, BuildStep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildStep* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildStep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildStep& from);
  void MergeFrom(const BuildStep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildStep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string env = 2;
  int env_size() const;
  void clear_env();
  static const int kEnvFieldNumber = 2;
  const ::std::string& env(int index) const;
  ::std::string* mutable_env(int index);
  void set_env(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_env(int index, ::std::string&& value);
  #endif
  void set_env(int index, const char* value);
  void set_env(int index, const char* value, size_t size);
  ::std::string* add_env();
  void add_env(const ::std::string& value);
  #if LANG_CXX11
  void add_env(::std::string&& value);
  #endif
  void add_env(const char* value);
  void add_env(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& env() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_env();

  // repeated string args = 3;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 3;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_args(int index, ::std::string&& value);
  #endif
  void set_args(int index, const char* value);
  void set_args(int index, const char* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  #if LANG_CXX11
  void add_args(::std::string&& value);
  #endif
  void add_args(const char* value);
  void add_args(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // repeated string wait_for = 6;
  int wait_for_size() const;
  void clear_wait_for();
  static const int kWaitForFieldNumber = 6;
  const ::std::string& wait_for(int index) const;
  ::std::string* mutable_wait_for(int index);
  void set_wait_for(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_wait_for(int index, ::std::string&& value);
  #endif
  void set_wait_for(int index, const char* value);
  void set_wait_for(int index, const char* value, size_t size);
  ::std::string* add_wait_for();
  void add_wait_for(const ::std::string& value);
  #if LANG_CXX11
  void add_wait_for(::std::string&& value);
  #endif
  void add_wait_for(const char* value);
  void add_wait_for(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& wait_for() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_wait_for();

  // repeated string secret_env = 8;
  int secret_env_size() const;
  void clear_secret_env();
  static const int kSecretEnvFieldNumber = 8;
  const ::std::string& secret_env(int index) const;
  ::std::string* mutable_secret_env(int index);
  void set_secret_env(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_secret_env(int index, ::std::string&& value);
  #endif
  void set_secret_env(int index, const char* value);
  void set_secret_env(int index, const char* value, size_t size);
  ::std::string* add_secret_env();
  void add_secret_env(const ::std::string& value);
  #if LANG_CXX11
  void add_secret_env(::std::string&& value);
  #endif
  void add_secret_env(const char* value);
  void add_secret_env(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& secret_env() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_secret_env();

  // repeated .google.devtools.cloudbuild.v1.Volume volumes = 9;
  int volumes_size() const;
  void clear_volumes();
  static const int kVolumesFieldNumber = 9;
  const ::google::devtools::cloudbuild::v1::Volume& volumes(int index) const;
  ::google::devtools::cloudbuild::v1::Volume* mutable_volumes(int index);
  ::google::devtools::cloudbuild::v1::Volume* add_volumes();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Volume >*
      mutable_volumes();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Volume >&
      volumes() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string dir = 4;
  void clear_dir();
  static const int kDirFieldNumber = 4;
  const ::std::string& dir() const;
  void set_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_dir(::std::string&& value);
  #endif
  void set_dir(const char* value);
  void set_dir(const char* value, size_t size);
  ::std::string* mutable_dir();
  ::std::string* release_dir();
  void set_allocated_dir(::std::string* dir);

  // string id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string entrypoint = 7;
  void clear_entrypoint();
  static const int kEntrypointFieldNumber = 7;
  const ::std::string& entrypoint() const;
  void set_entrypoint(const ::std::string& value);
  #if LANG_CXX11
  void set_entrypoint(::std::string&& value);
  #endif
  void set_entrypoint(const char* value);
  void set_entrypoint(const char* value, size_t size);
  ::std::string* mutable_entrypoint();
  ::std::string* release_entrypoint();
  void set_allocated_entrypoint(::std::string* entrypoint);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.BuildStep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> env_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  ::google::protobuf::RepeatedPtrField< ::std::string> wait_for_;
  ::google::protobuf::RepeatedPtrField< ::std::string> secret_env_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Volume > volumes_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr dir_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr entrypoint_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsBuildStepImpl();
};
// -------------------------------------------------------------------

class Volume : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.Volume) */ {
 public:
  Volume();
  virtual ~Volume();

  Volume(const Volume& from);

  inline Volume& operator=(const Volume& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Volume(Volume&& from) noexcept
    : Volume() {
    *this = ::std::move(from);
  }

  inline Volume& operator=(Volume&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Volume& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Volume* internal_default_instance() {
    return reinterpret_cast<const Volume*>(
               &_Volume_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Volume* other);
  friend void swap(Volume& a, Volume& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Volume* New() const PROTOBUF_FINAL { return New(NULL); }

  Volume* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Volume& from);
  void MergeFrom(const Volume& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Volume* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Volume)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsVolumeImpl();
};
// -------------------------------------------------------------------

class Results : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.Results) */ {
 public:
  Results();
  virtual ~Results();

  Results(const Results& from);

  inline Results& operator=(const Results& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Results(Results&& from) noexcept
    : Results() {
    *this = ::std::move(from);
  }

  inline Results& operator=(Results&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Results& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Results* internal_default_instance() {
    return reinterpret_cast<const Results*>(
               &_Results_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Results* other);
  friend void swap(Results& a, Results& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Results* New() const PROTOBUF_FINAL { return New(NULL); }

  Results* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Results& from);
  void MergeFrom(const Results& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Results* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
  int images_size() const;
  void clear_images();
  static const int kImagesFieldNumber = 2;
  const ::google::devtools::cloudbuild::v1::BuiltImage& images(int index) const;
  ::google::devtools::cloudbuild::v1::BuiltImage* mutable_images(int index);
  ::google::devtools::cloudbuild::v1::BuiltImage* add_images();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >*
      mutable_images();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >&
      images() const;

  // repeated string build_step_images = 3;
  int build_step_images_size() const;
  void clear_build_step_images();
  static const int kBuildStepImagesFieldNumber = 3;
  const ::std::string& build_step_images(int index) const;
  ::std::string* mutable_build_step_images(int index);
  void set_build_step_images(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_build_step_images(int index, ::std::string&& value);
  #endif
  void set_build_step_images(int index, const char* value);
  void set_build_step_images(int index, const char* value, size_t size);
  ::std::string* add_build_step_images();
  void add_build_step_images(const ::std::string& value);
  #if LANG_CXX11
  void add_build_step_images(::std::string&& value);
  #endif
  void add_build_step_images(const char* value);
  void add_build_step_images(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& build_step_images() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_build_step_images();

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Results)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage > images_;
  ::google::protobuf::RepeatedPtrField< ::std::string> build_step_images_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsResultsImpl();
};
// -------------------------------------------------------------------

class Build_SubstitutionsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Build_SubstitutionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Build_SubstitutionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Build_SubstitutionsEntry_DoNotUse();
  Build_SubstitutionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Build_SubstitutionsEntry_DoNotUse& other);
  static const Build_SubstitutionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Build_SubstitutionsEntry_DoNotUse*>(&_Build_SubstitutionsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Build : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.Build) */ {
 public:
  Build();
  virtual ~Build();

  Build(const Build& from);

  inline Build& operator=(const Build& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Build(Build&& from) noexcept
    : Build() {
    *this = ::std::move(from);
  }

  inline Build& operator=(Build&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Build& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Build* internal_default_instance() {
    return reinterpret_cast<const Build*>(
               &_Build_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Build* other);
  friend void swap(Build& a, Build& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Build* New() const PROTOBUF_FINAL { return New(NULL); }

  Build* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Build& from);
  void MergeFrom(const Build& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Build* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef Build_Status Status;
  static const Status STATUS_UNKNOWN =
    Build_Status_STATUS_UNKNOWN;
  static const Status QUEUED =
    Build_Status_QUEUED;
  static const Status WORKING =
    Build_Status_WORKING;
  static const Status SUCCESS =
    Build_Status_SUCCESS;
  static const Status FAILURE =
    Build_Status_FAILURE;
  static const Status INTERNAL_ERROR =
    Build_Status_INTERNAL_ERROR;
  static const Status TIMEOUT =
    Build_Status_TIMEOUT;
  static const Status CANCELLED =
    Build_Status_CANCELLED;
  static inline bool Status_IsValid(int value) {
    return Build_Status_IsValid(value);
  }
  static const Status Status_MIN =
    Build_Status_Status_MIN;
  static const Status Status_MAX =
    Build_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    Build_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return Build_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return Build_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return Build_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
  int steps_size() const;
  void clear_steps();
  static const int kStepsFieldNumber = 11;
  const ::google::devtools::cloudbuild::v1::BuildStep& steps(int index) const;
  ::google::devtools::cloudbuild::v1::BuildStep* mutable_steps(int index);
  ::google::devtools::cloudbuild::v1::BuildStep* add_steps();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >*
      mutable_steps();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >&
      steps() const;

  // repeated string images = 13;
  int images_size() const;
  void clear_images();
  static const int kImagesFieldNumber = 13;
  const ::std::string& images(int index) const;
  ::std::string* mutable_images(int index);
  void set_images(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_images(int index, ::std::string&& value);
  #endif
  void set_images(int index, const char* value);
  void set_images(int index, const char* value, size_t size);
  ::std::string* add_images();
  void add_images(const ::std::string& value);
  #if LANG_CXX11
  void add_images(::std::string&& value);
  #endif
  void add_images(const char* value);
  void add_images(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& images() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_images();

  // map<string, string> substitutions = 29;
  int substitutions_size() const;
  void clear_substitutions();
  static const int kSubstitutionsFieldNumber = 29;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      substitutions() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_substitutions();

  // repeated string tags = 31;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 31;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // repeated .google.devtools.cloudbuild.v1.Secret secrets = 32;
  int secrets_size() const;
  void clear_secrets();
  static const int kSecretsFieldNumber = 32;
  const ::google::devtools::cloudbuild::v1::Secret& secrets(int index) const;
  ::google::devtools::cloudbuild::v1::Secret* mutable_secrets(int index);
  ::google::devtools::cloudbuild::v1::Secret* add_secrets();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Secret >*
      mutable_secrets();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Secret >&
      secrets() const;

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string project_id = 16;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 16;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string logs_bucket = 19;
  void clear_logs_bucket();
  static const int kLogsBucketFieldNumber = 19;
  const ::std::string& logs_bucket() const;
  void set_logs_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_logs_bucket(::std::string&& value);
  #endif
  void set_logs_bucket(const char* value);
  void set_logs_bucket(const char* value, size_t size);
  ::std::string* mutable_logs_bucket();
  ::std::string* release_logs_bucket();
  void set_allocated_logs_bucket(::std::string* logs_bucket);

  // string build_trigger_id = 22;
  void clear_build_trigger_id();
  static const int kBuildTriggerIdFieldNumber = 22;
  const ::std::string& build_trigger_id() const;
  void set_build_trigger_id(const ::std::string& value);
  #if LANG_CXX11
  void set_build_trigger_id(::std::string&& value);
  #endif
  void set_build_trigger_id(const char* value);
  void set_build_trigger_id(const char* value, size_t size);
  ::std::string* mutable_build_trigger_id();
  ::std::string* release_build_trigger_id();
  void set_allocated_build_trigger_id(::std::string* build_trigger_id);

  // string status_detail = 24;
  void clear_status_detail();
  static const int kStatusDetailFieldNumber = 24;
  const ::std::string& status_detail() const;
  void set_status_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_status_detail(::std::string&& value);
  #endif
  void set_status_detail(const char* value);
  void set_status_detail(const char* value, size_t size);
  ::std::string* mutable_status_detail();
  ::std::string* release_status_detail();
  void set_allocated_status_detail(::std::string* status_detail);

  // string log_url = 25;
  void clear_log_url();
  static const int kLogUrlFieldNumber = 25;
  const ::std::string& log_url() const;
  void set_log_url(const ::std::string& value);
  #if LANG_CXX11
  void set_log_url(::std::string&& value);
  #endif
  void set_log_url(const char* value);
  void set_log_url(const char* value, size_t size);
  ::std::string* mutable_log_url();
  ::std::string* release_log_url();
  void set_allocated_log_url(::std::string* log_url);

  // .google.devtools.cloudbuild.v1.Source source = 3;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::google::devtools::cloudbuild::v1::Source& source() const;
  ::google::devtools::cloudbuild::v1::Source* release_source();
  ::google::devtools::cloudbuild::v1::Source* mutable_source();
  void set_allocated_source(::google::devtools::cloudbuild::v1::Source* source);

  // .google.protobuf.Timestamp create_time = 6;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 6;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp start_time = 7;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 7;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp finish_time = 8;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 8;
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* release_finish_time();
  ::google::protobuf::Timestamp* mutable_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // .google.devtools.cloudbuild.v1.Results results = 10;
  bool has_results() const;
  void clear_results();
  static const int kResultsFieldNumber = 10;
  const ::google::devtools::cloudbuild::v1::Results& results() const;
  ::google::devtools::cloudbuild::v1::Results* release_results();
  ::google::devtools::cloudbuild::v1::Results* mutable_results();
  void set_allocated_results(::google::devtools::cloudbuild::v1::Results* results);

  // .google.protobuf.Duration timeout = 12;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 12;
  const ::google::protobuf::Duration& timeout() const;
  ::google::protobuf::Duration* release_timeout();
  ::google::protobuf::Duration* mutable_timeout();
  void set_allocated_timeout(::google::protobuf::Duration* timeout);

  // .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
  bool has_source_provenance() const;
  void clear_source_provenance();
  static const int kSourceProvenanceFieldNumber = 21;
  const ::google::devtools::cloudbuild::v1::SourceProvenance& source_provenance() const;
  ::google::devtools::cloudbuild::v1::SourceProvenance* release_source_provenance();
  ::google::devtools::cloudbuild::v1::SourceProvenance* mutable_source_provenance();
  void set_allocated_source_provenance(::google::devtools::cloudbuild::v1::SourceProvenance* source_provenance);

  // .google.devtools.cloudbuild.v1.BuildOptions options = 23;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 23;
  const ::google::devtools::cloudbuild::v1::BuildOptions& options() const;
  ::google::devtools::cloudbuild::v1::BuildOptions* release_options();
  ::google::devtools::cloudbuild::v1::BuildOptions* mutable_options();
  void set_allocated_options(::google::devtools::cloudbuild::v1::BuildOptions* options);

  // .google.devtools.cloudbuild.v1.Build.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::devtools::cloudbuild::v1::Build_Status status() const;
  void set_status(::google::devtools::cloudbuild::v1::Build_Status value);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Build)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep > steps_;
  ::google::protobuf::RepeatedPtrField< ::std::string> images_;
  ::google::protobuf::internal::MapField<
      Build_SubstitutionsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > substitutions_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Secret > secrets_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr logs_bucket_;
  ::google::protobuf::internal::ArenaStringPtr build_trigger_id_;
  ::google::protobuf::internal::ArenaStringPtr status_detail_;
  ::google::protobuf::internal::ArenaStringPtr log_url_;
  ::google::devtools::cloudbuild::v1::Source* source_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* finish_time_;
  ::google::devtools::cloudbuild::v1::Results* results_;
  ::google::protobuf::Duration* timeout_;
  ::google::devtools::cloudbuild::v1::SourceProvenance* source_provenance_;
  ::google::devtools::cloudbuild::v1::BuildOptions* options_;
  int status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsBuildImpl();
};
// -------------------------------------------------------------------

class BuildOperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.BuildOperationMetadata) */ {
 public:
  BuildOperationMetadata();
  virtual ~BuildOperationMetadata();

  BuildOperationMetadata(const BuildOperationMetadata& from);

  inline BuildOperationMetadata& operator=(const BuildOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildOperationMetadata(BuildOperationMetadata&& from) noexcept
    : BuildOperationMetadata() {
    *this = ::std::move(from);
  }

  inline BuildOperationMetadata& operator=(BuildOperationMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildOperationMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const BuildOperationMetadata*>(
               &_BuildOperationMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(BuildOperationMetadata* other);
  friend void swap(BuildOperationMetadata& a, BuildOperationMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildOperationMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildOperationMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildOperationMetadata& from);
  void MergeFrom(const BuildOperationMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildOperationMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.cloudbuild.v1.Build build = 1;
  bool has_build() const;
  void clear_build();
  static const int kBuildFieldNumber = 1;
  const ::google::devtools::cloudbuild::v1::Build& build() const;
  ::google::devtools::cloudbuild::v1::Build* release_build();
  ::google::devtools::cloudbuild::v1::Build* mutable_build();
  void set_allocated_build(::google::devtools::cloudbuild::v1::Build* build);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.BuildOperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::devtools::cloudbuild::v1::Build* build_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsBuildOperationMetadataImpl();
};
// -------------------------------------------------------------------

class SourceProvenance_FileHashesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SourceProvenance_FileHashesEntry_DoNotUse, 
    ::std::string, ::google::devtools::cloudbuild::v1::FileHashes,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SourceProvenance_FileHashesEntry_DoNotUse, 
    ::std::string, ::google::devtools::cloudbuild::v1::FileHashes,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SourceProvenance_FileHashesEntry_DoNotUse();
  SourceProvenance_FileHashesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SourceProvenance_FileHashesEntry_DoNotUse& other);
  static const SourceProvenance_FileHashesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SourceProvenance_FileHashesEntry_DoNotUse*>(&_SourceProvenance_FileHashesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SourceProvenance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.SourceProvenance) */ {
 public:
  SourceProvenance();
  virtual ~SourceProvenance();

  SourceProvenance(const SourceProvenance& from);

  inline SourceProvenance& operator=(const SourceProvenance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SourceProvenance(SourceProvenance&& from) noexcept
    : SourceProvenance() {
    *this = ::std::move(from);
  }

  inline SourceProvenance& operator=(SourceProvenance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SourceProvenance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SourceProvenance* internal_default_instance() {
    return reinterpret_cast<const SourceProvenance*>(
               &_SourceProvenance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SourceProvenance* other);
  friend void swap(SourceProvenance& a, SourceProvenance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SourceProvenance* New() const PROTOBUF_FINAL { return New(NULL); }

  SourceProvenance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SourceProvenance& from);
  void MergeFrom(const SourceProvenance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SourceProvenance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
  int file_hashes_size() const;
  void clear_file_hashes();
  static const int kFileHashesFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >&
      file_hashes() const;
  ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >*
      mutable_file_hashes();

  // .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
  bool has_resolved_storage_source() const;
  void clear_resolved_storage_source();
  static const int kResolvedStorageSourceFieldNumber = 3;
  const ::google::devtools::cloudbuild::v1::StorageSource& resolved_storage_source() const;
  ::google::devtools::cloudbuild::v1::StorageSource* release_resolved_storage_source();
  ::google::devtools::cloudbuild::v1::StorageSource* mutable_resolved_storage_source();
  void set_allocated_resolved_storage_source(::google::devtools::cloudbuild::v1::StorageSource* resolved_storage_source);

  // .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
  bool has_resolved_repo_source() const;
  void clear_resolved_repo_source();
  static const int kResolvedRepoSourceFieldNumber = 6;
  const ::google::devtools::cloudbuild::v1::RepoSource& resolved_repo_source() const;
  ::google::devtools::cloudbuild::v1::RepoSource* release_resolved_repo_source();
  ::google::devtools::cloudbuild::v1::RepoSource* mutable_resolved_repo_source();
  void set_allocated_resolved_repo_source(::google::devtools::cloudbuild::v1::RepoSource* resolved_repo_source);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.SourceProvenance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SourceProvenance_FileHashesEntry_DoNotUse,
      ::std::string, ::google::devtools::cloudbuild::v1::FileHashes,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > file_hashes_;
  ::google::devtools::cloudbuild::v1::StorageSource* resolved_storage_source_;
  ::google::devtools::cloudbuild::v1::RepoSource* resolved_repo_source_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsSourceProvenanceImpl();
};
// -------------------------------------------------------------------

class FileHashes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.FileHashes) */ {
 public:
  FileHashes();
  virtual ~FileHashes();

  FileHashes(const FileHashes& from);

  inline FileHashes& operator=(const FileHashes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileHashes(FileHashes&& from) noexcept
    : FileHashes() {
    *this = ::std::move(from);
  }

  inline FileHashes& operator=(FileHashes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileHashes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileHashes* internal_default_instance() {
    return reinterpret_cast<const FileHashes*>(
               &_FileHashes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(FileHashes* other);
  friend void swap(FileHashes& a, FileHashes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileHashes* New() const PROTOBUF_FINAL { return New(NULL); }

  FileHashes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileHashes& from);
  void MergeFrom(const FileHashes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileHashes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
  int file_hash_size() const;
  void clear_file_hash();
  static const int kFileHashFieldNumber = 1;
  const ::google::devtools::cloudbuild::v1::Hash& file_hash(int index) const;
  ::google::devtools::cloudbuild::v1::Hash* mutable_file_hash(int index);
  ::google::devtools::cloudbuild::v1::Hash* add_file_hash();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >*
      mutable_file_hash();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >&
      file_hash() const;

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.FileHashes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash > file_hash_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsFileHashesImpl();
};
// -------------------------------------------------------------------

class Hash : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.Hash) */ {
 public:
  Hash();
  virtual ~Hash();

  Hash(const Hash& from);

  inline Hash& operator=(const Hash& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Hash(Hash&& from) noexcept
    : Hash() {
    *this = ::std::move(from);
  }

  inline Hash& operator=(Hash&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Hash& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Hash* internal_default_instance() {
    return reinterpret_cast<const Hash*>(
               &_Hash_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Hash* other);
  friend void swap(Hash& a, Hash& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Hash* New() const PROTOBUF_FINAL { return New(NULL); }

  Hash* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Hash& from);
  void MergeFrom(const Hash& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Hash* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Hash_HashType HashType;
  static const HashType NONE =
    Hash_HashType_NONE;
  static const HashType SHA256 =
    Hash_HashType_SHA256;
  static inline bool HashType_IsValid(int value) {
    return Hash_HashType_IsValid(value);
  }
  static const HashType HashType_MIN =
    Hash_HashType_HashType_MIN;
  static const HashType HashType_MAX =
    Hash_HashType_HashType_MAX;
  static const int HashType_ARRAYSIZE =
    Hash_HashType_HashType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HashType_descriptor() {
    return Hash_HashType_descriptor();
  }
  static inline const ::std::string& HashType_Name(HashType value) {
    return Hash_HashType_Name(value);
  }
  static inline bool HashType_Parse(const ::std::string& name,
      HashType* value) {
    return Hash_HashType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::devtools::cloudbuild::v1::Hash_HashType type() const;
  void set_type(::google::devtools::cloudbuild::v1::Hash_HashType value);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Hash)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsHashImpl();
};
// -------------------------------------------------------------------

class Secret_SecretEnvEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Secret_SecretEnvEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Secret_SecretEnvEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  Secret_SecretEnvEntry_DoNotUse();
  Secret_SecretEnvEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Secret_SecretEnvEntry_DoNotUse& other);
  static const Secret_SecretEnvEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Secret_SecretEnvEntry_DoNotUse*>(&_Secret_SecretEnvEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Secret : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.Secret) */ {
 public:
  Secret();
  virtual ~Secret();

  Secret(const Secret& from);

  inline Secret& operator=(const Secret& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Secret(Secret&& from) noexcept
    : Secret() {
    *this = ::std::move(from);
  }

  inline Secret& operator=(Secret&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Secret& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Secret* internal_default_instance() {
    return reinterpret_cast<const Secret*>(
               &_Secret_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Secret* other);
  friend void swap(Secret& a, Secret& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Secret* New() const PROTOBUF_FINAL { return New(NULL); }

  Secret* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Secret& from);
  void MergeFrom(const Secret& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Secret* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> secret_env = 3;
  int secret_env_size() const;
  void clear_secret_env();
  static const int kSecretEnvFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      secret_env() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_secret_env();

  // string kms_key_name = 1;
  void clear_kms_key_name();
  static const int kKmsKeyNameFieldNumber = 1;
  const ::std::string& kms_key_name() const;
  void set_kms_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_kms_key_name(::std::string&& value);
  #endif
  void set_kms_key_name(const char* value);
  void set_kms_key_name(const char* value, size_t size);
  ::std::string* mutable_kms_key_name();
  ::std::string* release_kms_key_name();
  void set_allocated_kms_key_name(::std::string* kms_key_name);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Secret)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Secret_SecretEnvEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > secret_env_;
  ::google::protobuf::internal::ArenaStringPtr kms_key_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsSecretImpl();
};
// -------------------------------------------------------------------

class CreateBuildRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.CreateBuildRequest) */ {
 public:
  CreateBuildRequest();
  virtual ~CreateBuildRequest();

  CreateBuildRequest(const CreateBuildRequest& from);

  inline CreateBuildRequest& operator=(const CreateBuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateBuildRequest(CreateBuildRequest&& from) noexcept
    : CreateBuildRequest() {
    *this = ::std::move(from);
  }

  inline CreateBuildRequest& operator=(CreateBuildRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateBuildRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateBuildRequest* internal_default_instance() {
    return reinterpret_cast<const CreateBuildRequest*>(
               &_CreateBuildRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CreateBuildRequest* other);
  friend void swap(CreateBuildRequest& a, CreateBuildRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateBuildRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateBuildRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateBuildRequest& from);
  void MergeFrom(const CreateBuildRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateBuildRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // .google.devtools.cloudbuild.v1.Build build = 2;
  bool has_build() const;
  void clear_build();
  static const int kBuildFieldNumber = 2;
  const ::google::devtools::cloudbuild::v1::Build& build() const;
  ::google::devtools::cloudbuild::v1::Build* release_build();
  ::google::devtools::cloudbuild::v1::Build* mutable_build();
  void set_allocated_build(::google::devtools::cloudbuild::v1::Build* build);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.CreateBuildRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::devtools::cloudbuild::v1::Build* build_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsCreateBuildRequestImpl();
};
// -------------------------------------------------------------------

class GetBuildRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.GetBuildRequest) */ {
 public:
  GetBuildRequest();
  virtual ~GetBuildRequest();

  GetBuildRequest(const GetBuildRequest& from);

  inline GetBuildRequest& operator=(const GetBuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBuildRequest(GetBuildRequest&& from) noexcept
    : GetBuildRequest() {
    *this = ::std::move(from);
  }

  inline GetBuildRequest& operator=(GetBuildRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBuildRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBuildRequest* internal_default_instance() {
    return reinterpret_cast<const GetBuildRequest*>(
               &_GetBuildRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetBuildRequest* other);
  friend void swap(GetBuildRequest& a, GetBuildRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBuildRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBuildRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBuildRequest& from);
  void MergeFrom(const GetBuildRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBuildRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.GetBuildRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsGetBuildRequestImpl();
};
// -------------------------------------------------------------------

class ListBuildsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.ListBuildsRequest) */ {
 public:
  ListBuildsRequest();
  virtual ~ListBuildsRequest();

  ListBuildsRequest(const ListBuildsRequest& from);

  inline ListBuildsRequest& operator=(const ListBuildsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuildsRequest(ListBuildsRequest&& from) noexcept
    : ListBuildsRequest() {
    *this = ::std::move(from);
  }

  inline ListBuildsRequest& operator=(ListBuildsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBuildsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuildsRequest* internal_default_instance() {
    return reinterpret_cast<const ListBuildsRequest*>(
               &_ListBuildsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ListBuildsRequest* other);
  friend void swap(ListBuildsRequest& a, ListBuildsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuildsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBuildsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBuildsRequest& from);
  void MergeFrom(const ListBuildsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBuildsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string filter = 8;
  void clear_filter();
  static const int kFilterFieldNumber = 8;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.ListBuildsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsListBuildsRequestImpl();
};
// -------------------------------------------------------------------

class ListBuildsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.ListBuildsResponse) */ {
 public:
  ListBuildsResponse();
  virtual ~ListBuildsResponse();

  ListBuildsResponse(const ListBuildsResponse& from);

  inline ListBuildsResponse& operator=(const ListBuildsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuildsResponse(ListBuildsResponse&& from) noexcept
    : ListBuildsResponse() {
    *this = ::std::move(from);
  }

  inline ListBuildsResponse& operator=(ListBuildsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBuildsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuildsResponse* internal_default_instance() {
    return reinterpret_cast<const ListBuildsResponse*>(
               &_ListBuildsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ListBuildsResponse* other);
  friend void swap(ListBuildsResponse& a, ListBuildsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuildsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBuildsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBuildsResponse& from);
  void MergeFrom(const ListBuildsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBuildsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
  int builds_size() const;
  void clear_builds();
  static const int kBuildsFieldNumber = 1;
  const ::google::devtools::cloudbuild::v1::Build& builds(int index) const;
  ::google::devtools::cloudbuild::v1::Build* mutable_builds(int index);
  ::google::devtools::cloudbuild::v1::Build* add_builds();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >*
      mutable_builds();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >&
      builds() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.ListBuildsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build > builds_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsListBuildsResponseImpl();
};
// -------------------------------------------------------------------

class CancelBuildRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.CancelBuildRequest) */ {
 public:
  CancelBuildRequest();
  virtual ~CancelBuildRequest();

  CancelBuildRequest(const CancelBuildRequest& from);

  inline CancelBuildRequest& operator=(const CancelBuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelBuildRequest(CancelBuildRequest&& from) noexcept
    : CancelBuildRequest() {
    *this = ::std::move(from);
  }

  inline CancelBuildRequest& operator=(CancelBuildRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelBuildRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelBuildRequest* internal_default_instance() {
    return reinterpret_cast<const CancelBuildRequest*>(
               &_CancelBuildRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CancelBuildRequest* other);
  friend void swap(CancelBuildRequest& a, CancelBuildRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelBuildRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelBuildRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelBuildRequest& from);
  void MergeFrom(const CancelBuildRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelBuildRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.CancelBuildRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsCancelBuildRequestImpl();
};
// -------------------------------------------------------------------

class BuildTrigger_SubstitutionsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BuildTrigger_SubstitutionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<BuildTrigger_SubstitutionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  BuildTrigger_SubstitutionsEntry_DoNotUse();
  BuildTrigger_SubstitutionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BuildTrigger_SubstitutionsEntry_DoNotUse& other);
  static const BuildTrigger_SubstitutionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BuildTrigger_SubstitutionsEntry_DoNotUse*>(&_BuildTrigger_SubstitutionsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class BuildTrigger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.BuildTrigger) */ {
 public:
  BuildTrigger();
  virtual ~BuildTrigger();

  BuildTrigger(const BuildTrigger& from);

  inline BuildTrigger& operator=(const BuildTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildTrigger(BuildTrigger&& from) noexcept
    : BuildTrigger() {
    *this = ::std::move(from);
  }

  inline BuildTrigger& operator=(BuildTrigger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildTrigger& default_instance();

  enum BuildTemplateCase {
    kBuild = 4,
    kFilename = 8,
    BUILD_TEMPLATE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildTrigger* internal_default_instance() {
    return reinterpret_cast<const BuildTrigger*>(
               &_BuildTrigger_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(BuildTrigger* other);
  friend void swap(BuildTrigger& a, BuildTrigger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildTrigger* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildTrigger* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildTrigger& from);
  void MergeFrom(const BuildTrigger& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildTrigger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> substitutions = 11;
  int substitutions_size() const;
  void clear_substitutions();
  static const int kSubstitutionsFieldNumber = 11;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      substitutions() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_substitutions();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string description = 10;
  void clear_description();
  static const int kDescriptionFieldNumber = 10;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .google.protobuf.Timestamp create_time = 5;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
  bool has_trigger_template() const;
  void clear_trigger_template();
  static const int kTriggerTemplateFieldNumber = 7;
  const ::google::devtools::cloudbuild::v1::RepoSource& trigger_template() const;
  ::google::devtools::cloudbuild::v1::RepoSource* release_trigger_template();
  ::google::devtools::cloudbuild::v1::RepoSource* mutable_trigger_template();
  void set_allocated_trigger_template(::google::devtools::cloudbuild::v1::RepoSource* trigger_template);

  // bool disabled = 9;
  void clear_disabled();
  static const int kDisabledFieldNumber = 9;
  bool disabled() const;
  void set_disabled(bool value);

  // .google.devtools.cloudbuild.v1.Build build = 4;
  bool has_build() const;
  void clear_build();
  static const int kBuildFieldNumber = 4;
  const ::google::devtools::cloudbuild::v1::Build& build() const;
  ::google::devtools::cloudbuild::v1::Build* release_build();
  ::google::devtools::cloudbuild::v1::Build* mutable_build();
  void set_allocated_build(::google::devtools::cloudbuild::v1::Build* build);

  // string filename = 8;
  private:
  bool has_filename() const;
  public:
  void clear_filename();
  static const int kFilenameFieldNumber = 8;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  BuildTemplateCase build_template_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.BuildTrigger)
 private:
  void set_has_build();
  void set_has_filename();

  inline bool has_build_template() const;
  void clear_build_template();
  inline void clear_has_build_template();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      BuildTrigger_SubstitutionsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > substitutions_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::devtools::cloudbuild::v1::RepoSource* trigger_template_;
  bool disabled_;
  union BuildTemplateUnion {
    BuildTemplateUnion() {}
    ::google::devtools::cloudbuild::v1::Build* build_;
    ::google::protobuf::internal::ArenaStringPtr filename_;
  } build_template_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsBuildTriggerImpl();
};
// -------------------------------------------------------------------

class CreateBuildTriggerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest) */ {
 public:
  CreateBuildTriggerRequest();
  virtual ~CreateBuildTriggerRequest();

  CreateBuildTriggerRequest(const CreateBuildTriggerRequest& from);

  inline CreateBuildTriggerRequest& operator=(const CreateBuildTriggerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateBuildTriggerRequest(CreateBuildTriggerRequest&& from) noexcept
    : CreateBuildTriggerRequest() {
    *this = ::std::move(from);
  }

  inline CreateBuildTriggerRequest& operator=(CreateBuildTriggerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateBuildTriggerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateBuildTriggerRequest* internal_default_instance() {
    return reinterpret_cast<const CreateBuildTriggerRequest*>(
               &_CreateBuildTriggerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CreateBuildTriggerRequest* other);
  friend void swap(CreateBuildTriggerRequest& a, CreateBuildTriggerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateBuildTriggerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateBuildTriggerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateBuildTriggerRequest& from);
  void MergeFrom(const CreateBuildTriggerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateBuildTriggerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
  bool has_trigger() const;
  void clear_trigger();
  static const int kTriggerFieldNumber = 2;
  const ::google::devtools::cloudbuild::v1::BuildTrigger& trigger() const;
  ::google::devtools::cloudbuild::v1::BuildTrigger* release_trigger();
  ::google::devtools::cloudbuild::v1::BuildTrigger* mutable_trigger();
  void set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::devtools::cloudbuild::v1::BuildTrigger* trigger_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsCreateBuildTriggerRequestImpl();
};
// -------------------------------------------------------------------

class GetBuildTriggerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.GetBuildTriggerRequest) */ {
 public:
  GetBuildTriggerRequest();
  virtual ~GetBuildTriggerRequest();

  GetBuildTriggerRequest(const GetBuildTriggerRequest& from);

  inline GetBuildTriggerRequest& operator=(const GetBuildTriggerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBuildTriggerRequest(GetBuildTriggerRequest&& from) noexcept
    : GetBuildTriggerRequest() {
    *this = ::std::move(from);
  }

  inline GetBuildTriggerRequest& operator=(GetBuildTriggerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBuildTriggerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBuildTriggerRequest* internal_default_instance() {
    return reinterpret_cast<const GetBuildTriggerRequest*>(
               &_GetBuildTriggerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(GetBuildTriggerRequest* other);
  friend void swap(GetBuildTriggerRequest& a, GetBuildTriggerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBuildTriggerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBuildTriggerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBuildTriggerRequest& from);
  void MergeFrom(const GetBuildTriggerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBuildTriggerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string trigger_id = 2;
  void clear_trigger_id();
  static const int kTriggerIdFieldNumber = 2;
  const ::std::string& trigger_id() const;
  void set_trigger_id(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_id(::std::string&& value);
  #endif
  void set_trigger_id(const char* value);
  void set_trigger_id(const char* value, size_t size);
  ::std::string* mutable_trigger_id();
  ::std::string* release_trigger_id();
  void set_allocated_trigger_id(::std::string* trigger_id);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr trigger_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsGetBuildTriggerRequestImpl();
};
// -------------------------------------------------------------------

class ListBuildTriggersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.ListBuildTriggersRequest) */ {
 public:
  ListBuildTriggersRequest();
  virtual ~ListBuildTriggersRequest();

  ListBuildTriggersRequest(const ListBuildTriggersRequest& from);

  inline ListBuildTriggersRequest& operator=(const ListBuildTriggersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuildTriggersRequest(ListBuildTriggersRequest&& from) noexcept
    : ListBuildTriggersRequest() {
    *this = ::std::move(from);
  }

  inline ListBuildTriggersRequest& operator=(ListBuildTriggersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBuildTriggersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuildTriggersRequest* internal_default_instance() {
    return reinterpret_cast<const ListBuildTriggersRequest*>(
               &_ListBuildTriggersRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ListBuildTriggersRequest* other);
  friend void swap(ListBuildTriggersRequest& a, ListBuildTriggersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuildTriggersRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBuildTriggersRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBuildTriggersRequest& from);
  void MergeFrom(const ListBuildTriggersRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBuildTriggersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsListBuildTriggersRequestImpl();
};
// -------------------------------------------------------------------

class ListBuildTriggersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.ListBuildTriggersResponse) */ {
 public:
  ListBuildTriggersResponse();
  virtual ~ListBuildTriggersResponse();

  ListBuildTriggersResponse(const ListBuildTriggersResponse& from);

  inline ListBuildTriggersResponse& operator=(const ListBuildTriggersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuildTriggersResponse(ListBuildTriggersResponse&& from) noexcept
    : ListBuildTriggersResponse() {
    *this = ::std::move(from);
  }

  inline ListBuildTriggersResponse& operator=(ListBuildTriggersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBuildTriggersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuildTriggersResponse* internal_default_instance() {
    return reinterpret_cast<const ListBuildTriggersResponse*>(
               &_ListBuildTriggersResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ListBuildTriggersResponse* other);
  friend void swap(ListBuildTriggersResponse& a, ListBuildTriggersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuildTriggersResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBuildTriggersResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBuildTriggersResponse& from);
  void MergeFrom(const ListBuildTriggersResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBuildTriggersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
  int triggers_size() const;
  void clear_triggers();
  static const int kTriggersFieldNumber = 1;
  const ::google::devtools::cloudbuild::v1::BuildTrigger& triggers(int index) const;
  ::google::devtools::cloudbuild::v1::BuildTrigger* mutable_triggers(int index);
  ::google::devtools::cloudbuild::v1::BuildTrigger* add_triggers();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >*
      mutable_triggers();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >&
      triggers() const;

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger > triggers_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsListBuildTriggersResponseImpl();
};
// -------------------------------------------------------------------

class DeleteBuildTriggerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest) */ {
 public:
  DeleteBuildTriggerRequest();
  virtual ~DeleteBuildTriggerRequest();

  DeleteBuildTriggerRequest(const DeleteBuildTriggerRequest& from);

  inline DeleteBuildTriggerRequest& operator=(const DeleteBuildTriggerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteBuildTriggerRequest(DeleteBuildTriggerRequest&& from) noexcept
    : DeleteBuildTriggerRequest() {
    *this = ::std::move(from);
  }

  inline DeleteBuildTriggerRequest& operator=(DeleteBuildTriggerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBuildTriggerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteBuildTriggerRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteBuildTriggerRequest*>(
               &_DeleteBuildTriggerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(DeleteBuildTriggerRequest* other);
  friend void swap(DeleteBuildTriggerRequest& a, DeleteBuildTriggerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteBuildTriggerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteBuildTriggerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteBuildTriggerRequest& from);
  void MergeFrom(const DeleteBuildTriggerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteBuildTriggerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string trigger_id = 2;
  void clear_trigger_id();
  static const int kTriggerIdFieldNumber = 2;
  const ::std::string& trigger_id() const;
  void set_trigger_id(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_id(::std::string&& value);
  #endif
  void set_trigger_id(const char* value);
  void set_trigger_id(const char* value, size_t size);
  ::std::string* mutable_trigger_id();
  ::std::string* release_trigger_id();
  void set_allocated_trigger_id(::std::string* trigger_id);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr trigger_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsDeleteBuildTriggerRequestImpl();
};
// -------------------------------------------------------------------

class UpdateBuildTriggerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest) */ {
 public:
  UpdateBuildTriggerRequest();
  virtual ~UpdateBuildTriggerRequest();

  UpdateBuildTriggerRequest(const UpdateBuildTriggerRequest& from);

  inline UpdateBuildTriggerRequest& operator=(const UpdateBuildTriggerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateBuildTriggerRequest(UpdateBuildTriggerRequest&& from) noexcept
    : UpdateBuildTriggerRequest() {
    *this = ::std::move(from);
  }

  inline UpdateBuildTriggerRequest& operator=(UpdateBuildTriggerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBuildTriggerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateBuildTriggerRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateBuildTriggerRequest*>(
               &_UpdateBuildTriggerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(UpdateBuildTriggerRequest* other);
  friend void swap(UpdateBuildTriggerRequest& a, UpdateBuildTriggerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateBuildTriggerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateBuildTriggerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateBuildTriggerRequest& from);
  void MergeFrom(const UpdateBuildTriggerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateBuildTriggerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string trigger_id = 2;
  void clear_trigger_id();
  static const int kTriggerIdFieldNumber = 2;
  const ::std::string& trigger_id() const;
  void set_trigger_id(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_id(::std::string&& value);
  #endif
  void set_trigger_id(const char* value);
  void set_trigger_id(const char* value, size_t size);
  ::std::string* mutable_trigger_id();
  ::std::string* release_trigger_id();
  void set_allocated_trigger_id(::std::string* trigger_id);

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
  bool has_trigger() const;
  void clear_trigger();
  static const int kTriggerFieldNumber = 3;
  const ::google::devtools::cloudbuild::v1::BuildTrigger& trigger() const;
  ::google::devtools::cloudbuild::v1::BuildTrigger* release_trigger();
  ::google::devtools::cloudbuild::v1::BuildTrigger* mutable_trigger();
  void set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr trigger_id_;
  ::google::devtools::cloudbuild::v1::BuildTrigger* trigger_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsUpdateBuildTriggerRequestImpl();
};
// -------------------------------------------------------------------

class BuildOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudbuild.v1.BuildOptions) */ {
 public:
  BuildOptions();
  virtual ~BuildOptions();

  BuildOptions(const BuildOptions& from);

  inline BuildOptions& operator=(const BuildOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildOptions(BuildOptions&& from) noexcept
    : BuildOptions() {
    *this = ::std::move(from);
  }

  inline BuildOptions& operator=(BuildOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildOptions* internal_default_instance() {
    return reinterpret_cast<const BuildOptions*>(
               &_BuildOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(BuildOptions* other);
  friend void swap(BuildOptions& a, BuildOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildOptions* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildOptions& from);
  void MergeFrom(const BuildOptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BuildOptions_VerifyOption VerifyOption;
  static const VerifyOption NOT_VERIFIED =
    BuildOptions_VerifyOption_NOT_VERIFIED;
  static const VerifyOption VERIFIED =
    BuildOptions_VerifyOption_VERIFIED;
  static inline bool VerifyOption_IsValid(int value) {
    return BuildOptions_VerifyOption_IsValid(value);
  }
  static const VerifyOption VerifyOption_MIN =
    BuildOptions_VerifyOption_VerifyOption_MIN;
  static const VerifyOption VerifyOption_MAX =
    BuildOptions_VerifyOption_VerifyOption_MAX;
  static const int VerifyOption_ARRAYSIZE =
    BuildOptions_VerifyOption_VerifyOption_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VerifyOption_descriptor() {
    return BuildOptions_VerifyOption_descriptor();
  }
  static inline const ::std::string& VerifyOption_Name(VerifyOption value) {
    return BuildOptions_VerifyOption_Name(value);
  }
  static inline bool VerifyOption_Parse(const ::std::string& name,
      VerifyOption* value) {
    return BuildOptions_VerifyOption_Parse(name, value);
  }

  typedef BuildOptions_SubstitutionOption SubstitutionOption;
  static const SubstitutionOption MUST_MATCH =
    BuildOptions_SubstitutionOption_MUST_MATCH;
  static const SubstitutionOption ALLOW_LOOSE =
    BuildOptions_SubstitutionOption_ALLOW_LOOSE;
  static inline bool SubstitutionOption_IsValid(int value) {
    return BuildOptions_SubstitutionOption_IsValid(value);
  }
  static const SubstitutionOption SubstitutionOption_MIN =
    BuildOptions_SubstitutionOption_SubstitutionOption_MIN;
  static const SubstitutionOption SubstitutionOption_MAX =
    BuildOptions_SubstitutionOption_SubstitutionOption_MAX;
  static const int SubstitutionOption_ARRAYSIZE =
    BuildOptions_SubstitutionOption_SubstitutionOption_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SubstitutionOption_descriptor() {
    return BuildOptions_SubstitutionOption_descriptor();
  }
  static inline const ::std::string& SubstitutionOption_Name(SubstitutionOption value) {
    return BuildOptions_SubstitutionOption_Name(value);
  }
  static inline bool SubstitutionOption_Parse(const ::std::string& name,
      SubstitutionOption* value) {
    return BuildOptions_SubstitutionOption_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
  int source_provenance_hash_size() const;
  void clear_source_provenance_hash();
  static const int kSourceProvenanceHashFieldNumber = 1;
  ::google::devtools::cloudbuild::v1::Hash_HashType source_provenance_hash(int index) const;
  void set_source_provenance_hash(int index, ::google::devtools::cloudbuild::v1::Hash_HashType value);
  void add_source_provenance_hash(::google::devtools::cloudbuild::v1::Hash_HashType value);
  const ::google::protobuf::RepeatedField<int>& source_provenance_hash() const;
  ::google::protobuf::RepeatedField<int>* mutable_source_provenance_hash();

  // .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
  void clear_requested_verify_option();
  static const int kRequestedVerifyOptionFieldNumber = 2;
  ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption requested_verify_option() const;
  void set_requested_verify_option(::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption value);

  // .google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
  void clear_substitution_option();
  static const int kSubstitutionOptionFieldNumber = 4;
  ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption substitution_option() const;
  void set_substitution_option(::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption value);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.BuildOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> source_provenance_hash_;
  mutable int _source_provenance_hash_cached_byte_size_;
  int requested_verify_option_;
  int substitution_option_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::TableStruct;
  friend void ::protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaultsBuildOptionsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StorageSource

// string bucket = 1;
inline void StorageSource::clear_bucket() {
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageSource::bucket() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.bucket)
  return bucket_.GetNoArena();
}
inline void StorageSource::set_bucket(const ::std::string& value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
#if LANG_CXX11
inline void StorageSource::set_bucket(::std::string&& value) {
  
  bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
#endif
inline void StorageSource::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
inline void StorageSource::set_bucket(const char* value, size_t size) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
inline ::std::string* StorageSource::mutable_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.StorageSource.bucket)
  return bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageSource::release_bucket() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.StorageSource.bucket)
  
  return bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageSource::set_allocated_bucket(::std::string* bucket) {
  if (bucket != NULL) {
    
  } else {
    
  }
  bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.StorageSource.bucket)
}

// string object = 2;
inline void StorageSource::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageSource::object() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.object)
  return object_.GetNoArena();
}
inline void StorageSource::set_object(const ::std::string& value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.object)
}
#if LANG_CXX11
inline void StorageSource::set_object(::std::string&& value) {
  
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.StorageSource.object)
}
#endif
inline void StorageSource::set_object(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.StorageSource.object)
}
inline void StorageSource::set_object(const char* value, size_t size) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.StorageSource.object)
}
inline ::std::string* StorageSource::mutable_object() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.StorageSource.object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageSource::release_object() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.StorageSource.object)
  
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageSource::set_allocated_object(::std::string* object) {
  if (object != NULL) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.StorageSource.object)
}

// int64 generation = 3;
inline void StorageSource::clear_generation() {
  generation_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StorageSource::generation() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.generation)
  return generation_;
}
inline void StorageSource::set_generation(::google::protobuf::int64 value) {
  
  generation_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.generation)
}

// -------------------------------------------------------------------

// RepoSource

// string project_id = 1;
inline void RepoSource::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RepoSource::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.project_id)
  return project_id_.GetNoArena();
}
inline void RepoSource::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
#if LANG_CXX11
inline void RepoSource::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
#endif
inline void RepoSource::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
inline void RepoSource::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
inline ::std::string* RepoSource::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepoSource::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RepoSource::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.project_id)
}

// string repo_name = 2;
inline void RepoSource::clear_repo_name() {
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RepoSource::repo_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  return repo_name_.GetNoArena();
}
inline void RepoSource::set_repo_name(const ::std::string& value) {
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
#if LANG_CXX11
inline void RepoSource::set_repo_name(::std::string&& value) {
  
  repo_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
#endif
inline void RepoSource::set_repo_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
inline void RepoSource::set_repo_name(const char* value, size_t size) {
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
inline ::std::string* RepoSource::mutable_repo_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  return repo_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepoSource::release_repo_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  
  return repo_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RepoSource::set_allocated_repo_name(::std::string* repo_name) {
  if (repo_name != NULL) {
    
  } else {
    
  }
  repo_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), repo_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}

// string branch_name = 3;
inline bool RepoSource::has_branch_name() const {
  return revision_case() == kBranchName;
}
inline void RepoSource::set_has_branch_name() {
  _oneof_case_[0] = kBranchName;
}
inline void RepoSource::clear_branch_name() {
  if (has_branch_name()) {
    revision_.branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
inline const ::std::string& RepoSource::branch_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (has_branch_name()) {
    return revision_.branch_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void RepoSource::set_branch_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
#if LANG_CXX11
inline void RepoSource::set_branch_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
#endif
inline void RepoSource::set_branch_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
inline void RepoSource::set_branch_name(const char* value, size_t size) {
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
inline ::std::string* RepoSource::mutable_branch_name() {
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  return revision_.branch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepoSource::release_branch_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (has_branch_name()) {
    clear_has_revision();
    return revision_.branch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void RepoSource::set_allocated_branch_name(::std::string* branch_name) {
  if (!has_branch_name()) {
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (branch_name != NULL) {
    set_has_branch_name();
    revision_.branch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        branch_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}

// string tag_name = 4;
inline bool RepoSource::has_tag_name() const {
  return revision_case() == kTagName;
}
inline void RepoSource::set_has_tag_name() {
  _oneof_case_[0] = kTagName;
}
inline void RepoSource::clear_tag_name() {
  if (has_tag_name()) {
    revision_.tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
inline const ::std::string& RepoSource::tag_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (has_tag_name()) {
    return revision_.tag_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void RepoSource::set_tag_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
#if LANG_CXX11
inline void RepoSource::set_tag_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
#endif
inline void RepoSource::set_tag_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
inline void RepoSource::set_tag_name(const char* value, size_t size) {
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
inline ::std::string* RepoSource::mutable_tag_name() {
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  return revision_.tag_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepoSource::release_tag_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (has_tag_name()) {
    clear_has_revision();
    return revision_.tag_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void RepoSource::set_allocated_tag_name(::std::string* tag_name) {
  if (!has_tag_name()) {
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (tag_name != NULL) {
    set_has_tag_name();
    revision_.tag_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        tag_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}

// string commit_sha = 5;
inline bool RepoSource::has_commit_sha() const {
  return revision_case() == kCommitSha;
}
inline void RepoSource::set_has_commit_sha() {
  _oneof_case_[0] = kCommitSha;
}
inline void RepoSource::clear_commit_sha() {
  if (has_commit_sha()) {
    revision_.commit_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
inline const ::std::string& RepoSource::commit_sha() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (has_commit_sha()) {
    return revision_.commit_sha_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void RepoSource::set_commit_sha(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
#if LANG_CXX11
inline void RepoSource::set_commit_sha(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
#endif
inline void RepoSource::set_commit_sha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
inline void RepoSource::set_commit_sha(const char* value, size_t size) {
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
inline ::std::string* RepoSource::mutable_commit_sha() {
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  return revision_.commit_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepoSource::release_commit_sha() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (has_commit_sha()) {
    clear_has_revision();
    return revision_.commit_sha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void RepoSource::set_allocated_commit_sha(::std::string* commit_sha) {
  if (!has_commit_sha()) {
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (commit_sha != NULL) {
    set_has_commit_sha();
    revision_.commit_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        commit_sha);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}

inline bool RepoSource::has_revision() const {
  return revision_case() != REVISION_NOT_SET;
}
inline void RepoSource::clear_has_revision() {
  _oneof_case_[0] = REVISION_NOT_SET;
}
inline RepoSource::RevisionCase RepoSource::revision_case() const {
  return RepoSource::RevisionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Source

// .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
inline bool Source::has_storage_source() const {
  return source_case() == kStorageSource;
}
inline void Source::set_has_storage_source() {
  _oneof_case_[0] = kStorageSource;
}
inline void Source::clear_storage_source() {
  if (has_storage_source()) {
    delete source_.storage_source_;
    clear_has_source();
  }
}
inline ::google::devtools::cloudbuild::v1::StorageSource* Source::release_storage_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Source.storage_source)
  if (has_storage_source()) {
    clear_has_source();
      ::google::devtools::cloudbuild::v1::StorageSource* temp = source_.storage_source_;
    source_.storage_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::cloudbuild::v1::StorageSource& Source::storage_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Source.storage_source)
  return has_storage_source()
      ? *source_.storage_source_
      : *reinterpret_cast< ::google::devtools::cloudbuild::v1::StorageSource*>(&::google::devtools::cloudbuild::v1::_StorageSource_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::StorageSource* Source::mutable_storage_source() {
  if (!has_storage_source()) {
    clear_source();
    set_has_storage_source();
    source_.storage_source_ = new ::google::devtools::cloudbuild::v1::StorageSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Source.storage_source)
  return source_.storage_source_;
}

// .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
inline bool Source::has_repo_source() const {
  return source_case() == kRepoSource;
}
inline void Source::set_has_repo_source() {
  _oneof_case_[0] = kRepoSource;
}
inline void Source::clear_repo_source() {
  if (has_repo_source()) {
    delete source_.repo_source_;
    clear_has_source();
  }
}
inline ::google::devtools::cloudbuild::v1::RepoSource* Source::release_repo_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Source.repo_source)
  if (has_repo_source()) {
    clear_has_source();
      ::google::devtools::cloudbuild::v1::RepoSource* temp = source_.repo_source_;
    source_.repo_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::cloudbuild::v1::RepoSource& Source::repo_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Source.repo_source)
  return has_repo_source()
      ? *source_.repo_source_
      : *reinterpret_cast< ::google::devtools::cloudbuild::v1::RepoSource*>(&::google::devtools::cloudbuild::v1::_RepoSource_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::RepoSource* Source::mutable_repo_source() {
  if (!has_repo_source()) {
    clear_source();
    set_has_repo_source();
    source_.repo_source_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Source.repo_source)
  return source_.repo_source_;
}

inline bool Source::has_source() const {
  return source_case() != SOURCE_NOT_SET;
}
inline void Source::clear_has_source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
inline Source::SourceCase Source::source_case() const {
  return Source::SourceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BuiltImage

// string name = 1;
inline void BuiltImage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuiltImage::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuiltImage.name)
  return name_.GetNoArena();
}
inline void BuiltImage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuiltImage.name)
}
#if LANG_CXX11
inline void BuiltImage::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuiltImage.name)
}
#endif
inline void BuiltImage::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuiltImage.name)
}
inline void BuiltImage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuiltImage.name)
}
inline ::std::string* BuiltImage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuiltImage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuiltImage::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuiltImage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuiltImage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuiltImage.name)
}

// string digest = 3;
inline void BuiltImage::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuiltImage::digest() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuiltImage.digest)
  return digest_.GetNoArena();
}
inline void BuiltImage::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
#if LANG_CXX11
inline void BuiltImage::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
#endif
inline void BuiltImage::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
inline void BuiltImage::set_digest(const char* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
inline ::std::string* BuiltImage::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuiltImage.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuiltImage::release_digest() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuiltImage.digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuiltImage::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuiltImage.digest)
}

// -------------------------------------------------------------------

// BuildStep

// string name = 1;
inline void BuildStep::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildStep::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.name)
  return name_.GetNoArena();
}
inline void BuildStep::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.name)
}
#if LANG_CXX11
inline void BuildStep::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.name)
}
#endif
inline void BuildStep::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.name)
}
inline void BuildStep::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.name)
}
inline ::std::string* BuildStep::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildStep::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildStep::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.name)
}

// repeated string env = 2;
inline int BuildStep::env_size() const {
  return env_.size();
}
inline void BuildStep::clear_env() {
  env_.Clear();
}
inline const ::std::string& BuildStep::env(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Get(index);
}
inline ::std::string* BuildStep::mutable_env(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Mutable(index);
}
inline void BuildStep::set_env(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.env)
  env_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BuildStep::set_env(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.env)
  env_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BuildStep::set_env(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  env_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.env)
}
inline void BuildStep::set_env(int index, const char* value, size_t size) {
  env_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.env)
}
inline ::std::string* BuildStep::add_env() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Add();
}
inline void BuildStep::add_env(const ::std::string& value) {
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.env)
}
#if LANG_CXX11
inline void BuildStep::add_env(::std::string&& value) {
  env_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.env)
}
#endif
inline void BuildStep::add_env(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.env)
}
inline void BuildStep::add_env(const char* value, size_t size) {
  env_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.env)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::env() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_env() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.env)
  return &env_;
}

// repeated string args = 3;
inline int BuildStep::args_size() const {
  return args_.size();
}
inline void BuildStep::clear_args() {
  args_.Clear();
}
inline const ::std::string& BuildStep::args(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Get(index);
}
inline ::std::string* BuildStep::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Mutable(index);
}
inline void BuildStep::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.args)
  args_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BuildStep::set_args(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.args)
  args_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BuildStep::set_args(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.args)
}
inline void BuildStep::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.args)
}
inline ::std::string* BuildStep::add_args() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Add();
}
inline void BuildStep::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.args)
}
#if LANG_CXX11
inline void BuildStep::add_args(::std::string&& value) {
  args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.args)
}
#endif
inline void BuildStep::add_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.args)
}
inline void BuildStep::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::args() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.args)
  return &args_;
}

// string dir = 4;
inline void BuildStep::clear_dir() {
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildStep::dir() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.dir)
  return dir_.GetNoArena();
}
inline void BuildStep::set_dir(const ::std::string& value) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.dir)
}
#if LANG_CXX11
inline void BuildStep::set_dir(::std::string&& value) {
  
  dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.dir)
}
#endif
inline void BuildStep::set_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.dir)
}
inline void BuildStep::set_dir(const char* value, size_t size) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.dir)
}
inline ::std::string* BuildStep::mutable_dir() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.dir)
  return dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildStep::release_dir() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.dir)
  
  return dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildStep::set_allocated_dir(::std::string* dir) {
  if (dir != NULL) {
    
  } else {
    
  }
  dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.dir)
}

// string id = 5;
inline void BuildStep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildStep::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.id)
  return id_.GetNoArena();
}
inline void BuildStep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.id)
}
#if LANG_CXX11
inline void BuildStep::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.id)
}
#endif
inline void BuildStep::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.id)
}
inline void BuildStep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.id)
}
inline ::std::string* BuildStep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildStep::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildStep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.id)
}

// repeated string wait_for = 6;
inline int BuildStep::wait_for_size() const {
  return wait_for_.size();
}
inline void BuildStep::clear_wait_for() {
  wait_for_.Clear();
}
inline const ::std::string& BuildStep::wait_for(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Get(index);
}
inline ::std::string* BuildStep::mutable_wait_for(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Mutable(index);
}
inline void BuildStep::set_wait_for(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  wait_for_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BuildStep::set_wait_for(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  wait_for_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BuildStep::set_wait_for(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  wait_for_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
inline void BuildStep::set_wait_for(int index, const char* value, size_t size) {
  wait_for_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
inline ::std::string* BuildStep::add_wait_for() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Add();
}
inline void BuildStep::add_wait_for(const ::std::string& value) {
  wait_for_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
#if LANG_CXX11
inline void BuildStep::add_wait_for(::std::string&& value) {
  wait_for_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
#endif
inline void BuildStep::add_wait_for(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  wait_for_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
inline void BuildStep::add_wait_for(const char* value, size_t size) {
  wait_for_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::wait_for() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_wait_for() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return &wait_for_;
}

// string entrypoint = 7;
inline void BuildStep::clear_entrypoint() {
  entrypoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildStep::entrypoint() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
  return entrypoint_.GetNoArena();
}
inline void BuildStep::set_entrypoint(const ::std::string& value) {
  
  entrypoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
#if LANG_CXX11
inline void BuildStep::set_entrypoint(::std::string&& value) {
  
  entrypoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
#endif
inline void BuildStep::set_entrypoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entrypoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
inline void BuildStep::set_entrypoint(const char* value, size_t size) {
  
  entrypoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
inline ::std::string* BuildStep::mutable_entrypoint() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
  return entrypoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildStep::release_entrypoint() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
  
  return entrypoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildStep::set_allocated_entrypoint(::std::string* entrypoint) {
  if (entrypoint != NULL) {
    
  } else {
    
  }
  entrypoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entrypoint);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}

// repeated string secret_env = 8;
inline int BuildStep::secret_env_size() const {
  return secret_env_.size();
}
inline void BuildStep::clear_secret_env() {
  secret_env_.Clear();
}
inline const ::std::string& BuildStep::secret_env(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_.Get(index);
}
inline ::std::string* BuildStep::mutable_secret_env(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_.Mutable(index);
}
inline void BuildStep::set_secret_env(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  secret_env_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BuildStep::set_secret_env(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  secret_env_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BuildStep::set_secret_env(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secret_env_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
inline void BuildStep::set_secret_env(int index, const char* value, size_t size) {
  secret_env_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
inline ::std::string* BuildStep::add_secret_env() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_.Add();
}
inline void BuildStep::add_secret_env(const ::std::string& value) {
  secret_env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
#if LANG_CXX11
inline void BuildStep::add_secret_env(::std::string&& value) {
  secret_env_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
#endif
inline void BuildStep::add_secret_env(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secret_env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
inline void BuildStep::add_secret_env(const char* value, size_t size) {
  secret_env_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::secret_env() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_secret_env() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return &secret_env_;
}

// repeated .google.devtools.cloudbuild.v1.Volume volumes = 9;
inline int BuildStep::volumes_size() const {
  return volumes_.size();
}
inline void BuildStep::clear_volumes() {
  volumes_.Clear();
}
inline const ::google::devtools::cloudbuild::v1::Volume& BuildStep::volumes(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_.Get(index);
}
inline ::google::devtools::cloudbuild::v1::Volume* BuildStep::mutable_volumes(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_.Mutable(index);
}
inline ::google::devtools::cloudbuild::v1::Volume* BuildStep::add_volumes() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Volume >*
BuildStep::mutable_volumes() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return &volumes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Volume >&
BuildStep::volumes() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_;
}

// -------------------------------------------------------------------

// Volume

// string name = 1;
inline void Volume::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Volume::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Volume.name)
  return name_.GetNoArena();
}
inline void Volume::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Volume.name)
}
#if LANG_CXX11
inline void Volume::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Volume.name)
}
#endif
inline void Volume::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Volume.name)
}
inline void Volume::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Volume.name)
}
inline ::std::string* Volume::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Volume.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Volume::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Volume.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Volume::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Volume.name)
}

// string path = 2;
inline void Volume::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Volume::path() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Volume.path)
  return path_.GetNoArena();
}
inline void Volume::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Volume.path)
}
#if LANG_CXX11
inline void Volume::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Volume.path)
}
#endif
inline void Volume::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Volume.path)
}
inline void Volume::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Volume.path)
}
inline ::std::string* Volume::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Volume.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Volume::release_path() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Volume.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Volume::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Volume.path)
}

// -------------------------------------------------------------------

// Results

// repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
inline int Results::images_size() const {
  return images_.size();
}
inline void Results::clear_images() {
  images_.Clear();
}
inline const ::google::devtools::cloudbuild::v1::BuiltImage& Results::images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Results.images)
  return images_.Get(index);
}
inline ::google::devtools::cloudbuild::v1::BuiltImage* Results::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Results.images)
  return images_.Mutable(index);
}
inline ::google::devtools::cloudbuild::v1::BuiltImage* Results::add_images() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.images)
  return images_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >*
Results::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Results.images)
  return &images_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >&
Results::images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Results.images)
  return images_;
}

// repeated string build_step_images = 3;
inline int Results::build_step_images_size() const {
  return build_step_images_.size();
}
inline void Results::clear_build_step_images() {
  build_step_images_.Clear();
}
inline const ::std::string& Results::build_step_images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Get(index);
}
inline ::std::string* Results::mutable_build_step_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Mutable(index);
}
inline void Results::set_build_step_images(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Results.build_step_images)
  build_step_images_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Results::set_build_step_images(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Results.build_step_images)
  build_step_images_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Results::set_build_step_images(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  build_step_images_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Results.build_step_images)
}
inline void Results::set_build_step_images(int index, const char* value, size_t size) {
  build_step_images_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Results.build_step_images)
}
inline ::std::string* Results::add_build_step_images() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Add();
}
inline void Results::add_build_step_images(const ::std::string& value) {
  build_step_images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.build_step_images)
}
#if LANG_CXX11
inline void Results::add_build_step_images(::std::string&& value) {
  build_step_images_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.build_step_images)
}
#endif
inline void Results::add_build_step_images(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  build_step_images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Results.build_step_images)
}
inline void Results::add_build_step_images(const char* value, size_t size) {
  build_step_images_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Results.build_step_images)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Results::build_step_images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Results::mutable_build_step_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Results.build_step_images)
  return &build_step_images_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Build

// string id = 1;
inline void Build::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Build::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.id)
  return id_.GetNoArena();
}
inline void Build::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.id)
}
#if LANG_CXX11
inline void Build::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.id)
}
#endif
inline void Build::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.id)
}
inline void Build::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.id)
}
inline ::std::string* Build::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Build::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Build::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.id)
}

// string project_id = 16;
inline void Build::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Build::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.project_id)
  return project_id_.GetNoArena();
}
inline void Build::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.project_id)
}
#if LANG_CXX11
inline void Build::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.project_id)
}
#endif
inline void Build::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.project_id)
}
inline void Build::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.project_id)
}
inline ::std::string* Build::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Build::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Build::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.project_id)
}

// .google.devtools.cloudbuild.v1.Build.Status status = 2;
inline void Build::clear_status() {
  status_ = 0;
}
inline ::google::devtools::cloudbuild::v1::Build_Status Build::status() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.status)
  return static_cast< ::google::devtools::cloudbuild::v1::Build_Status >(status_);
}
inline void Build::set_status(::google::devtools::cloudbuild::v1::Build_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.status)
}

// string status_detail = 24;
inline void Build::clear_status_detail() {
  status_detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Build::status_detail() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.status_detail)
  return status_detail_.GetNoArena();
}
inline void Build::set_status_detail(const ::std::string& value) {
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.status_detail)
}
#if LANG_CXX11
inline void Build::set_status_detail(::std::string&& value) {
  
  status_detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.status_detail)
}
#endif
inline void Build::set_status_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.status_detail)
}
inline void Build::set_status_detail(const char* value, size_t size) {
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.status_detail)
}
inline ::std::string* Build::mutable_status_detail() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.status_detail)
  return status_detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Build::release_status_detail() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.status_detail)
  
  return status_detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Build::set_allocated_status_detail(::std::string* status_detail) {
  if (status_detail != NULL) {
    
  } else {
    
  }
  status_detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_detail);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.status_detail)
}

// .google.devtools.cloudbuild.v1.Source source = 3;
inline bool Build::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline void Build::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::Source& Build::source() const {
  const ::google::devtools::cloudbuild::v1::Source* p = source_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.source)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::Source*>(
      &::google::devtools::cloudbuild::v1::_Source_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::Source* Build::release_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.source)
  
  ::google::devtools::cloudbuild::v1::Source* temp = source_;
  source_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::Source* Build::mutable_source() {
  
  if (source_ == NULL) {
    source_ = new ::google::devtools::cloudbuild::v1::Source;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.source)
  return source_;
}
inline void Build::set_allocated_source(::google::devtools::cloudbuild::v1::Source* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete source_;
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.source)
}

// repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
inline int Build::steps_size() const {
  return steps_.size();
}
inline void Build::clear_steps() {
  steps_.Clear();
}
inline const ::google::devtools::cloudbuild::v1::BuildStep& Build::steps(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Get(index);
}
inline ::google::devtools::cloudbuild::v1::BuildStep* Build::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Mutable(index);
}
inline ::google::devtools::cloudbuild::v1::BuildStep* Build::add_steps() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >*
Build::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.steps)
  return &steps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >&
Build::steps() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.steps)
  return steps_;
}

// .google.devtools.cloudbuild.v1.Results results = 10;
inline bool Build::has_results() const {
  return this != internal_default_instance() && results_ != NULL;
}
inline void Build::clear_results() {
  if (GetArenaNoVirtual() == NULL && results_ != NULL) {
    delete results_;
  }
  results_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::Results& Build::results() const {
  const ::google::devtools::cloudbuild::v1::Results* p = results_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.results)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::Results*>(
      &::google::devtools::cloudbuild::v1::_Results_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::Results* Build::release_results() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.results)
  
  ::google::devtools::cloudbuild::v1::Results* temp = results_;
  results_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::Results* Build::mutable_results() {
  
  if (results_ == NULL) {
    results_ = new ::google::devtools::cloudbuild::v1::Results;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.results)
  return results_;
}
inline void Build::set_allocated_results(::google::devtools::cloudbuild::v1::Results* results) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete results_;
  }
  if (results) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      results = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, results, submessage_arena);
    }
    
  } else {
    
  }
  results_ = results;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.results)
}

// .google.protobuf.Timestamp create_time = 6;
inline bool Build::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Build::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Build::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Build::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.create_time)
  return create_time_;
}
inline void Build::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.create_time)
}

// .google.protobuf.Timestamp start_time = 7;
inline bool Build::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Build::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Build::release_start_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Build::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.start_time)
  return start_time_;
}
inline void Build::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.start_time)
}

// .google.protobuf.Timestamp finish_time = 8;
inline bool Build::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Build::finish_time() const {
  const ::google::protobuf::Timestamp* p = finish_time_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.finish_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Build::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Build::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.finish_time)
  return finish_time_;
}
inline void Build::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(finish_time_);
  }
  if (finish_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(finish_time)->GetArena();
    if (message_arena != submessage_arena) {
      finish_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, finish_time, submessage_arena);
    }
    
  } else {
    
  }
  finish_time_ = finish_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.finish_time)
}

// .google.protobuf.Duration timeout = 12;
inline bool Build::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::google::protobuf::Duration& Build::timeout() const {
  const ::google::protobuf::Duration* p = timeout_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* Build::release_timeout() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.timeout)
  
  ::google::protobuf::Duration* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* Build::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.timeout)
  return timeout_;
}
inline void Build::set_allocated_timeout(::google::protobuf::Duration* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(timeout)->GetArena();
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.timeout)
}

// repeated string images = 13;
inline int Build::images_size() const {
  return images_.size();
}
inline void Build::clear_images() {
  images_.Clear();
}
inline const ::std::string& Build::images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.images)
  return images_.Get(index);
}
inline ::std::string* Build::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.images)
  return images_.Mutable(index);
}
inline void Build::set_images(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.images)
  images_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Build::set_images(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.images)
  images_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Build::set_images(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  images_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.images)
}
inline void Build::set_images(int index, const char* value, size_t size) {
  images_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.images)
}
inline ::std::string* Build::add_images() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Build.images)
  return images_.Add();
}
inline void Build::add_images(const ::std::string& value) {
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.images)
}
#if LANG_CXX11
inline void Build::add_images(::std::string&& value) {
  images_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.images)
}
#endif
inline void Build::add_images(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Build.images)
}
inline void Build::add_images(const char* value, size_t size) {
  images_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Build.images)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Build::images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.images)
  return images_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Build::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.images)
  return &images_;
}

// string logs_bucket = 19;
inline void Build::clear_logs_bucket() {
  logs_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Build::logs_bucket() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.logs_bucket)
  return logs_bucket_.GetNoArena();
}
inline void Build::set_logs_bucket(const ::std::string& value) {
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
#if LANG_CXX11
inline void Build::set_logs_bucket(::std::string&& value) {
  
  logs_bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
#endif
inline void Build::set_logs_bucket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
inline void Build::set_logs_bucket(const char* value, size_t size) {
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
inline ::std::string* Build::mutable_logs_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.logs_bucket)
  return logs_bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Build::release_logs_bucket() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.logs_bucket)
  
  return logs_bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Build::set_allocated_logs_bucket(::std::string* logs_bucket) {
  if (logs_bucket != NULL) {
    
  } else {
    
  }
  logs_bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logs_bucket);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.logs_bucket)
}

// .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
inline bool Build::has_source_provenance() const {
  return this != internal_default_instance() && source_provenance_ != NULL;
}
inline void Build::clear_source_provenance() {
  if (GetArenaNoVirtual() == NULL && source_provenance_ != NULL) {
    delete source_provenance_;
  }
  source_provenance_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::SourceProvenance& Build::source_provenance() const {
  const ::google::devtools::cloudbuild::v1::SourceProvenance* p = source_provenance_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.source_provenance)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::SourceProvenance*>(
      &::google::devtools::cloudbuild::v1::_SourceProvenance_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::SourceProvenance* Build::release_source_provenance() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.source_provenance)
  
  ::google::devtools::cloudbuild::v1::SourceProvenance* temp = source_provenance_;
  source_provenance_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::SourceProvenance* Build::mutable_source_provenance() {
  
  if (source_provenance_ == NULL) {
    source_provenance_ = new ::google::devtools::cloudbuild::v1::SourceProvenance;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.source_provenance)
  return source_provenance_;
}
inline void Build::set_allocated_source_provenance(::google::devtools::cloudbuild::v1::SourceProvenance* source_provenance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete source_provenance_;
  }
  if (source_provenance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_provenance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_provenance, submessage_arena);
    }
    
  } else {
    
  }
  source_provenance_ = source_provenance;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.source_provenance)
}

// string build_trigger_id = 22;
inline void Build::clear_build_trigger_id() {
  build_trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Build::build_trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.build_trigger_id)
  return build_trigger_id_.GetNoArena();
}
inline void Build::set_build_trigger_id(const ::std::string& value) {
  
  build_trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
#if LANG_CXX11
inline void Build::set_build_trigger_id(::std::string&& value) {
  
  build_trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
#endif
inline void Build::set_build_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  build_trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
inline void Build::set_build_trigger_id(const char* value, size_t size) {
  
  build_trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
inline ::std::string* Build::mutable_build_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.build_trigger_id)
  return build_trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Build::release_build_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.build_trigger_id)
  
  return build_trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Build::set_allocated_build_trigger_id(::std::string* build_trigger_id) {
  if (build_trigger_id != NULL) {
    
  } else {
    
  }
  build_trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}

// .google.devtools.cloudbuild.v1.BuildOptions options = 23;
inline bool Build::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline void Build::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::BuildOptions& Build::options() const {
  const ::google::devtools::cloudbuild::v1::BuildOptions* p = options_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.options)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::BuildOptions*>(
      &::google::devtools::cloudbuild::v1::_BuildOptions_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::BuildOptions* Build::release_options() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.options)
  
  ::google::devtools::cloudbuild::v1::BuildOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::BuildOptions* Build::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::google::devtools::cloudbuild::v1::BuildOptions;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.options)
  return options_;
}
inline void Build::set_allocated_options(::google::devtools::cloudbuild::v1::BuildOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete options_;
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.options)
}

// string log_url = 25;
inline void Build::clear_log_url() {
  log_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Build::log_url() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.log_url)
  return log_url_.GetNoArena();
}
inline void Build::set_log_url(const ::std::string& value) {
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.log_url)
}
#if LANG_CXX11
inline void Build::set_log_url(::std::string&& value) {
  
  log_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.log_url)
}
#endif
inline void Build::set_log_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.log_url)
}
inline void Build::set_log_url(const char* value, size_t size) {
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.log_url)
}
inline ::std::string* Build::mutable_log_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.log_url)
  return log_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Build::release_log_url() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.log_url)
  
  return log_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Build::set_allocated_log_url(::std::string* log_url) {
  if (log_url != NULL) {
    
  } else {
    
  }
  log_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.log_url)
}

// map<string, string> substitutions = 29;
inline int Build::substitutions_size() const {
  return substitutions_.size();
}
inline void Build::clear_substitutions() {
  substitutions_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Build::substitutions() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.Build.substitutions)
  return substitutions_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Build::mutable_substitutions() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.Build.substitutions)
  return substitutions_.MutableMap();
}

// repeated string tags = 31;
inline int Build::tags_size() const {
  return tags_.size();
}
inline void Build::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& Build::tags(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.tags)
  return tags_.Get(index);
}
inline ::std::string* Build::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.tags)
  return tags_.Mutable(index);
}
inline void Build::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Build::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Build::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.tags)
}
inline void Build::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.tags)
}
inline ::std::string* Build::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Build.tags)
  return tags_.Add();
}
inline void Build::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.tags)
}
#if LANG_CXX11
inline void Build::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.tags)
}
#endif
inline void Build::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Build.tags)
}
inline void Build::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Build.tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Build::tags() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Build::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.tags)
  return &tags_;
}

// repeated .google.devtools.cloudbuild.v1.Secret secrets = 32;
inline int Build::secrets_size() const {
  return secrets_.size();
}
inline void Build::clear_secrets() {
  secrets_.Clear();
}
inline const ::google::devtools::cloudbuild::v1::Secret& Build::secrets(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_.Get(index);
}
inline ::google::devtools::cloudbuild::v1::Secret* Build::mutable_secrets(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_.Mutable(index);
}
inline ::google::devtools::cloudbuild::v1::Secret* Build::add_secrets() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Secret >*
Build::mutable_secrets() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.secrets)
  return &secrets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Secret >&
Build::secrets() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_;
}

// -------------------------------------------------------------------

// BuildOperationMetadata

// .google.devtools.cloudbuild.v1.Build build = 1;
inline bool BuildOperationMetadata::has_build() const {
  return this != internal_default_instance() && build_ != NULL;
}
inline void BuildOperationMetadata::clear_build() {
  if (GetArenaNoVirtual() == NULL && build_ != NULL) {
    delete build_;
  }
  build_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::Build& BuildOperationMetadata::build() const {
  const ::google::devtools::cloudbuild::v1::Build* p = build_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::Build*>(
      &::google::devtools::cloudbuild::v1::_Build_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::Build* BuildOperationMetadata::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  
  ::google::devtools::cloudbuild::v1::Build* temp = build_;
  build_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::Build* BuildOperationMetadata::mutable_build() {
  
  if (build_ == NULL) {
    build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  return build_;
}
inline void BuildOperationMetadata::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete build_;
  }
  if (build) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build, submessage_arena);
    }
    
  } else {
    
  }
  build_ = build;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SourceProvenance

// .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
inline bool SourceProvenance::has_resolved_storage_source() const {
  return this != internal_default_instance() && resolved_storage_source_ != NULL;
}
inline void SourceProvenance::clear_resolved_storage_source() {
  if (GetArenaNoVirtual() == NULL && resolved_storage_source_ != NULL) {
    delete resolved_storage_source_;
  }
  resolved_storage_source_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::StorageSource& SourceProvenance::resolved_storage_source() const {
  const ::google::devtools::cloudbuild::v1::StorageSource* p = resolved_storage_source_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::StorageSource*>(
      &::google::devtools::cloudbuild::v1::_StorageSource_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::StorageSource* SourceProvenance::release_resolved_storage_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  
  ::google::devtools::cloudbuild::v1::StorageSource* temp = resolved_storage_source_;
  resolved_storage_source_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::StorageSource* SourceProvenance::mutable_resolved_storage_source() {
  
  if (resolved_storage_source_ == NULL) {
    resolved_storage_source_ = new ::google::devtools::cloudbuild::v1::StorageSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  return resolved_storage_source_;
}
inline void SourceProvenance::set_allocated_resolved_storage_source(::google::devtools::cloudbuild::v1::StorageSource* resolved_storage_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resolved_storage_source_;
  }
  if (resolved_storage_source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resolved_storage_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resolved_storage_source, submessage_arena);
    }
    
  } else {
    
  }
  resolved_storage_source_ = resolved_storage_source;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
}

// .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
inline bool SourceProvenance::has_resolved_repo_source() const {
  return this != internal_default_instance() && resolved_repo_source_ != NULL;
}
inline void SourceProvenance::clear_resolved_repo_source() {
  if (GetArenaNoVirtual() == NULL && resolved_repo_source_ != NULL) {
    delete resolved_repo_source_;
  }
  resolved_repo_source_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::RepoSource& SourceProvenance::resolved_repo_source() const {
  const ::google::devtools::cloudbuild::v1::RepoSource* p = resolved_repo_source_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::RepoSource*>(
      &::google::devtools::cloudbuild::v1::_RepoSource_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::RepoSource* SourceProvenance::release_resolved_repo_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  
  ::google::devtools::cloudbuild::v1::RepoSource* temp = resolved_repo_source_;
  resolved_repo_source_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::RepoSource* SourceProvenance::mutable_resolved_repo_source() {
  
  if (resolved_repo_source_ == NULL) {
    resolved_repo_source_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  return resolved_repo_source_;
}
inline void SourceProvenance::set_allocated_resolved_repo_source(::google::devtools::cloudbuild::v1::RepoSource* resolved_repo_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resolved_repo_source_;
  }
  if (resolved_repo_source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resolved_repo_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resolved_repo_source, submessage_arena);
    }
    
  } else {
    
  }
  resolved_repo_source_ = resolved_repo_source;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
}

// map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
inline int SourceProvenance::file_hashes_size() const {
  return file_hashes_.size();
}
inline void SourceProvenance::clear_file_hashes() {
  file_hashes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >&
SourceProvenance::file_hashes() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.SourceProvenance.file_hashes)
  return file_hashes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >*
SourceProvenance::mutable_file_hashes() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.SourceProvenance.file_hashes)
  return file_hashes_.MutableMap();
}

// -------------------------------------------------------------------

// FileHashes

// repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
inline int FileHashes::file_hash_size() const {
  return file_hash_.size();
}
inline void FileHashes::clear_file_hash() {
  file_hash_.Clear();
}
inline const ::google::devtools::cloudbuild::v1::Hash& FileHashes::file_hash(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Get(index);
}
inline ::google::devtools::cloudbuild::v1::Hash* FileHashes::mutable_file_hash(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Mutable(index);
}
inline ::google::devtools::cloudbuild::v1::Hash* FileHashes::add_file_hash() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >*
FileHashes::mutable_file_hash() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return &file_hash_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >&
FileHashes::file_hash() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_;
}

// -------------------------------------------------------------------

// Hash

// .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
inline void Hash::clear_type() {
  type_ = 0;
}
inline ::google::devtools::cloudbuild::v1::Hash_HashType Hash::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Hash.type)
  return static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(type_);
}
inline void Hash::set_type(::google::devtools::cloudbuild::v1::Hash_HashType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Hash.type)
}

// bytes value = 2;
inline void Hash::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Hash::value() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Hash.value)
  return value_.GetNoArena();
}
inline void Hash::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Hash.value)
}
#if LANG_CXX11
inline void Hash::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Hash.value)
}
#endif
inline void Hash::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Hash.value)
}
inline void Hash::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Hash.value)
}
inline ::std::string* Hash::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Hash.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Hash::release_value() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Hash.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Hash::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Hash.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Secret

// string kms_key_name = 1;
inline void Secret::clear_kms_key_name() {
  kms_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Secret::kms_key_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Secret.kms_key_name)
  return kms_key_name_.GetNoArena();
}
inline void Secret::set_kms_key_name(const ::std::string& value) {
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
#if LANG_CXX11
inline void Secret::set_kms_key_name(::std::string&& value) {
  
  kms_key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
#endif
inline void Secret::set_kms_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
inline void Secret::set_kms_key_name(const char* value, size_t size) {
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
inline ::std::string* Secret::mutable_kms_key_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Secret.kms_key_name)
  return kms_key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Secret::release_kms_key_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Secret.kms_key_name)
  
  return kms_key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Secret::set_allocated_kms_key_name(::std::string* kms_key_name) {
  if (kms_key_name != NULL) {
    
  } else {
    
  }
  kms_key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kms_key_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}

// map<string, bytes> secret_env = 3;
inline int Secret::secret_env_size() const {
  return secret_env_.size();
}
inline void Secret::clear_secret_env() {
  secret_env_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Secret::secret_env() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.Secret.secret_env)
  return secret_env_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Secret::mutable_secret_env() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.Secret.secret_env)
  return secret_env_.MutableMap();
}

// -------------------------------------------------------------------

// CreateBuildRequest

// string project_id = 1;
inline void CreateBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  return project_id_.GetNoArena();
}
inline void CreateBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
#if LANG_CXX11
inline void CreateBuildRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
#endif
inline void CreateBuildRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
inline void CreateBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
inline ::std::string* CreateBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}

// .google.devtools.cloudbuild.v1.Build build = 2;
inline bool CreateBuildRequest::has_build() const {
  return this != internal_default_instance() && build_ != NULL;
}
inline void CreateBuildRequest::clear_build() {
  if (GetArenaNoVirtual() == NULL && build_ != NULL) {
    delete build_;
  }
  build_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::Build& CreateBuildRequest::build() const {
  const ::google::devtools::cloudbuild::v1::Build* p = build_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::Build*>(
      &::google::devtools::cloudbuild::v1::_Build_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::Build* CreateBuildRequest::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  
  ::google::devtools::cloudbuild::v1::Build* temp = build_;
  build_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::Build* CreateBuildRequest::mutable_build() {
  
  if (build_ == NULL) {
    build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  return build_;
}
inline void CreateBuildRequest::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete build_;
  }
  if (build) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build, submessage_arena);
    }
    
  } else {
    
  }
  build_ = build;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
}

// -------------------------------------------------------------------

// GetBuildRequest

// string project_id = 1;
inline void GetBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  return project_id_.GetNoArena();
}
inline void GetBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
#if LANG_CXX11
inline void GetBuildRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
#endif
inline void GetBuildRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
inline void GetBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
inline ::std::string* GetBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}

// string id = 2;
inline void GetBuildRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBuildRequest::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  return id_.GetNoArena();
}
inline void GetBuildRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
#if LANG_CXX11
inline void GetBuildRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
#endif
inline void GetBuildRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
inline void GetBuildRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
inline ::std::string* GetBuildRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBuildRequest::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBuildRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}

// -------------------------------------------------------------------

// ListBuildsRequest

// string project_id = 1;
inline void ListBuildsRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  return project_id_.GetNoArena();
}
inline void ListBuildsRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
#if LANG_CXX11
inline void ListBuildsRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
#endif
inline void ListBuildsRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
inline void ListBuildsRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
inline ::std::string* ListBuildsRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}

// int32 page_size = 2;
inline void ListBuildsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListBuildsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.page_size)
  return page_size_;
}
inline void ListBuildsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.page_size)
}

// string page_token = 3;
inline void ListBuildsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListBuildsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
#if LANG_CXX11
inline void ListBuildsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
#endif
inline void ListBuildsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
inline void ListBuildsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
inline ::std::string* ListBuildsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}

// string filter = 8;
inline void ListBuildsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListBuildsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
#if LANG_CXX11
inline void ListBuildsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
#endif
inline void ListBuildsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
inline void ListBuildsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
inline ::std::string* ListBuildsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}

// -------------------------------------------------------------------

// ListBuildsResponse

// repeated .google.devtools.cloudbuild.v1.Build builds = 1;
inline int ListBuildsResponse::builds_size() const {
  return builds_.size();
}
inline void ListBuildsResponse::clear_builds() {
  builds_.Clear();
}
inline const ::google::devtools::cloudbuild::v1::Build& ListBuildsResponse::builds(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Get(index);
}
inline ::google::devtools::cloudbuild::v1::Build* ListBuildsResponse::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Mutable(index);
}
inline ::google::devtools::cloudbuild::v1::Build* ListBuildsResponse::add_builds() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >*
ListBuildsResponse::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return &builds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >&
ListBuildsResponse::builds() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_;
}

// string next_page_token = 2;
inline void ListBuildsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListBuildsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListBuildsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
#endif
inline void ListBuildsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
inline void ListBuildsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
inline ::std::string* ListBuildsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}

// -------------------------------------------------------------------

// CancelBuildRequest

// string project_id = 1;
inline void CancelBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  return project_id_.GetNoArena();
}
inline void CancelBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
#if LANG_CXX11
inline void CancelBuildRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
#endif
inline void CancelBuildRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
inline void CancelBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
inline ::std::string* CancelBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}

// string id = 2;
inline void CancelBuildRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelBuildRequest::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  return id_.GetNoArena();
}
inline void CancelBuildRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
#if LANG_CXX11
inline void CancelBuildRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
#endif
inline void CancelBuildRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
inline void CancelBuildRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
inline ::std::string* CancelBuildRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelBuildRequest::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelBuildRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BuildTrigger

// string id = 1;
inline void BuildTrigger::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildTrigger::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.id)
  return id_.GetNoArena();
}
inline void BuildTrigger::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
#if LANG_CXX11
inline void BuildTrigger::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
#endif
inline void BuildTrigger::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
inline void BuildTrigger::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
inline ::std::string* BuildTrigger::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildTrigger::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildTrigger::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.id)
}

// string description = 10;
inline void BuildTrigger::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildTrigger::description() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.description)
  return description_.GetNoArena();
}
inline void BuildTrigger::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
#if LANG_CXX11
inline void BuildTrigger::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
#endif
inline void BuildTrigger::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
inline void BuildTrigger::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
inline ::std::string* BuildTrigger::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildTrigger::release_description() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildTrigger::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.description)
}

// .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
inline bool BuildTrigger::has_trigger_template() const {
  return this != internal_default_instance() && trigger_template_ != NULL;
}
inline void BuildTrigger::clear_trigger_template() {
  if (GetArenaNoVirtual() == NULL && trigger_template_ != NULL) {
    delete trigger_template_;
  }
  trigger_template_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::RepoSource& BuildTrigger::trigger_template() const {
  const ::google::devtools::cloudbuild::v1::RepoSource* p = trigger_template_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::RepoSource*>(
      &::google::devtools::cloudbuild::v1::_RepoSource_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::RepoSource* BuildTrigger::release_trigger_template() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  
  ::google::devtools::cloudbuild::v1::RepoSource* temp = trigger_template_;
  trigger_template_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::RepoSource* BuildTrigger::mutable_trigger_template() {
  
  if (trigger_template_ == NULL) {
    trigger_template_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  return trigger_template_;
}
inline void BuildTrigger::set_allocated_trigger_template(::google::devtools::cloudbuild::v1::RepoSource* trigger_template) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete trigger_template_;
  }
  if (trigger_template) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trigger_template = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trigger_template, submessage_arena);
    }
    
  } else {
    
  }
  trigger_template_ = trigger_template;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
}

// .google.devtools.cloudbuild.v1.Build build = 4;
inline bool BuildTrigger::has_build() const {
  return build_template_case() == kBuild;
}
inline void BuildTrigger::set_has_build() {
  _oneof_case_[0] = kBuild;
}
inline void BuildTrigger::clear_build() {
  if (has_build()) {
    delete build_template_.build_;
    clear_has_build_template();
  }
}
inline ::google::devtools::cloudbuild::v1::Build* BuildTrigger::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.build)
  if (has_build()) {
    clear_has_build_template();
      ::google::devtools::cloudbuild::v1::Build* temp = build_template_.build_;
    build_template_.build_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::cloudbuild::v1::Build& BuildTrigger::build() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.build)
  return has_build()
      ? *build_template_.build_
      : *reinterpret_cast< ::google::devtools::cloudbuild::v1::Build*>(&::google::devtools::cloudbuild::v1::_Build_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::Build* BuildTrigger::mutable_build() {
  if (!has_build()) {
    clear_build_template();
    set_has_build();
    build_template_.build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.build)
  return build_template_.build_;
}

// string filename = 8;
inline bool BuildTrigger::has_filename() const {
  return build_template_case() == kFilename;
}
inline void BuildTrigger::set_has_filename() {
  _oneof_case_[0] = kFilename;
}
inline void BuildTrigger::clear_filename() {
  if (has_filename()) {
    build_template_.filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_build_template();
  }
}
inline const ::std::string& BuildTrigger::filename() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (has_filename()) {
    return build_template_.filename_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void BuildTrigger::set_filename(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
#if LANG_CXX11
inline void BuildTrigger::set_filename(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
#endif
inline void BuildTrigger::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
inline void BuildTrigger::set_filename(const char* value, size_t size) {
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
inline ::std::string* BuildTrigger::mutable_filename() {
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  return build_template_.filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildTrigger::release_filename() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (has_filename()) {
    clear_has_build_template();
    return build_template_.filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void BuildTrigger::set_allocated_filename(::std::string* filename) {
  if (!has_filename()) {
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_build_template();
  if (filename != NULL) {
    set_has_filename();
    build_template_.filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        filename);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}

// .google.protobuf.Timestamp create_time = 5;
inline bool BuildTrigger::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& BuildTrigger::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* BuildTrigger::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BuildTrigger::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  return create_time_;
}
inline void BuildTrigger::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
}

// bool disabled = 9;
inline void BuildTrigger::clear_disabled() {
  disabled_ = false;
}
inline bool BuildTrigger::disabled() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.disabled)
  return disabled_;
}
inline void BuildTrigger::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.disabled)
}

// map<string, string> substitutions = 11;
inline int BuildTrigger::substitutions_size() const {
  return substitutions_.size();
}
inline void BuildTrigger::clear_substitutions() {
  substitutions_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
BuildTrigger::substitutions() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.BuildTrigger.substitutions)
  return substitutions_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
BuildTrigger::mutable_substitutions() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.BuildTrigger.substitutions)
  return substitutions_.MutableMap();
}

inline bool BuildTrigger::has_build_template() const {
  return build_template_case() != BUILD_TEMPLATE_NOT_SET;
}
inline void BuildTrigger::clear_has_build_template() {
  _oneof_case_[0] = BUILD_TEMPLATE_NOT_SET;
}
inline BuildTrigger::BuildTemplateCase BuildTrigger::build_template_case() const {
  return BuildTrigger::BuildTemplateCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CreateBuildTriggerRequest

// string project_id = 1;
inline void CreateBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
inline void CreateBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
#if LANG_CXX11
inline void CreateBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
#endif
inline void CreateBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
inline void CreateBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
inline ::std::string* CreateBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}

// .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
inline bool CreateBuildTriggerRequest::has_trigger() const {
  return this != internal_default_instance() && trigger_ != NULL;
}
inline void CreateBuildTriggerRequest::clear_trigger() {
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) {
    delete trigger_;
  }
  trigger_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::BuildTrigger& CreateBuildTriggerRequest::trigger() const {
  const ::google::devtools::cloudbuild::v1::BuildTrigger* p = trigger_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::BuildTrigger*>(
      &::google::devtools::cloudbuild::v1::_BuildTrigger_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::BuildTrigger* CreateBuildTriggerRequest::release_trigger() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  
  ::google::devtools::cloudbuild::v1::BuildTrigger* temp = trigger_;
  trigger_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::BuildTrigger* CreateBuildTriggerRequest::mutable_trigger() {
  
  if (trigger_ == NULL) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  return trigger_;
}
inline void CreateBuildTriggerRequest::set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete trigger_;
  }
  if (trigger) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trigger = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trigger, submessage_arena);
    }
    
  } else {
    
  }
  trigger_ = trigger;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
}

// -------------------------------------------------------------------

// GetBuildTriggerRequest

// string project_id = 1;
inline void GetBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
inline void GetBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
#if LANG_CXX11
inline void GetBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
#endif
inline void GetBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
inline void GetBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
inline ::std::string* GetBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}

// string trigger_id = 2;
inline void GetBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena();
}
inline void GetBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
#if LANG_CXX11
inline void GetBuildTriggerRequest::set_trigger_id(::std::string&& value) {
  
  trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
#endif
inline void GetBuildTriggerRequest::set_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
inline void GetBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
inline ::std::string* GetBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}

// -------------------------------------------------------------------

// ListBuildTriggersRequest

// string project_id = 1;
inline void ListBuildTriggersRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuildTriggersRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  return project_id_.GetNoArena();
}
inline void ListBuildTriggersRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
#if LANG_CXX11
inline void ListBuildTriggersRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
#endif
inline void ListBuildTriggersRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
inline void ListBuildTriggersRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
inline ::std::string* ListBuildTriggersRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuildTriggersRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuildTriggersRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}

// -------------------------------------------------------------------

// ListBuildTriggersResponse

// repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
inline int ListBuildTriggersResponse::triggers_size() const {
  return triggers_.size();
}
inline void ListBuildTriggersResponse::clear_triggers() {
  triggers_.Clear();
}
inline const ::google::devtools::cloudbuild::v1::BuildTrigger& ListBuildTriggersResponse::triggers(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Get(index);
}
inline ::google::devtools::cloudbuild::v1::BuildTrigger* ListBuildTriggersResponse::mutable_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Mutable(index);
}
inline ::google::devtools::cloudbuild::v1::BuildTrigger* ListBuildTriggersResponse::add_triggers() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >*
ListBuildTriggersResponse::mutable_triggers() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return &triggers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >&
ListBuildTriggersResponse::triggers() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_;
}

// -------------------------------------------------------------------

// DeleteBuildTriggerRequest

// string project_id = 1;
inline void DeleteBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
inline void DeleteBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
#if LANG_CXX11
inline void DeleteBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
#endif
inline void DeleteBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
inline void DeleteBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
inline ::std::string* DeleteBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}

// string trigger_id = 2;
inline void DeleteBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena();
}
inline void DeleteBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
#if LANG_CXX11
inline void DeleteBuildTriggerRequest::set_trigger_id(::std::string&& value) {
  
  trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
#endif
inline void DeleteBuildTriggerRequest::set_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
inline void DeleteBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
inline ::std::string* DeleteBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}

// -------------------------------------------------------------------

// UpdateBuildTriggerRequest

// string project_id = 1;
inline void UpdateBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
inline void UpdateBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
#if LANG_CXX11
inline void UpdateBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
#endif
inline void UpdateBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
inline void UpdateBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
inline ::std::string* UpdateBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}

// string trigger_id = 2;
inline void UpdateBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena();
}
inline void UpdateBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
#if LANG_CXX11
inline void UpdateBuildTriggerRequest::set_trigger_id(::std::string&& value) {
  
  trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
#endif
inline void UpdateBuildTriggerRequest::set_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
inline void UpdateBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
inline ::std::string* UpdateBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}

// .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
inline bool UpdateBuildTriggerRequest::has_trigger() const {
  return this != internal_default_instance() && trigger_ != NULL;
}
inline void UpdateBuildTriggerRequest::clear_trigger() {
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) {
    delete trigger_;
  }
  trigger_ = NULL;
}
inline const ::google::devtools::cloudbuild::v1::BuildTrigger& UpdateBuildTriggerRequest::trigger() const {
  const ::google::devtools::cloudbuild::v1::BuildTrigger* p = trigger_;
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::cloudbuild::v1::BuildTrigger*>(
      &::google::devtools::cloudbuild::v1::_BuildTrigger_default_instance_);
}
inline ::google::devtools::cloudbuild::v1::BuildTrigger* UpdateBuildTriggerRequest::release_trigger() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  
  ::google::devtools::cloudbuild::v1::BuildTrigger* temp = trigger_;
  trigger_ = NULL;
  return temp;
}
inline ::google::devtools::cloudbuild::v1::BuildTrigger* UpdateBuildTriggerRequest::mutable_trigger() {
  
  if (trigger_ == NULL) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  return trigger_;
}
inline void UpdateBuildTriggerRequest::set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete trigger_;
  }
  if (trigger) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trigger = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trigger, submessage_arena);
    }
    
  } else {
    
  }
  trigger_ = trigger;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
}

// -------------------------------------------------------------------

// BuildOptions

// repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
inline int BuildOptions::source_provenance_hash_size() const {
  return source_provenance_hash_.size();
}
inline void BuildOptions::clear_source_provenance_hash() {
  source_provenance_hash_.Clear();
}
inline ::google::devtools::cloudbuild::v1::Hash_HashType BuildOptions::source_provenance_hash(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(source_provenance_hash_.Get(index));
}
inline void BuildOptions::set_source_provenance_hash(int index, ::google::devtools::cloudbuild::v1::Hash_HashType value) {
  source_provenance_hash_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
}
inline void BuildOptions::add_source_provenance_hash(::google::devtools::cloudbuild::v1::Hash_HashType value) {
  source_provenance_hash_.Add(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
}
inline const ::google::protobuf::RepeatedField<int>&
BuildOptions::source_provenance_hash() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return source_provenance_hash_;
}
inline ::google::protobuf::RepeatedField<int>*
BuildOptions::mutable_source_provenance_hash() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return &source_provenance_hash_;
}

// .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
inline void BuildOptions::clear_requested_verify_option() {
  requested_verify_option_ = 0;
}
inline ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption BuildOptions::requested_verify_option() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.requested_verify_option)
  return static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption >(requested_verify_option_);
}
inline void BuildOptions::set_requested_verify_option(::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption value) {
  
  requested_verify_option_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.requested_verify_option)
}

// .google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
inline void BuildOptions::clear_substitution_option() {
  substitution_option_ = 0;
}
inline ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption BuildOptions::substitution_option() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.substitution_option)
  return static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption >(substitution_option_);
}
inline void BuildOptions::set_substitution_option(::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption value) {
  
  substitution_option_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.substitution_option)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace cloudbuild
}  // namespace devtools
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::cloudbuild::v1::Build_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::cloudbuild::v1::Build_Status>() {
  return ::google::devtools::cloudbuild::v1::Build_Status_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::cloudbuild::v1::Hash_HashType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::cloudbuild::v1::Hash_HashType>() {
  return ::google::devtools::cloudbuild::v1::Hash_HashType_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption>() {
  return ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption>() {
  return ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto__INCLUDED
