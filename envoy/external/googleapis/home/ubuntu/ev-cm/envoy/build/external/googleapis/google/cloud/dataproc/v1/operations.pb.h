// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1/operations.proto

#ifndef PROTOBUF_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsClusterOperationStatusImpl();
void InitDefaultsClusterOperationStatus();
void InitDefaultsClusterOperationMetadataImpl();
void InitDefaultsClusterOperationMetadata();
inline void InitDefaults() {
  InitDefaultsClusterOperationStatus();
  InitDefaultsClusterOperationMetadata();
}
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1 {
class ClusterOperationMetadata;
class ClusterOperationMetadataDefaultTypeInternal;
extern ClusterOperationMetadataDefaultTypeInternal _ClusterOperationMetadata_default_instance_;
class ClusterOperationStatus;
class ClusterOperationStatusDefaultTypeInternal;
extern ClusterOperationStatusDefaultTypeInternal _ClusterOperationStatus_default_instance_;
}  // namespace v1
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dataproc {
namespace v1 {

enum ClusterOperationStatus_State {
  ClusterOperationStatus_State_UNKNOWN = 0,
  ClusterOperationStatus_State_PENDING = 1,
  ClusterOperationStatus_State_RUNNING = 2,
  ClusterOperationStatus_State_DONE = 3,
  ClusterOperationStatus_State_ClusterOperationStatus_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClusterOperationStatus_State_ClusterOperationStatus_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClusterOperationStatus_State_IsValid(int value);
const ClusterOperationStatus_State ClusterOperationStatus_State_State_MIN = ClusterOperationStatus_State_UNKNOWN;
const ClusterOperationStatus_State ClusterOperationStatus_State_State_MAX = ClusterOperationStatus_State_DONE;
const int ClusterOperationStatus_State_State_ARRAYSIZE = ClusterOperationStatus_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClusterOperationStatus_State_descriptor();
inline const ::std::string& ClusterOperationStatus_State_Name(ClusterOperationStatus_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClusterOperationStatus_State_descriptor(), value);
}
inline bool ClusterOperationStatus_State_Parse(
    const ::std::string& name, ClusterOperationStatus_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClusterOperationStatus_State>(
    ClusterOperationStatus_State_descriptor(), name, value);
}
// ===================================================================

class ClusterOperationStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1.ClusterOperationStatus) */ {
 public:
  ClusterOperationStatus();
  virtual ~ClusterOperationStatus();

  ClusterOperationStatus(const ClusterOperationStatus& from);

  inline ClusterOperationStatus& operator=(const ClusterOperationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterOperationStatus(ClusterOperationStatus&& from) noexcept
    : ClusterOperationStatus() {
    *this = ::std::move(from);
  }

  inline ClusterOperationStatus& operator=(ClusterOperationStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterOperationStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClusterOperationStatus* internal_default_instance() {
    return reinterpret_cast<const ClusterOperationStatus*>(
               &_ClusterOperationStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ClusterOperationStatus* other);
  friend void swap(ClusterOperationStatus& a, ClusterOperationStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterOperationStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterOperationStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterOperationStatus& from);
  void MergeFrom(const ClusterOperationStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterOperationStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClusterOperationStatus_State State;
  static const State UNKNOWN =
    ClusterOperationStatus_State_UNKNOWN;
  static const State PENDING =
    ClusterOperationStatus_State_PENDING;
  static const State RUNNING =
    ClusterOperationStatus_State_RUNNING;
  static const State DONE =
    ClusterOperationStatus_State_DONE;
  static inline bool State_IsValid(int value) {
    return ClusterOperationStatus_State_IsValid(value);
  }
  static const State State_MIN =
    ClusterOperationStatus_State_State_MIN;
  static const State State_MAX =
    ClusterOperationStatus_State_State_MAX;
  static const int State_ARRAYSIZE =
    ClusterOperationStatus_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return ClusterOperationStatus_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return ClusterOperationStatus_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return ClusterOperationStatus_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string inner_state = 2;
  void clear_inner_state();
  static const int kInnerStateFieldNumber = 2;
  const ::std::string& inner_state() const;
  void set_inner_state(const ::std::string& value);
  #if LANG_CXX11
  void set_inner_state(::std::string&& value);
  #endif
  void set_inner_state(const char* value);
  void set_inner_state(const char* value, size_t size);
  ::std::string* mutable_inner_state();
  ::std::string* release_inner_state();
  void set_allocated_inner_state(::std::string* inner_state);

  // string details = 3;
  void clear_details();
  static const int kDetailsFieldNumber = 3;
  const ::std::string& details() const;
  void set_details(const ::std::string& value);
  #if LANG_CXX11
  void set_details(::std::string&& value);
  #endif
  void set_details(const char* value);
  void set_details(const char* value, size_t size);
  ::std::string* mutable_details();
  ::std::string* release_details();
  void set_allocated_details(::std::string* details);

  // .google.protobuf.Timestamp state_start_time = 4;
  bool has_state_start_time() const;
  void clear_state_start_time();
  static const int kStateStartTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& state_start_time() const;
  ::google::protobuf::Timestamp* release_state_start_time();
  ::google::protobuf::Timestamp* mutable_state_start_time();
  void set_allocated_state_start_time(::google::protobuf::Timestamp* state_start_time);

  // .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::cloud::dataproc::v1::ClusterOperationStatus_State state() const;
  void set_state(::google::cloud::dataproc::v1::ClusterOperationStatus_State value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1.ClusterOperationStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr inner_state_;
  ::google::protobuf::internal::ArenaStringPtr details_;
  ::google::protobuf::Timestamp* state_start_time_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::InitDefaultsClusterOperationStatusImpl();
};
// -------------------------------------------------------------------

class ClusterOperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1.ClusterOperationMetadata) */ {
 public:
  ClusterOperationMetadata();
  virtual ~ClusterOperationMetadata();

  ClusterOperationMetadata(const ClusterOperationMetadata& from);

  inline ClusterOperationMetadata& operator=(const ClusterOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterOperationMetadata(ClusterOperationMetadata&& from) noexcept
    : ClusterOperationMetadata() {
    *this = ::std::move(from);
  }

  inline ClusterOperationMetadata& operator=(ClusterOperationMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterOperationMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClusterOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const ClusterOperationMetadata*>(
               &_ClusterOperationMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ClusterOperationMetadata* other);
  friend void swap(ClusterOperationMetadata& a, ClusterOperationMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterOperationMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterOperationMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterOperationMetadata& from);
  void MergeFrom(const ClusterOperationMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterOperationMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
  int status_history_size() const;
  void clear_status_history();
  static const int kStatusHistoryFieldNumber = 10;
  const ::google::cloud::dataproc::v1::ClusterOperationStatus& status_history(int index) const;
  ::google::cloud::dataproc::v1::ClusterOperationStatus* mutable_status_history(int index);
  ::google::cloud::dataproc::v1::ClusterOperationStatus* add_status_history();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1::ClusterOperationStatus >*
      mutable_status_history();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1::ClusterOperationStatus >&
      status_history() const;

  // string cluster_name = 7;
  void clear_cluster_name();
  static const int kClusterNameFieldNumber = 7;
  const ::std::string& cluster_name() const;
  void set_cluster_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_name(::std::string&& value);
  #endif
  void set_cluster_name(const char* value);
  void set_cluster_name(const char* value, size_t size);
  ::std::string* mutable_cluster_name();
  ::std::string* release_cluster_name();
  void set_allocated_cluster_name(::std::string* cluster_name);

  // string cluster_uuid = 8;
  void clear_cluster_uuid();
  static const int kClusterUuidFieldNumber = 8;
  const ::std::string& cluster_uuid() const;
  void set_cluster_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_uuid(::std::string&& value);
  #endif
  void set_cluster_uuid(const char* value);
  void set_cluster_uuid(const char* value, size_t size);
  ::std::string* mutable_cluster_uuid();
  ::std::string* release_cluster_uuid();
  void set_allocated_cluster_uuid(::std::string* cluster_uuid);

  // string operation_type = 11;
  void clear_operation_type();
  static const int kOperationTypeFieldNumber = 11;
  const ::std::string& operation_type() const;
  void set_operation_type(const ::std::string& value);
  #if LANG_CXX11
  void set_operation_type(::std::string&& value);
  #endif
  void set_operation_type(const char* value);
  void set_operation_type(const char* value, size_t size);
  ::std::string* mutable_operation_type();
  ::std::string* release_operation_type();
  void set_allocated_operation_type(::std::string* operation_type);

  // string description = 12;
  void clear_description();
  static const int kDescriptionFieldNumber = 12;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  const ::google::cloud::dataproc::v1::ClusterOperationStatus& status() const;
  ::google::cloud::dataproc::v1::ClusterOperationStatus* release_status();
  ::google::cloud::dataproc::v1::ClusterOperationStatus* mutable_status();
  void set_allocated_status(::google::cloud::dataproc::v1::ClusterOperationStatus* status);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1.ClusterOperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1::ClusterOperationStatus > status_history_;
  ::google::protobuf::internal::ArenaStringPtr cluster_name_;
  ::google::protobuf::internal::ArenaStringPtr cluster_uuid_;
  ::google::protobuf::internal::ArenaStringPtr operation_type_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::cloud::dataproc::v1::ClusterOperationStatus* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::InitDefaultsClusterOperationMetadataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClusterOperationStatus

// .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
inline void ClusterOperationStatus::clear_state() {
  state_ = 0;
}
inline ::google::cloud::dataproc::v1::ClusterOperationStatus_State ClusterOperationStatus::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.state)
  return static_cast< ::google::cloud::dataproc::v1::ClusterOperationStatus_State >(state_);
}
inline void ClusterOperationStatus::set_state(::google::cloud::dataproc::v1::ClusterOperationStatus_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationStatus.state)
}

// string inner_state = 2;
inline void ClusterOperationStatus::clear_inner_state() {
  inner_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperationStatus::inner_state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
  return inner_state_.GetNoArena();
}
inline void ClusterOperationStatus::set_inner_state(const ::std::string& value) {
  
  inner_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}
#if LANG_CXX11
inline void ClusterOperationStatus::set_inner_state(::std::string&& value) {
  
  inner_state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}
#endif
inline void ClusterOperationStatus::set_inner_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inner_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}
inline void ClusterOperationStatus::set_inner_state(const char* value, size_t size) {
  
  inner_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}
inline ::std::string* ClusterOperationStatus::mutable_inner_state() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
  return inner_state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperationStatus::release_inner_state() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
  
  return inner_state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperationStatus::set_allocated_inner_state(::std::string* inner_state) {
  if (inner_state != NULL) {
    
  } else {
    
  }
  inner_state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inner_state);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}

// string details = 3;
inline void ClusterOperationStatus::clear_details() {
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperationStatus::details() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.details)
  return details_.GetNoArena();
}
inline void ClusterOperationStatus::set_details(const ::std::string& value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}
#if LANG_CXX11
inline void ClusterOperationStatus::set_details(::std::string&& value) {
  
  details_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}
#endif
inline void ClusterOperationStatus::set_details(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}
inline void ClusterOperationStatus::set_details(const char* value, size_t size) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}
inline ::std::string* ClusterOperationStatus::mutable_details() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationStatus.details)
  return details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperationStatus::release_details() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationStatus.details)
  
  return details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperationStatus::set_allocated_details(::std::string* details) {
  if (details != NULL) {
    
  } else {
    
  }
  details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}

// .google.protobuf.Timestamp state_start_time = 4;
inline bool ClusterOperationStatus::has_state_start_time() const {
  return this != internal_default_instance() && state_start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& ClusterOperationStatus::state_start_time() const {
  const ::google::protobuf::Timestamp* p = state_start_time_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ClusterOperationStatus::release_state_start_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
  
  ::google::protobuf::Timestamp* temp = state_start_time_;
  state_start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ClusterOperationStatus::mutable_state_start_time() {
  
  if (state_start_time_ == NULL) {
    state_start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
  return state_start_time_;
}
inline void ClusterOperationStatus::set_allocated_state_start_time(::google::protobuf::Timestamp* state_start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(state_start_time_);
  }
  if (state_start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(state_start_time)->GetArena();
    if (message_arena != submessage_arena) {
      state_start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state_start_time, submessage_arena);
    }
    
  } else {
    
  }
  state_start_time_ = state_start_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
}

// -------------------------------------------------------------------

// ClusterOperationMetadata

// string cluster_name = 7;
inline void ClusterOperationMetadata::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperationMetadata::cluster_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
  return cluster_name_.GetNoArena();
}
inline void ClusterOperationMetadata::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}
#if LANG_CXX11
inline void ClusterOperationMetadata::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}
#endif
inline void ClusterOperationMetadata::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}
inline void ClusterOperationMetadata::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}
inline ::std::string* ClusterOperationMetadata::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperationMetadata::release_cluster_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperationMetadata::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}

// string cluster_uuid = 8;
inline void ClusterOperationMetadata::clear_cluster_uuid() {
  cluster_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperationMetadata::cluster_uuid() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
  return cluster_uuid_.GetNoArena();
}
inline void ClusterOperationMetadata::set_cluster_uuid(const ::std::string& value) {
  
  cluster_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}
#if LANG_CXX11
inline void ClusterOperationMetadata::set_cluster_uuid(::std::string&& value) {
  
  cluster_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}
#endif
inline void ClusterOperationMetadata::set_cluster_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}
inline void ClusterOperationMetadata::set_cluster_uuid(const char* value, size_t size) {
  
  cluster_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}
inline ::std::string* ClusterOperationMetadata::mutable_cluster_uuid() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
  return cluster_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperationMetadata::release_cluster_uuid() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
  
  return cluster_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperationMetadata::set_allocated_cluster_uuid(::std::string* cluster_uuid) {
  if (cluster_uuid != NULL) {
    
  } else {
    
  }
  cluster_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_uuid);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}

// .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
inline bool ClusterOperationMetadata::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void ClusterOperationMetadata::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::google::cloud::dataproc::v1::ClusterOperationStatus& ClusterOperationMetadata::status() const {
  const ::google::cloud::dataproc::v1::ClusterOperationStatus* p = status_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1::ClusterOperationStatus*>(
      &::google::cloud::dataproc::v1::_ClusterOperationStatus_default_instance_);
}
inline ::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::release_status() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
  
  ::google::cloud::dataproc::v1::ClusterOperationStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::cloud::dataproc::v1::ClusterOperationStatus;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
  return status_;
}
inline void ClusterOperationMetadata::set_allocated_status(::google::cloud::dataproc::v1::ClusterOperationStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
}

// repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
inline int ClusterOperationMetadata::status_history_size() const {
  return status_history_.size();
}
inline void ClusterOperationMetadata::clear_status_history() {
  status_history_.Clear();
}
inline const ::google::cloud::dataproc::v1::ClusterOperationStatus& ClusterOperationMetadata::status_history(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_.Get(index);
}
inline ::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::mutable_status_history(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_.Mutable(index);
}
inline ::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::add_status_history() {
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1::ClusterOperationStatus >*
ClusterOperationMetadata::mutable_status_history() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return &status_history_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1::ClusterOperationStatus >&
ClusterOperationMetadata::status_history() const {
  // @@protoc_insertion_point(field_list:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_;
}

// string operation_type = 11;
inline void ClusterOperationMetadata::clear_operation_type() {
  operation_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperationMetadata::operation_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
  return operation_type_.GetNoArena();
}
inline void ClusterOperationMetadata::set_operation_type(const ::std::string& value) {
  
  operation_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}
#if LANG_CXX11
inline void ClusterOperationMetadata::set_operation_type(::std::string&& value) {
  
  operation_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}
#endif
inline void ClusterOperationMetadata::set_operation_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}
inline void ClusterOperationMetadata::set_operation_type(const char* value, size_t size) {
  
  operation_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}
inline ::std::string* ClusterOperationMetadata::mutable_operation_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
  return operation_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperationMetadata::release_operation_type() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
  
  return operation_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperationMetadata::set_allocated_operation_type(::std::string* operation_type) {
  if (operation_type != NULL) {
    
  } else {
    
  }
  operation_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}

// string description = 12;
inline void ClusterOperationMetadata::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperationMetadata::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
  return description_.GetNoArena();
}
inline void ClusterOperationMetadata::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}
#if LANG_CXX11
inline void ClusterOperationMetadata::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}
#endif
inline void ClusterOperationMetadata::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}
inline void ClusterOperationMetadata::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}
inline ::std::string* ClusterOperationMetadata::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperationMetadata::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperationMetadata::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace dataproc
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dataproc::v1::ClusterOperationStatus_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dataproc::v1::ClusterOperationStatus_State>() {
  return ::google::cloud::dataproc::v1::ClusterOperationStatus_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto__INCLUDED
