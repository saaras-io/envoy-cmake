// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/audit/audit_log.proto

#ifndef PROTOBUF_google_2fcloud_2faudit_2faudit_5flog_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2faudit_2faudit_5flog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/struct.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAuditLogImpl();
void InitDefaultsAuditLog();
void InitDefaultsAuthenticationInfoImpl();
void InitDefaultsAuthenticationInfo();
void InitDefaultsAuthorizationInfoImpl();
void InitDefaultsAuthorizationInfo();
void InitDefaultsRequestMetadataImpl();
void InitDefaultsRequestMetadata();
inline void InitDefaults() {
  InitDefaultsAuditLog();
  InitDefaultsAuthenticationInfo();
  InitDefaultsAuthorizationInfo();
  InitDefaultsRequestMetadata();
}
}  // namespace protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto
namespace google {
namespace cloud {
namespace audit {
class AuditLog;
class AuditLogDefaultTypeInternal;
extern AuditLogDefaultTypeInternal _AuditLog_default_instance_;
class AuthenticationInfo;
class AuthenticationInfoDefaultTypeInternal;
extern AuthenticationInfoDefaultTypeInternal _AuthenticationInfo_default_instance_;
class AuthorizationInfo;
class AuthorizationInfoDefaultTypeInternal;
extern AuthorizationInfoDefaultTypeInternal _AuthorizationInfo_default_instance_;
class RequestMetadata;
class RequestMetadataDefaultTypeInternal;
extern RequestMetadataDefaultTypeInternal _RequestMetadata_default_instance_;
}  // namespace audit
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace audit {

// ===================================================================

class AuditLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.audit.AuditLog) */ {
 public:
  AuditLog();
  virtual ~AuditLog();

  AuditLog(const AuditLog& from);

  inline AuditLog& operator=(const AuditLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuditLog(AuditLog&& from) noexcept
    : AuditLog() {
    *this = ::std::move(from);
  }

  inline AuditLog& operator=(AuditLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuditLog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuditLog* internal_default_instance() {
    return reinterpret_cast<const AuditLog*>(
               &_AuditLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AuditLog* other);
  friend void swap(AuditLog& a, AuditLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuditLog* New() const PROTOBUF_FINAL { return New(NULL); }

  AuditLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuditLog& from);
  void MergeFrom(const AuditLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuditLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.audit.AuthorizationInfo authorization_info = 9;
  int authorization_info_size() const;
  void clear_authorization_info();
  static const int kAuthorizationInfoFieldNumber = 9;
  const ::google::cloud::audit::AuthorizationInfo& authorization_info(int index) const;
  ::google::cloud::audit::AuthorizationInfo* mutable_authorization_info(int index);
  ::google::cloud::audit::AuthorizationInfo* add_authorization_info();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::audit::AuthorizationInfo >*
      mutable_authorization_info();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::audit::AuthorizationInfo >&
      authorization_info() const;

  // string service_name = 7;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 7;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  #if LANG_CXX11
  void set_service_name(::std::string&& value);
  #endif
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // string method_name = 8;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 8;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // string resource_name = 11;
  void clear_resource_name();
  static const int kResourceNameFieldNumber = 11;
  const ::std::string& resource_name() const;
  void set_resource_name(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_name(::std::string&& value);
  #endif
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  ::std::string* mutable_resource_name();
  ::std::string* release_resource_name();
  void set_allocated_resource_name(::std::string* resource_name);

  // .google.rpc.Status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* release_status();
  ::google::rpc::Status* mutable_status();
  void set_allocated_status(::google::rpc::Status* status);

  // .google.cloud.audit.AuthenticationInfo authentication_info = 3;
  bool has_authentication_info() const;
  void clear_authentication_info();
  static const int kAuthenticationInfoFieldNumber = 3;
  const ::google::cloud::audit::AuthenticationInfo& authentication_info() const;
  ::google::cloud::audit::AuthenticationInfo* release_authentication_info();
  ::google::cloud::audit::AuthenticationInfo* mutable_authentication_info();
  void set_allocated_authentication_info(::google::cloud::audit::AuthenticationInfo* authentication_info);

  // .google.cloud.audit.RequestMetadata request_metadata = 4;
  bool has_request_metadata() const;
  void clear_request_metadata();
  static const int kRequestMetadataFieldNumber = 4;
  const ::google::cloud::audit::RequestMetadata& request_metadata() const;
  ::google::cloud::audit::RequestMetadata* release_request_metadata();
  ::google::cloud::audit::RequestMetadata* mutable_request_metadata();
  void set_allocated_request_metadata(::google::cloud::audit::RequestMetadata* request_metadata);

  // .google.protobuf.Any service_data = 15;
  bool has_service_data() const;
  void clear_service_data();
  static const int kServiceDataFieldNumber = 15;
  const ::google::protobuf::Any& service_data() const;
  ::google::protobuf::Any* release_service_data();
  ::google::protobuf::Any* mutable_service_data();
  void set_allocated_service_data(::google::protobuf::Any* service_data);

  // .google.protobuf.Struct request = 16;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 16;
  const ::google::protobuf::Struct& request() const;
  ::google::protobuf::Struct* release_request();
  ::google::protobuf::Struct* mutable_request();
  void set_allocated_request(::google::protobuf::Struct* request);

  // .google.protobuf.Struct response = 17;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 17;
  const ::google::protobuf::Struct& response() const;
  ::google::protobuf::Struct* release_response();
  ::google::protobuf::Struct* mutable_response();
  void set_allocated_response(::google::protobuf::Struct* response);

  // int64 num_response_items = 12;
  void clear_num_response_items();
  static const int kNumResponseItemsFieldNumber = 12;
  ::google::protobuf::int64 num_response_items() const;
  void set_num_response_items(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.cloud.audit.AuditLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::audit::AuthorizationInfo > authorization_info_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::google::protobuf::internal::ArenaStringPtr resource_name_;
  ::google::rpc::Status* status_;
  ::google::cloud::audit::AuthenticationInfo* authentication_info_;
  ::google::cloud::audit::RequestMetadata* request_metadata_;
  ::google::protobuf::Any* service_data_;
  ::google::protobuf::Struct* request_;
  ::google::protobuf::Struct* response_;
  ::google::protobuf::int64 num_response_items_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuditLogImpl();
};
// -------------------------------------------------------------------

class AuthenticationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.audit.AuthenticationInfo) */ {
 public:
  AuthenticationInfo();
  virtual ~AuthenticationInfo();

  AuthenticationInfo(const AuthenticationInfo& from);

  inline AuthenticationInfo& operator=(const AuthenticationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthenticationInfo(AuthenticationInfo&& from) noexcept
    : AuthenticationInfo() {
    *this = ::std::move(from);
  }

  inline AuthenticationInfo& operator=(AuthenticationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticationInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthenticationInfo* internal_default_instance() {
    return reinterpret_cast<const AuthenticationInfo*>(
               &_AuthenticationInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AuthenticationInfo* other);
  friend void swap(AuthenticationInfo& a, AuthenticationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthenticationInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthenticationInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthenticationInfo& from);
  void MergeFrom(const AuthenticationInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthenticationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string principal_email = 1;
  void clear_principal_email();
  static const int kPrincipalEmailFieldNumber = 1;
  const ::std::string& principal_email() const;
  void set_principal_email(const ::std::string& value);
  #if LANG_CXX11
  void set_principal_email(::std::string&& value);
  #endif
  void set_principal_email(const char* value);
  void set_principal_email(const char* value, size_t size);
  ::std::string* mutable_principal_email();
  ::std::string* release_principal_email();
  void set_allocated_principal_email(::std::string* principal_email);

  // @@protoc_insertion_point(class_scope:google.cloud.audit.AuthenticationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr principal_email_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthenticationInfoImpl();
};
// -------------------------------------------------------------------

class AuthorizationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.audit.AuthorizationInfo) */ {
 public:
  AuthorizationInfo();
  virtual ~AuthorizationInfo();

  AuthorizationInfo(const AuthorizationInfo& from);

  inline AuthorizationInfo& operator=(const AuthorizationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthorizationInfo(AuthorizationInfo&& from) noexcept
    : AuthorizationInfo() {
    *this = ::std::move(from);
  }

  inline AuthorizationInfo& operator=(AuthorizationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthorizationInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthorizationInfo* internal_default_instance() {
    return reinterpret_cast<const AuthorizationInfo*>(
               &_AuthorizationInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AuthorizationInfo* other);
  friend void swap(AuthorizationInfo& a, AuthorizationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthorizationInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthorizationInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthorizationInfo& from);
  void MergeFrom(const AuthorizationInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthorizationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string resource = 1;
  void clear_resource();
  static const int kResourceFieldNumber = 1;
  const ::std::string& resource() const;
  void set_resource(const ::std::string& value);
  #if LANG_CXX11
  void set_resource(::std::string&& value);
  #endif
  void set_resource(const char* value);
  void set_resource(const char* value, size_t size);
  ::std::string* mutable_resource();
  ::std::string* release_resource();
  void set_allocated_resource(::std::string* resource);

  // string permission = 2;
  void clear_permission();
  static const int kPermissionFieldNumber = 2;
  const ::std::string& permission() const;
  void set_permission(const ::std::string& value);
  #if LANG_CXX11
  void set_permission(::std::string&& value);
  #endif
  void set_permission(const char* value);
  void set_permission(const char* value, size_t size);
  ::std::string* mutable_permission();
  ::std::string* release_permission();
  void set_allocated_permission(::std::string* permission);

  // bool granted = 3;
  void clear_granted();
  static const int kGrantedFieldNumber = 3;
  bool granted() const;
  void set_granted(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.audit.AuthorizationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resource_;
  ::google::protobuf::internal::ArenaStringPtr permission_;
  bool granted_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsAuthorizationInfoImpl();
};
// -------------------------------------------------------------------

class RequestMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.audit.RequestMetadata) */ {
 public:
  RequestMetadata();
  virtual ~RequestMetadata();

  RequestMetadata(const RequestMetadata& from);

  inline RequestMetadata& operator=(const RequestMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestMetadata(RequestMetadata&& from) noexcept
    : RequestMetadata() {
    *this = ::std::move(from);
  }

  inline RequestMetadata& operator=(RequestMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestMetadata* internal_default_instance() {
    return reinterpret_cast<const RequestMetadata*>(
               &_RequestMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RequestMetadata* other);
  friend void swap(RequestMetadata& a, RequestMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestMetadata& from);
  void MergeFrom(const RequestMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string caller_ip = 1;
  void clear_caller_ip();
  static const int kCallerIpFieldNumber = 1;
  const ::std::string& caller_ip() const;
  void set_caller_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_caller_ip(::std::string&& value);
  #endif
  void set_caller_ip(const char* value);
  void set_caller_ip(const char* value, size_t size);
  ::std::string* mutable_caller_ip();
  ::std::string* release_caller_ip();
  void set_allocated_caller_ip(::std::string* caller_ip);

  // string caller_supplied_user_agent = 2;
  void clear_caller_supplied_user_agent();
  static const int kCallerSuppliedUserAgentFieldNumber = 2;
  const ::std::string& caller_supplied_user_agent() const;
  void set_caller_supplied_user_agent(const ::std::string& value);
  #if LANG_CXX11
  void set_caller_supplied_user_agent(::std::string&& value);
  #endif
  void set_caller_supplied_user_agent(const char* value);
  void set_caller_supplied_user_agent(const char* value, size_t size);
  ::std::string* mutable_caller_supplied_user_agent();
  ::std::string* release_caller_supplied_user_agent();
  void set_allocated_caller_supplied_user_agent(::std::string* caller_supplied_user_agent);

  // @@protoc_insertion_point(class_scope:google.cloud.audit.RequestMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr caller_ip_;
  ::google::protobuf::internal::ArenaStringPtr caller_supplied_user_agent_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2faudit_2faudit_5flog_2eproto::InitDefaultsRequestMetadataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AuditLog

// string service_name = 7;
inline void AuditLog::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuditLog::service_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.service_name)
  return service_name_.GetNoArena();
}
inline void AuditLog::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuditLog.service_name)
}
#if LANG_CXX11
inline void AuditLog::set_service_name(::std::string&& value) {
  
  service_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.AuditLog.service_name)
}
#endif
inline void AuditLog::set_service_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.AuditLog.service_name)
}
inline void AuditLog::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.AuditLog.service_name)
}
inline ::std::string* AuditLog::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuditLog::release_service_name() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuditLog::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.service_name)
}

// string method_name = 8;
inline void AuditLog::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuditLog::method_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.method_name)
  return method_name_.GetNoArena();
}
inline void AuditLog::set_method_name(const ::std::string& value) {
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuditLog.method_name)
}
#if LANG_CXX11
inline void AuditLog::set_method_name(::std::string&& value) {
  
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.AuditLog.method_name)
}
#endif
inline void AuditLog::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.AuditLog.method_name)
}
inline void AuditLog::set_method_name(const char* value, size_t size) {
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.AuditLog.method_name)
}
inline ::std::string* AuditLog::mutable_method_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuditLog::release_method_name() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.method_name)
  
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuditLog::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    
  } else {
    
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.method_name)
}

// string resource_name = 11;
inline void AuditLog::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuditLog::resource_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.resource_name)
  return resource_name_.GetNoArena();
}
inline void AuditLog::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuditLog.resource_name)
}
#if LANG_CXX11
inline void AuditLog::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.AuditLog.resource_name)
}
#endif
inline void AuditLog::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.AuditLog.resource_name)
}
inline void AuditLog::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.AuditLog.resource_name)
}
inline ::std::string* AuditLog::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuditLog::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuditLog::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.resource_name)
}

// int64 num_response_items = 12;
inline void AuditLog::clear_num_response_items() {
  num_response_items_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuditLog::num_response_items() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.num_response_items)
  return num_response_items_;
}
inline void AuditLog::set_num_response_items(::google::protobuf::int64 value) {
  
  num_response_items_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuditLog.num_response_items)
}

// .google.rpc.Status status = 2;
inline bool AuditLog::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::rpc::Status& AuditLog::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* AuditLog::release_status() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* AuditLog::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.status)
  return status_;
}
inline void AuditLog::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.status)
}

// .google.cloud.audit.AuthenticationInfo authentication_info = 3;
inline bool AuditLog::has_authentication_info() const {
  return this != internal_default_instance() && authentication_info_ != NULL;
}
inline void AuditLog::clear_authentication_info() {
  if (GetArenaNoVirtual() == NULL && authentication_info_ != NULL) {
    delete authentication_info_;
  }
  authentication_info_ = NULL;
}
inline const ::google::cloud::audit::AuthenticationInfo& AuditLog::authentication_info() const {
  const ::google::cloud::audit::AuthenticationInfo* p = authentication_info_;
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.authentication_info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::audit::AuthenticationInfo*>(
      &::google::cloud::audit::_AuthenticationInfo_default_instance_);
}
inline ::google::cloud::audit::AuthenticationInfo* AuditLog::release_authentication_info() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.authentication_info)
  
  ::google::cloud::audit::AuthenticationInfo* temp = authentication_info_;
  authentication_info_ = NULL;
  return temp;
}
inline ::google::cloud::audit::AuthenticationInfo* AuditLog::mutable_authentication_info() {
  
  if (authentication_info_ == NULL) {
    authentication_info_ = new ::google::cloud::audit::AuthenticationInfo;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.authentication_info)
  return authentication_info_;
}
inline void AuditLog::set_allocated_authentication_info(::google::cloud::audit::AuthenticationInfo* authentication_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete authentication_info_;
  }
  if (authentication_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authentication_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authentication_info, submessage_arena);
    }
    
  } else {
    
  }
  authentication_info_ = authentication_info;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.authentication_info)
}

// repeated .google.cloud.audit.AuthorizationInfo authorization_info = 9;
inline int AuditLog::authorization_info_size() const {
  return authorization_info_.size();
}
inline void AuditLog::clear_authorization_info() {
  authorization_info_.Clear();
}
inline const ::google::cloud::audit::AuthorizationInfo& AuditLog::authorization_info(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.authorization_info)
  return authorization_info_.Get(index);
}
inline ::google::cloud::audit::AuthorizationInfo* AuditLog::mutable_authorization_info(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.authorization_info)
  return authorization_info_.Mutable(index);
}
inline ::google::cloud::audit::AuthorizationInfo* AuditLog::add_authorization_info() {
  // @@protoc_insertion_point(field_add:google.cloud.audit.AuditLog.authorization_info)
  return authorization_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::audit::AuthorizationInfo >*
AuditLog::mutable_authorization_info() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.audit.AuditLog.authorization_info)
  return &authorization_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::audit::AuthorizationInfo >&
AuditLog::authorization_info() const {
  // @@protoc_insertion_point(field_list:google.cloud.audit.AuditLog.authorization_info)
  return authorization_info_;
}

// .google.cloud.audit.RequestMetadata request_metadata = 4;
inline bool AuditLog::has_request_metadata() const {
  return this != internal_default_instance() && request_metadata_ != NULL;
}
inline void AuditLog::clear_request_metadata() {
  if (GetArenaNoVirtual() == NULL && request_metadata_ != NULL) {
    delete request_metadata_;
  }
  request_metadata_ = NULL;
}
inline const ::google::cloud::audit::RequestMetadata& AuditLog::request_metadata() const {
  const ::google::cloud::audit::RequestMetadata* p = request_metadata_;
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.request_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::audit::RequestMetadata*>(
      &::google::cloud::audit::_RequestMetadata_default_instance_);
}
inline ::google::cloud::audit::RequestMetadata* AuditLog::release_request_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.request_metadata)
  
  ::google::cloud::audit::RequestMetadata* temp = request_metadata_;
  request_metadata_ = NULL;
  return temp;
}
inline ::google::cloud::audit::RequestMetadata* AuditLog::mutable_request_metadata() {
  
  if (request_metadata_ == NULL) {
    request_metadata_ = new ::google::cloud::audit::RequestMetadata;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.request_metadata)
  return request_metadata_;
}
inline void AuditLog::set_allocated_request_metadata(::google::cloud::audit::RequestMetadata* request_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_metadata_;
  }
  if (request_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_metadata, submessage_arena);
    }
    
  } else {
    
  }
  request_metadata_ = request_metadata;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.request_metadata)
}

// .google.protobuf.Struct request = 16;
inline bool AuditLog::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline const ::google::protobuf::Struct& AuditLog::request() const {
  const ::google::protobuf::Struct* p = request_;
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* AuditLog::release_request() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.request)
  
  ::google::protobuf::Struct* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* AuditLog::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.request)
  return request_;
}
inline void AuditLog::set_allocated_request(::google::protobuf::Struct* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_);
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(request)->GetArena();
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    
  } else {
    
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.request)
}

// .google.protobuf.Struct response = 17;
inline bool AuditLog::has_response() const {
  return this != internal_default_instance() && response_ != NULL;
}
inline const ::google::protobuf::Struct& AuditLog::response() const {
  const ::google::protobuf::Struct* p = response_;
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.response)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* AuditLog::release_response() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.response)
  
  ::google::protobuf::Struct* temp = response_;
  response_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* AuditLog::mutable_response() {
  
  if (response_ == NULL) {
    response_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.response)
  return response_;
}
inline void AuditLog::set_allocated_response(::google::protobuf::Struct* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(response_);
  }
  if (response) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(response)->GetArena();
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    
  } else {
    
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.response)
}

// .google.protobuf.Any service_data = 15;
inline bool AuditLog::has_service_data() const {
  return this != internal_default_instance() && service_data_ != NULL;
}
inline const ::google::protobuf::Any& AuditLog::service_data() const {
  const ::google::protobuf::Any* p = service_data_;
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuditLog.service_data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* AuditLog::release_service_data() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuditLog.service_data)
  
  ::google::protobuf::Any* temp = service_data_;
  service_data_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* AuditLog::mutable_service_data() {
  
  if (service_data_ == NULL) {
    service_data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuditLog.service_data)
  return service_data_;
}
inline void AuditLog::set_allocated_service_data(::google::protobuf::Any* service_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(service_data_);
  }
  if (service_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      service_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, service_data, submessage_arena);
    }
    
  } else {
    
  }
  service_data_ = service_data;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuditLog.service_data)
}

// -------------------------------------------------------------------

// AuthenticationInfo

// string principal_email = 1;
inline void AuthenticationInfo::clear_principal_email() {
  principal_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthenticationInfo::principal_email() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuthenticationInfo.principal_email)
  return principal_email_.GetNoArena();
}
inline void AuthenticationInfo::set_principal_email(const ::std::string& value) {
  
  principal_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuthenticationInfo.principal_email)
}
#if LANG_CXX11
inline void AuthenticationInfo::set_principal_email(::std::string&& value) {
  
  principal_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.AuthenticationInfo.principal_email)
}
#endif
inline void AuthenticationInfo::set_principal_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  principal_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.AuthenticationInfo.principal_email)
}
inline void AuthenticationInfo::set_principal_email(const char* value, size_t size) {
  
  principal_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.AuthenticationInfo.principal_email)
}
inline ::std::string* AuthenticationInfo::mutable_principal_email() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuthenticationInfo.principal_email)
  return principal_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticationInfo::release_principal_email() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuthenticationInfo.principal_email)
  
  return principal_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticationInfo::set_allocated_principal_email(::std::string* principal_email) {
  if (principal_email != NULL) {
    
  } else {
    
  }
  principal_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), principal_email);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuthenticationInfo.principal_email)
}

// -------------------------------------------------------------------

// AuthorizationInfo

// string resource = 1;
inline void AuthorizationInfo::clear_resource() {
  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthorizationInfo::resource() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuthorizationInfo.resource)
  return resource_.GetNoArena();
}
inline void AuthorizationInfo::set_resource(const ::std::string& value) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuthorizationInfo.resource)
}
#if LANG_CXX11
inline void AuthorizationInfo::set_resource(::std::string&& value) {
  
  resource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.AuthorizationInfo.resource)
}
#endif
inline void AuthorizationInfo::set_resource(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.AuthorizationInfo.resource)
}
inline void AuthorizationInfo::set_resource(const char* value, size_t size) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.AuthorizationInfo.resource)
}
inline ::std::string* AuthorizationInfo::mutable_resource() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuthorizationInfo.resource)
  return resource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthorizationInfo::release_resource() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuthorizationInfo.resource)
  
  return resource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthorizationInfo::set_allocated_resource(::std::string* resource) {
  if (resource != NULL) {
    
  } else {
    
  }
  resource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuthorizationInfo.resource)
}

// string permission = 2;
inline void AuthorizationInfo::clear_permission() {
  permission_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthorizationInfo::permission() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuthorizationInfo.permission)
  return permission_.GetNoArena();
}
inline void AuthorizationInfo::set_permission(const ::std::string& value) {
  
  permission_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuthorizationInfo.permission)
}
#if LANG_CXX11
inline void AuthorizationInfo::set_permission(::std::string&& value) {
  
  permission_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.AuthorizationInfo.permission)
}
#endif
inline void AuthorizationInfo::set_permission(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  permission_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.AuthorizationInfo.permission)
}
inline void AuthorizationInfo::set_permission(const char* value, size_t size) {
  
  permission_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.AuthorizationInfo.permission)
}
inline ::std::string* AuthorizationInfo::mutable_permission() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.AuthorizationInfo.permission)
  return permission_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthorizationInfo::release_permission() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.AuthorizationInfo.permission)
  
  return permission_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthorizationInfo::set_allocated_permission(::std::string* permission) {
  if (permission != NULL) {
    
  } else {
    
  }
  permission_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), permission);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.AuthorizationInfo.permission)
}

// bool granted = 3;
inline void AuthorizationInfo::clear_granted() {
  granted_ = false;
}
inline bool AuthorizationInfo::granted() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.AuthorizationInfo.granted)
  return granted_;
}
inline void AuthorizationInfo::set_granted(bool value) {
  
  granted_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.audit.AuthorizationInfo.granted)
}

// -------------------------------------------------------------------

// RequestMetadata

// string caller_ip = 1;
inline void RequestMetadata::clear_caller_ip() {
  caller_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMetadata::caller_ip() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.RequestMetadata.caller_ip)
  return caller_ip_.GetNoArena();
}
inline void RequestMetadata::set_caller_ip(const ::std::string& value) {
  
  caller_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.RequestMetadata.caller_ip)
}
#if LANG_CXX11
inline void RequestMetadata::set_caller_ip(::std::string&& value) {
  
  caller_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.RequestMetadata.caller_ip)
}
#endif
inline void RequestMetadata::set_caller_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  caller_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.RequestMetadata.caller_ip)
}
inline void RequestMetadata::set_caller_ip(const char* value, size_t size) {
  
  caller_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.RequestMetadata.caller_ip)
}
inline ::std::string* RequestMetadata::mutable_caller_ip() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.RequestMetadata.caller_ip)
  return caller_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMetadata::release_caller_ip() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.RequestMetadata.caller_ip)
  
  return caller_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMetadata::set_allocated_caller_ip(::std::string* caller_ip) {
  if (caller_ip != NULL) {
    
  } else {
    
  }
  caller_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller_ip);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.RequestMetadata.caller_ip)
}

// string caller_supplied_user_agent = 2;
inline void RequestMetadata::clear_caller_supplied_user_agent() {
  caller_supplied_user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMetadata::caller_supplied_user_agent() const {
  // @@protoc_insertion_point(field_get:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
  return caller_supplied_user_agent_.GetNoArena();
}
inline void RequestMetadata::set_caller_supplied_user_agent(const ::std::string& value) {
  
  caller_supplied_user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
}
#if LANG_CXX11
inline void RequestMetadata::set_caller_supplied_user_agent(::std::string&& value) {
  
  caller_supplied_user_agent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
}
#endif
inline void RequestMetadata::set_caller_supplied_user_agent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  caller_supplied_user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
}
inline void RequestMetadata::set_caller_supplied_user_agent(const char* value, size_t size) {
  
  caller_supplied_user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
}
inline ::std::string* RequestMetadata::mutable_caller_supplied_user_agent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
  return caller_supplied_user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMetadata::release_caller_supplied_user_agent() {
  // @@protoc_insertion_point(field_release:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
  
  return caller_supplied_user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMetadata::set_allocated_caller_supplied_user_agent(::std::string* caller_supplied_user_agent) {
  if (caller_supplied_user_agent != NULL) {
    
  } else {
    
  }
  caller_supplied_user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller_supplied_user_agent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.audit.RequestMetadata.caller_supplied_user_agent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace audit
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2faudit_2faudit_5flog_2eproto__INCLUDED
