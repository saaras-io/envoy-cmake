// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1/job_service.proto

#ifndef PROTOBUF_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/auth.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[15];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTrainingInputImpl();
void InitDefaultsTrainingInput();
void InitDefaultsHyperparameterSpecImpl();
void InitDefaultsHyperparameterSpec();
void InitDefaultsParameterSpecImpl();
void InitDefaultsParameterSpec();
void InitDefaultsHyperparameterOutput_HyperparameterMetricImpl();
void InitDefaultsHyperparameterOutput_HyperparameterMetric();
void InitDefaultsHyperparameterOutput_HyperparametersEntry_DoNotUseImpl();
void InitDefaultsHyperparameterOutput_HyperparametersEntry_DoNotUse();
void InitDefaultsHyperparameterOutputImpl();
void InitDefaultsHyperparameterOutput();
void InitDefaultsTrainingOutputImpl();
void InitDefaultsTrainingOutput();
void InitDefaultsPredictionInputImpl();
void InitDefaultsPredictionInput();
void InitDefaultsPredictionOutputImpl();
void InitDefaultsPredictionOutput();
void InitDefaultsJobImpl();
void InitDefaultsJob();
void InitDefaultsCreateJobRequestImpl();
void InitDefaultsCreateJobRequest();
void InitDefaultsListJobsRequestImpl();
void InitDefaultsListJobsRequest();
void InitDefaultsListJobsResponseImpl();
void InitDefaultsListJobsResponse();
void InitDefaultsGetJobRequestImpl();
void InitDefaultsGetJobRequest();
void InitDefaultsCancelJobRequestImpl();
void InitDefaultsCancelJobRequest();
inline void InitDefaults() {
  InitDefaultsTrainingInput();
  InitDefaultsHyperparameterSpec();
  InitDefaultsParameterSpec();
  InitDefaultsHyperparameterOutput_HyperparameterMetric();
  InitDefaultsHyperparameterOutput_HyperparametersEntry_DoNotUse();
  InitDefaultsHyperparameterOutput();
  InitDefaultsTrainingOutput();
  InitDefaultsPredictionInput();
  InitDefaultsPredictionOutput();
  InitDefaultsJob();
  InitDefaultsCreateJobRequest();
  InitDefaultsListJobsRequest();
  InitDefaultsListJobsResponse();
  InitDefaultsGetJobRequest();
  InitDefaultsCancelJobRequest();
}
}  // namespace protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto
namespace google {
namespace cloud {
namespace ml {
namespace v1 {
class CancelJobRequest;
class CancelJobRequestDefaultTypeInternal;
extern CancelJobRequestDefaultTypeInternal _CancelJobRequest_default_instance_;
class CreateJobRequest;
class CreateJobRequestDefaultTypeInternal;
extern CreateJobRequestDefaultTypeInternal _CreateJobRequest_default_instance_;
class GetJobRequest;
class GetJobRequestDefaultTypeInternal;
extern GetJobRequestDefaultTypeInternal _GetJobRequest_default_instance_;
class HyperparameterOutput;
class HyperparameterOutputDefaultTypeInternal;
extern HyperparameterOutputDefaultTypeInternal _HyperparameterOutput_default_instance_;
class HyperparameterOutput_HyperparameterMetric;
class HyperparameterOutput_HyperparameterMetricDefaultTypeInternal;
extern HyperparameterOutput_HyperparameterMetricDefaultTypeInternal _HyperparameterOutput_HyperparameterMetric_default_instance_;
class HyperparameterOutput_HyperparametersEntry_DoNotUse;
class HyperparameterOutput_HyperparametersEntry_DoNotUseDefaultTypeInternal;
extern HyperparameterOutput_HyperparametersEntry_DoNotUseDefaultTypeInternal _HyperparameterOutput_HyperparametersEntry_DoNotUse_default_instance_;
class HyperparameterSpec;
class HyperparameterSpecDefaultTypeInternal;
extern HyperparameterSpecDefaultTypeInternal _HyperparameterSpec_default_instance_;
class Job;
class JobDefaultTypeInternal;
extern JobDefaultTypeInternal _Job_default_instance_;
class ListJobsRequest;
class ListJobsRequestDefaultTypeInternal;
extern ListJobsRequestDefaultTypeInternal _ListJobsRequest_default_instance_;
class ListJobsResponse;
class ListJobsResponseDefaultTypeInternal;
extern ListJobsResponseDefaultTypeInternal _ListJobsResponse_default_instance_;
class ParameterSpec;
class ParameterSpecDefaultTypeInternal;
extern ParameterSpecDefaultTypeInternal _ParameterSpec_default_instance_;
class PredictionInput;
class PredictionInputDefaultTypeInternal;
extern PredictionInputDefaultTypeInternal _PredictionInput_default_instance_;
class PredictionOutput;
class PredictionOutputDefaultTypeInternal;
extern PredictionOutputDefaultTypeInternal _PredictionOutput_default_instance_;
class TrainingInput;
class TrainingInputDefaultTypeInternal;
extern TrainingInputDefaultTypeInternal _TrainingInput_default_instance_;
class TrainingOutput;
class TrainingOutputDefaultTypeInternal;
extern TrainingOutputDefaultTypeInternal _TrainingOutput_default_instance_;
}  // namespace v1
}  // namespace ml
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace ml {
namespace v1 {

enum TrainingInput_ScaleTier {
  TrainingInput_ScaleTier_BASIC = 0,
  TrainingInput_ScaleTier_STANDARD_1 = 1,
  TrainingInput_ScaleTier_PREMIUM_1 = 3,
  TrainingInput_ScaleTier_BASIC_GPU = 6,
  TrainingInput_ScaleTier_CUSTOM = 5,
  TrainingInput_ScaleTier_TrainingInput_ScaleTier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TrainingInput_ScaleTier_TrainingInput_ScaleTier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TrainingInput_ScaleTier_IsValid(int value);
const TrainingInput_ScaleTier TrainingInput_ScaleTier_ScaleTier_MIN = TrainingInput_ScaleTier_BASIC;
const TrainingInput_ScaleTier TrainingInput_ScaleTier_ScaleTier_MAX = TrainingInput_ScaleTier_BASIC_GPU;
const int TrainingInput_ScaleTier_ScaleTier_ARRAYSIZE = TrainingInput_ScaleTier_ScaleTier_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrainingInput_ScaleTier_descriptor();
inline const ::std::string& TrainingInput_ScaleTier_Name(TrainingInput_ScaleTier value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrainingInput_ScaleTier_descriptor(), value);
}
inline bool TrainingInput_ScaleTier_Parse(
    const ::std::string& name, TrainingInput_ScaleTier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrainingInput_ScaleTier>(
    TrainingInput_ScaleTier_descriptor(), name, value);
}
enum HyperparameterSpec_GoalType {
  HyperparameterSpec_GoalType_GOAL_TYPE_UNSPECIFIED = 0,
  HyperparameterSpec_GoalType_MAXIMIZE = 1,
  HyperparameterSpec_GoalType_MINIMIZE = 2,
  HyperparameterSpec_GoalType_HyperparameterSpec_GoalType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HyperparameterSpec_GoalType_HyperparameterSpec_GoalType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HyperparameterSpec_GoalType_IsValid(int value);
const HyperparameterSpec_GoalType HyperparameterSpec_GoalType_GoalType_MIN = HyperparameterSpec_GoalType_GOAL_TYPE_UNSPECIFIED;
const HyperparameterSpec_GoalType HyperparameterSpec_GoalType_GoalType_MAX = HyperparameterSpec_GoalType_MINIMIZE;
const int HyperparameterSpec_GoalType_GoalType_ARRAYSIZE = HyperparameterSpec_GoalType_GoalType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HyperparameterSpec_GoalType_descriptor();
inline const ::std::string& HyperparameterSpec_GoalType_Name(HyperparameterSpec_GoalType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HyperparameterSpec_GoalType_descriptor(), value);
}
inline bool HyperparameterSpec_GoalType_Parse(
    const ::std::string& name, HyperparameterSpec_GoalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HyperparameterSpec_GoalType>(
    HyperparameterSpec_GoalType_descriptor(), name, value);
}
enum ParameterSpec_ParameterType {
  ParameterSpec_ParameterType_PARAMETER_TYPE_UNSPECIFIED = 0,
  ParameterSpec_ParameterType_DOUBLE = 1,
  ParameterSpec_ParameterType_INTEGER = 2,
  ParameterSpec_ParameterType_CATEGORICAL = 3,
  ParameterSpec_ParameterType_DISCRETE = 4,
  ParameterSpec_ParameterType_ParameterSpec_ParameterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ParameterSpec_ParameterType_ParameterSpec_ParameterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ParameterSpec_ParameterType_IsValid(int value);
const ParameterSpec_ParameterType ParameterSpec_ParameterType_ParameterType_MIN = ParameterSpec_ParameterType_PARAMETER_TYPE_UNSPECIFIED;
const ParameterSpec_ParameterType ParameterSpec_ParameterType_ParameterType_MAX = ParameterSpec_ParameterType_DISCRETE;
const int ParameterSpec_ParameterType_ParameterType_ARRAYSIZE = ParameterSpec_ParameterType_ParameterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ParameterSpec_ParameterType_descriptor();
inline const ::std::string& ParameterSpec_ParameterType_Name(ParameterSpec_ParameterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ParameterSpec_ParameterType_descriptor(), value);
}
inline bool ParameterSpec_ParameterType_Parse(
    const ::std::string& name, ParameterSpec_ParameterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ParameterSpec_ParameterType>(
    ParameterSpec_ParameterType_descriptor(), name, value);
}
enum ParameterSpec_ScaleType {
  ParameterSpec_ScaleType_NONE = 0,
  ParameterSpec_ScaleType_UNIT_LINEAR_SCALE = 1,
  ParameterSpec_ScaleType_UNIT_LOG_SCALE = 2,
  ParameterSpec_ScaleType_UNIT_REVERSE_LOG_SCALE = 3,
  ParameterSpec_ScaleType_ParameterSpec_ScaleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ParameterSpec_ScaleType_ParameterSpec_ScaleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ParameterSpec_ScaleType_IsValid(int value);
const ParameterSpec_ScaleType ParameterSpec_ScaleType_ScaleType_MIN = ParameterSpec_ScaleType_NONE;
const ParameterSpec_ScaleType ParameterSpec_ScaleType_ScaleType_MAX = ParameterSpec_ScaleType_UNIT_REVERSE_LOG_SCALE;
const int ParameterSpec_ScaleType_ScaleType_ARRAYSIZE = ParameterSpec_ScaleType_ScaleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ParameterSpec_ScaleType_descriptor();
inline const ::std::string& ParameterSpec_ScaleType_Name(ParameterSpec_ScaleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ParameterSpec_ScaleType_descriptor(), value);
}
inline bool ParameterSpec_ScaleType_Parse(
    const ::std::string& name, ParameterSpec_ScaleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ParameterSpec_ScaleType>(
    ParameterSpec_ScaleType_descriptor(), name, value);
}
enum PredictionInput_DataFormat {
  PredictionInput_DataFormat_DATA_FORMAT_UNSPECIFIED = 0,
  PredictionInput_DataFormat_TEXT = 1,
  PredictionInput_DataFormat_TF_RECORD = 2,
  PredictionInput_DataFormat_TF_RECORD_GZIP = 3,
  PredictionInput_DataFormat_PredictionInput_DataFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PredictionInput_DataFormat_PredictionInput_DataFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PredictionInput_DataFormat_IsValid(int value);
const PredictionInput_DataFormat PredictionInput_DataFormat_DataFormat_MIN = PredictionInput_DataFormat_DATA_FORMAT_UNSPECIFIED;
const PredictionInput_DataFormat PredictionInput_DataFormat_DataFormat_MAX = PredictionInput_DataFormat_TF_RECORD_GZIP;
const int PredictionInput_DataFormat_DataFormat_ARRAYSIZE = PredictionInput_DataFormat_DataFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* PredictionInput_DataFormat_descriptor();
inline const ::std::string& PredictionInput_DataFormat_Name(PredictionInput_DataFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    PredictionInput_DataFormat_descriptor(), value);
}
inline bool PredictionInput_DataFormat_Parse(
    const ::std::string& name, PredictionInput_DataFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PredictionInput_DataFormat>(
    PredictionInput_DataFormat_descriptor(), name, value);
}
enum Job_State {
  Job_State_STATE_UNSPECIFIED = 0,
  Job_State_QUEUED = 1,
  Job_State_PREPARING = 2,
  Job_State_RUNNING = 3,
  Job_State_SUCCEEDED = 4,
  Job_State_FAILED = 5,
  Job_State_CANCELLING = 6,
  Job_State_CANCELLED = 7,
  Job_State_Job_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Job_State_Job_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Job_State_IsValid(int value);
const Job_State Job_State_State_MIN = Job_State_STATE_UNSPECIFIED;
const Job_State Job_State_State_MAX = Job_State_CANCELLED;
const int Job_State_State_ARRAYSIZE = Job_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* Job_State_descriptor();
inline const ::std::string& Job_State_Name(Job_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    Job_State_descriptor(), value);
}
inline bool Job_State_Parse(
    const ::std::string& name, Job_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Job_State>(
    Job_State_descriptor(), name, value);
}
// ===================================================================

class TrainingInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.TrainingInput) */ {
 public:
  TrainingInput();
  virtual ~TrainingInput();

  TrainingInput(const TrainingInput& from);

  inline TrainingInput& operator=(const TrainingInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainingInput(TrainingInput&& from) noexcept
    : TrainingInput() {
    *this = ::std::move(from);
  }

  inline TrainingInput& operator=(TrainingInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainingInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainingInput* internal_default_instance() {
    return reinterpret_cast<const TrainingInput*>(
               &_TrainingInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TrainingInput* other);
  friend void swap(TrainingInput& a, TrainingInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainingInput* New() const PROTOBUF_FINAL { return New(NULL); }

  TrainingInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrainingInput& from);
  void MergeFrom(const TrainingInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrainingInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TrainingInput_ScaleTier ScaleTier;
  static const ScaleTier BASIC =
    TrainingInput_ScaleTier_BASIC;
  static const ScaleTier STANDARD_1 =
    TrainingInput_ScaleTier_STANDARD_1;
  static const ScaleTier PREMIUM_1 =
    TrainingInput_ScaleTier_PREMIUM_1;
  static const ScaleTier BASIC_GPU =
    TrainingInput_ScaleTier_BASIC_GPU;
  static const ScaleTier CUSTOM =
    TrainingInput_ScaleTier_CUSTOM;
  static inline bool ScaleTier_IsValid(int value) {
    return TrainingInput_ScaleTier_IsValid(value);
  }
  static const ScaleTier ScaleTier_MIN =
    TrainingInput_ScaleTier_ScaleTier_MIN;
  static const ScaleTier ScaleTier_MAX =
    TrainingInput_ScaleTier_ScaleTier_MAX;
  static const int ScaleTier_ARRAYSIZE =
    TrainingInput_ScaleTier_ScaleTier_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScaleTier_descriptor() {
    return TrainingInput_ScaleTier_descriptor();
  }
  static inline const ::std::string& ScaleTier_Name(ScaleTier value) {
    return TrainingInput_ScaleTier_Name(value);
  }
  static inline bool ScaleTier_Parse(const ::std::string& name,
      ScaleTier* value) {
    return TrainingInput_ScaleTier_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string package_uris = 7;
  int package_uris_size() const;
  void clear_package_uris();
  static const int kPackageUrisFieldNumber = 7;
  const ::std::string& package_uris(int index) const;
  ::std::string* mutable_package_uris(int index);
  void set_package_uris(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_package_uris(int index, ::std::string&& value);
  #endif
  void set_package_uris(int index, const char* value);
  void set_package_uris(int index, const char* value, size_t size);
  ::std::string* add_package_uris();
  void add_package_uris(const ::std::string& value);
  #if LANG_CXX11
  void add_package_uris(::std::string&& value);
  #endif
  void add_package_uris(const char* value);
  void add_package_uris(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& package_uris() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_package_uris();

  // repeated string args = 10;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 10;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_args(int index, ::std::string&& value);
  #endif
  void set_args(int index, const char* value);
  void set_args(int index, const char* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  #if LANG_CXX11
  void add_args(::std::string&& value);
  #endif
  void add_args(const char* value);
  void add_args(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // string master_type = 2;
  void clear_master_type();
  static const int kMasterTypeFieldNumber = 2;
  const ::std::string& master_type() const;
  void set_master_type(const ::std::string& value);
  #if LANG_CXX11
  void set_master_type(::std::string&& value);
  #endif
  void set_master_type(const char* value);
  void set_master_type(const char* value, size_t size);
  ::std::string* mutable_master_type();
  ::std::string* release_master_type();
  void set_allocated_master_type(::std::string* master_type);

  // string worker_type = 3;
  void clear_worker_type();
  static const int kWorkerTypeFieldNumber = 3;
  const ::std::string& worker_type() const;
  void set_worker_type(const ::std::string& value);
  #if LANG_CXX11
  void set_worker_type(::std::string&& value);
  #endif
  void set_worker_type(const char* value);
  void set_worker_type(const char* value, size_t size);
  ::std::string* mutable_worker_type();
  ::std::string* release_worker_type();
  void set_allocated_worker_type(::std::string* worker_type);

  // string parameter_server_type = 4;
  void clear_parameter_server_type();
  static const int kParameterServerTypeFieldNumber = 4;
  const ::std::string& parameter_server_type() const;
  void set_parameter_server_type(const ::std::string& value);
  #if LANG_CXX11
  void set_parameter_server_type(::std::string&& value);
  #endif
  void set_parameter_server_type(const char* value);
  void set_parameter_server_type(const char* value, size_t size);
  ::std::string* mutable_parameter_server_type();
  ::std::string* release_parameter_server_type();
  void set_allocated_parameter_server_type(::std::string* parameter_server_type);

  // string python_module = 8;
  void clear_python_module();
  static const int kPythonModuleFieldNumber = 8;
  const ::std::string& python_module() const;
  void set_python_module(const ::std::string& value);
  #if LANG_CXX11
  void set_python_module(::std::string&& value);
  #endif
  void set_python_module(const char* value);
  void set_python_module(const char* value, size_t size);
  ::std::string* mutable_python_module();
  ::std::string* release_python_module();
  void set_allocated_python_module(::std::string* python_module);

  // string region = 14;
  void clear_region();
  static const int kRegionFieldNumber = 14;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // string runtime_version = 15;
  void clear_runtime_version();
  static const int kRuntimeVersionFieldNumber = 15;
  const ::std::string& runtime_version() const;
  void set_runtime_version(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime_version(::std::string&& value);
  #endif
  void set_runtime_version(const char* value);
  void set_runtime_version(const char* value, size_t size);
  ::std::string* mutable_runtime_version();
  ::std::string* release_runtime_version();
  void set_allocated_runtime_version(::std::string* runtime_version);

  // string job_dir = 16;
  void clear_job_dir();
  static const int kJobDirFieldNumber = 16;
  const ::std::string& job_dir() const;
  void set_job_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_job_dir(::std::string&& value);
  #endif
  void set_job_dir(const char* value);
  void set_job_dir(const char* value, size_t size);
  ::std::string* mutable_job_dir();
  ::std::string* release_job_dir();
  void set_allocated_job_dir(::std::string* job_dir);

  // .google.cloud.ml.v1.HyperparameterSpec hyperparameters = 12;
  bool has_hyperparameters() const;
  void clear_hyperparameters();
  static const int kHyperparametersFieldNumber = 12;
  const ::google::cloud::ml::v1::HyperparameterSpec& hyperparameters() const;
  ::google::cloud::ml::v1::HyperparameterSpec* release_hyperparameters();
  ::google::cloud::ml::v1::HyperparameterSpec* mutable_hyperparameters();
  void set_allocated_hyperparameters(::google::cloud::ml::v1::HyperparameterSpec* hyperparameters);

  // int64 worker_count = 5;
  void clear_worker_count();
  static const int kWorkerCountFieldNumber = 5;
  ::google::protobuf::int64 worker_count() const;
  void set_worker_count(::google::protobuf::int64 value);

  // int64 parameter_server_count = 6;
  void clear_parameter_server_count();
  static const int kParameterServerCountFieldNumber = 6;
  ::google::protobuf::int64 parameter_server_count() const;
  void set_parameter_server_count(::google::protobuf::int64 value);

  // .google.cloud.ml.v1.TrainingInput.ScaleTier scale_tier = 1;
  void clear_scale_tier();
  static const int kScaleTierFieldNumber = 1;
  ::google::cloud::ml::v1::TrainingInput_ScaleTier scale_tier() const;
  void set_scale_tier(::google::cloud::ml::v1::TrainingInput_ScaleTier value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.TrainingInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> package_uris_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  ::google::protobuf::internal::ArenaStringPtr master_type_;
  ::google::protobuf::internal::ArenaStringPtr worker_type_;
  ::google::protobuf::internal::ArenaStringPtr parameter_server_type_;
  ::google::protobuf::internal::ArenaStringPtr python_module_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::internal::ArenaStringPtr runtime_version_;
  ::google::protobuf::internal::ArenaStringPtr job_dir_;
  ::google::cloud::ml::v1::HyperparameterSpec* hyperparameters_;
  ::google::protobuf::int64 worker_count_;
  ::google::protobuf::int64 parameter_server_count_;
  int scale_tier_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsTrainingInputImpl();
};
// -------------------------------------------------------------------

class HyperparameterSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.HyperparameterSpec) */ {
 public:
  HyperparameterSpec();
  virtual ~HyperparameterSpec();

  HyperparameterSpec(const HyperparameterSpec& from);

  inline HyperparameterSpec& operator=(const HyperparameterSpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterSpec(HyperparameterSpec&& from) noexcept
    : HyperparameterSpec() {
    *this = ::std::move(from);
  }

  inline HyperparameterSpec& operator=(HyperparameterSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HyperparameterSpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterSpec* internal_default_instance() {
    return reinterpret_cast<const HyperparameterSpec*>(
               &_HyperparameterSpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HyperparameterSpec* other);
  friend void swap(HyperparameterSpec& a, HyperparameterSpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  HyperparameterSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HyperparameterSpec& from);
  void MergeFrom(const HyperparameterSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HyperparameterSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HyperparameterSpec_GoalType GoalType;
  static const GoalType GOAL_TYPE_UNSPECIFIED =
    HyperparameterSpec_GoalType_GOAL_TYPE_UNSPECIFIED;
  static const GoalType MAXIMIZE =
    HyperparameterSpec_GoalType_MAXIMIZE;
  static const GoalType MINIMIZE =
    HyperparameterSpec_GoalType_MINIMIZE;
  static inline bool GoalType_IsValid(int value) {
    return HyperparameterSpec_GoalType_IsValid(value);
  }
  static const GoalType GoalType_MIN =
    HyperparameterSpec_GoalType_GoalType_MIN;
  static const GoalType GoalType_MAX =
    HyperparameterSpec_GoalType_GoalType_MAX;
  static const int GoalType_ARRAYSIZE =
    HyperparameterSpec_GoalType_GoalType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GoalType_descriptor() {
    return HyperparameterSpec_GoalType_descriptor();
  }
  static inline const ::std::string& GoalType_Name(GoalType value) {
    return HyperparameterSpec_GoalType_Name(value);
  }
  static inline bool GoalType_Parse(const ::std::string& name,
      GoalType* value) {
    return HyperparameterSpec_GoalType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.cloud.ml.v1.ParameterSpec params = 2;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::google::cloud::ml::v1::ParameterSpec& params(int index) const;
  ::google::cloud::ml::v1::ParameterSpec* mutable_params(int index);
  ::google::cloud::ml::v1::ParameterSpec* add_params();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::ParameterSpec >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::ParameterSpec >&
      params() const;

  // string hyperparameter_metric_tag = 5;
  void clear_hyperparameter_metric_tag();
  static const int kHyperparameterMetricTagFieldNumber = 5;
  const ::std::string& hyperparameter_metric_tag() const;
  void set_hyperparameter_metric_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_hyperparameter_metric_tag(::std::string&& value);
  #endif
  void set_hyperparameter_metric_tag(const char* value);
  void set_hyperparameter_metric_tag(const char* value, size_t size);
  ::std::string* mutable_hyperparameter_metric_tag();
  ::std::string* release_hyperparameter_metric_tag();
  void set_allocated_hyperparameter_metric_tag(::std::string* hyperparameter_metric_tag);

  // .google.cloud.ml.v1.HyperparameterSpec.GoalType goal = 1;
  void clear_goal();
  static const int kGoalFieldNumber = 1;
  ::google::cloud::ml::v1::HyperparameterSpec_GoalType goal() const;
  void set_goal(::google::cloud::ml::v1::HyperparameterSpec_GoalType value);

  // int32 max_trials = 3;
  void clear_max_trials();
  static const int kMaxTrialsFieldNumber = 3;
  ::google::protobuf::int32 max_trials() const;
  void set_max_trials(::google::protobuf::int32 value);

  // int32 max_parallel_trials = 4;
  void clear_max_parallel_trials();
  static const int kMaxParallelTrialsFieldNumber = 4;
  ::google::protobuf::int32 max_parallel_trials() const;
  void set_max_parallel_trials(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.HyperparameterSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::ParameterSpec > params_;
  ::google::protobuf::internal::ArenaStringPtr hyperparameter_metric_tag_;
  int goal_;
  ::google::protobuf::int32 max_trials_;
  ::google::protobuf::int32 max_parallel_trials_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsHyperparameterSpecImpl();
};
// -------------------------------------------------------------------

class ParameterSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ParameterSpec) */ {
 public:
  ParameterSpec();
  virtual ~ParameterSpec();

  ParameterSpec(const ParameterSpec& from);

  inline ParameterSpec& operator=(const ParameterSpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterSpec(ParameterSpec&& from) noexcept
    : ParameterSpec() {
    *this = ::std::move(from);
  }

  inline ParameterSpec& operator=(ParameterSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterSpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterSpec* internal_default_instance() {
    return reinterpret_cast<const ParameterSpec*>(
               &_ParameterSpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ParameterSpec* other);
  friend void swap(ParameterSpec& a, ParameterSpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  ParameterSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParameterSpec& from);
  void MergeFrom(const ParameterSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParameterSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ParameterSpec_ParameterType ParameterType;
  static const ParameterType PARAMETER_TYPE_UNSPECIFIED =
    ParameterSpec_ParameterType_PARAMETER_TYPE_UNSPECIFIED;
  static const ParameterType DOUBLE =
    ParameterSpec_ParameterType_DOUBLE;
  static const ParameterType INTEGER =
    ParameterSpec_ParameterType_INTEGER;
  static const ParameterType CATEGORICAL =
    ParameterSpec_ParameterType_CATEGORICAL;
  static const ParameterType DISCRETE =
    ParameterSpec_ParameterType_DISCRETE;
  static inline bool ParameterType_IsValid(int value) {
    return ParameterSpec_ParameterType_IsValid(value);
  }
  static const ParameterType ParameterType_MIN =
    ParameterSpec_ParameterType_ParameterType_MIN;
  static const ParameterType ParameterType_MAX =
    ParameterSpec_ParameterType_ParameterType_MAX;
  static const int ParameterType_ARRAYSIZE =
    ParameterSpec_ParameterType_ParameterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ParameterType_descriptor() {
    return ParameterSpec_ParameterType_descriptor();
  }
  static inline const ::std::string& ParameterType_Name(ParameterType value) {
    return ParameterSpec_ParameterType_Name(value);
  }
  static inline bool ParameterType_Parse(const ::std::string& name,
      ParameterType* value) {
    return ParameterSpec_ParameterType_Parse(name, value);
  }

  typedef ParameterSpec_ScaleType ScaleType;
  static const ScaleType NONE =
    ParameterSpec_ScaleType_NONE;
  static const ScaleType UNIT_LINEAR_SCALE =
    ParameterSpec_ScaleType_UNIT_LINEAR_SCALE;
  static const ScaleType UNIT_LOG_SCALE =
    ParameterSpec_ScaleType_UNIT_LOG_SCALE;
  static const ScaleType UNIT_REVERSE_LOG_SCALE =
    ParameterSpec_ScaleType_UNIT_REVERSE_LOG_SCALE;
  static inline bool ScaleType_IsValid(int value) {
    return ParameterSpec_ScaleType_IsValid(value);
  }
  static const ScaleType ScaleType_MIN =
    ParameterSpec_ScaleType_ScaleType_MIN;
  static const ScaleType ScaleType_MAX =
    ParameterSpec_ScaleType_ScaleType_MAX;
  static const int ScaleType_ARRAYSIZE =
    ParameterSpec_ScaleType_ScaleType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScaleType_descriptor() {
    return ParameterSpec_ScaleType_descriptor();
  }
  static inline const ::std::string& ScaleType_Name(ScaleType value) {
    return ParameterSpec_ScaleType_Name(value);
  }
  static inline bool ScaleType_Parse(const ::std::string& name,
      ScaleType* value) {
    return ParameterSpec_ScaleType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string categorical_values = 5;
  int categorical_values_size() const;
  void clear_categorical_values();
  static const int kCategoricalValuesFieldNumber = 5;
  const ::std::string& categorical_values(int index) const;
  ::std::string* mutable_categorical_values(int index);
  void set_categorical_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_categorical_values(int index, ::std::string&& value);
  #endif
  void set_categorical_values(int index, const char* value);
  void set_categorical_values(int index, const char* value, size_t size);
  ::std::string* add_categorical_values();
  void add_categorical_values(const ::std::string& value);
  #if LANG_CXX11
  void add_categorical_values(::std::string&& value);
  #endif
  void add_categorical_values(const char* value);
  void add_categorical_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& categorical_values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_categorical_values();

  // repeated double discrete_values = 6;
  int discrete_values_size() const;
  void clear_discrete_values();
  static const int kDiscreteValuesFieldNumber = 6;
  double discrete_values(int index) const;
  void set_discrete_values(int index, double value);
  void add_discrete_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      discrete_values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_discrete_values();

  // string parameter_name = 1;
  void clear_parameter_name();
  static const int kParameterNameFieldNumber = 1;
  const ::std::string& parameter_name() const;
  void set_parameter_name(const ::std::string& value);
  #if LANG_CXX11
  void set_parameter_name(::std::string&& value);
  #endif
  void set_parameter_name(const char* value);
  void set_parameter_name(const char* value, size_t size);
  ::std::string* mutable_parameter_name();
  ::std::string* release_parameter_name();
  void set_allocated_parameter_name(::std::string* parameter_name);

  // double min_value = 2;
  void clear_min_value();
  static const int kMinValueFieldNumber = 2;
  double min_value() const;
  void set_min_value(double value);

  // double max_value = 3;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 3;
  double max_value() const;
  void set_max_value(double value);

  // .google.cloud.ml.v1.ParameterSpec.ParameterType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::cloud::ml::v1::ParameterSpec_ParameterType type() const;
  void set_type(::google::cloud::ml::v1::ParameterSpec_ParameterType value);

  // .google.cloud.ml.v1.ParameterSpec.ScaleType scale_type = 7;
  void clear_scale_type();
  static const int kScaleTypeFieldNumber = 7;
  ::google::cloud::ml::v1::ParameterSpec_ScaleType scale_type() const;
  void set_scale_type(::google::cloud::ml::v1::ParameterSpec_ScaleType value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ParameterSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> categorical_values_;
  ::google::protobuf::RepeatedField< double > discrete_values_;
  mutable int _discrete_values_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr parameter_name_;
  double min_value_;
  double max_value_;
  int type_;
  int scale_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsParameterSpecImpl();
};
// -------------------------------------------------------------------

class HyperparameterOutput_HyperparameterMetric : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric) */ {
 public:
  HyperparameterOutput_HyperparameterMetric();
  virtual ~HyperparameterOutput_HyperparameterMetric();

  HyperparameterOutput_HyperparameterMetric(const HyperparameterOutput_HyperparameterMetric& from);

  inline HyperparameterOutput_HyperparameterMetric& operator=(const HyperparameterOutput_HyperparameterMetric& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterOutput_HyperparameterMetric(HyperparameterOutput_HyperparameterMetric&& from) noexcept
    : HyperparameterOutput_HyperparameterMetric() {
    *this = ::std::move(from);
  }

  inline HyperparameterOutput_HyperparameterMetric& operator=(HyperparameterOutput_HyperparameterMetric&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HyperparameterOutput_HyperparameterMetric& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterOutput_HyperparameterMetric* internal_default_instance() {
    return reinterpret_cast<const HyperparameterOutput_HyperparameterMetric*>(
               &_HyperparameterOutput_HyperparameterMetric_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(HyperparameterOutput_HyperparameterMetric* other);
  friend void swap(HyperparameterOutput_HyperparameterMetric& a, HyperparameterOutput_HyperparameterMetric& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterOutput_HyperparameterMetric* New() const PROTOBUF_FINAL { return New(NULL); }

  HyperparameterOutput_HyperparameterMetric* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HyperparameterOutput_HyperparameterMetric& from);
  void MergeFrom(const HyperparameterOutput_HyperparameterMetric& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HyperparameterOutput_HyperparameterMetric* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 training_step = 1;
  void clear_training_step();
  static const int kTrainingStepFieldNumber = 1;
  ::google::protobuf::int64 training_step() const;
  void set_training_step(::google::protobuf::int64 value);

  // double objective_value = 2;
  void clear_objective_value();
  static const int kObjectiveValueFieldNumber = 2;
  double objective_value() const;
  void set_objective_value(double value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 training_step_;
  double objective_value_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsHyperparameterOutput_HyperparameterMetricImpl();
};
// -------------------------------------------------------------------

class HyperparameterOutput_HyperparametersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<HyperparameterOutput_HyperparametersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<HyperparameterOutput_HyperparametersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  HyperparameterOutput_HyperparametersEntry_DoNotUse();
  HyperparameterOutput_HyperparametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const HyperparameterOutput_HyperparametersEntry_DoNotUse& other);
  static const HyperparameterOutput_HyperparametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const HyperparameterOutput_HyperparametersEntry_DoNotUse*>(&_HyperparameterOutput_HyperparametersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class HyperparameterOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.HyperparameterOutput) */ {
 public:
  HyperparameterOutput();
  virtual ~HyperparameterOutput();

  HyperparameterOutput(const HyperparameterOutput& from);

  inline HyperparameterOutput& operator=(const HyperparameterOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterOutput(HyperparameterOutput&& from) noexcept
    : HyperparameterOutput() {
    *this = ::std::move(from);
  }

  inline HyperparameterOutput& operator=(HyperparameterOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HyperparameterOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterOutput* internal_default_instance() {
    return reinterpret_cast<const HyperparameterOutput*>(
               &_HyperparameterOutput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(HyperparameterOutput* other);
  friend void swap(HyperparameterOutput& a, HyperparameterOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterOutput* New() const PROTOBUF_FINAL { return New(NULL); }

  HyperparameterOutput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HyperparameterOutput& from);
  void MergeFrom(const HyperparameterOutput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HyperparameterOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HyperparameterOutput_HyperparameterMetric HyperparameterMetric;

  // accessors -------------------------------------------------------

  // map<string, string> hyperparameters = 2;
  int hyperparameters_size() const;
  void clear_hyperparameters();
  static const int kHyperparametersFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      hyperparameters() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_hyperparameters();

  // repeated .google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric all_metrics = 4;
  int all_metrics_size() const;
  void clear_all_metrics();
  static const int kAllMetricsFieldNumber = 4;
  const ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric& all_metrics(int index) const;
  ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* mutable_all_metrics(int index);
  ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* add_all_metrics();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric >*
      mutable_all_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric >&
      all_metrics() const;

  // string trial_id = 1;
  void clear_trial_id();
  static const int kTrialIdFieldNumber = 1;
  const ::std::string& trial_id() const;
  void set_trial_id(const ::std::string& value);
  #if LANG_CXX11
  void set_trial_id(::std::string&& value);
  #endif
  void set_trial_id(const char* value);
  void set_trial_id(const char* value, size_t size);
  ::std::string* mutable_trial_id();
  ::std::string* release_trial_id();
  void set_allocated_trial_id(::std::string* trial_id);

  // .google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric final_metric = 3;
  bool has_final_metric() const;
  void clear_final_metric();
  static const int kFinalMetricFieldNumber = 3;
  const ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric& final_metric() const;
  ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* release_final_metric();
  ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* mutable_final_metric();
  void set_allocated_final_metric(::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* final_metric);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.HyperparameterOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      HyperparameterOutput_HyperparametersEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > hyperparameters_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric > all_metrics_;
  ::google::protobuf::internal::ArenaStringPtr trial_id_;
  ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* final_metric_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsHyperparameterOutputImpl();
};
// -------------------------------------------------------------------

class TrainingOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.TrainingOutput) */ {
 public:
  TrainingOutput();
  virtual ~TrainingOutput();

  TrainingOutput(const TrainingOutput& from);

  inline TrainingOutput& operator=(const TrainingOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainingOutput(TrainingOutput&& from) noexcept
    : TrainingOutput() {
    *this = ::std::move(from);
  }

  inline TrainingOutput& operator=(TrainingOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainingOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainingOutput* internal_default_instance() {
    return reinterpret_cast<const TrainingOutput*>(
               &_TrainingOutput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TrainingOutput* other);
  friend void swap(TrainingOutput& a, TrainingOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainingOutput* New() const PROTOBUF_FINAL { return New(NULL); }

  TrainingOutput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrainingOutput& from);
  void MergeFrom(const TrainingOutput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrainingOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.ml.v1.HyperparameterOutput trials = 2;
  int trials_size() const;
  void clear_trials();
  static const int kTrialsFieldNumber = 2;
  const ::google::cloud::ml::v1::HyperparameterOutput& trials(int index) const;
  ::google::cloud::ml::v1::HyperparameterOutput* mutable_trials(int index);
  ::google::cloud::ml::v1::HyperparameterOutput* add_trials();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput >*
      mutable_trials();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput >&
      trials() const;

  // int64 completed_trial_count = 1;
  void clear_completed_trial_count();
  static const int kCompletedTrialCountFieldNumber = 1;
  ::google::protobuf::int64 completed_trial_count() const;
  void set_completed_trial_count(::google::protobuf::int64 value);

  // double consumed_ml_units = 3;
  void clear_consumed_ml_units();
  static const int kConsumedMlUnitsFieldNumber = 3;
  double consumed_ml_units() const;
  void set_consumed_ml_units(double value);

  // bool is_hyperparameter_tuning_job = 4;
  void clear_is_hyperparameter_tuning_job();
  static const int kIsHyperparameterTuningJobFieldNumber = 4;
  bool is_hyperparameter_tuning_job() const;
  void set_is_hyperparameter_tuning_job(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.TrainingOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput > trials_;
  ::google::protobuf::int64 completed_trial_count_;
  double consumed_ml_units_;
  bool is_hyperparameter_tuning_job_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsTrainingOutputImpl();
};
// -------------------------------------------------------------------

class PredictionInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.PredictionInput) */ {
 public:
  PredictionInput();
  virtual ~PredictionInput();

  PredictionInput(const PredictionInput& from);

  inline PredictionInput& operator=(const PredictionInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionInput(PredictionInput&& from) noexcept
    : PredictionInput() {
    *this = ::std::move(from);
  }

  inline PredictionInput& operator=(PredictionInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionInput& default_instance();

  enum ModelVersionCase {
    kModelName = 1,
    kVersionName = 2,
    kUri = 9,
    MODEL_VERSION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionInput* internal_default_instance() {
    return reinterpret_cast<const PredictionInput*>(
               &_PredictionInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PredictionInput* other);
  friend void swap(PredictionInput& a, PredictionInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionInput* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionInput& from);
  void MergeFrom(const PredictionInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PredictionInput_DataFormat DataFormat;
  static const DataFormat DATA_FORMAT_UNSPECIFIED =
    PredictionInput_DataFormat_DATA_FORMAT_UNSPECIFIED;
  static const DataFormat TEXT =
    PredictionInput_DataFormat_TEXT;
  static const DataFormat TF_RECORD =
    PredictionInput_DataFormat_TF_RECORD;
  static const DataFormat TF_RECORD_GZIP =
    PredictionInput_DataFormat_TF_RECORD_GZIP;
  static inline bool DataFormat_IsValid(int value) {
    return PredictionInput_DataFormat_IsValid(value);
  }
  static const DataFormat DataFormat_MIN =
    PredictionInput_DataFormat_DataFormat_MIN;
  static const DataFormat DataFormat_MAX =
    PredictionInput_DataFormat_DataFormat_MAX;
  static const int DataFormat_ARRAYSIZE =
    PredictionInput_DataFormat_DataFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataFormat_descriptor() {
    return PredictionInput_DataFormat_descriptor();
  }
  static inline const ::std::string& DataFormat_Name(DataFormat value) {
    return PredictionInput_DataFormat_Name(value);
  }
  static inline bool DataFormat_Parse(const ::std::string& name,
      DataFormat* value) {
    return PredictionInput_DataFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string input_paths = 4;
  int input_paths_size() const;
  void clear_input_paths();
  static const int kInputPathsFieldNumber = 4;
  const ::std::string& input_paths(int index) const;
  ::std::string* mutable_input_paths(int index);
  void set_input_paths(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_input_paths(int index, ::std::string&& value);
  #endif
  void set_input_paths(int index, const char* value);
  void set_input_paths(int index, const char* value, size_t size);
  ::std::string* add_input_paths();
  void add_input_paths(const ::std::string& value);
  #if LANG_CXX11
  void add_input_paths(::std::string&& value);
  #endif
  void add_input_paths(const char* value);
  void add_input_paths(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& input_paths() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_input_paths();

  // string output_path = 5;
  void clear_output_path();
  static const int kOutputPathFieldNumber = 5;
  const ::std::string& output_path() const;
  void set_output_path(const ::std::string& value);
  #if LANG_CXX11
  void set_output_path(::std::string&& value);
  #endif
  void set_output_path(const char* value);
  void set_output_path(const char* value, size_t size);
  ::std::string* mutable_output_path();
  ::std::string* release_output_path();
  void set_allocated_output_path(::std::string* output_path);

  // string region = 7;
  void clear_region();
  static const int kRegionFieldNumber = 7;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // string runtime_version = 8;
  void clear_runtime_version();
  static const int kRuntimeVersionFieldNumber = 8;
  const ::std::string& runtime_version() const;
  void set_runtime_version(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime_version(::std::string&& value);
  #endif
  void set_runtime_version(const char* value);
  void set_runtime_version(const char* value, size_t size);
  ::std::string* mutable_runtime_version();
  ::std::string* release_runtime_version();
  void set_allocated_runtime_version(::std::string* runtime_version);

  // int64 max_worker_count = 6;
  void clear_max_worker_count();
  static const int kMaxWorkerCountFieldNumber = 6;
  ::google::protobuf::int64 max_worker_count() const;
  void set_max_worker_count(::google::protobuf::int64 value);

  // .google.cloud.ml.v1.PredictionInput.DataFormat data_format = 3;
  void clear_data_format();
  static const int kDataFormatFieldNumber = 3;
  ::google::cloud::ml::v1::PredictionInput_DataFormat data_format() const;
  void set_data_format(::google::cloud::ml::v1::PredictionInput_DataFormat value);

  // string model_name = 1;
  private:
  bool has_model_name() const;
  public:
  void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // string version_name = 2;
  private:
  bool has_version_name() const;
  public:
  void clear_version_name();
  static const int kVersionNameFieldNumber = 2;
  const ::std::string& version_name() const;
  void set_version_name(const ::std::string& value);
  #if LANG_CXX11
  void set_version_name(::std::string&& value);
  #endif
  void set_version_name(const char* value);
  void set_version_name(const char* value, size_t size);
  ::std::string* mutable_version_name();
  ::std::string* release_version_name();
  void set_allocated_version_name(::std::string* version_name);

  // string uri = 9;
  private:
  bool has_uri() const;
  public:
  void clear_uri();
  static const int kUriFieldNumber = 9;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  ModelVersionCase model_version_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.PredictionInput)
 private:
  void set_has_model_name();
  void set_has_version_name();
  void set_has_uri();

  inline bool has_model_version() const;
  void clear_model_version();
  inline void clear_has_model_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> input_paths_;
  ::google::protobuf::internal::ArenaStringPtr output_path_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::internal::ArenaStringPtr runtime_version_;
  ::google::protobuf::int64 max_worker_count_;
  int data_format_;
  union ModelVersionUnion {
    ModelVersionUnion() {}
    ::google::protobuf::internal::ArenaStringPtr model_name_;
    ::google::protobuf::internal::ArenaStringPtr version_name_;
    ::google::protobuf::internal::ArenaStringPtr uri_;
  } model_version_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsPredictionInputImpl();
};
// -------------------------------------------------------------------

class PredictionOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.PredictionOutput) */ {
 public:
  PredictionOutput();
  virtual ~PredictionOutput();

  PredictionOutput(const PredictionOutput& from);

  inline PredictionOutput& operator=(const PredictionOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionOutput(PredictionOutput&& from) noexcept
    : PredictionOutput() {
    *this = ::std::move(from);
  }

  inline PredictionOutput& operator=(PredictionOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionOutput* internal_default_instance() {
    return reinterpret_cast<const PredictionOutput*>(
               &_PredictionOutput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PredictionOutput* other);
  friend void swap(PredictionOutput& a, PredictionOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionOutput* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionOutput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionOutput& from);
  void MergeFrom(const PredictionOutput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string output_path = 1;
  void clear_output_path();
  static const int kOutputPathFieldNumber = 1;
  const ::std::string& output_path() const;
  void set_output_path(const ::std::string& value);
  #if LANG_CXX11
  void set_output_path(::std::string&& value);
  #endif
  void set_output_path(const char* value);
  void set_output_path(const char* value, size_t size);
  ::std::string* mutable_output_path();
  ::std::string* release_output_path();
  void set_allocated_output_path(::std::string* output_path);

  // int64 prediction_count = 2;
  void clear_prediction_count();
  static const int kPredictionCountFieldNumber = 2;
  ::google::protobuf::int64 prediction_count() const;
  void set_prediction_count(::google::protobuf::int64 value);

  // int64 error_count = 3;
  void clear_error_count();
  static const int kErrorCountFieldNumber = 3;
  ::google::protobuf::int64 error_count() const;
  void set_error_count(::google::protobuf::int64 value);

  // double node_hours = 4;
  void clear_node_hours();
  static const int kNodeHoursFieldNumber = 4;
  double node_hours() const;
  void set_node_hours(double value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.PredictionOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr output_path_;
  ::google::protobuf::int64 prediction_count_;
  ::google::protobuf::int64 error_count_;
  double node_hours_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsPredictionOutputImpl();
};
// -------------------------------------------------------------------

class Job : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.Job) */ {
 public:
  Job();
  virtual ~Job();

  Job(const Job& from);

  inline Job& operator=(const Job& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Job(Job&& from) noexcept
    : Job() {
    *this = ::std::move(from);
  }

  inline Job& operator=(Job&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Job& default_instance();

  enum InputCase {
    kTrainingInput = 2,
    kPredictionInput = 3,
    INPUT_NOT_SET = 0,
  };

  enum OutputCase {
    kTrainingOutput = 9,
    kPredictionOutput = 10,
    OUTPUT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Job* internal_default_instance() {
    return reinterpret_cast<const Job*>(
               &_Job_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Job* other);
  friend void swap(Job& a, Job& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Job* New() const PROTOBUF_FINAL { return New(NULL); }

  Job* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Job& from);
  void MergeFrom(const Job& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Job* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Job_State State;
  static const State STATE_UNSPECIFIED =
    Job_State_STATE_UNSPECIFIED;
  static const State QUEUED =
    Job_State_QUEUED;
  static const State PREPARING =
    Job_State_PREPARING;
  static const State RUNNING =
    Job_State_RUNNING;
  static const State SUCCEEDED =
    Job_State_SUCCEEDED;
  static const State FAILED =
    Job_State_FAILED;
  static const State CANCELLING =
    Job_State_CANCELLING;
  static const State CANCELLED =
    Job_State_CANCELLED;
  static inline bool State_IsValid(int value) {
    return Job_State_IsValid(value);
  }
  static const State State_MIN =
    Job_State_State_MIN;
  static const State State_MAX =
    Job_State_State_MAX;
  static const int State_ARRAYSIZE =
    Job_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return Job_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return Job_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return Job_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  const ::std::string& job_id() const;
  void set_job_id(const ::std::string& value);
  #if LANG_CXX11
  void set_job_id(::std::string&& value);
  #endif
  void set_job_id(const char* value);
  void set_job_id(const char* value, size_t size);
  ::std::string* mutable_job_id();
  ::std::string* release_job_id();
  void set_allocated_job_id(::std::string* job_id);

  // string error_message = 8;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 8;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // .google.protobuf.Timestamp create_time = 4;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp start_time = 5;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 6;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // .google.cloud.ml.v1.Job.State state = 7;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::google::cloud::ml::v1::Job_State state() const;
  void set_state(::google::cloud::ml::v1::Job_State value);

  // .google.cloud.ml.v1.TrainingInput training_input = 2;
  bool has_training_input() const;
  void clear_training_input();
  static const int kTrainingInputFieldNumber = 2;
  const ::google::cloud::ml::v1::TrainingInput& training_input() const;
  ::google::cloud::ml::v1::TrainingInput* release_training_input();
  ::google::cloud::ml::v1::TrainingInput* mutable_training_input();
  void set_allocated_training_input(::google::cloud::ml::v1::TrainingInput* training_input);

  // .google.cloud.ml.v1.PredictionInput prediction_input = 3;
  bool has_prediction_input() const;
  void clear_prediction_input();
  static const int kPredictionInputFieldNumber = 3;
  const ::google::cloud::ml::v1::PredictionInput& prediction_input() const;
  ::google::cloud::ml::v1::PredictionInput* release_prediction_input();
  ::google::cloud::ml::v1::PredictionInput* mutable_prediction_input();
  void set_allocated_prediction_input(::google::cloud::ml::v1::PredictionInput* prediction_input);

  // .google.cloud.ml.v1.TrainingOutput training_output = 9;
  bool has_training_output() const;
  void clear_training_output();
  static const int kTrainingOutputFieldNumber = 9;
  const ::google::cloud::ml::v1::TrainingOutput& training_output() const;
  ::google::cloud::ml::v1::TrainingOutput* release_training_output();
  ::google::cloud::ml::v1::TrainingOutput* mutable_training_output();
  void set_allocated_training_output(::google::cloud::ml::v1::TrainingOutput* training_output);

  // .google.cloud.ml.v1.PredictionOutput prediction_output = 10;
  bool has_prediction_output() const;
  void clear_prediction_output();
  static const int kPredictionOutputFieldNumber = 10;
  const ::google::cloud::ml::v1::PredictionOutput& prediction_output() const;
  ::google::cloud::ml::v1::PredictionOutput* release_prediction_output();
  ::google::cloud::ml::v1::PredictionOutput* mutable_prediction_output();
  void set_allocated_prediction_output(::google::cloud::ml::v1::PredictionOutput* prediction_output);

  InputCase input_case() const;
  OutputCase output_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.Job)
 private:
  void set_has_training_input();
  void set_has_prediction_input();
  void set_has_training_output();
  void set_has_prediction_output();

  inline bool has_input() const;
  void clear_input();
  inline void clear_has_input();

  inline bool has_output() const;
  void clear_output();
  inline void clear_has_output();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr job_id_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  int state_;
  union InputUnion {
    InputUnion() {}
    ::google::cloud::ml::v1::TrainingInput* training_input_;
    ::google::cloud::ml::v1::PredictionInput* prediction_input_;
  } input_;
  union OutputUnion {
    OutputUnion() {}
    ::google::cloud::ml::v1::TrainingOutput* training_output_;
    ::google::cloud::ml::v1::PredictionOutput* prediction_output_;
  } output_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsJobImpl();
};
// -------------------------------------------------------------------

class CreateJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.CreateJobRequest) */ {
 public:
  CreateJobRequest();
  virtual ~CreateJobRequest();

  CreateJobRequest(const CreateJobRequest& from);

  inline CreateJobRequest& operator=(const CreateJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateJobRequest(CreateJobRequest&& from) noexcept
    : CreateJobRequest() {
    *this = ::std::move(from);
  }

  inline CreateJobRequest& operator=(CreateJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateJobRequest* internal_default_instance() {
    return reinterpret_cast<const CreateJobRequest*>(
               &_CreateJobRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CreateJobRequest* other);
  friend void swap(CreateJobRequest& a, CreateJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateJobRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateJobRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateJobRequest& from);
  void MergeFrom(const CreateJobRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.cloud.ml.v1.Job job = 2;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 2;
  const ::google::cloud::ml::v1::Job& job() const;
  ::google::cloud::ml::v1::Job* release_job();
  ::google::cloud::ml::v1::Job* mutable_job();
  void set_allocated_job(::google::cloud::ml::v1::Job* job);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.CreateJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::ml::v1::Job* job_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsCreateJobRequestImpl();
};
// -------------------------------------------------------------------

class ListJobsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ListJobsRequest) */ {
 public:
  ListJobsRequest();
  virtual ~ListJobsRequest();

  ListJobsRequest(const ListJobsRequest& from);

  inline ListJobsRequest& operator=(const ListJobsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListJobsRequest(ListJobsRequest&& from) noexcept
    : ListJobsRequest() {
    *this = ::std::move(from);
  }

  inline ListJobsRequest& operator=(ListJobsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListJobsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListJobsRequest* internal_default_instance() {
    return reinterpret_cast<const ListJobsRequest*>(
               &_ListJobsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ListJobsRequest* other);
  friend void swap(ListJobsRequest& a, ListJobsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListJobsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListJobsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListJobsRequest& from);
  void MergeFrom(const ListJobsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListJobsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 5;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 5;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ListJobsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsListJobsRequestImpl();
};
// -------------------------------------------------------------------

class ListJobsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.ListJobsResponse) */ {
 public:
  ListJobsResponse();
  virtual ~ListJobsResponse();

  ListJobsResponse(const ListJobsResponse& from);

  inline ListJobsResponse& operator=(const ListJobsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListJobsResponse(ListJobsResponse&& from) noexcept
    : ListJobsResponse() {
    *this = ::std::move(from);
  }

  inline ListJobsResponse& operator=(ListJobsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListJobsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListJobsResponse* internal_default_instance() {
    return reinterpret_cast<const ListJobsResponse*>(
               &_ListJobsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ListJobsResponse* other);
  friend void swap(ListJobsResponse& a, ListJobsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListJobsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListJobsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListJobsResponse& from);
  void MergeFrom(const ListJobsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListJobsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.ml.v1.Job jobs = 1;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 1;
  const ::google::cloud::ml::v1::Job& jobs(int index) const;
  ::google::cloud::ml::v1::Job* mutable_jobs(int index);
  ::google::cloud::ml::v1::Job* add_jobs();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Job >*
      mutable_jobs();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Job >&
      jobs() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.ListJobsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Job > jobs_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsListJobsResponseImpl();
};
// -------------------------------------------------------------------

class GetJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.GetJobRequest) */ {
 public:
  GetJobRequest();
  virtual ~GetJobRequest();

  GetJobRequest(const GetJobRequest& from);

  inline GetJobRequest& operator=(const GetJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetJobRequest(GetJobRequest&& from) noexcept
    : GetJobRequest() {
    *this = ::std::move(from);
  }

  inline GetJobRequest& operator=(GetJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetJobRequest* internal_default_instance() {
    return reinterpret_cast<const GetJobRequest*>(
               &_GetJobRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GetJobRequest* other);
  friend void swap(GetJobRequest& a, GetJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetJobRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetJobRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetJobRequest& from);
  void MergeFrom(const GetJobRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.GetJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsGetJobRequestImpl();
};
// -------------------------------------------------------------------

class CancelJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.ml.v1.CancelJobRequest) */ {
 public:
  CancelJobRequest();
  virtual ~CancelJobRequest();

  CancelJobRequest(const CancelJobRequest& from);

  inline CancelJobRequest& operator=(const CancelJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelJobRequest(CancelJobRequest&& from) noexcept
    : CancelJobRequest() {
    *this = ::std::move(from);
  }

  inline CancelJobRequest& operator=(CancelJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelJobRequest* internal_default_instance() {
    return reinterpret_cast<const CancelJobRequest*>(
               &_CancelJobRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CancelJobRequest* other);
  friend void swap(CancelJobRequest& a, CancelJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelJobRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelJobRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelJobRequest& from);
  void MergeFrom(const CancelJobRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1.CancelJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto::InitDefaultsCancelJobRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrainingInput

// .google.cloud.ml.v1.TrainingInput.ScaleTier scale_tier = 1;
inline void TrainingInput::clear_scale_tier() {
  scale_tier_ = 0;
}
inline ::google::cloud::ml::v1::TrainingInput_ScaleTier TrainingInput::scale_tier() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.scale_tier)
  return static_cast< ::google::cloud::ml::v1::TrainingInput_ScaleTier >(scale_tier_);
}
inline void TrainingInput::set_scale_tier(::google::cloud::ml::v1::TrainingInput_ScaleTier value) {
  
  scale_tier_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.scale_tier)
}

// string master_type = 2;
inline void TrainingInput::clear_master_type() {
  master_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingInput::master_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.master_type)
  return master_type_.GetNoArena();
}
inline void TrainingInput::set_master_type(const ::std::string& value) {
  
  master_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.master_type)
}
#if LANG_CXX11
inline void TrainingInput::set_master_type(::std::string&& value) {
  
  master_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.TrainingInput.master_type)
}
#endif
inline void TrainingInput::set_master_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  master_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.master_type)
}
inline void TrainingInput::set_master_type(const char* value, size_t size) {
  
  master_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.master_type)
}
inline ::std::string* TrainingInput::mutable_master_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.master_type)
  return master_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingInput::release_master_type() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.master_type)
  
  return master_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingInput::set_allocated_master_type(::std::string* master_type) {
  if (master_type != NULL) {
    
  } else {
    
  }
  master_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.master_type)
}

// string worker_type = 3;
inline void TrainingInput::clear_worker_type() {
  worker_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingInput::worker_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.worker_type)
  return worker_type_.GetNoArena();
}
inline void TrainingInput::set_worker_type(const ::std::string& value) {
  
  worker_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.worker_type)
}
#if LANG_CXX11
inline void TrainingInput::set_worker_type(::std::string&& value) {
  
  worker_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.TrainingInput.worker_type)
}
#endif
inline void TrainingInput::set_worker_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  worker_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.worker_type)
}
inline void TrainingInput::set_worker_type(const char* value, size_t size) {
  
  worker_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.worker_type)
}
inline ::std::string* TrainingInput::mutable_worker_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.worker_type)
  return worker_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingInput::release_worker_type() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.worker_type)
  
  return worker_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingInput::set_allocated_worker_type(::std::string* worker_type) {
  if (worker_type != NULL) {
    
  } else {
    
  }
  worker_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), worker_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.worker_type)
}

// string parameter_server_type = 4;
inline void TrainingInput::clear_parameter_server_type() {
  parameter_server_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingInput::parameter_server_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.parameter_server_type)
  return parameter_server_type_.GetNoArena();
}
inline void TrainingInput::set_parameter_server_type(const ::std::string& value) {
  
  parameter_server_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.parameter_server_type)
}
#if LANG_CXX11
inline void TrainingInput::set_parameter_server_type(::std::string&& value) {
  
  parameter_server_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.TrainingInput.parameter_server_type)
}
#endif
inline void TrainingInput::set_parameter_server_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parameter_server_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.parameter_server_type)
}
inline void TrainingInput::set_parameter_server_type(const char* value, size_t size) {
  
  parameter_server_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.parameter_server_type)
}
inline ::std::string* TrainingInput::mutable_parameter_server_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.parameter_server_type)
  return parameter_server_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingInput::release_parameter_server_type() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.parameter_server_type)
  
  return parameter_server_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingInput::set_allocated_parameter_server_type(::std::string* parameter_server_type) {
  if (parameter_server_type != NULL) {
    
  } else {
    
  }
  parameter_server_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter_server_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.parameter_server_type)
}

// int64 worker_count = 5;
inline void TrainingInput::clear_worker_count() {
  worker_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrainingInput::worker_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.worker_count)
  return worker_count_;
}
inline void TrainingInput::set_worker_count(::google::protobuf::int64 value) {
  
  worker_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.worker_count)
}

// int64 parameter_server_count = 6;
inline void TrainingInput::clear_parameter_server_count() {
  parameter_server_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrainingInput::parameter_server_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.parameter_server_count)
  return parameter_server_count_;
}
inline void TrainingInput::set_parameter_server_count(::google::protobuf::int64 value) {
  
  parameter_server_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.parameter_server_count)
}

// repeated string package_uris = 7;
inline int TrainingInput::package_uris_size() const {
  return package_uris_.size();
}
inline void TrainingInput::clear_package_uris() {
  package_uris_.Clear();
}
inline const ::std::string& TrainingInput::package_uris(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.package_uris)
  return package_uris_.Get(index);
}
inline ::std::string* TrainingInput::mutable_package_uris(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.package_uris)
  return package_uris_.Mutable(index);
}
inline void TrainingInput::set_package_uris(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.package_uris)
  package_uris_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TrainingInput::set_package_uris(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.package_uris)
  package_uris_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TrainingInput::set_package_uris(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  package_uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.package_uris)
}
inline void TrainingInput::set_package_uris(int index, const char* value, size_t size) {
  package_uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.package_uris)
}
inline ::std::string* TrainingInput::add_package_uris() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1.TrainingInput.package_uris)
  return package_uris_.Add();
}
inline void TrainingInput::add_package_uris(const ::std::string& value) {
  package_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.TrainingInput.package_uris)
}
#if LANG_CXX11
inline void TrainingInput::add_package_uris(::std::string&& value) {
  package_uris_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.TrainingInput.package_uris)
}
#endif
inline void TrainingInput::add_package_uris(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  package_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1.TrainingInput.package_uris)
}
inline void TrainingInput::add_package_uris(const char* value, size_t size) {
  package_uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1.TrainingInput.package_uris)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrainingInput::package_uris() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.TrainingInput.package_uris)
  return package_uris_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TrainingInput::mutable_package_uris() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.TrainingInput.package_uris)
  return &package_uris_;
}

// string python_module = 8;
inline void TrainingInput::clear_python_module() {
  python_module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingInput::python_module() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.python_module)
  return python_module_.GetNoArena();
}
inline void TrainingInput::set_python_module(const ::std::string& value) {
  
  python_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.python_module)
}
#if LANG_CXX11
inline void TrainingInput::set_python_module(::std::string&& value) {
  
  python_module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.TrainingInput.python_module)
}
#endif
inline void TrainingInput::set_python_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  python_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.python_module)
}
inline void TrainingInput::set_python_module(const char* value, size_t size) {
  
  python_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.python_module)
}
inline ::std::string* TrainingInput::mutable_python_module() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.python_module)
  return python_module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingInput::release_python_module() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.python_module)
  
  return python_module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingInput::set_allocated_python_module(::std::string* python_module) {
  if (python_module != NULL) {
    
  } else {
    
  }
  python_module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), python_module);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.python_module)
}

// repeated string args = 10;
inline int TrainingInput::args_size() const {
  return args_.size();
}
inline void TrainingInput::clear_args() {
  args_.Clear();
}
inline const ::std::string& TrainingInput::args(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.args)
  return args_.Get(index);
}
inline ::std::string* TrainingInput::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.args)
  return args_.Mutable(index);
}
inline void TrainingInput::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.args)
  args_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TrainingInput::set_args(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.args)
  args_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TrainingInput::set_args(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.args)
}
inline void TrainingInput::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.args)
}
inline ::std::string* TrainingInput::add_args() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1.TrainingInput.args)
  return args_.Add();
}
inline void TrainingInput::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.TrainingInput.args)
}
#if LANG_CXX11
inline void TrainingInput::add_args(::std::string&& value) {
  args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.TrainingInput.args)
}
#endif
inline void TrainingInput::add_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1.TrainingInput.args)
}
inline void TrainingInput::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1.TrainingInput.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrainingInput::args() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.TrainingInput.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TrainingInput::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.TrainingInput.args)
  return &args_;
}

// .google.cloud.ml.v1.HyperparameterSpec hyperparameters = 12;
inline bool TrainingInput::has_hyperparameters() const {
  return this != internal_default_instance() && hyperparameters_ != NULL;
}
inline void TrainingInput::clear_hyperparameters() {
  if (GetArenaNoVirtual() == NULL && hyperparameters_ != NULL) {
    delete hyperparameters_;
  }
  hyperparameters_ = NULL;
}
inline const ::google::cloud::ml::v1::HyperparameterSpec& TrainingInput::hyperparameters() const {
  const ::google::cloud::ml::v1::HyperparameterSpec* p = hyperparameters_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.hyperparameters)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::ml::v1::HyperparameterSpec*>(
      &::google::cloud::ml::v1::_HyperparameterSpec_default_instance_);
}
inline ::google::cloud::ml::v1::HyperparameterSpec* TrainingInput::release_hyperparameters() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.hyperparameters)
  
  ::google::cloud::ml::v1::HyperparameterSpec* temp = hyperparameters_;
  hyperparameters_ = NULL;
  return temp;
}
inline ::google::cloud::ml::v1::HyperparameterSpec* TrainingInput::mutable_hyperparameters() {
  
  if (hyperparameters_ == NULL) {
    hyperparameters_ = new ::google::cloud::ml::v1::HyperparameterSpec;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.hyperparameters)
  return hyperparameters_;
}
inline void TrainingInput::set_allocated_hyperparameters(::google::cloud::ml::v1::HyperparameterSpec* hyperparameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hyperparameters_;
  }
  if (hyperparameters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hyperparameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hyperparameters, submessage_arena);
    }
    
  } else {
    
  }
  hyperparameters_ = hyperparameters;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.hyperparameters)
}

// string region = 14;
inline void TrainingInput::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingInput::region() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.region)
  return region_.GetNoArena();
}
inline void TrainingInput::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.region)
}
#if LANG_CXX11
inline void TrainingInput::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.TrainingInput.region)
}
#endif
inline void TrainingInput::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.region)
}
inline void TrainingInput::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.region)
}
inline ::std::string* TrainingInput::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingInput::release_region() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingInput::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.region)
}

// string job_dir = 16;
inline void TrainingInput::clear_job_dir() {
  job_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingInput::job_dir() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.job_dir)
  return job_dir_.GetNoArena();
}
inline void TrainingInput::set_job_dir(const ::std::string& value) {
  
  job_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.job_dir)
}
#if LANG_CXX11
inline void TrainingInput::set_job_dir(::std::string&& value) {
  
  job_dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.TrainingInput.job_dir)
}
#endif
inline void TrainingInput::set_job_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  job_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.job_dir)
}
inline void TrainingInput::set_job_dir(const char* value, size_t size) {
  
  job_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.job_dir)
}
inline ::std::string* TrainingInput::mutable_job_dir() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.job_dir)
  return job_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingInput::release_job_dir() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.job_dir)
  
  return job_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingInput::set_allocated_job_dir(::std::string* job_dir) {
  if (job_dir != NULL) {
    
  } else {
    
  }
  job_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_dir);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.job_dir)
}

// string runtime_version = 15;
inline void TrainingInput::clear_runtime_version() {
  runtime_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingInput::runtime_version() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingInput.runtime_version)
  return runtime_version_.GetNoArena();
}
inline void TrainingInput::set_runtime_version(const ::std::string& value) {
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingInput.runtime_version)
}
#if LANG_CXX11
inline void TrainingInput::set_runtime_version(::std::string&& value) {
  
  runtime_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.TrainingInput.runtime_version)
}
#endif
inline void TrainingInput::set_runtime_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.TrainingInput.runtime_version)
}
inline void TrainingInput::set_runtime_version(const char* value, size_t size) {
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.TrainingInput.runtime_version)
}
inline ::std::string* TrainingInput::mutable_runtime_version() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingInput.runtime_version)
  return runtime_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingInput::release_runtime_version() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.TrainingInput.runtime_version)
  
  return runtime_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingInput::set_allocated_runtime_version(::std::string* runtime_version) {
  if (runtime_version != NULL) {
    
  } else {
    
  }
  runtime_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_version);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.TrainingInput.runtime_version)
}

// -------------------------------------------------------------------

// HyperparameterSpec

// .google.cloud.ml.v1.HyperparameterSpec.GoalType goal = 1;
inline void HyperparameterSpec::clear_goal() {
  goal_ = 0;
}
inline ::google::cloud::ml::v1::HyperparameterSpec_GoalType HyperparameterSpec::goal() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterSpec.goal)
  return static_cast< ::google::cloud::ml::v1::HyperparameterSpec_GoalType >(goal_);
}
inline void HyperparameterSpec::set_goal(::google::cloud::ml::v1::HyperparameterSpec_GoalType value) {
  
  goal_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.HyperparameterSpec.goal)
}

// repeated .google.cloud.ml.v1.ParameterSpec params = 2;
inline int HyperparameterSpec::params_size() const {
  return params_.size();
}
inline void HyperparameterSpec::clear_params() {
  params_.Clear();
}
inline const ::google::cloud::ml::v1::ParameterSpec& HyperparameterSpec::params(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterSpec.params)
  return params_.Get(index);
}
inline ::google::cloud::ml::v1::ParameterSpec* HyperparameterSpec::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.HyperparameterSpec.params)
  return params_.Mutable(index);
}
inline ::google::cloud::ml::v1::ParameterSpec* HyperparameterSpec::add_params() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.HyperparameterSpec.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::ParameterSpec >*
HyperparameterSpec::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.HyperparameterSpec.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::ParameterSpec >&
HyperparameterSpec::params() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.HyperparameterSpec.params)
  return params_;
}

// int32 max_trials = 3;
inline void HyperparameterSpec::clear_max_trials() {
  max_trials_ = 0;
}
inline ::google::protobuf::int32 HyperparameterSpec::max_trials() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterSpec.max_trials)
  return max_trials_;
}
inline void HyperparameterSpec::set_max_trials(::google::protobuf::int32 value) {
  
  max_trials_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.HyperparameterSpec.max_trials)
}

// int32 max_parallel_trials = 4;
inline void HyperparameterSpec::clear_max_parallel_trials() {
  max_parallel_trials_ = 0;
}
inline ::google::protobuf::int32 HyperparameterSpec::max_parallel_trials() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterSpec.max_parallel_trials)
  return max_parallel_trials_;
}
inline void HyperparameterSpec::set_max_parallel_trials(::google::protobuf::int32 value) {
  
  max_parallel_trials_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.HyperparameterSpec.max_parallel_trials)
}

// string hyperparameter_metric_tag = 5;
inline void HyperparameterSpec::clear_hyperparameter_metric_tag() {
  hyperparameter_metric_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HyperparameterSpec::hyperparameter_metric_tag() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
  return hyperparameter_metric_tag_.GetNoArena();
}
inline void HyperparameterSpec::set_hyperparameter_metric_tag(const ::std::string& value) {
  
  hyperparameter_metric_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
}
#if LANG_CXX11
inline void HyperparameterSpec::set_hyperparameter_metric_tag(::std::string&& value) {
  
  hyperparameter_metric_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
}
#endif
inline void HyperparameterSpec::set_hyperparameter_metric_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hyperparameter_metric_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
}
inline void HyperparameterSpec::set_hyperparameter_metric_tag(const char* value, size_t size) {
  
  hyperparameter_metric_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
}
inline ::std::string* HyperparameterSpec::mutable_hyperparameter_metric_tag() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
  return hyperparameter_metric_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HyperparameterSpec::release_hyperparameter_metric_tag() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
  
  return hyperparameter_metric_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HyperparameterSpec::set_allocated_hyperparameter_metric_tag(::std::string* hyperparameter_metric_tag) {
  if (hyperparameter_metric_tag != NULL) {
    
  } else {
    
  }
  hyperparameter_metric_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hyperparameter_metric_tag);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.HyperparameterSpec.hyperparameter_metric_tag)
}

// -------------------------------------------------------------------

// ParameterSpec

// string parameter_name = 1;
inline void ParameterSpec::clear_parameter_name() {
  parameter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParameterSpec::parameter_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ParameterSpec.parameter_name)
  return parameter_name_.GetNoArena();
}
inline void ParameterSpec::set_parameter_name(const ::std::string& value) {
  
  parameter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.parameter_name)
}
#if LANG_CXX11
inline void ParameterSpec::set_parameter_name(::std::string&& value) {
  
  parameter_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ParameterSpec.parameter_name)
}
#endif
inline void ParameterSpec::set_parameter_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parameter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ParameterSpec.parameter_name)
}
inline void ParameterSpec::set_parameter_name(const char* value, size_t size) {
  
  parameter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ParameterSpec.parameter_name)
}
inline ::std::string* ParameterSpec::mutable_parameter_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ParameterSpec.parameter_name)
  return parameter_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterSpec::release_parameter_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ParameterSpec.parameter_name)
  
  return parameter_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterSpec::set_allocated_parameter_name(::std::string* parameter_name) {
  if (parameter_name != NULL) {
    
  } else {
    
  }
  parameter_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ParameterSpec.parameter_name)
}

// .google.cloud.ml.v1.ParameterSpec.ParameterType type = 4;
inline void ParameterSpec::clear_type() {
  type_ = 0;
}
inline ::google::cloud::ml::v1::ParameterSpec_ParameterType ParameterSpec::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ParameterSpec.type)
  return static_cast< ::google::cloud::ml::v1::ParameterSpec_ParameterType >(type_);
}
inline void ParameterSpec::set_type(::google::cloud::ml::v1::ParameterSpec_ParameterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.type)
}

// double min_value = 2;
inline void ParameterSpec::clear_min_value() {
  min_value_ = 0;
}
inline double ParameterSpec::min_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ParameterSpec.min_value)
  return min_value_;
}
inline void ParameterSpec::set_min_value(double value) {
  
  min_value_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.min_value)
}

// double max_value = 3;
inline void ParameterSpec::clear_max_value() {
  max_value_ = 0;
}
inline double ParameterSpec::max_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ParameterSpec.max_value)
  return max_value_;
}
inline void ParameterSpec::set_max_value(double value) {
  
  max_value_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.max_value)
}

// repeated string categorical_values = 5;
inline int ParameterSpec::categorical_values_size() const {
  return categorical_values_.size();
}
inline void ParameterSpec::clear_categorical_values() {
  categorical_values_.Clear();
}
inline const ::std::string& ParameterSpec::categorical_values(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ParameterSpec.categorical_values)
  return categorical_values_.Get(index);
}
inline ::std::string* ParameterSpec::mutable_categorical_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ParameterSpec.categorical_values)
  return categorical_values_.Mutable(index);
}
inline void ParameterSpec::set_categorical_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.categorical_values)
  categorical_values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ParameterSpec::set_categorical_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.categorical_values)
  categorical_values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ParameterSpec::set_categorical_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  categorical_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ParameterSpec.categorical_values)
}
inline void ParameterSpec::set_categorical_values(int index, const char* value, size_t size) {
  categorical_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ParameterSpec.categorical_values)
}
inline ::std::string* ParameterSpec::add_categorical_values() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1.ParameterSpec.categorical_values)
  return categorical_values_.Add();
}
inline void ParameterSpec::add_categorical_values(const ::std::string& value) {
  categorical_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.ParameterSpec.categorical_values)
}
#if LANG_CXX11
inline void ParameterSpec::add_categorical_values(::std::string&& value) {
  categorical_values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.ParameterSpec.categorical_values)
}
#endif
inline void ParameterSpec::add_categorical_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  categorical_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1.ParameterSpec.categorical_values)
}
inline void ParameterSpec::add_categorical_values(const char* value, size_t size) {
  categorical_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1.ParameterSpec.categorical_values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ParameterSpec::categorical_values() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.ParameterSpec.categorical_values)
  return categorical_values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ParameterSpec::mutable_categorical_values() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.ParameterSpec.categorical_values)
  return &categorical_values_;
}

// repeated double discrete_values = 6;
inline int ParameterSpec::discrete_values_size() const {
  return discrete_values_.size();
}
inline void ParameterSpec::clear_discrete_values() {
  discrete_values_.Clear();
}
inline double ParameterSpec::discrete_values(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ParameterSpec.discrete_values)
  return discrete_values_.Get(index);
}
inline void ParameterSpec::set_discrete_values(int index, double value) {
  discrete_values_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.discrete_values)
}
inline void ParameterSpec::add_discrete_values(double value) {
  discrete_values_.Add(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.ParameterSpec.discrete_values)
}
inline const ::google::protobuf::RepeatedField< double >&
ParameterSpec::discrete_values() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.ParameterSpec.discrete_values)
  return discrete_values_;
}
inline ::google::protobuf::RepeatedField< double >*
ParameterSpec::mutable_discrete_values() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.ParameterSpec.discrete_values)
  return &discrete_values_;
}

// .google.cloud.ml.v1.ParameterSpec.ScaleType scale_type = 7;
inline void ParameterSpec::clear_scale_type() {
  scale_type_ = 0;
}
inline ::google::cloud::ml::v1::ParameterSpec_ScaleType ParameterSpec::scale_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ParameterSpec.scale_type)
  return static_cast< ::google::cloud::ml::v1::ParameterSpec_ScaleType >(scale_type_);
}
inline void ParameterSpec::set_scale_type(::google::cloud::ml::v1::ParameterSpec_ScaleType value) {
  
  scale_type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ParameterSpec.scale_type)
}

// -------------------------------------------------------------------

// HyperparameterOutput_HyperparameterMetric

// int64 training_step = 1;
inline void HyperparameterOutput_HyperparameterMetric::clear_training_step() {
  training_step_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HyperparameterOutput_HyperparameterMetric::training_step() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric.training_step)
  return training_step_;
}
inline void HyperparameterOutput_HyperparameterMetric::set_training_step(::google::protobuf::int64 value) {
  
  training_step_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric.training_step)
}

// double objective_value = 2;
inline void HyperparameterOutput_HyperparameterMetric::clear_objective_value() {
  objective_value_ = 0;
}
inline double HyperparameterOutput_HyperparameterMetric::objective_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric.objective_value)
  return objective_value_;
}
inline void HyperparameterOutput_HyperparameterMetric::set_objective_value(double value) {
  
  objective_value_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric.objective_value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// HyperparameterOutput

// string trial_id = 1;
inline void HyperparameterOutput::clear_trial_id() {
  trial_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HyperparameterOutput::trial_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterOutput.trial_id)
  return trial_id_.GetNoArena();
}
inline void HyperparameterOutput::set_trial_id(const ::std::string& value) {
  
  trial_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.HyperparameterOutput.trial_id)
}
#if LANG_CXX11
inline void HyperparameterOutput::set_trial_id(::std::string&& value) {
  
  trial_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.HyperparameterOutput.trial_id)
}
#endif
inline void HyperparameterOutput::set_trial_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trial_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.HyperparameterOutput.trial_id)
}
inline void HyperparameterOutput::set_trial_id(const char* value, size_t size) {
  
  trial_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.HyperparameterOutput.trial_id)
}
inline ::std::string* HyperparameterOutput::mutable_trial_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.HyperparameterOutput.trial_id)
  return trial_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HyperparameterOutput::release_trial_id() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.HyperparameterOutput.trial_id)
  
  return trial_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HyperparameterOutput::set_allocated_trial_id(::std::string* trial_id) {
  if (trial_id != NULL) {
    
  } else {
    
  }
  trial_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trial_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.HyperparameterOutput.trial_id)
}

// map<string, string> hyperparameters = 2;
inline int HyperparameterOutput::hyperparameters_size() const {
  return hyperparameters_.size();
}
inline void HyperparameterOutput::clear_hyperparameters() {
  hyperparameters_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
HyperparameterOutput::hyperparameters() const {
  // @@protoc_insertion_point(field_map:google.cloud.ml.v1.HyperparameterOutput.hyperparameters)
  return hyperparameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
HyperparameterOutput::mutable_hyperparameters() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.ml.v1.HyperparameterOutput.hyperparameters)
  return hyperparameters_.MutableMap();
}

// .google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric final_metric = 3;
inline bool HyperparameterOutput::has_final_metric() const {
  return this != internal_default_instance() && final_metric_ != NULL;
}
inline void HyperparameterOutput::clear_final_metric() {
  if (GetArenaNoVirtual() == NULL && final_metric_ != NULL) {
    delete final_metric_;
  }
  final_metric_ = NULL;
}
inline const ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric& HyperparameterOutput::final_metric() const {
  const ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* p = final_metric_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterOutput.final_metric)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric*>(
      &::google::cloud::ml::v1::_HyperparameterOutput_HyperparameterMetric_default_instance_);
}
inline ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::release_final_metric() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.HyperparameterOutput.final_metric)
  
  ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* temp = final_metric_;
  final_metric_ = NULL;
  return temp;
}
inline ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::mutable_final_metric() {
  
  if (final_metric_ == NULL) {
    final_metric_ = new ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.HyperparameterOutput.final_metric)
  return final_metric_;
}
inline void HyperparameterOutput::set_allocated_final_metric(::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* final_metric) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete final_metric_;
  }
  if (final_metric) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      final_metric = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, final_metric, submessage_arena);
    }
    
  } else {
    
  }
  final_metric_ = final_metric;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.HyperparameterOutput.final_metric)
}

// repeated .google.cloud.ml.v1.HyperparameterOutput.HyperparameterMetric all_metrics = 4;
inline int HyperparameterOutput::all_metrics_size() const {
  return all_metrics_.size();
}
inline void HyperparameterOutput::clear_all_metrics() {
  all_metrics_.Clear();
}
inline const ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric& HyperparameterOutput::all_metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.HyperparameterOutput.all_metrics)
  return all_metrics_.Get(index);
}
inline ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::mutable_all_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.HyperparameterOutput.all_metrics)
  return all_metrics_.Mutable(index);
}
inline ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::add_all_metrics() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.HyperparameterOutput.all_metrics)
  return all_metrics_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric >*
HyperparameterOutput::mutable_all_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.HyperparameterOutput.all_metrics)
  return &all_metrics_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput_HyperparameterMetric >&
HyperparameterOutput::all_metrics() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.HyperparameterOutput.all_metrics)
  return all_metrics_;
}

// -------------------------------------------------------------------

// TrainingOutput

// int64 completed_trial_count = 1;
inline void TrainingOutput::clear_completed_trial_count() {
  completed_trial_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrainingOutput::completed_trial_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingOutput.completed_trial_count)
  return completed_trial_count_;
}
inline void TrainingOutput::set_completed_trial_count(::google::protobuf::int64 value) {
  
  completed_trial_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingOutput.completed_trial_count)
}

// repeated .google.cloud.ml.v1.HyperparameterOutput trials = 2;
inline int TrainingOutput::trials_size() const {
  return trials_.size();
}
inline void TrainingOutput::clear_trials() {
  trials_.Clear();
}
inline const ::google::cloud::ml::v1::HyperparameterOutput& TrainingOutput::trials(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingOutput.trials)
  return trials_.Get(index);
}
inline ::google::cloud::ml::v1::HyperparameterOutput* TrainingOutput::mutable_trials(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.TrainingOutput.trials)
  return trials_.Mutable(index);
}
inline ::google::cloud::ml::v1::HyperparameterOutput* TrainingOutput::add_trials() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.TrainingOutput.trials)
  return trials_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput >*
TrainingOutput::mutable_trials() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.TrainingOutput.trials)
  return &trials_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::HyperparameterOutput >&
TrainingOutput::trials() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.TrainingOutput.trials)
  return trials_;
}

// double consumed_ml_units = 3;
inline void TrainingOutput::clear_consumed_ml_units() {
  consumed_ml_units_ = 0;
}
inline double TrainingOutput::consumed_ml_units() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingOutput.consumed_ml_units)
  return consumed_ml_units_;
}
inline void TrainingOutput::set_consumed_ml_units(double value) {
  
  consumed_ml_units_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingOutput.consumed_ml_units)
}

// bool is_hyperparameter_tuning_job = 4;
inline void TrainingOutput::clear_is_hyperparameter_tuning_job() {
  is_hyperparameter_tuning_job_ = false;
}
inline bool TrainingOutput::is_hyperparameter_tuning_job() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.TrainingOutput.is_hyperparameter_tuning_job)
  return is_hyperparameter_tuning_job_;
}
inline void TrainingOutput::set_is_hyperparameter_tuning_job(bool value) {
  
  is_hyperparameter_tuning_job_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.TrainingOutput.is_hyperparameter_tuning_job)
}

// -------------------------------------------------------------------

// PredictionInput

// string model_name = 1;
inline bool PredictionInput::has_model_name() const {
  return model_version_case() == kModelName;
}
inline void PredictionInput::set_has_model_name() {
  _oneof_case_[0] = kModelName;
}
inline void PredictionInput::clear_model_name() {
  if (has_model_name()) {
    model_version_.model_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_model_version();
  }
}
inline const ::std::string& PredictionInput::model_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.model_name)
  if (has_model_name()) {
    return model_version_.model_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void PredictionInput::set_model_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.model_name)
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.model_name)
}
#if LANG_CXX11
inline void PredictionInput::set_model_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.model_name)
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.PredictionInput.model_name)
}
#endif
inline void PredictionInput::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionInput.model_name)
}
inline void PredictionInput::set_model_name(const char* value, size_t size) {
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionInput.model_name)
}
inline ::std::string* PredictionInput::mutable_model_name() {
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionInput.model_name)
  return model_version_.model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionInput::release_model_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.PredictionInput.model_name)
  if (has_model_name()) {
    clear_has_model_version();
    return model_version_.model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void PredictionInput::set_allocated_model_name(::std::string* model_name) {
  if (!has_model_name()) {
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_model_version();
  if (model_name != NULL) {
    set_has_model_name();
    model_version_.model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        model_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.PredictionInput.model_name)
}

// string version_name = 2;
inline bool PredictionInput::has_version_name() const {
  return model_version_case() == kVersionName;
}
inline void PredictionInput::set_has_version_name() {
  _oneof_case_[0] = kVersionName;
}
inline void PredictionInput::clear_version_name() {
  if (has_version_name()) {
    model_version_.version_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_model_version();
  }
}
inline const ::std::string& PredictionInput::version_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.version_name)
  if (has_version_name()) {
    return model_version_.version_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void PredictionInput::set_version_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.version_name)
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.version_name)
}
#if LANG_CXX11
inline void PredictionInput::set_version_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.version_name)
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.version_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.PredictionInput.version_name)
}
#endif
inline void PredictionInput::set_version_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionInput.version_name)
}
inline void PredictionInput::set_version_name(const char* value, size_t size) {
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionInput.version_name)
}
inline ::std::string* PredictionInput::mutable_version_name() {
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionInput.version_name)
  return model_version_.version_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionInput::release_version_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.PredictionInput.version_name)
  if (has_version_name()) {
    clear_has_model_version();
    return model_version_.version_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void PredictionInput::set_allocated_version_name(::std::string* version_name) {
  if (!has_version_name()) {
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_model_version();
  if (version_name != NULL) {
    set_has_version_name();
    model_version_.version_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        version_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.PredictionInput.version_name)
}

// string uri = 9;
inline bool PredictionInput::has_uri() const {
  return model_version_case() == kUri;
}
inline void PredictionInput::set_has_uri() {
  _oneof_case_[0] = kUri;
}
inline void PredictionInput::clear_uri() {
  if (has_uri()) {
    model_version_.uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_model_version();
  }
}
inline const ::std::string& PredictionInput::uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.uri)
  if (has_uri()) {
    return model_version_.uri_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void PredictionInput::set_uri(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.uri)
  if (!has_uri()) {
    clear_model_version();
    set_has_uri();
    model_version_.uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.uri)
}
#if LANG_CXX11
inline void PredictionInput::set_uri(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.uri)
  if (!has_uri()) {
    clear_model_version();
    set_has_uri();
    model_version_.uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.PredictionInput.uri)
}
#endif
inline void PredictionInput::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_uri()) {
    clear_model_version();
    set_has_uri();
    model_version_.uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionInput.uri)
}
inline void PredictionInput::set_uri(const char* value, size_t size) {
  if (!has_uri()) {
    clear_model_version();
    set_has_uri();
    model_version_.uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionInput.uri)
}
inline ::std::string* PredictionInput::mutable_uri() {
  if (!has_uri()) {
    clear_model_version();
    set_has_uri();
    model_version_.uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionInput.uri)
  return model_version_.uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionInput::release_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.PredictionInput.uri)
  if (has_uri()) {
    clear_has_model_version();
    return model_version_.uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void PredictionInput::set_allocated_uri(::std::string* uri) {
  if (!has_uri()) {
    model_version_.uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_model_version();
  if (uri != NULL) {
    set_has_uri();
    model_version_.uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        uri);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.PredictionInput.uri)
}

// .google.cloud.ml.v1.PredictionInput.DataFormat data_format = 3;
inline void PredictionInput::clear_data_format() {
  data_format_ = 0;
}
inline ::google::cloud::ml::v1::PredictionInput_DataFormat PredictionInput::data_format() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.data_format)
  return static_cast< ::google::cloud::ml::v1::PredictionInput_DataFormat >(data_format_);
}
inline void PredictionInput::set_data_format(::google::cloud::ml::v1::PredictionInput_DataFormat value) {
  
  data_format_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.data_format)
}

// repeated string input_paths = 4;
inline int PredictionInput::input_paths_size() const {
  return input_paths_.size();
}
inline void PredictionInput::clear_input_paths() {
  input_paths_.Clear();
}
inline const ::std::string& PredictionInput::input_paths(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.input_paths)
  return input_paths_.Get(index);
}
inline ::std::string* PredictionInput::mutable_input_paths(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionInput.input_paths)
  return input_paths_.Mutable(index);
}
inline void PredictionInput::set_input_paths(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.input_paths)
  input_paths_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PredictionInput::set_input_paths(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.input_paths)
  input_paths_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PredictionInput::set_input_paths(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionInput.input_paths)
}
inline void PredictionInput::set_input_paths(int index, const char* value, size_t size) {
  input_paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionInput.input_paths)
}
inline ::std::string* PredictionInput::add_input_paths() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1.PredictionInput.input_paths)
  return input_paths_.Add();
}
inline void PredictionInput::add_input_paths(const ::std::string& value) {
  input_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.PredictionInput.input_paths)
}
#if LANG_CXX11
inline void PredictionInput::add_input_paths(::std::string&& value) {
  input_paths_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.PredictionInput.input_paths)
}
#endif
inline void PredictionInput::add_input_paths(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1.PredictionInput.input_paths)
}
inline void PredictionInput::add_input_paths(const char* value, size_t size) {
  input_paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1.PredictionInput.input_paths)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PredictionInput::input_paths() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.PredictionInput.input_paths)
  return input_paths_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PredictionInput::mutable_input_paths() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.PredictionInput.input_paths)
  return &input_paths_;
}

// string output_path = 5;
inline void PredictionInput::clear_output_path() {
  output_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionInput::output_path() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.output_path)
  return output_path_.GetNoArena();
}
inline void PredictionInput::set_output_path(const ::std::string& value) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.output_path)
}
#if LANG_CXX11
inline void PredictionInput::set_output_path(::std::string&& value) {
  
  output_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.PredictionInput.output_path)
}
#endif
inline void PredictionInput::set_output_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionInput.output_path)
}
inline void PredictionInput::set_output_path(const char* value, size_t size) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionInput.output_path)
}
inline ::std::string* PredictionInput::mutable_output_path() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionInput.output_path)
  return output_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionInput::release_output_path() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.PredictionInput.output_path)
  
  return output_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionInput::set_allocated_output_path(::std::string* output_path) {
  if (output_path != NULL) {
    
  } else {
    
  }
  output_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_path);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.PredictionInput.output_path)
}

// int64 max_worker_count = 6;
inline void PredictionInput::clear_max_worker_count() {
  max_worker_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PredictionInput::max_worker_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.max_worker_count)
  return max_worker_count_;
}
inline void PredictionInput::set_max_worker_count(::google::protobuf::int64 value) {
  
  max_worker_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.max_worker_count)
}

// string region = 7;
inline void PredictionInput::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionInput::region() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.region)
  return region_.GetNoArena();
}
inline void PredictionInput::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.region)
}
#if LANG_CXX11
inline void PredictionInput::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.PredictionInput.region)
}
#endif
inline void PredictionInput::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionInput.region)
}
inline void PredictionInput::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionInput.region)
}
inline ::std::string* PredictionInput::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionInput.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionInput::release_region() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.PredictionInput.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionInput::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.PredictionInput.region)
}

// string runtime_version = 8;
inline void PredictionInput::clear_runtime_version() {
  runtime_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionInput::runtime_version() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionInput.runtime_version)
  return runtime_version_.GetNoArena();
}
inline void PredictionInput::set_runtime_version(const ::std::string& value) {
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionInput.runtime_version)
}
#if LANG_CXX11
inline void PredictionInput::set_runtime_version(::std::string&& value) {
  
  runtime_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.PredictionInput.runtime_version)
}
#endif
inline void PredictionInput::set_runtime_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionInput.runtime_version)
}
inline void PredictionInput::set_runtime_version(const char* value, size_t size) {
  
  runtime_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionInput.runtime_version)
}
inline ::std::string* PredictionInput::mutable_runtime_version() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionInput.runtime_version)
  return runtime_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionInput::release_runtime_version() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.PredictionInput.runtime_version)
  
  return runtime_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionInput::set_allocated_runtime_version(::std::string* runtime_version) {
  if (runtime_version != NULL) {
    
  } else {
    
  }
  runtime_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_version);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.PredictionInput.runtime_version)
}

inline bool PredictionInput::has_model_version() const {
  return model_version_case() != MODEL_VERSION_NOT_SET;
}
inline void PredictionInput::clear_has_model_version() {
  _oneof_case_[0] = MODEL_VERSION_NOT_SET;
}
inline PredictionInput::ModelVersionCase PredictionInput::model_version_case() const {
  return PredictionInput::ModelVersionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PredictionOutput

// string output_path = 1;
inline void PredictionOutput::clear_output_path() {
  output_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionOutput::output_path() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionOutput.output_path)
  return output_path_.GetNoArena();
}
inline void PredictionOutput::set_output_path(const ::std::string& value) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionOutput.output_path)
}
#if LANG_CXX11
inline void PredictionOutput::set_output_path(::std::string&& value) {
  
  output_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.PredictionOutput.output_path)
}
#endif
inline void PredictionOutput::set_output_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.PredictionOutput.output_path)
}
inline void PredictionOutput::set_output_path(const char* value, size_t size) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.PredictionOutput.output_path)
}
inline ::std::string* PredictionOutput::mutable_output_path() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.PredictionOutput.output_path)
  return output_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionOutput::release_output_path() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.PredictionOutput.output_path)
  
  return output_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionOutput::set_allocated_output_path(::std::string* output_path) {
  if (output_path != NULL) {
    
  } else {
    
  }
  output_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_path);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.PredictionOutput.output_path)
}

// int64 prediction_count = 2;
inline void PredictionOutput::clear_prediction_count() {
  prediction_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PredictionOutput::prediction_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionOutput.prediction_count)
  return prediction_count_;
}
inline void PredictionOutput::set_prediction_count(::google::protobuf::int64 value) {
  
  prediction_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionOutput.prediction_count)
}

// int64 error_count = 3;
inline void PredictionOutput::clear_error_count() {
  error_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PredictionOutput::error_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionOutput.error_count)
  return error_count_;
}
inline void PredictionOutput::set_error_count(::google::protobuf::int64 value) {
  
  error_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionOutput.error_count)
}

// double node_hours = 4;
inline void PredictionOutput::clear_node_hours() {
  node_hours_ = 0;
}
inline double PredictionOutput::node_hours() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.PredictionOutput.node_hours)
  return node_hours_;
}
inline void PredictionOutput::set_node_hours(double value) {
  
  node_hours_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.PredictionOutput.node_hours)
}

// -------------------------------------------------------------------

// Job

// string job_id = 1;
inline void Job::clear_job_id() {
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::job_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.job_id)
  return job_id_.GetNoArena();
}
inline void Job::set_job_id(const ::std::string& value) {
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Job.job_id)
}
#if LANG_CXX11
inline void Job::set_job_id(::std::string&& value) {
  
  job_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Job.job_id)
}
#endif
inline void Job::set_job_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Job.job_id)
}
inline void Job::set_job_id(const char* value, size_t size) {
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Job.job_id)
}
inline ::std::string* Job::mutable_job_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.job_id)
  return job_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_job_id() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.job_id)
  
  return job_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_job_id(::std::string* job_id) {
  if (job_id != NULL) {
    
  } else {
    
  }
  job_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Job.job_id)
}

// .google.cloud.ml.v1.TrainingInput training_input = 2;
inline bool Job::has_training_input() const {
  return input_case() == kTrainingInput;
}
inline void Job::set_has_training_input() {
  _oneof_case_[0] = kTrainingInput;
}
inline void Job::clear_training_input() {
  if (has_training_input()) {
    delete input_.training_input_;
    clear_has_input();
  }
}
inline ::google::cloud::ml::v1::TrainingInput* Job::release_training_input() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.training_input)
  if (has_training_input()) {
    clear_has_input();
      ::google::cloud::ml::v1::TrainingInput* temp = input_.training_input_;
    input_.training_input_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::ml::v1::TrainingInput& Job::training_input() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.training_input)
  return has_training_input()
      ? *input_.training_input_
      : *reinterpret_cast< ::google::cloud::ml::v1::TrainingInput*>(&::google::cloud::ml::v1::_TrainingInput_default_instance_);
}
inline ::google::cloud::ml::v1::TrainingInput* Job::mutable_training_input() {
  if (!has_training_input()) {
    clear_input();
    set_has_training_input();
    input_.training_input_ = new ::google::cloud::ml::v1::TrainingInput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.training_input)
  return input_.training_input_;
}

// .google.cloud.ml.v1.PredictionInput prediction_input = 3;
inline bool Job::has_prediction_input() const {
  return input_case() == kPredictionInput;
}
inline void Job::set_has_prediction_input() {
  _oneof_case_[0] = kPredictionInput;
}
inline void Job::clear_prediction_input() {
  if (has_prediction_input()) {
    delete input_.prediction_input_;
    clear_has_input();
  }
}
inline ::google::cloud::ml::v1::PredictionInput* Job::release_prediction_input() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.prediction_input)
  if (has_prediction_input()) {
    clear_has_input();
      ::google::cloud::ml::v1::PredictionInput* temp = input_.prediction_input_;
    input_.prediction_input_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::ml::v1::PredictionInput& Job::prediction_input() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.prediction_input)
  return has_prediction_input()
      ? *input_.prediction_input_
      : *reinterpret_cast< ::google::cloud::ml::v1::PredictionInput*>(&::google::cloud::ml::v1::_PredictionInput_default_instance_);
}
inline ::google::cloud::ml::v1::PredictionInput* Job::mutable_prediction_input() {
  if (!has_prediction_input()) {
    clear_input();
    set_has_prediction_input();
    input_.prediction_input_ = new ::google::cloud::ml::v1::PredictionInput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.prediction_input)
  return input_.prediction_input_;
}

// .google.protobuf.Timestamp create_time = 4;
inline bool Job::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Job::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Job::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Job::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.create_time)
  return create_time_;
}
inline void Job::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Job.create_time)
}

// .google.protobuf.Timestamp start_time = 5;
inline bool Job::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Job::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Job::release_start_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Job::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.start_time)
  return start_time_;
}
inline void Job::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Job.start_time)
}

// .google.protobuf.Timestamp end_time = 6;
inline bool Job::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Job::end_time() const {
  const ::google::protobuf::Timestamp* p = end_time_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.end_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Job::release_end_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Job::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.end_time)
  return end_time_;
}
inline void Job::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Job.end_time)
}

// .google.cloud.ml.v1.Job.State state = 7;
inline void Job::clear_state() {
  state_ = 0;
}
inline ::google::cloud::ml::v1::Job_State Job::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.state)
  return static_cast< ::google::cloud::ml::v1::Job_State >(state_);
}
inline void Job::set_state(::google::cloud::ml::v1::Job_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Job.state)
}

// string error_message = 8;
inline void Job::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::error_message() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.error_message)
  return error_message_.GetNoArena();
}
inline void Job::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.Job.error_message)
}
#if LANG_CXX11
inline void Job::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.Job.error_message)
}
#endif
inline void Job::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.Job.error_message)
}
inline void Job::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.Job.error_message)
}
inline ::std::string* Job::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_error_message() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.Job.error_message)
}

// .google.cloud.ml.v1.TrainingOutput training_output = 9;
inline bool Job::has_training_output() const {
  return output_case() == kTrainingOutput;
}
inline void Job::set_has_training_output() {
  _oneof_case_[1] = kTrainingOutput;
}
inline void Job::clear_training_output() {
  if (has_training_output()) {
    delete output_.training_output_;
    clear_has_output();
  }
}
inline ::google::cloud::ml::v1::TrainingOutput* Job::release_training_output() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.training_output)
  if (has_training_output()) {
    clear_has_output();
      ::google::cloud::ml::v1::TrainingOutput* temp = output_.training_output_;
    output_.training_output_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::ml::v1::TrainingOutput& Job::training_output() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.training_output)
  return has_training_output()
      ? *output_.training_output_
      : *reinterpret_cast< ::google::cloud::ml::v1::TrainingOutput*>(&::google::cloud::ml::v1::_TrainingOutput_default_instance_);
}
inline ::google::cloud::ml::v1::TrainingOutput* Job::mutable_training_output() {
  if (!has_training_output()) {
    clear_output();
    set_has_training_output();
    output_.training_output_ = new ::google::cloud::ml::v1::TrainingOutput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.training_output)
  return output_.training_output_;
}

// .google.cloud.ml.v1.PredictionOutput prediction_output = 10;
inline bool Job::has_prediction_output() const {
  return output_case() == kPredictionOutput;
}
inline void Job::set_has_prediction_output() {
  _oneof_case_[1] = kPredictionOutput;
}
inline void Job::clear_prediction_output() {
  if (has_prediction_output()) {
    delete output_.prediction_output_;
    clear_has_output();
  }
}
inline ::google::cloud::ml::v1::PredictionOutput* Job::release_prediction_output() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.Job.prediction_output)
  if (has_prediction_output()) {
    clear_has_output();
      ::google::cloud::ml::v1::PredictionOutput* temp = output_.prediction_output_;
    output_.prediction_output_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::ml::v1::PredictionOutput& Job::prediction_output() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.Job.prediction_output)
  return has_prediction_output()
      ? *output_.prediction_output_
      : *reinterpret_cast< ::google::cloud::ml::v1::PredictionOutput*>(&::google::cloud::ml::v1::_PredictionOutput_default_instance_);
}
inline ::google::cloud::ml::v1::PredictionOutput* Job::mutable_prediction_output() {
  if (!has_prediction_output()) {
    clear_output();
    set_has_prediction_output();
    output_.prediction_output_ = new ::google::cloud::ml::v1::PredictionOutput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.Job.prediction_output)
  return output_.prediction_output_;
}

inline bool Job::has_input() const {
  return input_case() != INPUT_NOT_SET;
}
inline void Job::clear_has_input() {
  _oneof_case_[0] = INPUT_NOT_SET;
}
inline bool Job::has_output() const {
  return output_case() != OUTPUT_NOT_SET;
}
inline void Job::clear_has_output() {
  _oneof_case_[1] = OUTPUT_NOT_SET;
}
inline Job::InputCase Job::input_case() const {
  return Job::InputCase(_oneof_case_[0]);
}
inline Job::OutputCase Job::output_case() const {
  return Job::OutputCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// CreateJobRequest

// string parent = 1;
inline void CreateJobRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateJobRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.CreateJobRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateJobRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.CreateJobRequest.parent)
}
#if LANG_CXX11
inline void CreateJobRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.CreateJobRequest.parent)
}
#endif
inline void CreateJobRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.CreateJobRequest.parent)
}
inline void CreateJobRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.CreateJobRequest.parent)
}
inline ::std::string* CreateJobRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.CreateJobRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateJobRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.CreateJobRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateJobRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.CreateJobRequest.parent)
}

// .google.cloud.ml.v1.Job job = 2;
inline bool CreateJobRequest::has_job() const {
  return this != internal_default_instance() && job_ != NULL;
}
inline void CreateJobRequest::clear_job() {
  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
}
inline const ::google::cloud::ml::v1::Job& CreateJobRequest::job() const {
  const ::google::cloud::ml::v1::Job* p = job_;
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.CreateJobRequest.job)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::ml::v1::Job*>(
      &::google::cloud::ml::v1::_Job_default_instance_);
}
inline ::google::cloud::ml::v1::Job* CreateJobRequest::release_job() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.CreateJobRequest.job)
  
  ::google::cloud::ml::v1::Job* temp = job_;
  job_ = NULL;
  return temp;
}
inline ::google::cloud::ml::v1::Job* CreateJobRequest::mutable_job() {
  
  if (job_ == NULL) {
    job_ = new ::google::cloud::ml::v1::Job;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.CreateJobRequest.job)
  return job_;
}
inline void CreateJobRequest::set_allocated_job(::google::cloud::ml::v1::Job* job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete job_;
  }
  if (job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job, submessage_arena);
    }
    
  } else {
    
  }
  job_ = job;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.CreateJobRequest.job)
}

// -------------------------------------------------------------------

// ListJobsRequest

// string parent = 1;
inline void ListJobsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListJobsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListJobsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListJobsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListJobsRequest.parent)
}
#if LANG_CXX11
inline void ListJobsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListJobsRequest.parent)
}
#endif
inline void ListJobsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListJobsRequest.parent)
}
inline void ListJobsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListJobsRequest.parent)
}
inline ::std::string* ListJobsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListJobsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListJobsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListJobsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListJobsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListJobsRequest.parent)
}

// string filter = 2;
inline void ListJobsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListJobsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListJobsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListJobsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListJobsRequest.filter)
}
#if LANG_CXX11
inline void ListJobsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListJobsRequest.filter)
}
#endif
inline void ListJobsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListJobsRequest.filter)
}
inline void ListJobsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListJobsRequest.filter)
}
inline ::std::string* ListJobsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListJobsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListJobsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListJobsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListJobsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListJobsRequest.filter)
}

// string page_token = 4;
inline void ListJobsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListJobsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListJobsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListJobsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListJobsRequest.page_token)
}
#if LANG_CXX11
inline void ListJobsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListJobsRequest.page_token)
}
#endif
inline void ListJobsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListJobsRequest.page_token)
}
inline void ListJobsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListJobsRequest.page_token)
}
inline ::std::string* ListJobsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListJobsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListJobsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListJobsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListJobsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListJobsRequest.page_token)
}

// int32 page_size = 5;
inline void ListJobsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListJobsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListJobsRequest.page_size)
  return page_size_;
}
inline void ListJobsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListJobsRequest.page_size)
}

// -------------------------------------------------------------------

// ListJobsResponse

// repeated .google.cloud.ml.v1.Job jobs = 1;
inline int ListJobsResponse::jobs_size() const {
  return jobs_.size();
}
inline void ListJobsResponse::clear_jobs() {
  jobs_.Clear();
}
inline const ::google::cloud::ml::v1::Job& ListJobsResponse::jobs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListJobsResponse.jobs)
  return jobs_.Get(index);
}
inline ::google::cloud::ml::v1::Job* ListJobsResponse::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListJobsResponse.jobs)
  return jobs_.Mutable(index);
}
inline ::google::cloud::ml::v1::Job* ListJobsResponse::add_jobs() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1.ListJobsResponse.jobs)
  return jobs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Job >*
ListJobsResponse::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1.ListJobsResponse.jobs)
  return &jobs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1::Job >&
ListJobsResponse::jobs() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1.ListJobsResponse.jobs)
  return jobs_;
}

// string next_page_token = 2;
inline void ListJobsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListJobsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.ListJobsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListJobsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.ListJobsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListJobsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.ListJobsResponse.next_page_token)
}
#endif
inline void ListJobsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.ListJobsResponse.next_page_token)
}
inline void ListJobsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.ListJobsResponse.next_page_token)
}
inline ::std::string* ListJobsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.ListJobsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListJobsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.ListJobsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListJobsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.ListJobsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetJobRequest

// string name = 1;
inline void GetJobRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetJobRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.GetJobRequest.name)
  return name_.GetNoArena();
}
inline void GetJobRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.GetJobRequest.name)
}
#if LANG_CXX11
inline void GetJobRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.GetJobRequest.name)
}
#endif
inline void GetJobRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.GetJobRequest.name)
}
inline void GetJobRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.GetJobRequest.name)
}
inline ::std::string* GetJobRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.GetJobRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetJobRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.GetJobRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetJobRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.GetJobRequest.name)
}

// -------------------------------------------------------------------

// CancelJobRequest

// string name = 1;
inline void CancelJobRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelJobRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1.CancelJobRequest.name)
  return name_.GetNoArena();
}
inline void CancelJobRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1.CancelJobRequest.name)
}
#if LANG_CXX11
inline void CancelJobRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.ml.v1.CancelJobRequest.name)
}
#endif
inline void CancelJobRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1.CancelJobRequest.name)
}
inline void CancelJobRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1.CancelJobRequest.name)
}
inline ::std::string* CancelJobRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1.CancelJobRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelJobRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1.CancelJobRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelJobRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1.CancelJobRequest.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace ml
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::ml::v1::TrainingInput_ScaleTier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::ml::v1::TrainingInput_ScaleTier>() {
  return ::google::cloud::ml::v1::TrainingInput_ScaleTier_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::ml::v1::HyperparameterSpec_GoalType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::ml::v1::HyperparameterSpec_GoalType>() {
  return ::google::cloud::ml::v1::HyperparameterSpec_GoalType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::ml::v1::ParameterSpec_ParameterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::ml::v1::ParameterSpec_ParameterType>() {
  return ::google::cloud::ml::v1::ParameterSpec_ParameterType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::ml::v1::ParameterSpec_ScaleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::ml::v1::ParameterSpec_ScaleType>() {
  return ::google::cloud::ml::v1::ParameterSpec_ScaleType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::ml::v1::PredictionInput_DataFormat> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::ml::v1::PredictionInput_DataFormat>() {
  return ::google::cloud::ml::v1::PredictionInput_DataFormat_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::ml::v1::Job_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::ml::v1::Job_State>() {
  return ::google::cloud::ml::v1::Job_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fml_2fv1_2fjob_5fservice_2eproto__INCLUDED
