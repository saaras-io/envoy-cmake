// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1alpha2/pipelines.proto

#include "google/genomics/v1alpha2/pipelines.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace genomics {
namespace v1alpha2 {
class ComputeEngineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComputeEngine>
      _instance;
} _ComputeEngine_default_instance_;
class RuntimeMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuntimeMetadata>
      _instance;
} _RuntimeMetadata_default_instance_;
class PipelineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pipeline>
      _instance;
  const ::google::genomics::v1alpha2::DockerExecutor* docker_;
} _Pipeline_default_instance_;
class CreatePipelineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreatePipelineRequest>
      _instance;
} _CreatePipelineRequest_default_instance_;
class RunPipelineArgs_InputsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunPipelineArgs_InputsEntry_DoNotUse>
      _instance;
} _RunPipelineArgs_InputsEntry_DoNotUse_default_instance_;
class RunPipelineArgs_OutputsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunPipelineArgs_OutputsEntry_DoNotUse>
      _instance;
} _RunPipelineArgs_OutputsEntry_DoNotUse_default_instance_;
class RunPipelineArgs_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunPipelineArgs_LabelsEntry_DoNotUse>
      _instance;
} _RunPipelineArgs_LabelsEntry_DoNotUse_default_instance_;
class RunPipelineArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunPipelineArgs>
      _instance;
} _RunPipelineArgs_default_instance_;
class RunPipelineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunPipelineRequest>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr pipeline_id_;
  const ::google::genomics::v1alpha2::Pipeline* ephemeral_pipeline_;
} _RunPipelineRequest_default_instance_;
class GetPipelineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPipelineRequest>
      _instance;
} _GetPipelineRequest_default_instance_;
class ListPipelinesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListPipelinesRequest>
      _instance;
} _ListPipelinesRequest_default_instance_;
class ListPipelinesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListPipelinesResponse>
      _instance;
} _ListPipelinesResponse_default_instance_;
class DeletePipelineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeletePipelineRequest>
      _instance;
} _DeletePipelineRequest_default_instance_;
class GetControllerConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetControllerConfigRequest>
      _instance;
} _GetControllerConfigRequest_default_instance_;
class ControllerConfig_RepeatedStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerConfig_RepeatedString>
      _instance;
} _ControllerConfig_RepeatedString_default_instance_;
class ControllerConfig_VarsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerConfig_VarsEntry_DoNotUse>
      _instance;
} _ControllerConfig_VarsEntry_DoNotUse_default_instance_;
class ControllerConfig_DisksEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerConfig_DisksEntry_DoNotUse>
      _instance;
} _ControllerConfig_DisksEntry_DoNotUse_default_instance_;
class ControllerConfig_GcsSourcesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerConfig_GcsSourcesEntry_DoNotUse>
      _instance;
} _ControllerConfig_GcsSourcesEntry_DoNotUse_default_instance_;
class ControllerConfig_GcsSinksEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerConfig_GcsSinksEntry_DoNotUse>
      _instance;
} _ControllerConfig_GcsSinksEntry_DoNotUse_default_instance_;
class ControllerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerConfig>
      _instance;
} _ControllerConfig_default_instance_;
class TimestampEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimestampEvent>
      _instance;
} _TimestampEvent_default_instance_;
class SetOperationStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetOperationStatusRequest>
      _instance;
} _SetOperationStatusRequest_default_instance_;
class ServiceAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceAccount>
      _instance;
} _ServiceAccount_default_instance_;
class LoggingOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoggingOptions>
      _instance;
} _LoggingOptions_default_instance_;
class PipelineResources_DiskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PipelineResources_Disk>
      _instance;
} _PipelineResources_Disk_default_instance_;
class PipelineResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PipelineResources>
      _instance;
} _PipelineResources_default_instance_;
class PipelineParameter_LocalCopyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PipelineParameter_LocalCopy>
      _instance;
} _PipelineParameter_LocalCopy_default_instance_;
class PipelineParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PipelineParameter>
      _instance;
} _PipelineParameter_default_instance_;
class DockerExecutorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DockerExecutor>
      _instance;
} _DockerExecutor_default_instance_;
}  // namespace v1alpha2
}  // namespace genomics
}  // namespace google
namespace protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto {
void InitDefaultsComputeEngineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_ComputeEngine_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ComputeEngine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::ComputeEngine::InitAsDefaultInstance();
}

void InitDefaultsComputeEngine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComputeEngineImpl);
}

void InitDefaultsRuntimeMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsComputeEngine();
  {
    void* ptr = &::google::genomics::v1alpha2::_RuntimeMetadata_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::RuntimeMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::RuntimeMetadata::InitAsDefaultInstance();
}

void InitDefaultsRuntimeMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRuntimeMetadataImpl);
}

void InitDefaultsPipelineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsDockerExecutor();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources();
  {
    void* ptr = &::google::genomics::v1alpha2::_Pipeline_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::Pipeline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::Pipeline::InitAsDefaultInstance();
}

void InitDefaultsPipeline() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPipelineImpl);
}

void InitDefaultsCreatePipelineRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipeline();
  {
    void* ptr = &::google::genomics::v1alpha2::_CreatePipelineRequest_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::CreatePipelineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::CreatePipelineRequest::InitAsDefaultInstance();
}

void InitDefaultsCreatePipelineRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreatePipelineRequestImpl);
}

void InitDefaultsRunPipelineArgs_InputsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_RunPipelineArgs_InputsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::RunPipelineArgs_InputsEntry_DoNotUse();
  }
  ::google::genomics::v1alpha2::RunPipelineArgs_InputsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsRunPipelineArgs_InputsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunPipelineArgs_InputsEntry_DoNotUseImpl);
}

void InitDefaultsRunPipelineArgs_OutputsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_RunPipelineArgs_OutputsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::RunPipelineArgs_OutputsEntry_DoNotUse();
  }
  ::google::genomics::v1alpha2::RunPipelineArgs_OutputsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsRunPipelineArgs_OutputsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunPipelineArgs_OutputsEntry_DoNotUseImpl);
}

void InitDefaultsRunPipelineArgs_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_RunPipelineArgs_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::RunPipelineArgs_LabelsEntry_DoNotUse();
  }
  ::google::genomics::v1alpha2::RunPipelineArgs_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsRunPipelineArgs_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunPipelineArgs_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsRunPipelineArgsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineArgs_InputsEntry_DoNotUse();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineArgs_OutputsEntry_DoNotUse();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsServiceAccount();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsLoggingOptions();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineArgs_LabelsEntry_DoNotUse();
  {
    void* ptr = &::google::genomics::v1alpha2::_RunPipelineArgs_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::RunPipelineArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::RunPipelineArgs::InitAsDefaultInstance();
}

void InitDefaultsRunPipelineArgs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunPipelineArgsImpl);
}

void InitDefaultsRunPipelineRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipeline();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineArgs();
  {
    void* ptr = &::google::genomics::v1alpha2::_RunPipelineRequest_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::RunPipelineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::RunPipelineRequest::InitAsDefaultInstance();
}

void InitDefaultsRunPipelineRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunPipelineRequestImpl);
}

void InitDefaultsGetPipelineRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_GetPipelineRequest_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::GetPipelineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::GetPipelineRequest::InitAsDefaultInstance();
}

void InitDefaultsGetPipelineRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetPipelineRequestImpl);
}

void InitDefaultsListPipelinesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_ListPipelinesRequest_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ListPipelinesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::ListPipelinesRequest::InitAsDefaultInstance();
}

void InitDefaultsListPipelinesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListPipelinesRequestImpl);
}

void InitDefaultsListPipelinesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipeline();
  {
    void* ptr = &::google::genomics::v1alpha2::_ListPipelinesResponse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ListPipelinesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::ListPipelinesResponse::InitAsDefaultInstance();
}

void InitDefaultsListPipelinesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListPipelinesResponseImpl);
}

void InitDefaultsDeletePipelineRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_DeletePipelineRequest_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::DeletePipelineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::DeletePipelineRequest::InitAsDefaultInstance();
}

void InitDefaultsDeletePipelineRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeletePipelineRequestImpl);
}

void InitDefaultsGetControllerConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_GetControllerConfigRequest_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::GetControllerConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::GetControllerConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsGetControllerConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetControllerConfigRequestImpl);
}

void InitDefaultsControllerConfig_RepeatedStringImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_ControllerConfig_RepeatedString_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ControllerConfig_RepeatedString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::ControllerConfig_RepeatedString::InitAsDefaultInstance();
}

void InitDefaultsControllerConfig_RepeatedString() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControllerConfig_RepeatedStringImpl);
}

void InitDefaultsControllerConfig_VarsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_ControllerConfig_VarsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ControllerConfig_VarsEntry_DoNotUse();
  }
  ::google::genomics::v1alpha2::ControllerConfig_VarsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsControllerConfig_VarsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControllerConfig_VarsEntry_DoNotUseImpl);
}

void InitDefaultsControllerConfig_DisksEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_ControllerConfig_DisksEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ControllerConfig_DisksEntry_DoNotUse();
  }
  ::google::genomics::v1alpha2::ControllerConfig_DisksEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsControllerConfig_DisksEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControllerConfig_DisksEntry_DoNotUseImpl);
}

void InitDefaultsControllerConfig_GcsSourcesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_RepeatedString();
  {
    void* ptr = &::google::genomics::v1alpha2::_ControllerConfig_GcsSourcesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ControllerConfig_GcsSourcesEntry_DoNotUse();
  }
  ::google::genomics::v1alpha2::ControllerConfig_GcsSourcesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsControllerConfig_GcsSourcesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControllerConfig_GcsSourcesEntry_DoNotUseImpl);
}

void InitDefaultsControllerConfig_GcsSinksEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_RepeatedString();
  {
    void* ptr = &::google::genomics::v1alpha2::_ControllerConfig_GcsSinksEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ControllerConfig_GcsSinksEntry_DoNotUse();
  }
  ::google::genomics::v1alpha2::ControllerConfig_GcsSinksEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsControllerConfig_GcsSinksEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControllerConfig_GcsSinksEntry_DoNotUseImpl);
}

void InitDefaultsControllerConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_VarsEntry_DoNotUse();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_DisksEntry_DoNotUse();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_GcsSourcesEntry_DoNotUse();
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_GcsSinksEntry_DoNotUse();
  {
    void* ptr = &::google::genomics::v1alpha2::_ControllerConfig_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ControllerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::ControllerConfig::InitAsDefaultInstance();
}

void InitDefaultsControllerConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControllerConfigImpl);
}

void InitDefaultsTimestampEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::genomics::v1alpha2::_TimestampEvent_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::TimestampEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::TimestampEvent::InitAsDefaultInstance();
}

void InitDefaultsTimestampEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimestampEventImpl);
}

void InitDefaultsSetOperationStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsTimestampEvent();
  {
    void* ptr = &::google::genomics::v1alpha2::_SetOperationStatusRequest_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::SetOperationStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::SetOperationStatusRequest::InitAsDefaultInstance();
}

void InitDefaultsSetOperationStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetOperationStatusRequestImpl);
}

void InitDefaultsServiceAccountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_ServiceAccount_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::ServiceAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::ServiceAccount::InitAsDefaultInstance();
}

void InitDefaultsServiceAccount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceAccountImpl);
}

void InitDefaultsLoggingOptionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_LoggingOptions_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::LoggingOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::LoggingOptions::InitAsDefaultInstance();
}

void InitDefaultsLoggingOptions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoggingOptionsImpl);
}

void InitDefaultsPipelineResources_DiskImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_PipelineResources_Disk_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::PipelineResources_Disk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::PipelineResources_Disk::InitAsDefaultInstance();
}

void InitDefaultsPipelineResources_Disk() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPipelineResources_DiskImpl);
}

void InitDefaultsPipelineResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources_Disk();
  {
    void* ptr = &::google::genomics::v1alpha2::_PipelineResources_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::PipelineResources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::PipelineResources::InitAsDefaultInstance();
}

void InitDefaultsPipelineResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPipelineResourcesImpl);
}

void InitDefaultsPipelineParameter_LocalCopyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_PipelineParameter_LocalCopy_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::PipelineParameter_LocalCopy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::PipelineParameter_LocalCopy::InitAsDefaultInstance();
}

void InitDefaultsPipelineParameter_LocalCopy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPipelineParameter_LocalCopyImpl);
}

void InitDefaultsPipelineParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter_LocalCopy();
  {
    void* ptr = &::google::genomics::v1alpha2::_PipelineParameter_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::PipelineParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::PipelineParameter::InitAsDefaultInstance();
}

void InitDefaultsPipelineParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPipelineParameterImpl);
}

void InitDefaultsDockerExecutorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1alpha2::_DockerExecutor_default_instance_;
    new (ptr) ::google::genomics::v1alpha2::DockerExecutor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1alpha2::DockerExecutor::InitAsDefaultInstance();
}

void InitDefaultsDockerExecutor() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDockerExecutorImpl);
}

::google::protobuf::Metadata file_level_metadata[29];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ComputeEngine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ComputeEngine, instance_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ComputeEngine, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ComputeEngine, machine_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ComputeEngine, disk_names_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RuntimeMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RuntimeMetadata, compute_engine_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, input_parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, output_parameters_),
  offsetof(::google::genomics::v1alpha2::PipelineDefaultTypeInternal, docker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, pipeline_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::Pipeline, executor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::CreatePipelineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::CreatePipelineRequest, pipeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_InputsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_InputsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_InputsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_InputsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_OutputsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_OutputsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_OutputsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_OutputsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, service_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, logging_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, keep_vm_alive_on_failure_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineArgs, labels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::genomics::v1alpha2::RunPipelineRequestDefaultTypeInternal, pipeline_id_),
  offsetof(::google::genomics::v1alpha2::RunPipelineRequestDefaultTypeInternal, ephemeral_pipeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineRequest, pipeline_args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::RunPipelineRequest, pipeline_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::GetPipelineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::GetPipelineRequest, pipeline_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesRequest, name_prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesResponse, pipelines_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ListPipelinesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::DeletePipelineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::DeletePipelineRequest, pipeline_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::GetControllerConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::GetControllerConfigRequest, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::GetControllerConfigRequest, validation_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_RepeatedString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_RepeatedString, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_VarsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_VarsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_VarsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_VarsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_DisksEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_DisksEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_DisksEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_DisksEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSourcesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSourcesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSourcesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSourcesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSinksEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSinksEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSinksEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig_GcsSinksEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, gcs_log_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, machine_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, vars_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, disks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, gcs_sources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ControllerConfig, gcs_sinks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::TimestampEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::TimestampEvent, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::TimestampEvent, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::SetOperationStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::SetOperationStatusRequest, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::SetOperationStatusRequest, timestamp_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::SetOperationStatusRequest, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::SetOperationStatusRequest, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::SetOperationStatusRequest, validation_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ServiceAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ServiceAccount, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::ServiceAccount, scopes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::LoggingOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::LoggingOptions, gcs_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources_Disk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources_Disk, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources_Disk, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources_Disk, size_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources_Disk, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources_Disk, auto_delete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources_Disk, mount_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, minimum_cpu_cores_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, preemptible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, minimum_ram_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, disks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, zones_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, boot_disk_size_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineResources, no_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter_LocalCopy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter_LocalCopy, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter_LocalCopy, disk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter, default_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::PipelineParameter, local_copy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::DockerExecutor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::DockerExecutor, image_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1alpha2::DockerExecutor, cmd_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::genomics::v1alpha2::ComputeEngine)},
  { 9, -1, sizeof(::google::genomics::v1alpha2::RuntimeMetadata)},
  { 15, -1, sizeof(::google::genomics::v1alpha2::Pipeline)},
  { 29, -1, sizeof(::google::genomics::v1alpha2::CreatePipelineRequest)},
  { 35, 42, sizeof(::google::genomics::v1alpha2::RunPipelineArgs_InputsEntry_DoNotUse)},
  { 44, 51, sizeof(::google::genomics::v1alpha2::RunPipelineArgs_OutputsEntry_DoNotUse)},
  { 53, 60, sizeof(::google::genomics::v1alpha2::RunPipelineArgs_LabelsEntry_DoNotUse)},
  { 62, -1, sizeof(::google::genomics::v1alpha2::RunPipelineArgs)},
  { 76, -1, sizeof(::google::genomics::v1alpha2::RunPipelineRequest)},
  { 85, -1, sizeof(::google::genomics::v1alpha2::GetPipelineRequest)},
  { 91, -1, sizeof(::google::genomics::v1alpha2::ListPipelinesRequest)},
  { 100, -1, sizeof(::google::genomics::v1alpha2::ListPipelinesResponse)},
  { 107, -1, sizeof(::google::genomics::v1alpha2::DeletePipelineRequest)},
  { 113, -1, sizeof(::google::genomics::v1alpha2::GetControllerConfigRequest)},
  { 120, -1, sizeof(::google::genomics::v1alpha2::ControllerConfig_RepeatedString)},
  { 126, 133, sizeof(::google::genomics::v1alpha2::ControllerConfig_VarsEntry_DoNotUse)},
  { 135, 142, sizeof(::google::genomics::v1alpha2::ControllerConfig_DisksEntry_DoNotUse)},
  { 144, 151, sizeof(::google::genomics::v1alpha2::ControllerConfig_GcsSourcesEntry_DoNotUse)},
  { 153, 160, sizeof(::google::genomics::v1alpha2::ControllerConfig_GcsSinksEntry_DoNotUse)},
  { 162, -1, sizeof(::google::genomics::v1alpha2::ControllerConfig)},
  { 175, -1, sizeof(::google::genomics::v1alpha2::TimestampEvent)},
  { 182, -1, sizeof(::google::genomics::v1alpha2::SetOperationStatusRequest)},
  { 192, -1, sizeof(::google::genomics::v1alpha2::ServiceAccount)},
  { 199, -1, sizeof(::google::genomics::v1alpha2::LoggingOptions)},
  { 205, -1, sizeof(::google::genomics::v1alpha2::PipelineResources_Disk)},
  { 216, -1, sizeof(::google::genomics::v1alpha2::PipelineResources)},
  { 228, -1, sizeof(::google::genomics::v1alpha2::PipelineParameter_LocalCopy)},
  { 235, -1, sizeof(::google::genomics::v1alpha2::PipelineParameter)},
  { 244, -1, sizeof(::google::genomics::v1alpha2::DockerExecutor)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ComputeEngine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_RuntimeMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_Pipeline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_CreatePipelineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_RunPipelineArgs_InputsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_RunPipelineArgs_OutputsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_RunPipelineArgs_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_RunPipelineArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_RunPipelineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_GetPipelineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ListPipelinesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ListPipelinesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_DeletePipelineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_GetControllerConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ControllerConfig_RepeatedString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ControllerConfig_VarsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ControllerConfig_DisksEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ControllerConfig_GcsSourcesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ControllerConfig_GcsSinksEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ControllerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_TimestampEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_SetOperationStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_ServiceAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_LoggingOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_PipelineResources_Disk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_PipelineResources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_PipelineParameter_LocalCopy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_PipelineParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1alpha2::_DockerExecutor_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/genomics/v1alpha2/pipelines.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(google/genomics/v1alpha2/pipelines.pro"
      "to\022\030google.genomics.v1alpha2\032\034google/api"
      "/annotations.proto\032#google/longrunning/o"
      "perations.proto\032\036google/protobuf/duratio"
      "n.proto\032\033google/protobuf/empty.proto\032\037go"
      "ogle/protobuf/timestamp.proto\032\025google/rp"
      "c/code.proto\"^\n\rComputeEngine\022\025\n\rinstanc"
      "e_name\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\024\n\014machine_ty"
      "pe\030\003 \001(\t\022\022\n\ndisk_names\030\004 \003(\t\"R\n\017RuntimeM"
      "etadata\022\?\n\016compute_engine\030\001 \001(\0132\'.google"
      ".genomics.v1alpha2.ComputeEngine\"\355\002\n\010Pip"
      "eline\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022"
      "\023\n\013description\030\003 \001(\t\022E\n\020input_parameters"
      "\030\010 \003(\0132+.google.genomics.v1alpha2.Pipeli"
      "neParameter\022F\n\021output_parameters\030\t \003(\0132+"
      ".google.genomics.v1alpha2.PipelineParame"
      "ter\022:\n\006docker\030\005 \001(\0132(.google.genomics.v1"
      "alpha2.DockerExecutorH\000\022>\n\tresources\030\006 \001"
      "(\0132+.google.genomics.v1alpha2.PipelineRe"
      "sources\022\023\n\013pipeline_id\030\007 \001(\tB\n\n\010executor"
      "\"M\n\025CreatePipelineRequest\0224\n\010pipeline\030\001 "
      "\001(\0132\".google.genomics.v1alpha2.Pipeline\""
      "\241\005\n\017RunPipelineArgs\022\022\n\nproject_id\030\001 \001(\t\022"
      "E\n\006inputs\030\002 \003(\01325.google.genomics.v1alph"
      "a2.RunPipelineArgs.InputsEntry\022G\n\007output"
      "s\030\003 \003(\01326.google.genomics.v1alpha2.RunPi"
      "pelineArgs.OutputsEntry\022A\n\017service_accou"
      "nt\030\004 \001(\0132(.google.genomics.v1alpha2.Serv"
      "iceAccount\022\021\n\tclient_id\030\005 \001(\t\022>\n\tresourc"
      "es\030\006 \001(\0132+.google.genomics.v1alpha2.Pipe"
      "lineResources\0229\n\007logging\030\007 \001(\0132(.google."
      "genomics.v1alpha2.LoggingOptions\022D\n!keep"
      "_vm_alive_on_failure_duration\030\010 \001(\0132\031.go"
      "ogle.protobuf.Duration\022E\n\006labels\030\t \003(\01325"
      ".google.genomics.v1alpha2.RunPipelineArg"
      "s.LabelsEntry\032-\n\013InputsEntry\022\013\n\003key\030\001 \001("
      "\t\022\r\n\005value\030\002 \001(\t:\0028\001\032.\n\014OutputsEntry\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032-\n\013LabelsEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\273\001\n\022"
      "RunPipelineRequest\022\025\n\013pipeline_id\030\001 \001(\tH"
      "\000\022@\n\022ephemeral_pipeline\030\002 \001(\0132\".google.g"
      "enomics.v1alpha2.PipelineH\000\022@\n\rpipeline_"
      "args\030\003 \001(\0132).google.genomics.v1alpha2.Ru"
      "nPipelineArgsB\n\n\010pipeline\")\n\022GetPipeline"
      "Request\022\023\n\013pipeline_id\030\001 \001(\t\"f\n\024ListPipe"
      "linesRequest\022\022\n\nproject_id\030\001 \001(\t\022\023\n\013name"
      "_prefix\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage"
      "_token\030\004 \001(\t\"g\n\025ListPipelinesResponse\0225\n"
      "\tpipelines\030\001 \003(\0132\".google.genomics.v1alp"
      "ha2.Pipeline\022\027\n\017next_page_token\030\002 \001(\t\",\n"
      "\025DeletePipelineRequest\022\023\n\013pipeline_id\030\001 "
      "\001(\t\"L\n\032GetControllerConfigRequest\022\024\n\014ope"
      "ration_id\030\001 \001(\t\022\030\n\020validation_token\030\002 \001("
      "\004\"\331\005\n\020ControllerConfig\022\r\n\005image\030\001 \001(\t\022\013\n"
      "\003cmd\030\002 \001(\t\022\024\n\014gcs_log_path\030\003 \001(\t\022\024\n\014mach"
      "ine_type\030\004 \001(\t\022B\n\004vars\030\005 \003(\01324.google.ge"
      "nomics.v1alpha2.ControllerConfig.VarsEnt"
      "ry\022D\n\005disks\030\006 \003(\01325.google.genomics.v1al"
      "pha2.ControllerConfig.DisksEntry\022O\n\013gcs_"
      "sources\030\007 \003(\0132:.google.genomics.v1alpha2"
      ".ControllerConfig.GcsSourcesEntry\022K\n\tgcs"
      "_sinks\030\010 \003(\01328.google.genomics.v1alpha2."
      "ControllerConfig.GcsSinksEntry\032 \n\016Repeat"
      "edString\022\016\n\006values\030\001 \003(\t\032+\n\tVarsEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032,\n\nDisksEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032l\n\017G"
      "csSourcesEntry\022\013\n\003key\030\001 \001(\t\022H\n\005value\030\002 \001"
      "(\01329.google.genomics.v1alpha2.Controller"
      "Config.RepeatedString:\0028\001\032j\n\rGcsSinksEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022H\n\005value\030\002 \001(\01329.google."
      "genomics.v1alpha2.ControllerConfig.Repea"
      "tedString:\0028\001\"T\n\016TimestampEvent\022\023\n\013descr"
      "iption\030\001 \001(\t\022-\n\ttimestamp\030\002 \001(\0132\032.google"
      ".protobuf.Timestamp\"\314\001\n\031SetOperationStat"
      "usRequest\022\024\n\014operation_id\030\001 \001(\t\022B\n\020times"
      "tamp_events\030\002 \003(\0132(.google.genomics.v1al"
      "pha2.TimestampEvent\022$\n\nerror_code\030\003 \001(\0162"
      "\020.google.rpc.Code\022\025\n\rerror_message\030\004 \001(\t"
      "\022\030\n\020validation_token\030\005 \001(\004\"/\n\016ServiceAcc"
      "ount\022\r\n\005email\030\001 \001(\t\022\016\n\006scopes\030\002 \003(\t\"\"\n\016L"
      "oggingOptions\022\020\n\010gcs_path\030\001 \001(\t\"\326\003\n\021Pipe"
      "lineResources\022\031\n\021minimum_cpu_cores\030\001 \001(\005"
      "\022\023\n\013preemptible\030\002 \001(\010\022\026\n\016minimum_ram_gb\030"
      "\003 \001(\001\022\?\n\005disks\030\004 \003(\01320.google.genomics.v"
      "1alpha2.PipelineResources.Disk\022\r\n\005zones\030"
      "\005 \003(\t\022\031\n\021boot_disk_size_gb\030\006 \001(\005\022\022\n\nno_a"
      "ddress\030\007 \001(\010\032\371\001\n\004Disk\022\014\n\004name\030\001 \001(\t\022C\n\004t"
      "ype\030\002 \001(\01625.google.genomics.v1alpha2.Pip"
      "elineResources.Disk.Type\022\017\n\007size_gb\030\003 \001("
      "\005\022\016\n\006source\030\004 \001(\t\022\023\n\013auto_delete\030\006 \001(\010\022\023"
      "\n\013mount_point\030\010 \001(\t\"S\n\004Type\022\024\n\020TYPE_UNSP"
      "ECIFIED\020\000\022\022\n\016PERSISTENT_HDD\020\001\022\022\n\016PERSIST"
      "ENT_SSD\020\002\022\r\n\tLOCAL_SSD\020\003\"\301\001\n\021PipelinePar"
      "ameter\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001("
      "\t\022\025\n\rdefault_value\030\005 \001(\t\022I\n\nlocal_copy\030\006"
      " \001(\01325.google.genomics.v1alpha2.Pipeline"
      "Parameter.LocalCopy\032\'\n\tLocalCopy\022\014\n\004path"
      "\030\001 \001(\t\022\014\n\004disk\030\002 \001(\t\"1\n\016DockerExecutor\022\022"
      "\n\nimage_name\030\001 \001(\t\022\013\n\003cmd\030\002 \001(\t2\210\010\n\021Pipe"
      "linesV1Alpha2\022\214\001\n\016CreatePipeline\022/.googl"
      "e.genomics.v1alpha2.CreatePipelineReques"
      "t\032\".google.genomics.v1alpha2.Pipeline\"%\202"
      "\323\344\223\002\037\"\023/v1alpha2/pipelines:\010pipeline\022~\n\013"
      "RunPipeline\022,.google.genomics.v1alpha2.R"
      "unPipelineRequest\032\035.google.longrunning.O"
      "peration\"\"\202\323\344\223\002\034\"\027/v1alpha2/pipelines:ru"
      "n:\001*\022\212\001\n\013GetPipeline\022,.google.genomics.v"
      "1alpha2.GetPipelineRequest\032\".google.geno"
      "mics.v1alpha2.Pipeline\")\202\323\344\223\002#\022!/v1alpha"
      "2/pipelines/{pipeline_id}\022\215\001\n\rListPipeli"
      "nes\022..google.genomics.v1alpha2.ListPipel"
      "inesRequest\032/.google.genomics.v1alpha2.L"
      "istPipelinesResponse\"\033\202\323\344\223\002\025\022\023/v1alpha2/"
      "pipelines\022\204\001\n\016DeletePipeline\022/.google.ge"
      "nomics.v1alpha2.DeletePipelineRequest\032\026."
      "google.protobuf.Empty\")\202\323\344\223\002#*!/v1alpha2"
      "/pipelines/{pipeline_id}\022\250\001\n\023GetControll"
      "erConfig\0224.google.genomics.v1alpha2.GetC"
      "ontrollerConfigRequest\032*.google.genomics"
      ".v1alpha2.ControllerConfig\"/\202\323\344\223\002)\022\'/v1a"
      "lpha2/pipelines:getControllerConfig\022\224\001\n\022"
      "SetOperationStatus\0223.google.genomics.v1a"
      "lpha2.SetOperationStatusRequest\032\026.google"
      ".protobuf.Empty\"1\202\323\344\223\002+\032&/v1alpha2/pipel"
      "ines:setOperationStatus:\001*Bp\n\027com.google"
      ".genomics.v1aB\016PipelinesProtoP\001Z@google."
      "golang.org/genproto/googleapis/genomics/"
      "v1alpha2;genomics\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5108);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/genomics/v1alpha2/pipelines.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fcode_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto
namespace google {
namespace genomics {
namespace v1alpha2 {
const ::google::protobuf::EnumDescriptor* PipelineResources_Disk_Type_descriptor() {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_enum_descriptors[0];
}
bool PipelineResources_Disk_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PipelineResources_Disk_Type PipelineResources_Disk::TYPE_UNSPECIFIED;
const PipelineResources_Disk_Type PipelineResources_Disk::PERSISTENT_HDD;
const PipelineResources_Disk_Type PipelineResources_Disk::PERSISTENT_SSD;
const PipelineResources_Disk_Type PipelineResources_Disk::LOCAL_SSD;
const PipelineResources_Disk_Type PipelineResources_Disk::Type_MIN;
const PipelineResources_Disk_Type PipelineResources_Disk::Type_MAX;
const int PipelineResources_Disk::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ComputeEngine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputeEngine::kInstanceNameFieldNumber;
const int ComputeEngine::kZoneFieldNumber;
const int ComputeEngine::kMachineTypeFieldNumber;
const int ComputeEngine::kDiskNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputeEngine::ComputeEngine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsComputeEngine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.ComputeEngine)
}
ComputeEngine::ComputeEngine(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  disk_names_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsComputeEngine();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.ComputeEngine)
}
ComputeEngine::ComputeEngine(const ComputeEngine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      disk_names_(from.disk_names_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_name().size() > 0) {
    instance_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name(),
      GetArenaNoVirtual());
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone(),
      GetArenaNoVirtual());
  }
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_type().size() > 0) {
    machine_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.ComputeEngine)
}

void ComputeEngine::SharedCtor() {
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ComputeEngine::~ComputeEngine() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.ComputeEngine)
  SharedDtor();
}

void ComputeEngine::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  instance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ComputeEngine::ArenaDtor(void* object) {
  ComputeEngine* _this = reinterpret_cast< ComputeEngine* >(object);
  (void)_this;
}
void ComputeEngine::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ComputeEngine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComputeEngine::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputeEngine& ComputeEngine::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsComputeEngine();
  return *internal_default_instance();
}

ComputeEngine* ComputeEngine::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ComputeEngine>(arena);
}

void ComputeEngine::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.ComputeEngine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disk_names_.Clear();
  instance_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  zone_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  machine_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ComputeEngine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.ComputeEngine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instance_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_name().data(), static_cast<int>(this->instance_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ComputeEngine.instance_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ComputeEngine.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string machine_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_type().data(), static_cast<int>(this->machine_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ComputeEngine.machine_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string disk_names = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_disk_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disk_names(this->disk_names_size() - 1).data(),
            static_cast<int>(this->disk_names(this->disk_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ComputeEngine.disk_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.ComputeEngine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.ComputeEngine)
  return false;
#undef DO_
}

void ComputeEngine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.ComputeEngine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.instance_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instance_name(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string machine_type = 3;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.machine_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->machine_type(), output);
  }

  // repeated string disk_names = 4;
  for (int i = 0, n = this->disk_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_names(i).data(), static_cast<int>(this->disk_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.disk_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->disk_names(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.ComputeEngine)
}

::google::protobuf::uint8* ComputeEngine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.ComputeEngine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.instance_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instance_name(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string machine_type = 3;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.machine_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->machine_type(), target);
  }

  // repeated string disk_names = 4;
  for (int i = 0, n = this->disk_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_names(i).data(), static_cast<int>(this->disk_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ComputeEngine.disk_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->disk_names(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.ComputeEngine)
  return target;
}

size_t ComputeEngine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.ComputeEngine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string disk_names = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->disk_names_size());
  for (int i = 0, n = this->disk_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->disk_names(i));
  }

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_name());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string machine_type = 3;
  if (this->machine_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComputeEngine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.ComputeEngine)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputeEngine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputeEngine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.ComputeEngine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.ComputeEngine)
    MergeFrom(*source);
  }
}

void ComputeEngine::MergeFrom(const ComputeEngine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.ComputeEngine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  disk_names_.MergeFrom(from.disk_names_);
  if (from.instance_name().size() > 0) {
    set_instance_name(from.instance_name());
  }
  if (from.zone().size() > 0) {
    set_zone(from.zone());
  }
  if (from.machine_type().size() > 0) {
    set_machine_type(from.machine_type());
  }
}

void ComputeEngine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.ComputeEngine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputeEngine::CopyFrom(const ComputeEngine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.ComputeEngine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputeEngine::IsInitialized() const {
  return true;
}

void ComputeEngine::Swap(ComputeEngine* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ComputeEngine* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ComputeEngine::UnsafeArenaSwap(ComputeEngine* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ComputeEngine::InternalSwap(ComputeEngine* other) {
  using std::swap;
  disk_names_.InternalSwap(&other->disk_names_);
  instance_name_.Swap(&other->instance_name_);
  zone_.Swap(&other->zone_);
  machine_type_.Swap(&other->machine_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComputeEngine::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RuntimeMetadata::InitAsDefaultInstance() {
  ::google::genomics::v1alpha2::_RuntimeMetadata_default_instance_._instance.get_mutable()->compute_engine_ = const_cast< ::google::genomics::v1alpha2::ComputeEngine*>(
      ::google::genomics::v1alpha2::ComputeEngine::internal_default_instance());
}
void RuntimeMetadata::_slow_mutable_compute_engine() {
  compute_engine_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::ComputeEngine >(
      GetArenaNoVirtual());
}
void RuntimeMetadata::unsafe_arena_set_allocated_compute_engine(
    ::google::genomics::v1alpha2::ComputeEngine* compute_engine) {
  if (GetArenaNoVirtual() == NULL) {
    delete compute_engine_;
  }
  compute_engine_ = compute_engine;
  if (compute_engine) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.RuntimeMetadata.compute_engine)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeMetadata::kComputeEngineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeMetadata::RuntimeMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRuntimeMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.RuntimeMetadata)
}
RuntimeMetadata::RuntimeMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRuntimeMetadata();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.RuntimeMetadata)
}
RuntimeMetadata::RuntimeMetadata(const RuntimeMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_compute_engine()) {
    compute_engine_ = new ::google::genomics::v1alpha2::ComputeEngine(*from.compute_engine_);
  } else {
    compute_engine_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.RuntimeMetadata)
}

void RuntimeMetadata::SharedCtor() {
  compute_engine_ = NULL;
  _cached_size_ = 0;
}

RuntimeMetadata::~RuntimeMetadata() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.RuntimeMetadata)
  SharedDtor();
}

void RuntimeMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete compute_engine_;
}

void RuntimeMetadata::ArenaDtor(void* object) {
  RuntimeMetadata* _this = reinterpret_cast< RuntimeMetadata* >(object);
  (void)_this;
}
void RuntimeMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RuntimeMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuntimeMetadata::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuntimeMetadata& RuntimeMetadata::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRuntimeMetadata();
  return *internal_default_instance();
}

RuntimeMetadata* RuntimeMetadata::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RuntimeMetadata>(arena);
}

void RuntimeMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.RuntimeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && compute_engine_ != NULL) {
    delete compute_engine_;
  }
  compute_engine_ = NULL;
  _internal_metadata_.Clear();
}

bool RuntimeMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.RuntimeMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.genomics.v1alpha2.ComputeEngine compute_engine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_compute_engine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.RuntimeMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.RuntimeMetadata)
  return false;
#undef DO_
}

void RuntimeMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.RuntimeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.genomics.v1alpha2.ComputeEngine compute_engine = 1;
  if (this->has_compute_engine()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->compute_engine_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.RuntimeMetadata)
}

::google::protobuf::uint8* RuntimeMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.RuntimeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.genomics.v1alpha2.ComputeEngine compute_engine = 1;
  if (this->has_compute_engine()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->compute_engine_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.RuntimeMetadata)
  return target;
}

size_t RuntimeMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.RuntimeMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.genomics.v1alpha2.ComputeEngine compute_engine = 1;
  if (this->has_compute_engine()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->compute_engine_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuntimeMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.RuntimeMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.RuntimeMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.RuntimeMetadata)
    MergeFrom(*source);
  }
}

void RuntimeMetadata::MergeFrom(const RuntimeMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.RuntimeMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_compute_engine()) {
    mutable_compute_engine()->::google::genomics::v1alpha2::ComputeEngine::MergeFrom(from.compute_engine());
  }
}

void RuntimeMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.RuntimeMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeMetadata::CopyFrom(const RuntimeMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.RuntimeMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeMetadata::IsInitialized() const {
  return true;
}

void RuntimeMetadata::Swap(RuntimeMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RuntimeMetadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RuntimeMetadata::UnsafeArenaSwap(RuntimeMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RuntimeMetadata::InternalSwap(RuntimeMetadata* other) {
  using std::swap;
  swap(compute_engine_, other->compute_engine_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuntimeMetadata::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pipeline::InitAsDefaultInstance() {
  ::google::genomics::v1alpha2::_Pipeline_default_instance_.docker_ = const_cast< ::google::genomics::v1alpha2::DockerExecutor*>(
      ::google::genomics::v1alpha2::DockerExecutor::internal_default_instance());
  ::google::genomics::v1alpha2::_Pipeline_default_instance_._instance.get_mutable()->resources_ = const_cast< ::google::genomics::v1alpha2::PipelineResources*>(
      ::google::genomics::v1alpha2::PipelineResources::internal_default_instance());
}
void Pipeline::set_allocated_docker(::google::genomics::v1alpha2::DockerExecutor* docker) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_executor();
  if (docker) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(docker);
    if (message_arena != submessage_arena) {
      docker = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, docker, submessage_arena);
    }
    set_has_docker();
    executor_.docker_ = docker;
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1alpha2.Pipeline.docker)
}
void Pipeline::_slow_mutable_resources() {
  resources_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::PipelineResources >(
      GetArenaNoVirtual());
}
void Pipeline::unsafe_arena_set_allocated_resources(
    ::google::genomics::v1alpha2::PipelineResources* resources) {
  if (GetArenaNoVirtual() == NULL) {
    delete resources_;
  }
  resources_ = resources;
  if (resources) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.Pipeline.resources)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pipeline::kProjectIdFieldNumber;
const int Pipeline::kNameFieldNumber;
const int Pipeline::kDescriptionFieldNumber;
const int Pipeline::kInputParametersFieldNumber;
const int Pipeline::kOutputParametersFieldNumber;
const int Pipeline::kDockerFieldNumber;
const int Pipeline::kResourcesFieldNumber;
const int Pipeline::kPipelineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pipeline::Pipeline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipeline();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.Pipeline)
}
Pipeline::Pipeline(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  input_parameters_(arena),
  output_parameters_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipeline();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.Pipeline)
}
Pipeline::Pipeline(const Pipeline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_parameters_(from.input_parameters_),
      output_parameters_(from.output_parameters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  pipeline_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pipeline_id().size() > 0) {
    pipeline_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pipeline_id(),
      GetArenaNoVirtual());
  }
  if (from.has_resources()) {
    resources_ = new ::google::genomics::v1alpha2::PipelineResources(*from.resources_);
  } else {
    resources_ = NULL;
  }
  clear_has_executor();
  switch (from.executor_case()) {
    case kDocker: {
      mutable_docker()->::google::genomics::v1alpha2::DockerExecutor::MergeFrom(from.docker());
      break;
    }
    case EXECUTOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.Pipeline)
}

void Pipeline::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pipeline_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resources_ = NULL;
  clear_has_executor();
  _cached_size_ = 0;
}

Pipeline::~Pipeline() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.Pipeline)
  SharedDtor();
}

void Pipeline::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pipeline_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resources_;
  if (has_executor()) {
    clear_executor();
  }
}

void Pipeline::ArenaDtor(void* object) {
  Pipeline* _this = reinterpret_cast< Pipeline* >(object);
  (void)_this;
}
void Pipeline::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Pipeline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pipeline::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pipeline& Pipeline::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipeline();
  return *internal_default_instance();
}

Pipeline* Pipeline::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Pipeline>(arena);
}

void Pipeline::clear_executor() {
// @@protoc_insertion_point(one_of_clear_start:google.genomics.v1alpha2.Pipeline)
  switch (executor_case()) {
    case kDocker: {
      if (GetArenaNoVirtual() == NULL) {
        delete executor_.docker_;
      }
      break;
    }
    case EXECUTOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXECUTOR_NOT_SET;
}


void Pipeline::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_parameters_.Clear();
  output_parameters_.Clear();
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pipeline_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && resources_ != NULL) {
    delete resources_;
  }
  resources_ = NULL;
  clear_executor();
  _internal_metadata_.Clear();
}

bool Pipeline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.Pipeline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.Pipeline.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.Pipeline.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.Pipeline.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.DockerExecutor docker = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_docker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.PipelineResources resources = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pipeline_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pipeline_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.Pipeline.pipeline_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.genomics.v1alpha2.PipelineParameter input_parameters = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_input_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.genomics.v1alpha2.PipelineParameter output_parameters = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_output_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.Pipeline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.Pipeline)
  return false;
#undef DO_
}

void Pipeline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.genomics.v1alpha2.DockerExecutor docker = 5;
  if (has_docker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *executor_.docker_, output);
  }

  // .google.genomics.v1alpha2.PipelineResources resources = 6;
  if (this->has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->resources_, output);
  }

  // string pipeline_id = 7;
  if (this->pipeline_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.pipeline_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pipeline_id(), output);
  }

  // repeated .google.genomics.v1alpha2.PipelineParameter input_parameters = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->input_parameters(static_cast<int>(i)), output);
  }

  // repeated .google.genomics.v1alpha2.PipelineParameter output_parameters = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->output_parameters(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.Pipeline)
}

::google::protobuf::uint8* Pipeline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.genomics.v1alpha2.DockerExecutor docker = 5;
  if (has_docker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *executor_.docker_, deterministic, target);
  }

  // .google.genomics.v1alpha2.PipelineResources resources = 6;
  if (this->has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->resources_, deterministic, target);
  }

  // string pipeline_id = 7;
  if (this->pipeline_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.Pipeline.pipeline_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pipeline_id(), target);
  }

  // repeated .google.genomics.v1alpha2.PipelineParameter input_parameters = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->input_parameters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.genomics.v1alpha2.PipelineParameter output_parameters = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->output_parameters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.Pipeline)
  return target;
}

size_t Pipeline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.Pipeline)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.genomics.v1alpha2.PipelineParameter input_parameters = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->input_parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_parameters(static_cast<int>(i)));
    }
  }

  // repeated .google.genomics.v1alpha2.PipelineParameter output_parameters = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->output_parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_parameters(static_cast<int>(i)));
    }
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string pipeline_id = 7;
  if (this->pipeline_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pipeline_id());
  }

  // .google.genomics.v1alpha2.PipelineResources resources = 6;
  if (this->has_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resources_);
  }

  switch (executor_case()) {
    // .google.genomics.v1alpha2.DockerExecutor docker = 5;
    case kDocker: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *executor_.docker_);
      break;
    }
    case EXECUTOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pipeline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.Pipeline)
  GOOGLE_DCHECK_NE(&from, this);
  const Pipeline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pipeline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.Pipeline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.Pipeline)
    MergeFrom(*source);
  }
}

void Pipeline::MergeFrom(const Pipeline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.Pipeline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_parameters_.MergeFrom(from.input_parameters_);
  output_parameters_.MergeFrom(from.output_parameters_);
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.pipeline_id().size() > 0) {
    set_pipeline_id(from.pipeline_id());
  }
  if (from.has_resources()) {
    mutable_resources()->::google::genomics::v1alpha2::PipelineResources::MergeFrom(from.resources());
  }
  switch (from.executor_case()) {
    case kDocker: {
      mutable_docker()->::google::genomics::v1alpha2::DockerExecutor::MergeFrom(from.docker());
      break;
    }
    case EXECUTOR_NOT_SET: {
      break;
    }
  }
}

void Pipeline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.Pipeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pipeline::CopyFrom(const Pipeline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.Pipeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pipeline::IsInitialized() const {
  return true;
}

void Pipeline::Swap(Pipeline* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Pipeline* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Pipeline::UnsafeArenaSwap(Pipeline* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Pipeline::InternalSwap(Pipeline* other) {
  using std::swap;
  input_parameters_.InternalSwap(&other->input_parameters_);
  output_parameters_.InternalSwap(&other->output_parameters_);
  project_id_.Swap(&other->project_id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  pipeline_id_.Swap(&other->pipeline_id_);
  swap(resources_, other->resources_);
  swap(executor_, other->executor_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pipeline::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreatePipelineRequest::InitAsDefaultInstance() {
  ::google::genomics::v1alpha2::_CreatePipelineRequest_default_instance_._instance.get_mutable()->pipeline_ = const_cast< ::google::genomics::v1alpha2::Pipeline*>(
      ::google::genomics::v1alpha2::Pipeline::internal_default_instance());
}
void CreatePipelineRequest::_slow_mutable_pipeline() {
  pipeline_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::Pipeline >(
      GetArenaNoVirtual());
}
void CreatePipelineRequest::unsafe_arena_set_allocated_pipeline(
    ::google::genomics::v1alpha2::Pipeline* pipeline) {
  if (GetArenaNoVirtual() == NULL) {
    delete pipeline_;
  }
  pipeline_ = pipeline;
  if (pipeline) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.CreatePipelineRequest.pipeline)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatePipelineRequest::kPipelineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePipelineRequest::CreatePipelineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsCreatePipelineRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.CreatePipelineRequest)
}
CreatePipelineRequest::CreatePipelineRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsCreatePipelineRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.CreatePipelineRequest)
}
CreatePipelineRequest::CreatePipelineRequest(const CreatePipelineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pipeline()) {
    pipeline_ = new ::google::genomics::v1alpha2::Pipeline(*from.pipeline_);
  } else {
    pipeline_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.CreatePipelineRequest)
}

void CreatePipelineRequest::SharedCtor() {
  pipeline_ = NULL;
  _cached_size_ = 0;
}

CreatePipelineRequest::~CreatePipelineRequest() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.CreatePipelineRequest)
  SharedDtor();
}

void CreatePipelineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pipeline_;
}

void CreatePipelineRequest::ArenaDtor(void* object) {
  CreatePipelineRequest* _this = reinterpret_cast< CreatePipelineRequest* >(object);
  (void)_this;
}
void CreatePipelineRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreatePipelineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePipelineRequest::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatePipelineRequest& CreatePipelineRequest::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsCreatePipelineRequest();
  return *internal_default_instance();
}

CreatePipelineRequest* CreatePipelineRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CreatePipelineRequest>(arena);
}

void CreatePipelineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.CreatePipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pipeline_ != NULL) {
    delete pipeline_;
  }
  pipeline_ = NULL;
  _internal_metadata_.Clear();
}

bool CreatePipelineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.CreatePipelineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.genomics.v1alpha2.Pipeline pipeline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pipeline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.CreatePipelineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.CreatePipelineRequest)
  return false;
#undef DO_
}

void CreatePipelineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.CreatePipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.genomics.v1alpha2.Pipeline pipeline = 1;
  if (this->has_pipeline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pipeline_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.CreatePipelineRequest)
}

::google::protobuf::uint8* CreatePipelineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.CreatePipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.genomics.v1alpha2.Pipeline pipeline = 1;
  if (this->has_pipeline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->pipeline_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.CreatePipelineRequest)
  return target;
}

size_t CreatePipelineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.CreatePipelineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.genomics.v1alpha2.Pipeline pipeline = 1;
  if (this->has_pipeline()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pipeline_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePipelineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.CreatePipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePipelineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePipelineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.CreatePipelineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.CreatePipelineRequest)
    MergeFrom(*source);
  }
}

void CreatePipelineRequest::MergeFrom(const CreatePipelineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.CreatePipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pipeline()) {
    mutable_pipeline()->::google::genomics::v1alpha2::Pipeline::MergeFrom(from.pipeline());
  }
}

void CreatePipelineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.CreatePipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePipelineRequest::CopyFrom(const CreatePipelineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.CreatePipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePipelineRequest::IsInitialized() const {
  return true;
}

void CreatePipelineRequest::Swap(CreatePipelineRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreatePipelineRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreatePipelineRequest::UnsafeArenaSwap(CreatePipelineRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreatePipelineRequest::InternalSwap(CreatePipelineRequest* other) {
  using std::swap;
  swap(pipeline_, other->pipeline_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePipelineRequest::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RunPipelineArgs_InputsEntry_DoNotUse::RunPipelineArgs_InputsEntry_DoNotUse() {}
RunPipelineArgs_InputsEntry_DoNotUse::RunPipelineArgs_InputsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RunPipelineArgs_InputsEntry_DoNotUse::MergeFrom(const RunPipelineArgs_InputsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RunPipelineArgs_InputsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[4];
}
void RunPipelineArgs_InputsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

RunPipelineArgs_OutputsEntry_DoNotUse::RunPipelineArgs_OutputsEntry_DoNotUse() {}
RunPipelineArgs_OutputsEntry_DoNotUse::RunPipelineArgs_OutputsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RunPipelineArgs_OutputsEntry_DoNotUse::MergeFrom(const RunPipelineArgs_OutputsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RunPipelineArgs_OutputsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[5];
}
void RunPipelineArgs_OutputsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

RunPipelineArgs_LabelsEntry_DoNotUse::RunPipelineArgs_LabelsEntry_DoNotUse() {}
RunPipelineArgs_LabelsEntry_DoNotUse::RunPipelineArgs_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RunPipelineArgs_LabelsEntry_DoNotUse::MergeFrom(const RunPipelineArgs_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RunPipelineArgs_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[6];
}
void RunPipelineArgs_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RunPipelineArgs::InitAsDefaultInstance() {
  ::google::genomics::v1alpha2::_RunPipelineArgs_default_instance_._instance.get_mutable()->service_account_ = const_cast< ::google::genomics::v1alpha2::ServiceAccount*>(
      ::google::genomics::v1alpha2::ServiceAccount::internal_default_instance());
  ::google::genomics::v1alpha2::_RunPipelineArgs_default_instance_._instance.get_mutable()->resources_ = const_cast< ::google::genomics::v1alpha2::PipelineResources*>(
      ::google::genomics::v1alpha2::PipelineResources::internal_default_instance());
  ::google::genomics::v1alpha2::_RunPipelineArgs_default_instance_._instance.get_mutable()->logging_ = const_cast< ::google::genomics::v1alpha2::LoggingOptions*>(
      ::google::genomics::v1alpha2::LoggingOptions::internal_default_instance());
  ::google::genomics::v1alpha2::_RunPipelineArgs_default_instance_._instance.get_mutable()->keep_vm_alive_on_failure_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void RunPipelineArgs::_slow_mutable_service_account() {
  service_account_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::ServiceAccount >(
      GetArenaNoVirtual());
}
void RunPipelineArgs::unsafe_arena_set_allocated_service_account(
    ::google::genomics::v1alpha2::ServiceAccount* service_account) {
  if (GetArenaNoVirtual() == NULL) {
    delete service_account_;
  }
  service_account_ = service_account;
  if (service_account) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.RunPipelineArgs.service_account)
}
void RunPipelineArgs::_slow_mutable_resources() {
  resources_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::PipelineResources >(
      GetArenaNoVirtual());
}
void RunPipelineArgs::unsafe_arena_set_allocated_resources(
    ::google::genomics::v1alpha2::PipelineResources* resources) {
  if (GetArenaNoVirtual() == NULL) {
    delete resources_;
  }
  resources_ = resources;
  if (resources) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.RunPipelineArgs.resources)
}
void RunPipelineArgs::_slow_mutable_logging() {
  logging_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::LoggingOptions >(
      GetArenaNoVirtual());
}
void RunPipelineArgs::unsafe_arena_set_allocated_logging(
    ::google::genomics::v1alpha2::LoggingOptions* logging) {
  if (GetArenaNoVirtual() == NULL) {
    delete logging_;
  }
  logging_ = logging;
  if (logging) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.RunPipelineArgs.logging)
}
void RunPipelineArgs::_slow_mutable_keep_vm_alive_on_failure_duration() {
  keep_vm_alive_on_failure_duration_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
      GetArenaNoVirtual());
}
void RunPipelineArgs::unsafe_arena_set_allocated_keep_vm_alive_on_failure_duration(
    ::google::protobuf::Duration* keep_vm_alive_on_failure_duration) {
  if (GetArenaNoVirtual() == NULL) {
    delete keep_vm_alive_on_failure_duration_;
  }
  keep_vm_alive_on_failure_duration_ = keep_vm_alive_on_failure_duration;
  if (keep_vm_alive_on_failure_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.RunPipelineArgs.keep_vm_alive_on_failure_duration)
}
void RunPipelineArgs::clear_keep_vm_alive_on_failure_duration() {
  if (GetArenaNoVirtual() == NULL && keep_vm_alive_on_failure_duration_ != NULL) {
    delete keep_vm_alive_on_failure_duration_;
  }
  keep_vm_alive_on_failure_duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunPipelineArgs::kProjectIdFieldNumber;
const int RunPipelineArgs::kInputsFieldNumber;
const int RunPipelineArgs::kOutputsFieldNumber;
const int RunPipelineArgs::kServiceAccountFieldNumber;
const int RunPipelineArgs::kClientIdFieldNumber;
const int RunPipelineArgs::kResourcesFieldNumber;
const int RunPipelineArgs::kLoggingFieldNumber;
const int RunPipelineArgs::kKeepVmAliveOnFailureDurationFieldNumber;
const int RunPipelineArgs::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunPipelineArgs::RunPipelineArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineArgs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.RunPipelineArgs)
}
RunPipelineArgs::RunPipelineArgs(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  inputs_(arena),
  outputs_(arena),
  labels_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineArgs();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.RunPipelineArgs)
}
RunPipelineArgs::RunPipelineArgs(const RunPipelineArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  labels_.MergeFrom(from.labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id(),
      GetArenaNoVirtual());
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id(),
      GetArenaNoVirtual());
  }
  if (from.has_service_account()) {
    service_account_ = new ::google::genomics::v1alpha2::ServiceAccount(*from.service_account_);
  } else {
    service_account_ = NULL;
  }
  if (from.has_resources()) {
    resources_ = new ::google::genomics::v1alpha2::PipelineResources(*from.resources_);
  } else {
    resources_ = NULL;
  }
  if (from.has_logging()) {
    logging_ = new ::google::genomics::v1alpha2::LoggingOptions(*from.logging_);
  } else {
    logging_ = NULL;
  }
  if (from.has_keep_vm_alive_on_failure_duration()) {
    keep_vm_alive_on_failure_duration_ = new ::google::protobuf::Duration(*from.keep_vm_alive_on_failure_duration_);
  } else {
    keep_vm_alive_on_failure_duration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.RunPipelineArgs)
}

void RunPipelineArgs::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&service_account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keep_vm_alive_on_failure_duration_) -
      reinterpret_cast<char*>(&service_account_)) + sizeof(keep_vm_alive_on_failure_duration_));
  _cached_size_ = 0;
}

RunPipelineArgs::~RunPipelineArgs() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.RunPipelineArgs)
  SharedDtor();
}

void RunPipelineArgs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete service_account_;
  if (this != internal_default_instance()) delete resources_;
  if (this != internal_default_instance()) delete logging_;
  if (this != internal_default_instance()) delete keep_vm_alive_on_failure_duration_;
}

void RunPipelineArgs::ArenaDtor(void* object) {
  RunPipelineArgs* _this = reinterpret_cast< RunPipelineArgs* >(object);
  (void)_this;
}
void RunPipelineArgs::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RunPipelineArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunPipelineArgs::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunPipelineArgs& RunPipelineArgs::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineArgs();
  return *internal_default_instance();
}

RunPipelineArgs* RunPipelineArgs::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RunPipelineArgs>(arena);
}

void RunPipelineArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.RunPipelineArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  labels_.Clear();
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  client_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && service_account_ != NULL) {
    delete service_account_;
  }
  service_account_ = NULL;
  if (GetArenaNoVirtual() == NULL && resources_ != NULL) {
    delete resources_;
  }
  resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) {
    delete logging_;
  }
  logging_ = NULL;
  if (GetArenaNoVirtual() == NULL && keep_vm_alive_on_failure_duration_ != NULL) {
    delete keep_vm_alive_on_failure_duration_;
  }
  keep_vm_alive_on_failure_duration_ = NULL;
  _internal_metadata_.Clear();
}

bool RunPipelineArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.RunPipelineArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          RunPipelineArgs_InputsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RunPipelineArgs_InputsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&inputs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.InputsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.InputsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> outputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          RunPipelineArgs_OutputsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RunPipelineArgs_OutputsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&outputs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.OutputsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.OutputsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.ServiceAccount service_account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.PipelineResources resources = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.LoggingOptions logging = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration keep_vm_alive_on_failure_duration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_keep_vm_alive_on_failure_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          RunPipelineArgs_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RunPipelineArgs_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineArgs.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.RunPipelineArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.RunPipelineArgs)
  return false;
#undef DO_
}

void RunPipelineArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.RunPipelineArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.RunPipelineArgs.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // map<string, string> inputs = 2;
  if (!this->inputs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.InputsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.InputsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->inputs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->inputs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RunPipelineArgs_InputsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inputs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RunPipelineArgs_InputsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it) {
        entry.reset(inputs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> outputs = 3;
  if (!this->outputs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.OutputsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.OutputsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->outputs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->outputs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->outputs().begin();
          it != this->outputs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RunPipelineArgs_OutputsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(outputs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RunPipelineArgs_OutputsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->outputs().begin();
          it != this->outputs().end(); ++it) {
        entry.reset(outputs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.genomics.v1alpha2.ServiceAccount service_account = 4;
  if (this->has_service_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->service_account_, output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.RunPipelineArgs.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // .google.genomics.v1alpha2.PipelineResources resources = 6;
  if (this->has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->resources_, output);
  }

  // .google.genomics.v1alpha2.LoggingOptions logging = 7;
  if (this->has_logging()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->logging_, output);
  }

  // .google.protobuf.Duration keep_vm_alive_on_failure_duration = 8;
  if (this->has_keep_vm_alive_on_failure_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->keep_vm_alive_on_failure_duration_, output);
  }

  // map<string, string> labels = 9;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RunPipelineArgs_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RunPipelineArgs_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.RunPipelineArgs)
}

::google::protobuf::uint8* RunPipelineArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.RunPipelineArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.RunPipelineArgs.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // map<string, string> inputs = 2;
  if (!this->inputs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.InputsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.InputsEntry.value");
      }
    };

    if (deterministic &&
        this->inputs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->inputs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RunPipelineArgs_InputsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inputs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RunPipelineArgs_InputsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it) {
        entry.reset(inputs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> outputs = 3;
  if (!this->outputs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.OutputsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.OutputsEntry.value");
      }
    };

    if (deterministic &&
        this->outputs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->outputs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->outputs().begin();
          it != this->outputs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RunPipelineArgs_OutputsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(outputs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RunPipelineArgs_OutputsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->outputs().begin();
          it != this->outputs().end(); ++it) {
        entry.reset(outputs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.genomics.v1alpha2.ServiceAccount service_account = 4;
  if (this->has_service_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->service_account_, deterministic, target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.RunPipelineArgs.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // .google.genomics.v1alpha2.PipelineResources resources = 6;
  if (this->has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->resources_, deterministic, target);
  }

  // .google.genomics.v1alpha2.LoggingOptions logging = 7;
  if (this->has_logging()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->logging_, deterministic, target);
  }

  // .google.protobuf.Duration keep_vm_alive_on_failure_duration = 8;
  if (this->has_keep_vm_alive_on_failure_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->keep_vm_alive_on_failure_duration_, deterministic, target);
  }

  // map<string, string> labels = 9;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.RunPipelineArgs.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RunPipelineArgs_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RunPipelineArgs_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.RunPipelineArgs)
  return target;
}

size_t RunPipelineArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.RunPipelineArgs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> inputs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->inputs_size());
  {
    ::google::protobuf::scoped_ptr<RunPipelineArgs_InputsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->inputs().begin();
        it != this->inputs().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(inputs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, string> outputs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->outputs_size());
  {
    ::google::protobuf::scoped_ptr<RunPipelineArgs_OutputsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->outputs().begin();
        it != this->outputs().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(outputs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, string> labels = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<RunPipelineArgs_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // .google.genomics.v1alpha2.ServiceAccount service_account = 4;
  if (this->has_service_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_account_);
  }

  // .google.genomics.v1alpha2.PipelineResources resources = 6;
  if (this->has_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resources_);
  }

  // .google.genomics.v1alpha2.LoggingOptions logging = 7;
  if (this->has_logging()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logging_);
  }

  // .google.protobuf.Duration keep_vm_alive_on_failure_duration = 8;
  if (this->has_keep_vm_alive_on_failure_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->keep_vm_alive_on_failure_duration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunPipelineArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.RunPipelineArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const RunPipelineArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunPipelineArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.RunPipelineArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.RunPipelineArgs)
    MergeFrom(*source);
  }
}

void RunPipelineArgs::MergeFrom(const RunPipelineArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.RunPipelineArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  labels_.MergeFrom(from.labels_);
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.client_id().size() > 0) {
    set_client_id(from.client_id());
  }
  if (from.has_service_account()) {
    mutable_service_account()->::google::genomics::v1alpha2::ServiceAccount::MergeFrom(from.service_account());
  }
  if (from.has_resources()) {
    mutable_resources()->::google::genomics::v1alpha2::PipelineResources::MergeFrom(from.resources());
  }
  if (from.has_logging()) {
    mutable_logging()->::google::genomics::v1alpha2::LoggingOptions::MergeFrom(from.logging());
  }
  if (from.has_keep_vm_alive_on_failure_duration()) {
    mutable_keep_vm_alive_on_failure_duration()->::google::protobuf::Duration::MergeFrom(from.keep_vm_alive_on_failure_duration());
  }
}

void RunPipelineArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.RunPipelineArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunPipelineArgs::CopyFrom(const RunPipelineArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.RunPipelineArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunPipelineArgs::IsInitialized() const {
  return true;
}

void RunPipelineArgs::Swap(RunPipelineArgs* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RunPipelineArgs* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RunPipelineArgs::UnsafeArenaSwap(RunPipelineArgs* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RunPipelineArgs::InternalSwap(RunPipelineArgs* other) {
  using std::swap;
  inputs_.Swap(&other->inputs_);
  outputs_.Swap(&other->outputs_);
  labels_.Swap(&other->labels_);
  project_id_.Swap(&other->project_id_);
  client_id_.Swap(&other->client_id_);
  swap(service_account_, other->service_account_);
  swap(resources_, other->resources_);
  swap(logging_, other->logging_);
  swap(keep_vm_alive_on_failure_duration_, other->keep_vm_alive_on_failure_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunPipelineArgs::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunPipelineRequest::InitAsDefaultInstance() {
  ::google::genomics::v1alpha2::_RunPipelineRequest_default_instance_.pipeline_id_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::genomics::v1alpha2::_RunPipelineRequest_default_instance_.ephemeral_pipeline_ = const_cast< ::google::genomics::v1alpha2::Pipeline*>(
      ::google::genomics::v1alpha2::Pipeline::internal_default_instance());
  ::google::genomics::v1alpha2::_RunPipelineRequest_default_instance_._instance.get_mutable()->pipeline_args_ = const_cast< ::google::genomics::v1alpha2::RunPipelineArgs*>(
      ::google::genomics::v1alpha2::RunPipelineArgs::internal_default_instance());
}
void RunPipelineRequest::set_allocated_ephemeral_pipeline(::google::genomics::v1alpha2::Pipeline* ephemeral_pipeline) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pipeline();
  if (ephemeral_pipeline) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(ephemeral_pipeline);
    if (message_arena != submessage_arena) {
      ephemeral_pipeline = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ephemeral_pipeline, submessage_arena);
    }
    set_has_ephemeral_pipeline();
    pipeline_.ephemeral_pipeline_ = ephemeral_pipeline;
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1alpha2.RunPipelineRequest.ephemeral_pipeline)
}
void RunPipelineRequest::_slow_mutable_pipeline_args() {
  pipeline_args_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::RunPipelineArgs >(
      GetArenaNoVirtual());
}
void RunPipelineRequest::unsafe_arena_set_allocated_pipeline_args(
    ::google::genomics::v1alpha2::RunPipelineArgs* pipeline_args) {
  if (GetArenaNoVirtual() == NULL) {
    delete pipeline_args_;
  }
  pipeline_args_ = pipeline_args;
  if (pipeline_args) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.RunPipelineRequest.pipeline_args)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunPipelineRequest::kPipelineIdFieldNumber;
const int RunPipelineRequest::kEphemeralPipelineFieldNumber;
const int RunPipelineRequest::kPipelineArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunPipelineRequest::RunPipelineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.RunPipelineRequest)
}
RunPipelineRequest::RunPipelineRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.RunPipelineRequest)
}
RunPipelineRequest::RunPipelineRequest(const RunPipelineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pipeline_args()) {
    pipeline_args_ = new ::google::genomics::v1alpha2::RunPipelineArgs(*from.pipeline_args_);
  } else {
    pipeline_args_ = NULL;
  }
  clear_has_pipeline();
  switch (from.pipeline_case()) {
    case kPipelineId: {
      set_pipeline_id(from.pipeline_id());
      break;
    }
    case kEphemeralPipeline: {
      mutable_ephemeral_pipeline()->::google::genomics::v1alpha2::Pipeline::MergeFrom(from.ephemeral_pipeline());
      break;
    }
    case PIPELINE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.RunPipelineRequest)
}

void RunPipelineRequest::SharedCtor() {
  pipeline_args_ = NULL;
  clear_has_pipeline();
  _cached_size_ = 0;
}

RunPipelineRequest::~RunPipelineRequest() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.RunPipelineRequest)
  SharedDtor();
}

void RunPipelineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete pipeline_args_;
  if (has_pipeline()) {
    clear_pipeline();
  }
}

void RunPipelineRequest::ArenaDtor(void* object) {
  RunPipelineRequest* _this = reinterpret_cast< RunPipelineRequest* >(object);
  (void)_this;
}
void RunPipelineRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RunPipelineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunPipelineRequest::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunPipelineRequest& RunPipelineRequest::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsRunPipelineRequest();
  return *internal_default_instance();
}

RunPipelineRequest* RunPipelineRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RunPipelineRequest>(arena);
}

void RunPipelineRequest::clear_pipeline() {
// @@protoc_insertion_point(one_of_clear_start:google.genomics.v1alpha2.RunPipelineRequest)
  switch (pipeline_case()) {
    case kPipelineId: {
      pipeline_.pipeline_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kEphemeralPipeline: {
      if (GetArenaNoVirtual() == NULL) {
        delete pipeline_.ephemeral_pipeline_;
      }
      break;
    }
    case PIPELINE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PIPELINE_NOT_SET;
}


void RunPipelineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.RunPipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pipeline_args_ != NULL) {
    delete pipeline_args_;
  }
  pipeline_args_ = NULL;
  clear_pipeline();
  _internal_metadata_.Clear();
}

bool RunPipelineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.RunPipelineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pipeline_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pipeline_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.RunPipelineRequest.pipeline_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.Pipeline ephemeral_pipeline = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ephemeral_pipeline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.RunPipelineArgs pipeline_args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pipeline_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.RunPipelineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.RunPipelineRequest)
  return false;
#undef DO_
}

void RunPipelineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.RunPipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pipeline_id = 1;
  if (has_pipeline_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.RunPipelineRequest.pipeline_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pipeline_id(), output);
  }

  // .google.genomics.v1alpha2.Pipeline ephemeral_pipeline = 2;
  if (has_ephemeral_pipeline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *pipeline_.ephemeral_pipeline_, output);
  }

  // .google.genomics.v1alpha2.RunPipelineArgs pipeline_args = 3;
  if (this->has_pipeline_args()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pipeline_args_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.RunPipelineRequest)
}

::google::protobuf::uint8* RunPipelineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.RunPipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pipeline_id = 1;
  if (has_pipeline_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.RunPipelineRequest.pipeline_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pipeline_id(), target);
  }

  // .google.genomics.v1alpha2.Pipeline ephemeral_pipeline = 2;
  if (has_ephemeral_pipeline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *pipeline_.ephemeral_pipeline_, deterministic, target);
  }

  // .google.genomics.v1alpha2.RunPipelineArgs pipeline_args = 3;
  if (this->has_pipeline_args()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->pipeline_args_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.RunPipelineRequest)
  return target;
}

size_t RunPipelineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.RunPipelineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.genomics.v1alpha2.RunPipelineArgs pipeline_args = 3;
  if (this->has_pipeline_args()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pipeline_args_);
  }

  switch (pipeline_case()) {
    // string pipeline_id = 1;
    case kPipelineId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pipeline_id());
      break;
    }
    // .google.genomics.v1alpha2.Pipeline ephemeral_pipeline = 2;
    case kEphemeralPipeline: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pipeline_.ephemeral_pipeline_);
      break;
    }
    case PIPELINE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunPipelineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.RunPipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunPipelineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunPipelineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.RunPipelineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.RunPipelineRequest)
    MergeFrom(*source);
  }
}

void RunPipelineRequest::MergeFrom(const RunPipelineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.RunPipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pipeline_args()) {
    mutable_pipeline_args()->::google::genomics::v1alpha2::RunPipelineArgs::MergeFrom(from.pipeline_args());
  }
  switch (from.pipeline_case()) {
    case kPipelineId: {
      set_pipeline_id(from.pipeline_id());
      break;
    }
    case kEphemeralPipeline: {
      mutable_ephemeral_pipeline()->::google::genomics::v1alpha2::Pipeline::MergeFrom(from.ephemeral_pipeline());
      break;
    }
    case PIPELINE_NOT_SET: {
      break;
    }
  }
}

void RunPipelineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.RunPipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunPipelineRequest::CopyFrom(const RunPipelineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.RunPipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunPipelineRequest::IsInitialized() const {
  return true;
}

void RunPipelineRequest::Swap(RunPipelineRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RunPipelineRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RunPipelineRequest::UnsafeArenaSwap(RunPipelineRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RunPipelineRequest::InternalSwap(RunPipelineRequest* other) {
  using std::swap;
  swap(pipeline_args_, other->pipeline_args_);
  swap(pipeline_, other->pipeline_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunPipelineRequest::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPipelineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPipelineRequest::kPipelineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPipelineRequest::GetPipelineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsGetPipelineRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.GetPipelineRequest)
}
GetPipelineRequest::GetPipelineRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsGetPipelineRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.GetPipelineRequest)
}
GetPipelineRequest::GetPipelineRequest(const GetPipelineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pipeline_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pipeline_id().size() > 0) {
    pipeline_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pipeline_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.GetPipelineRequest)
}

void GetPipelineRequest::SharedCtor() {
  pipeline_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetPipelineRequest::~GetPipelineRequest() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.GetPipelineRequest)
  SharedDtor();
}

void GetPipelineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  pipeline_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPipelineRequest::ArenaDtor(void* object) {
  GetPipelineRequest* _this = reinterpret_cast< GetPipelineRequest* >(object);
  (void)_this;
}
void GetPipelineRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetPipelineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPipelineRequest::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPipelineRequest& GetPipelineRequest::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsGetPipelineRequest();
  return *internal_default_instance();
}

GetPipelineRequest* GetPipelineRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetPipelineRequest>(arena);
}

void GetPipelineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.GetPipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pipeline_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetPipelineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.GetPipelineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pipeline_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pipeline_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.GetPipelineRequest.pipeline_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.GetPipelineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.GetPipelineRequest)
  return false;
#undef DO_
}

void GetPipelineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.GetPipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pipeline_id = 1;
  if (this->pipeline_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.GetPipelineRequest.pipeline_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pipeline_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.GetPipelineRequest)
}

::google::protobuf::uint8* GetPipelineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.GetPipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pipeline_id = 1;
  if (this->pipeline_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.GetPipelineRequest.pipeline_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pipeline_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.GetPipelineRequest)
  return target;
}

size_t GetPipelineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.GetPipelineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pipeline_id = 1;
  if (this->pipeline_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pipeline_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPipelineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.GetPipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPipelineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPipelineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.GetPipelineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.GetPipelineRequest)
    MergeFrom(*source);
  }
}

void GetPipelineRequest::MergeFrom(const GetPipelineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.GetPipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pipeline_id().size() > 0) {
    set_pipeline_id(from.pipeline_id());
  }
}

void GetPipelineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.GetPipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPipelineRequest::CopyFrom(const GetPipelineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.GetPipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPipelineRequest::IsInitialized() const {
  return true;
}

void GetPipelineRequest::Swap(GetPipelineRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetPipelineRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetPipelineRequest::UnsafeArenaSwap(GetPipelineRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetPipelineRequest::InternalSwap(GetPipelineRequest* other) {
  using std::swap;
  pipeline_id_.Swap(&other->pipeline_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPipelineRequest::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListPipelinesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListPipelinesRequest::kProjectIdFieldNumber;
const int ListPipelinesRequest::kNamePrefixFieldNumber;
const int ListPipelinesRequest::kPageSizeFieldNumber;
const int ListPipelinesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListPipelinesRequest::ListPipelinesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsListPipelinesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.ListPipelinesRequest)
}
ListPipelinesRequest::ListPipelinesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsListPipelinesRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.ListPipelinesRequest)
}
ListPipelinesRequest::ListPipelinesRequest(const ListPipelinesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id(),
      GetArenaNoVirtual());
  }
  name_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name_prefix().size() > 0) {
    name_prefix_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_prefix(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.ListPipelinesRequest)
}

void ListPipelinesRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListPipelinesRequest::~ListPipelinesRequest() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.ListPipelinesRequest)
  SharedDtor();
}

void ListPipelinesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListPipelinesRequest::ArenaDtor(void* object) {
  ListPipelinesRequest* _this = reinterpret_cast< ListPipelinesRequest* >(object);
  (void)_this;
}
void ListPipelinesRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListPipelinesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListPipelinesRequest::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListPipelinesRequest& ListPipelinesRequest::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsListPipelinesRequest();
  return *internal_default_instance();
}

ListPipelinesRequest* ListPipelinesRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListPipelinesRequest>(arena);
}

void ListPipelinesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.ListPipelinesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_prefix_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListPipelinesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.ListPipelinesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ListPipelinesRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name_prefix().data(), static_cast<int>(this->name_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ListPipelinesRequest.name_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ListPipelinesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.ListPipelinesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.ListPipelinesRequest)
  return false;
#undef DO_
}

void ListPipelinesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.ListPipelinesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string name_prefix = 2;
  if (this->name_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name_prefix().data(), static_cast<int>(this->name_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesRequest.name_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name_prefix(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.ListPipelinesRequest)
}

::google::protobuf::uint8* ListPipelinesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.ListPipelinesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string name_prefix = 2;
  if (this->name_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name_prefix().data(), static_cast<int>(this->name_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesRequest.name_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name_prefix(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.ListPipelinesRequest)
  return target;
}

size_t ListPipelinesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.ListPipelinesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string name_prefix = 2;
  if (this->name_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name_prefix());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListPipelinesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.ListPipelinesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListPipelinesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListPipelinesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.ListPipelinesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.ListPipelinesRequest)
    MergeFrom(*source);
  }
}

void ListPipelinesRequest::MergeFrom(const ListPipelinesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.ListPipelinesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.name_prefix().size() > 0) {
    set_name_prefix(from.name_prefix());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListPipelinesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.ListPipelinesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListPipelinesRequest::CopyFrom(const ListPipelinesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.ListPipelinesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPipelinesRequest::IsInitialized() const {
  return true;
}

void ListPipelinesRequest::Swap(ListPipelinesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListPipelinesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListPipelinesRequest::UnsafeArenaSwap(ListPipelinesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListPipelinesRequest::InternalSwap(ListPipelinesRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  name_prefix_.Swap(&other->name_prefix_);
  page_token_.Swap(&other->page_token_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListPipelinesRequest::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListPipelinesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListPipelinesResponse::kPipelinesFieldNumber;
const int ListPipelinesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListPipelinesResponse::ListPipelinesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsListPipelinesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.ListPipelinesResponse)
}
ListPipelinesResponse::ListPipelinesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  pipelines_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsListPipelinesResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.ListPipelinesResponse)
}
ListPipelinesResponse::ListPipelinesResponse(const ListPipelinesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pipelines_(from.pipelines_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.ListPipelinesResponse)
}

void ListPipelinesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListPipelinesResponse::~ListPipelinesResponse() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.ListPipelinesResponse)
  SharedDtor();
}

void ListPipelinesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListPipelinesResponse::ArenaDtor(void* object) {
  ListPipelinesResponse* _this = reinterpret_cast< ListPipelinesResponse* >(object);
  (void)_this;
}
void ListPipelinesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListPipelinesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListPipelinesResponse::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListPipelinesResponse& ListPipelinesResponse::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsListPipelinesResponse();
  return *internal_default_instance();
}

ListPipelinesResponse* ListPipelinesResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListPipelinesResponse>(arena);
}

void ListPipelinesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.ListPipelinesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pipelines_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ListPipelinesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.ListPipelinesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.genomics.v1alpha2.Pipeline pipelines = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pipelines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ListPipelinesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.ListPipelinesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.ListPipelinesResponse)
  return false;
#undef DO_
}

void ListPipelinesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.ListPipelinesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.genomics.v1alpha2.Pipeline pipelines = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pipelines_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pipelines(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.ListPipelinesResponse)
}

::google::protobuf::uint8* ListPipelinesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.ListPipelinesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.genomics.v1alpha2.Pipeline pipelines = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pipelines_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pipelines(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ListPipelinesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.ListPipelinesResponse)
  return target;
}

size_t ListPipelinesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.ListPipelinesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.genomics.v1alpha2.Pipeline pipelines = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pipelines_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pipelines(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListPipelinesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.ListPipelinesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListPipelinesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListPipelinesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.ListPipelinesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.ListPipelinesResponse)
    MergeFrom(*source);
  }
}

void ListPipelinesResponse::MergeFrom(const ListPipelinesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.ListPipelinesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pipelines_.MergeFrom(from.pipelines_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListPipelinesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.ListPipelinesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListPipelinesResponse::CopyFrom(const ListPipelinesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.ListPipelinesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPipelinesResponse::IsInitialized() const {
  return true;
}

void ListPipelinesResponse::Swap(ListPipelinesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListPipelinesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListPipelinesResponse::UnsafeArenaSwap(ListPipelinesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListPipelinesResponse::InternalSwap(ListPipelinesResponse* other) {
  using std::swap;
  pipelines_.InternalSwap(&other->pipelines_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListPipelinesResponse::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeletePipelineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeletePipelineRequest::kPipelineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeletePipelineRequest::DeletePipelineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsDeletePipelineRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.DeletePipelineRequest)
}
DeletePipelineRequest::DeletePipelineRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsDeletePipelineRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.DeletePipelineRequest)
}
DeletePipelineRequest::DeletePipelineRequest(const DeletePipelineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pipeline_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pipeline_id().size() > 0) {
    pipeline_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pipeline_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.DeletePipelineRequest)
}

void DeletePipelineRequest::SharedCtor() {
  pipeline_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeletePipelineRequest::~DeletePipelineRequest() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.DeletePipelineRequest)
  SharedDtor();
}

void DeletePipelineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  pipeline_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeletePipelineRequest::ArenaDtor(void* object) {
  DeletePipelineRequest* _this = reinterpret_cast< DeletePipelineRequest* >(object);
  (void)_this;
}
void DeletePipelineRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeletePipelineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeletePipelineRequest::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeletePipelineRequest& DeletePipelineRequest::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsDeletePipelineRequest();
  return *internal_default_instance();
}

DeletePipelineRequest* DeletePipelineRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeletePipelineRequest>(arena);
}

void DeletePipelineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.DeletePipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pipeline_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DeletePipelineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.DeletePipelineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pipeline_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pipeline_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.DeletePipelineRequest.pipeline_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.DeletePipelineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.DeletePipelineRequest)
  return false;
#undef DO_
}

void DeletePipelineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.DeletePipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pipeline_id = 1;
  if (this->pipeline_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.DeletePipelineRequest.pipeline_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pipeline_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.DeletePipelineRequest)
}

::google::protobuf::uint8* DeletePipelineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.DeletePipelineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pipeline_id = 1;
  if (this->pipeline_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pipeline_id().data(), static_cast<int>(this->pipeline_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.DeletePipelineRequest.pipeline_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pipeline_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.DeletePipelineRequest)
  return target;
}

size_t DeletePipelineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.DeletePipelineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pipeline_id = 1;
  if (this->pipeline_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pipeline_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeletePipelineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.DeletePipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePipelineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeletePipelineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.DeletePipelineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.DeletePipelineRequest)
    MergeFrom(*source);
  }
}

void DeletePipelineRequest::MergeFrom(const DeletePipelineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.DeletePipelineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pipeline_id().size() > 0) {
    set_pipeline_id(from.pipeline_id());
  }
}

void DeletePipelineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.DeletePipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePipelineRequest::CopyFrom(const DeletePipelineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.DeletePipelineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePipelineRequest::IsInitialized() const {
  return true;
}

void DeletePipelineRequest::Swap(DeletePipelineRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeletePipelineRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeletePipelineRequest::UnsafeArenaSwap(DeletePipelineRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeletePipelineRequest::InternalSwap(DeletePipelineRequest* other) {
  using std::swap;
  pipeline_id_.Swap(&other->pipeline_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeletePipelineRequest::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetControllerConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetControllerConfigRequest::kOperationIdFieldNumber;
const int GetControllerConfigRequest::kValidationTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetControllerConfigRequest::GetControllerConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsGetControllerConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.GetControllerConfigRequest)
}
GetControllerConfigRequest::GetControllerConfigRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsGetControllerConfigRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.GetControllerConfigRequest)
}
GetControllerConfigRequest::GetControllerConfigRequest(const GetControllerConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id(),
      GetArenaNoVirtual());
  }
  validation_token_ = from.validation_token_;
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.GetControllerConfigRequest)
}

void GetControllerConfigRequest::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_token_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GetControllerConfigRequest::~GetControllerConfigRequest() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.GetControllerConfigRequest)
  SharedDtor();
}

void GetControllerConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetControllerConfigRequest::ArenaDtor(void* object) {
  GetControllerConfigRequest* _this = reinterpret_cast< GetControllerConfigRequest* >(object);
  (void)_this;
}
void GetControllerConfigRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetControllerConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetControllerConfigRequest::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetControllerConfigRequest& GetControllerConfigRequest::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsGetControllerConfigRequest();
  return *internal_default_instance();
}

GetControllerConfigRequest* GetControllerConfigRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetControllerConfigRequest>(arena);
}

void GetControllerConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  validation_token_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetControllerConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.GetControllerConfigRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 validation_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &validation_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.GetControllerConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.GetControllerConfigRequest)
  return false;
#undef DO_
}

void GetControllerConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.GetControllerConfigRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // uint64 validation_token = 2;
  if (this->validation_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->validation_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.GetControllerConfigRequest)
}

::google::protobuf::uint8* GetControllerConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.GetControllerConfigRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // uint64 validation_token = 2;
  if (this->validation_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->validation_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.GetControllerConfigRequest)
  return target;
}

size_t GetControllerConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // uint64 validation_token = 2;
  if (this->validation_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->validation_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetControllerConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetControllerConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetControllerConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.GetControllerConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.GetControllerConfigRequest)
    MergeFrom(*source);
  }
}

void GetControllerConfigRequest::MergeFrom(const GetControllerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.validation_token() != 0) {
    set_validation_token(from.validation_token());
  }
}

void GetControllerConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetControllerConfigRequest::CopyFrom(const GetControllerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.GetControllerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetControllerConfigRequest::IsInitialized() const {
  return true;
}

void GetControllerConfigRequest::Swap(GetControllerConfigRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetControllerConfigRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetControllerConfigRequest::UnsafeArenaSwap(GetControllerConfigRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetControllerConfigRequest::InternalSwap(GetControllerConfigRequest* other) {
  using std::swap;
  operation_id_.Swap(&other->operation_id_);
  swap(validation_token_, other->validation_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetControllerConfigRequest::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerConfig_RepeatedString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerConfig_RepeatedString::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerConfig_RepeatedString::ControllerConfig_RepeatedString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_RepeatedString();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
}
ControllerConfig_RepeatedString::ControllerConfig_RepeatedString(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  values_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_RepeatedString();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
}
ControllerConfig_RepeatedString::ControllerConfig_RepeatedString(const ControllerConfig_RepeatedString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
}

void ControllerConfig_RepeatedString::SharedCtor() {
  _cached_size_ = 0;
}

ControllerConfig_RepeatedString::~ControllerConfig_RepeatedString() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  SharedDtor();
}

void ControllerConfig_RepeatedString::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ControllerConfig_RepeatedString::ArenaDtor(void* object) {
  ControllerConfig_RepeatedString* _this = reinterpret_cast< ControllerConfig_RepeatedString* >(object);
  (void)_this;
}
void ControllerConfig_RepeatedString::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ControllerConfig_RepeatedString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControllerConfig_RepeatedString::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerConfig_RepeatedString& ControllerConfig_RepeatedString::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig_RepeatedString();
  return *internal_default_instance();
}

ControllerConfig_RepeatedString* ControllerConfig_RepeatedString::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ControllerConfig_RepeatedString>(arena);
}

void ControllerConfig_RepeatedString::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool ControllerConfig_RepeatedString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.RepeatedString.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  return false;
#undef DO_
}

void ControllerConfig_RepeatedString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.RepeatedString.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
}

::google::protobuf::uint8* ControllerConfig_RepeatedString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.RepeatedString.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  return target;
}

size_t ControllerConfig_RepeatedString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControllerConfig_RepeatedString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerConfig_RepeatedString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerConfig_RepeatedString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
    MergeFrom(*source);
  }
}

void ControllerConfig_RepeatedString::MergeFrom(const ControllerConfig_RepeatedString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void ControllerConfig_RepeatedString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerConfig_RepeatedString::CopyFrom(const ControllerConfig_RepeatedString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.ControllerConfig.RepeatedString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerConfig_RepeatedString::IsInitialized() const {
  return true;
}

void ControllerConfig_RepeatedString::Swap(ControllerConfig_RepeatedString* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ControllerConfig_RepeatedString* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ControllerConfig_RepeatedString::UnsafeArenaSwap(ControllerConfig_RepeatedString* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ControllerConfig_RepeatedString::InternalSwap(ControllerConfig_RepeatedString* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControllerConfig_RepeatedString::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ControllerConfig_VarsEntry_DoNotUse::ControllerConfig_VarsEntry_DoNotUse() {}
ControllerConfig_VarsEntry_DoNotUse::ControllerConfig_VarsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ControllerConfig_VarsEntry_DoNotUse::MergeFrom(const ControllerConfig_VarsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ControllerConfig_VarsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[15];
}
void ControllerConfig_VarsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ControllerConfig_DisksEntry_DoNotUse::ControllerConfig_DisksEntry_DoNotUse() {}
ControllerConfig_DisksEntry_DoNotUse::ControllerConfig_DisksEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ControllerConfig_DisksEntry_DoNotUse::MergeFrom(const ControllerConfig_DisksEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ControllerConfig_DisksEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[16];
}
void ControllerConfig_DisksEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ControllerConfig_GcsSourcesEntry_DoNotUse::ControllerConfig_GcsSourcesEntry_DoNotUse() {}
ControllerConfig_GcsSourcesEntry_DoNotUse::ControllerConfig_GcsSourcesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ControllerConfig_GcsSourcesEntry_DoNotUse::MergeFrom(const ControllerConfig_GcsSourcesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ControllerConfig_GcsSourcesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[17];
}
void ControllerConfig_GcsSourcesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ControllerConfig_GcsSinksEntry_DoNotUse::ControllerConfig_GcsSinksEntry_DoNotUse() {}
ControllerConfig_GcsSinksEntry_DoNotUse::ControllerConfig_GcsSinksEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ControllerConfig_GcsSinksEntry_DoNotUse::MergeFrom(const ControllerConfig_GcsSinksEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ControllerConfig_GcsSinksEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[18];
}
void ControllerConfig_GcsSinksEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ControllerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerConfig::kImageFieldNumber;
const int ControllerConfig::kCmdFieldNumber;
const int ControllerConfig::kGcsLogPathFieldNumber;
const int ControllerConfig::kMachineTypeFieldNumber;
const int ControllerConfig::kVarsFieldNumber;
const int ControllerConfig::kDisksFieldNumber;
const int ControllerConfig::kGcsSourcesFieldNumber;
const int ControllerConfig::kGcsSinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerConfig::ControllerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.ControllerConfig)
}
ControllerConfig::ControllerConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  vars_(arena),
  disks_(arena),
  gcs_sources_(arena),
  gcs_sinks_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.ControllerConfig)
}
ControllerConfig::ControllerConfig(const ControllerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vars_.MergeFrom(from.vars_);
  disks_.MergeFrom(from.disks_);
  gcs_sources_.MergeFrom(from.gcs_sources_);
  gcs_sinks_.MergeFrom(from.gcs_sinks_);
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image(),
      GetArenaNoVirtual());
  }
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd(),
      GetArenaNoVirtual());
  }
  gcs_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcs_log_path().size() > 0) {
    gcs_log_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcs_log_path(),
      GetArenaNoVirtual());
  }
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_type().size() > 0) {
    machine_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.ControllerConfig)
}

void ControllerConfig::SharedCtor() {
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcs_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ControllerConfig::~ControllerConfig() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.ControllerConfig)
  SharedDtor();
}

void ControllerConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcs_log_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ControllerConfig::ArenaDtor(void* object) {
  ControllerConfig* _this = reinterpret_cast< ControllerConfig* >(object);
  (void)_this;
}
void ControllerConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ControllerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControllerConfig::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerConfig& ControllerConfig::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsControllerConfig();
  return *internal_default_instance();
}

ControllerConfig* ControllerConfig::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ControllerConfig>(arena);
}

void ControllerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.ControllerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vars_.Clear();
  disks_.Clear();
  gcs_sources_.Clear();
  gcs_sinks_.Clear();
  image_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  cmd_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  gcs_log_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  machine_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ControllerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.ControllerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image().data(), static_cast<int>(this->image().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.image"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gcs_log_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcs_log_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcs_log_path().data(), static_cast<int>(this->gcs_log_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.gcs_log_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string machine_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_type().data(), static_cast<int>(this->machine_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.machine_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> vars = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ControllerConfig_VarsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ControllerConfig_VarsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&vars_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.VarsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.VarsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> disks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          ControllerConfig_DisksEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ControllerConfig_DisksEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&disks_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.DisksEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.DisksEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sources = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          ControllerConfig_GcsSourcesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ControllerConfig_GcsSourcesEntry_DoNotUse,
              ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString > > parser(&gcs_sources_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.GcsSourcesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sinks = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          ControllerConfig_GcsSinksEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ControllerConfig_GcsSinksEntry_DoNotUse,
              ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString > > parser(&gcs_sinks_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ControllerConfig.GcsSinksEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.ControllerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.ControllerConfig)
  return false;
#undef DO_
}

void ControllerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.ControllerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), static_cast<int>(this->image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image(), output);
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmd(), output);
  }

  // string gcs_log_path = 3;
  if (this->gcs_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_log_path().data(), static_cast<int>(this->gcs_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.gcs_log_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gcs_log_path(), output);
  }

  // string machine_type = 4;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.machine_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->machine_type(), output);
  }

  // map<string, string> vars = 5;
  if (!this->vars().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.VarsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.VarsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->vars().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->vars().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->vars().begin();
          it != this->vars().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_VarsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vars_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_VarsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->vars().begin();
          it != this->vars().end(); ++it) {
        entry.reset(vars_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> disks = 6;
  if (!this->disks().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.DisksEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.DisksEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->disks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->disks().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->disks().begin();
          it != this->disks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_DisksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(disks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_DisksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->disks().begin();
          it != this->disks().end(); ++it) {
        entry.reset(disks_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sources = 7;
  if (!this->gcs_sources().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.GcsSourcesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->gcs_sources().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gcs_sources().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sources().begin();
          it != this->gcs_sources().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSourcesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gcs_sources_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSourcesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sources().begin();
          it != this->gcs_sources().end(); ++it) {
        entry.reset(gcs_sources_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sinks = 8;
  if (!this->gcs_sinks().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.GcsSinksEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->gcs_sinks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gcs_sinks().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sinks().begin();
          it != this->gcs_sinks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSinksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gcs_sinks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSinksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sinks().begin();
          it != this->gcs_sinks().end(); ++it) {
        entry.reset(gcs_sinks_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.ControllerConfig)
}

::google::protobuf::uint8* ControllerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.ControllerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), static_cast<int>(this->image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image(), target);
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cmd(), target);
  }

  // string gcs_log_path = 3;
  if (this->gcs_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_log_path().data(), static_cast<int>(this->gcs_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.gcs_log_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gcs_log_path(), target);
  }

  // string machine_type = 4;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ControllerConfig.machine_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->machine_type(), target);
  }

  // map<string, string> vars = 5;
  if (!this->vars().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.VarsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.VarsEntry.value");
      }
    };

    if (deterministic &&
        this->vars().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->vars().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->vars().begin();
          it != this->vars().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_VarsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vars_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_VarsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->vars().begin();
          it != this->vars().end(); ++it) {
        entry.reset(vars_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> disks = 6;
  if (!this->disks().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.DisksEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.DisksEntry.value");
      }
    };

    if (deterministic &&
        this->disks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->disks().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->disks().begin();
          it != this->disks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_DisksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(disks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_DisksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->disks().begin();
          it != this->disks().end(); ++it) {
        entry.reset(disks_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sources = 7;
  if (!this->gcs_sources().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.GcsSourcesEntry.key");
      }
    };

    if (deterministic &&
        this->gcs_sources().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gcs_sources().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sources().begin();
          it != this->gcs_sources().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSourcesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gcs_sources_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSourcesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sources().begin();
          it != this->gcs_sources().end(); ++it) {
        entry.reset(gcs_sources_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sinks = 8;
  if (!this->gcs_sinks().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1alpha2.ControllerConfig.GcsSinksEntry.key");
      }
    };

    if (deterministic &&
        this->gcs_sinks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gcs_sinks().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sinks().begin();
          it != this->gcs_sinks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSinksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gcs_sinks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ControllerConfig_GcsSinksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
          it = this->gcs_sinks().begin();
          it != this->gcs_sinks().end(); ++it) {
        entry.reset(gcs_sinks_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.ControllerConfig)
  return target;
}

size_t ControllerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.ControllerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> vars = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vars_size());
  {
    ::google::protobuf::scoped_ptr<ControllerConfig_VarsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->vars().begin();
        it != this->vars().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(vars_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, string> disks = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->disks_size());
  {
    ::google::protobuf::scoped_ptr<ControllerConfig_DisksEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->disks().begin();
        it != this->disks().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(disks_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sources = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gcs_sources_size());
  {
    ::google::protobuf::scoped_ptr<ControllerConfig_GcsSourcesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
        it = this->gcs_sources().begin();
        it != this->gcs_sources().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(gcs_sources_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .google.genomics.v1alpha2.ControllerConfig.RepeatedString> gcs_sinks = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gcs_sinks_size());
  {
    ::google::protobuf::scoped_ptr<ControllerConfig_GcsSinksEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::genomics::v1alpha2::ControllerConfig_RepeatedString >::const_iterator
        it = this->gcs_sinks().begin();
        it != this->gcs_sinks().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(gcs_sinks_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string image = 1;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image());
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  // string gcs_log_path = 3;
  if (this->gcs_log_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcs_log_path());
  }

  // string machine_type = 4;
  if (this->machine_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControllerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.ControllerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.ControllerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.ControllerConfig)
    MergeFrom(*source);
  }
}

void ControllerConfig::MergeFrom(const ControllerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.ControllerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vars_.MergeFrom(from.vars_);
  disks_.MergeFrom(from.disks_);
  gcs_sources_.MergeFrom(from.gcs_sources_);
  gcs_sinks_.MergeFrom(from.gcs_sinks_);
  if (from.image().size() > 0) {
    set_image(from.image());
  }
  if (from.cmd().size() > 0) {
    set_cmd(from.cmd());
  }
  if (from.gcs_log_path().size() > 0) {
    set_gcs_log_path(from.gcs_log_path());
  }
  if (from.machine_type().size() > 0) {
    set_machine_type(from.machine_type());
  }
}

void ControllerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.ControllerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerConfig::CopyFrom(const ControllerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.ControllerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerConfig::IsInitialized() const {
  return true;
}

void ControllerConfig::Swap(ControllerConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ControllerConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ControllerConfig::UnsafeArenaSwap(ControllerConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ControllerConfig::InternalSwap(ControllerConfig* other) {
  using std::swap;
  vars_.Swap(&other->vars_);
  disks_.Swap(&other->disks_);
  gcs_sources_.Swap(&other->gcs_sources_);
  gcs_sinks_.Swap(&other->gcs_sinks_);
  image_.Swap(&other->image_);
  cmd_.Swap(&other->cmd_);
  gcs_log_path_.Swap(&other->gcs_log_path_);
  machine_type_.Swap(&other->machine_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControllerConfig::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimestampEvent::InitAsDefaultInstance() {
  ::google::genomics::v1alpha2::_TimestampEvent_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void TimestampEvent::_slow_mutable_timestamp() {
  timestamp_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void TimestampEvent::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* timestamp) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.TimestampEvent.timestamp)
}
void TimestampEvent::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimestampEvent::kDescriptionFieldNumber;
const int TimestampEvent::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimestampEvent::TimestampEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsTimestampEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.TimestampEvent)
}
TimestampEvent::TimestampEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsTimestampEvent();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.TimestampEvent)
}
TimestampEvent::TimestampEvent(const TimestampEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.TimestampEvent)
}

void TimestampEvent::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = NULL;
  _cached_size_ = 0;
}

TimestampEvent::~TimestampEvent() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.TimestampEvent)
  SharedDtor();
}

void TimestampEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timestamp_;
}

void TimestampEvent::ArenaDtor(void* object) {
  TimestampEvent* _this = reinterpret_cast< TimestampEvent* >(object);
  (void)_this;
}
void TimestampEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TimestampEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimestampEvent::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimestampEvent& TimestampEvent::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsTimestampEvent();
  return *internal_default_instance();
}

TimestampEvent* TimestampEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TimestampEvent>(arena);
}

void TimestampEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.TimestampEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool TimestampEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.TimestampEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.TimestampEvent.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.TimestampEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.TimestampEvent)
  return false;
#undef DO_
}

void TimestampEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.TimestampEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.TimestampEvent.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->timestamp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.TimestampEvent)
}

::google::protobuf::uint8* TimestampEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.TimestampEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.TimestampEvent.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->timestamp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.TimestampEvent)
  return target;
}

size_t TimestampEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.TimestampEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimestampEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.TimestampEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const TimestampEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimestampEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.TimestampEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.TimestampEvent)
    MergeFrom(*source);
  }
}

void TimestampEvent::MergeFrom(const TimestampEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.TimestampEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
}

void TimestampEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.TimestampEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimestampEvent::CopyFrom(const TimestampEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.TimestampEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimestampEvent::IsInitialized() const {
  return true;
}

void TimestampEvent::Swap(TimestampEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TimestampEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TimestampEvent::UnsafeArenaSwap(TimestampEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TimestampEvent::InternalSwap(TimestampEvent* other) {
  using std::swap;
  description_.Swap(&other->description_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimestampEvent::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetOperationStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOperationStatusRequest::kOperationIdFieldNumber;
const int SetOperationStatusRequest::kTimestampEventsFieldNumber;
const int SetOperationStatusRequest::kErrorCodeFieldNumber;
const int SetOperationStatusRequest::kErrorMessageFieldNumber;
const int SetOperationStatusRequest::kValidationTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOperationStatusRequest::SetOperationStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsSetOperationStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.SetOperationStatusRequest)
}
SetOperationStatusRequest::SetOperationStatusRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  timestamp_events_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsSetOperationStatusRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.SetOperationStatusRequest)
}
SetOperationStatusRequest::SetOperationStatusRequest(const SetOperationStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      timestamp_events_(from.timestamp_events_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id(),
      GetArenaNoVirtual());
  }
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message(),
      GetArenaNoVirtual());
  }
  ::memcpy(&validation_token_, &from.validation_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&validation_token_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.SetOperationStatusRequest)
}

void SetOperationStatusRequest::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&validation_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&validation_token_)) + sizeof(error_code_));
  _cached_size_ = 0;
}

SetOperationStatusRequest::~SetOperationStatusRequest() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.SetOperationStatusRequest)
  SharedDtor();
}

void SetOperationStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetOperationStatusRequest::ArenaDtor(void* object) {
  SetOperationStatusRequest* _this = reinterpret_cast< SetOperationStatusRequest* >(object);
  (void)_this;
}
void SetOperationStatusRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SetOperationStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOperationStatusRequest::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOperationStatusRequest& SetOperationStatusRequest::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsSetOperationStatusRequest();
  return *internal_default_instance();
}

SetOperationStatusRequest* SetOperationStatusRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SetOperationStatusRequest>(arena);
}

void SetOperationStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_events_.Clear();
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  error_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&validation_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&validation_token_)) + sizeof(error_code_));
  _internal_metadata_.Clear();
}

bool SetOperationStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.SetOperationStatusRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.genomics.v1alpha2.TimestampEvent timestamp_events = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_timestamp_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Code error_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::google::rpc::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.SetOperationStatusRequest.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 validation_token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &validation_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.SetOperationStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.SetOperationStatusRequest)
  return false;
#undef DO_
}

void SetOperationStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.SetOperationStatusRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // repeated .google.genomics.v1alpha2.TimestampEvent timestamp_events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->timestamp_events(static_cast<int>(i)), output);
  }

  // .google.rpc.Code error_code = 3;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error_code(), output);
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.SetOperationStatusRequest.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error_message(), output);
  }

  // uint64 validation_token = 5;
  if (this->validation_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->validation_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.SetOperationStatusRequest)
}

::google::protobuf::uint8* SetOperationStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.SetOperationStatusRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // repeated .google.genomics.v1alpha2.TimestampEvent timestamp_events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->timestamp_events(static_cast<int>(i)), deterministic, target);
  }

  // .google.rpc.Code error_code = 3;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->error_code(), target);
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.SetOperationStatusRequest.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error_message(), target);
  }

  // uint64 validation_token = 5;
  if (this->validation_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->validation_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.SetOperationStatusRequest)
  return target;
}

size_t SetOperationStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.genomics.v1alpha2.TimestampEvent timestamp_events = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->timestamp_events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timestamp_events(static_cast<int>(i)));
    }
  }

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // uint64 validation_token = 5;
  if (this->validation_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->validation_token());
  }

  // .google.rpc.Code error_code = 3;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOperationStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOperationStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOperationStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.SetOperationStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.SetOperationStatusRequest)
    MergeFrom(*source);
  }
}

void SetOperationStatusRequest::MergeFrom(const SetOperationStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timestamp_events_.MergeFrom(from.timestamp_events_);
  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.error_message().size() > 0) {
    set_error_message(from.error_message());
  }
  if (from.validation_token() != 0) {
    set_validation_token(from.validation_token());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void SetOperationStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOperationStatusRequest::CopyFrom(const SetOperationStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.SetOperationStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOperationStatusRequest::IsInitialized() const {
  return true;
}

void SetOperationStatusRequest::Swap(SetOperationStatusRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SetOperationStatusRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SetOperationStatusRequest::UnsafeArenaSwap(SetOperationStatusRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SetOperationStatusRequest::InternalSwap(SetOperationStatusRequest* other) {
  using std::swap;
  timestamp_events_.InternalSwap(&other->timestamp_events_);
  operation_id_.Swap(&other->operation_id_);
  error_message_.Swap(&other->error_message_);
  swap(validation_token_, other->validation_token_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOperationStatusRequest::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceAccount::kEmailFieldNumber;
const int ServiceAccount::kScopesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceAccount::ServiceAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsServiceAccount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.ServiceAccount)
}
ServiceAccount::ServiceAccount(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  scopes_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsServiceAccount();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.ServiceAccount)
}
ServiceAccount::ServiceAccount(const ServiceAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scopes_(from.scopes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.ServiceAccount)
}

void ServiceAccount::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ServiceAccount::~ServiceAccount() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.ServiceAccount)
  SharedDtor();
}

void ServiceAccount::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceAccount::ArenaDtor(void* object) {
  ServiceAccount* _this = reinterpret_cast< ServiceAccount* >(object);
  (void)_this;
}
void ServiceAccount::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ServiceAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceAccount::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceAccount& ServiceAccount::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsServiceAccount();
  return *internal_default_instance();
}

ServiceAccount* ServiceAccount::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ServiceAccount>(arena);
}

void ServiceAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.ServiceAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scopes_.Clear();
  email_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ServiceAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.ServiceAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ServiceAccount.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string scopes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_scopes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scopes(this->scopes_size() - 1).data(),
            static_cast<int>(this->scopes(this->scopes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.ServiceAccount.scopes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.ServiceAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.ServiceAccount)
  return false;
#undef DO_
}

void ServiceAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.ServiceAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ServiceAccount.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // repeated string scopes = 2;
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scopes(i).data(), static_cast<int>(this->scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ServiceAccount.scopes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->scopes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.ServiceAccount)
}

::google::protobuf::uint8* ServiceAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.ServiceAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ServiceAccount.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // repeated string scopes = 2;
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scopes(i).data(), static_cast<int>(this->scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.ServiceAccount.scopes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->scopes(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.ServiceAccount)
  return target;
}

size_t ServiceAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.ServiceAccount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string scopes = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->scopes_size());
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->scopes(i));
  }

  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.ServiceAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.ServiceAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.ServiceAccount)
    MergeFrom(*source);
  }
}

void ServiceAccount::MergeFrom(const ServiceAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.ServiceAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopes_.MergeFrom(from.scopes_);
  if (from.email().size() > 0) {
    set_email(from.email());
  }
}

void ServiceAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.ServiceAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceAccount::CopyFrom(const ServiceAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.ServiceAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceAccount::IsInitialized() const {
  return true;
}

void ServiceAccount::Swap(ServiceAccount* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ServiceAccount* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ServiceAccount::UnsafeArenaSwap(ServiceAccount* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ServiceAccount::InternalSwap(ServiceAccount* other) {
  using std::swap;
  scopes_.InternalSwap(&other->scopes_);
  email_.Swap(&other->email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceAccount::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoggingOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoggingOptions::kGcsPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoggingOptions::LoggingOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsLoggingOptions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.LoggingOptions)
}
LoggingOptions::LoggingOptions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsLoggingOptions();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.LoggingOptions)
}
LoggingOptions::LoggingOptions(const LoggingOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gcs_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcs_path().size() > 0) {
    gcs_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcs_path(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.LoggingOptions)
}

void LoggingOptions::SharedCtor() {
  gcs_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoggingOptions::~LoggingOptions() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.LoggingOptions)
  SharedDtor();
}

void LoggingOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  gcs_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoggingOptions::ArenaDtor(void* object) {
  LoggingOptions* _this = reinterpret_cast< LoggingOptions* >(object);
  (void)_this;
}
void LoggingOptions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LoggingOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoggingOptions::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoggingOptions& LoggingOptions::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsLoggingOptions();
  return *internal_default_instance();
}

LoggingOptions* LoggingOptions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<LoggingOptions>(arena);
}

void LoggingOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.LoggingOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gcs_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool LoggingOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.LoggingOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gcs_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcs_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcs_path().data(), static_cast<int>(this->gcs_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.LoggingOptions.gcs_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.LoggingOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.LoggingOptions)
  return false;
#undef DO_
}

void LoggingOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.LoggingOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gcs_path = 1;
  if (this->gcs_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_path().data(), static_cast<int>(this->gcs_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.LoggingOptions.gcs_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gcs_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.LoggingOptions)
}

::google::protobuf::uint8* LoggingOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.LoggingOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gcs_path = 1;
  if (this->gcs_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_path().data(), static_cast<int>(this->gcs_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.LoggingOptions.gcs_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gcs_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.LoggingOptions)
  return target;
}

size_t LoggingOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.LoggingOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gcs_path = 1;
  if (this->gcs_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcs_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoggingOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.LoggingOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggingOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoggingOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.LoggingOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.LoggingOptions)
    MergeFrom(*source);
  }
}

void LoggingOptions::MergeFrom(const LoggingOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.LoggingOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gcs_path().size() > 0) {
    set_gcs_path(from.gcs_path());
  }
}

void LoggingOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.LoggingOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggingOptions::CopyFrom(const LoggingOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.LoggingOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggingOptions::IsInitialized() const {
  return true;
}

void LoggingOptions::Swap(LoggingOptions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LoggingOptions* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LoggingOptions::UnsafeArenaSwap(LoggingOptions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LoggingOptions::InternalSwap(LoggingOptions* other) {
  using std::swap;
  gcs_path_.Swap(&other->gcs_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoggingOptions::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PipelineResources_Disk::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PipelineResources_Disk::kNameFieldNumber;
const int PipelineResources_Disk::kTypeFieldNumber;
const int PipelineResources_Disk::kSizeGbFieldNumber;
const int PipelineResources_Disk::kSourceFieldNumber;
const int PipelineResources_Disk::kAutoDeleteFieldNumber;
const int PipelineResources_Disk::kMountPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PipelineResources_Disk::PipelineResources_Disk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources_Disk();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.PipelineResources.Disk)
}
PipelineResources_Disk::PipelineResources_Disk(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources_Disk();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.PipelineResources.Disk)
}
PipelineResources_Disk::PipelineResources_Disk(const PipelineResources_Disk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source(),
      GetArenaNoVirtual());
  }
  mount_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mount_point().size() > 0) {
    mount_point_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mount_point(),
      GetArenaNoVirtual());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_delete_) -
    reinterpret_cast<char*>(&type_)) + sizeof(auto_delete_));
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.PipelineResources.Disk)
}

void PipelineResources_Disk::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mount_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_delete_) -
      reinterpret_cast<char*>(&type_)) + sizeof(auto_delete_));
  _cached_size_ = 0;
}

PipelineResources_Disk::~PipelineResources_Disk() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.PipelineResources.Disk)
  SharedDtor();
}

void PipelineResources_Disk::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mount_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PipelineResources_Disk::ArenaDtor(void* object) {
  PipelineResources_Disk* _this = reinterpret_cast< PipelineResources_Disk* >(object);
  (void)_this;
}
void PipelineResources_Disk::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PipelineResources_Disk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PipelineResources_Disk::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PipelineResources_Disk& PipelineResources_Disk::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources_Disk();
  return *internal_default_instance();
}

PipelineResources_Disk* PipelineResources_Disk::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<PipelineResources_Disk>(arena);
}

void PipelineResources_Disk::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.PipelineResources.Disk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  mount_point_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_delete_) -
      reinterpret_cast<char*>(&type_)) + sizeof(auto_delete_));
  _internal_metadata_.Clear();
}

bool PipelineResources_Disk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.PipelineResources.Disk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineResources.Disk.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::genomics::v1alpha2::PipelineResources_Disk_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size_gb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineResources.Disk.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool auto_delete = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_delete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mount_point = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mount_point()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mount_point().data(), static_cast<int>(this->mount_point().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineResources.Disk.mount_point"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.PipelineResources.Disk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.PipelineResources.Disk)
  return false;
#undef DO_
}

void PipelineResources_Disk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.PipelineResources.Disk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.Disk.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // int32 size_gb = 3;
  if (this->size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->size_gb(), output);
  }

  // string source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.Disk.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source(), output);
  }

  // bool auto_delete = 6;
  if (this->auto_delete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->auto_delete(), output);
  }

  // string mount_point = 8;
  if (this->mount_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mount_point().data(), static_cast<int>(this->mount_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.Disk.mount_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mount_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.PipelineResources.Disk)
}

::google::protobuf::uint8* PipelineResources_Disk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.PipelineResources.Disk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.Disk.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // int32 size_gb = 3;
  if (this->size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->size_gb(), target);
  }

  // string source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.Disk.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source(), target);
  }

  // bool auto_delete = 6;
  if (this->auto_delete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->auto_delete(), target);
  }

  // string mount_point = 8;
  if (this->mount_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mount_point().data(), static_cast<int>(this->mount_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.Disk.mount_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mount_point(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.PipelineResources.Disk)
  return target;
}

size_t PipelineResources_Disk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.PipelineResources.Disk)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string source = 4;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // string mount_point = 8;
  if (this->mount_point().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mount_point());
  }

  // .google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 size_gb = 3;
  if (this->size_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size_gb());
  }

  // bool auto_delete = 6;
  if (this->auto_delete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PipelineResources_Disk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.PipelineResources.Disk)
  GOOGLE_DCHECK_NE(&from, this);
  const PipelineResources_Disk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PipelineResources_Disk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.PipelineResources.Disk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.PipelineResources.Disk)
    MergeFrom(*source);
  }
}

void PipelineResources_Disk::MergeFrom(const PipelineResources_Disk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.PipelineResources.Disk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.source().size() > 0) {
    set_source(from.source());
  }
  if (from.mount_point().size() > 0) {
    set_mount_point(from.mount_point());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.size_gb() != 0) {
    set_size_gb(from.size_gb());
  }
  if (from.auto_delete() != 0) {
    set_auto_delete(from.auto_delete());
  }
}

void PipelineResources_Disk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.PipelineResources.Disk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PipelineResources_Disk::CopyFrom(const PipelineResources_Disk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.PipelineResources.Disk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PipelineResources_Disk::IsInitialized() const {
  return true;
}

void PipelineResources_Disk::Swap(PipelineResources_Disk* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PipelineResources_Disk* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PipelineResources_Disk::UnsafeArenaSwap(PipelineResources_Disk* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PipelineResources_Disk::InternalSwap(PipelineResources_Disk* other) {
  using std::swap;
  name_.Swap(&other->name_);
  source_.Swap(&other->source_);
  mount_point_.Swap(&other->mount_point_);
  swap(type_, other->type_);
  swap(size_gb_, other->size_gb_);
  swap(auto_delete_, other->auto_delete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PipelineResources_Disk::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PipelineResources::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PipelineResources::kMinimumCpuCoresFieldNumber;
const int PipelineResources::kPreemptibleFieldNumber;
const int PipelineResources::kMinimumRamGbFieldNumber;
const int PipelineResources::kDisksFieldNumber;
const int PipelineResources::kZonesFieldNumber;
const int PipelineResources::kBootDiskSizeGbFieldNumber;
const int PipelineResources::kNoAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PipelineResources::PipelineResources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.PipelineResources)
}
PipelineResources::PipelineResources(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  disks_(arena),
  zones_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.PipelineResources)
}
PipelineResources::PipelineResources(const PipelineResources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      disks_(from.disks_),
      zones_(from.zones_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&minimum_ram_gb_, &from.minimum_ram_gb_,
    static_cast<size_t>(reinterpret_cast<char*>(&boot_disk_size_gb_) -
    reinterpret_cast<char*>(&minimum_ram_gb_)) + sizeof(boot_disk_size_gb_));
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.PipelineResources)
}

void PipelineResources::SharedCtor() {
  ::memset(&minimum_ram_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&boot_disk_size_gb_) -
      reinterpret_cast<char*>(&minimum_ram_gb_)) + sizeof(boot_disk_size_gb_));
  _cached_size_ = 0;
}

PipelineResources::~PipelineResources() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.PipelineResources)
  SharedDtor();
}

void PipelineResources::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PipelineResources::ArenaDtor(void* object) {
  PipelineResources* _this = reinterpret_cast< PipelineResources* >(object);
  (void)_this;
}
void PipelineResources::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PipelineResources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PipelineResources::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PipelineResources& PipelineResources::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineResources();
  return *internal_default_instance();
}

PipelineResources* PipelineResources::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<PipelineResources>(arena);
}

void PipelineResources::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.PipelineResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disks_.Clear();
  zones_.Clear();
  ::memset(&minimum_ram_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&boot_disk_size_gb_) -
      reinterpret_cast<char*>(&minimum_ram_gb_)) + sizeof(boot_disk_size_gb_));
  _internal_metadata_.Clear();
}

bool PipelineResources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.PipelineResources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 minimum_cpu_cores = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minimum_cpu_cores_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool preemptible = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preemptible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double minimum_ram_gb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minimum_ram_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_disks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string zones = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_zones()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zones(this->zones_size() - 1).data(),
            static_cast<int>(this->zones(this->zones_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineResources.zones"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 boot_disk_size_gb = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boot_disk_size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool no_address = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.PipelineResources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.PipelineResources)
  return false;
#undef DO_
}

void PipelineResources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.PipelineResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 minimum_cpu_cores = 1;
  if (this->minimum_cpu_cores() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->minimum_cpu_cores(), output);
  }

  // bool preemptible = 2;
  if (this->preemptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->preemptible(), output);
  }

  // double minimum_ram_gb = 3;
  if (this->minimum_ram_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->minimum_ram_gb(), output);
  }

  // repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->disks(static_cast<int>(i)), output);
  }

  // repeated string zones = 5;
  for (int i = 0, n = this->zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zones(i).data(), static_cast<int>(this->zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.zones");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->zones(i), output);
  }

  // int32 boot_disk_size_gb = 6;
  if (this->boot_disk_size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->boot_disk_size_gb(), output);
  }

  // bool no_address = 7;
  if (this->no_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->no_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.PipelineResources)
}

::google::protobuf::uint8* PipelineResources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.PipelineResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 minimum_cpu_cores = 1;
  if (this->minimum_cpu_cores() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->minimum_cpu_cores(), target);
  }

  // bool preemptible = 2;
  if (this->preemptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->preemptible(), target);
  }

  // double minimum_ram_gb = 3;
  if (this->minimum_ram_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->minimum_ram_gb(), target);
  }

  // repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->disks(static_cast<int>(i)), deterministic, target);
  }

  // repeated string zones = 5;
  for (int i = 0, n = this->zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zones(i).data(), static_cast<int>(this->zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineResources.zones");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->zones(i), target);
  }

  // int32 boot_disk_size_gb = 6;
  if (this->boot_disk_size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->boot_disk_size_gb(), target);
  }

  // bool no_address = 7;
  if (this->no_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->no_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.PipelineResources)
  return target;
}

size_t PipelineResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.PipelineResources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->disks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->disks(static_cast<int>(i)));
    }
  }

  // repeated string zones = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->zones_size());
  for (int i = 0, n = this->zones_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->zones(i));
  }

  // double minimum_ram_gb = 3;
  if (this->minimum_ram_gb() != 0) {
    total_size += 1 + 8;
  }

  // int32 minimum_cpu_cores = 1;
  if (this->minimum_cpu_cores() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minimum_cpu_cores());
  }

  // bool preemptible = 2;
  if (this->preemptible() != 0) {
    total_size += 1 + 1;
  }

  // bool no_address = 7;
  if (this->no_address() != 0) {
    total_size += 1 + 1;
  }

  // int32 boot_disk_size_gb = 6;
  if (this->boot_disk_size_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->boot_disk_size_gb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PipelineResources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.PipelineResources)
  GOOGLE_DCHECK_NE(&from, this);
  const PipelineResources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PipelineResources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.PipelineResources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.PipelineResources)
    MergeFrom(*source);
  }
}

void PipelineResources::MergeFrom(const PipelineResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.PipelineResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  disks_.MergeFrom(from.disks_);
  zones_.MergeFrom(from.zones_);
  if (from.minimum_ram_gb() != 0) {
    set_minimum_ram_gb(from.minimum_ram_gb());
  }
  if (from.minimum_cpu_cores() != 0) {
    set_minimum_cpu_cores(from.minimum_cpu_cores());
  }
  if (from.preemptible() != 0) {
    set_preemptible(from.preemptible());
  }
  if (from.no_address() != 0) {
    set_no_address(from.no_address());
  }
  if (from.boot_disk_size_gb() != 0) {
    set_boot_disk_size_gb(from.boot_disk_size_gb());
  }
}

void PipelineResources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.PipelineResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PipelineResources::CopyFrom(const PipelineResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.PipelineResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PipelineResources::IsInitialized() const {
  return true;
}

void PipelineResources::Swap(PipelineResources* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PipelineResources* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PipelineResources::UnsafeArenaSwap(PipelineResources* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PipelineResources::InternalSwap(PipelineResources* other) {
  using std::swap;
  disks_.InternalSwap(&other->disks_);
  zones_.InternalSwap(&other->zones_);
  swap(minimum_ram_gb_, other->minimum_ram_gb_);
  swap(minimum_cpu_cores_, other->minimum_cpu_cores_);
  swap(preemptible_, other->preemptible_);
  swap(no_address_, other->no_address_);
  swap(boot_disk_size_gb_, other->boot_disk_size_gb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PipelineResources::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PipelineParameter_LocalCopy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PipelineParameter_LocalCopy::kPathFieldNumber;
const int PipelineParameter_LocalCopy::kDiskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PipelineParameter_LocalCopy::PipelineParameter_LocalCopy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter_LocalCopy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
}
PipelineParameter_LocalCopy::PipelineParameter_LocalCopy(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter_LocalCopy();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
}
PipelineParameter_LocalCopy::PipelineParameter_LocalCopy(const PipelineParameter_LocalCopy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path(),
      GetArenaNoVirtual());
  }
  disk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.disk().size() > 0) {
    disk_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disk(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
}

void PipelineParameter_LocalCopy::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PipelineParameter_LocalCopy::~PipelineParameter_LocalCopy() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  SharedDtor();
}

void PipelineParameter_LocalCopy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PipelineParameter_LocalCopy::ArenaDtor(void* object) {
  PipelineParameter_LocalCopy* _this = reinterpret_cast< PipelineParameter_LocalCopy* >(object);
  (void)_this;
}
void PipelineParameter_LocalCopy::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PipelineParameter_LocalCopy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PipelineParameter_LocalCopy::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PipelineParameter_LocalCopy& PipelineParameter_LocalCopy::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter_LocalCopy();
  return *internal_default_instance();
}

PipelineParameter_LocalCopy* PipelineParameter_LocalCopy::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<PipelineParameter_LocalCopy>(arena);
}

void PipelineParameter_LocalCopy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  disk_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool PipelineParameter_LocalCopy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineParameter.LocalCopy.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string disk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disk()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disk().data(), static_cast<int>(this->disk().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineParameter.LocalCopy.disk"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  return false;
#undef DO_
}

void PipelineParameter_LocalCopy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.LocalCopy.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string disk = 2;
  if (this->disk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk().data(), static_cast<int>(this->disk().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.LocalCopy.disk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->disk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
}

::google::protobuf::uint8* PipelineParameter_LocalCopy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.LocalCopy.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string disk = 2;
  if (this->disk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk().data(), static_cast<int>(this->disk().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.LocalCopy.disk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->disk(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  return target;
}

size_t PipelineParameter_LocalCopy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string disk = 2;
  if (this->disk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->disk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PipelineParameter_LocalCopy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  GOOGLE_DCHECK_NE(&from, this);
  const PipelineParameter_LocalCopy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PipelineParameter_LocalCopy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
    MergeFrom(*source);
  }
}

void PipelineParameter_LocalCopy::MergeFrom(const PipelineParameter_LocalCopy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    set_path(from.path());
  }
  if (from.disk().size() > 0) {
    set_disk(from.disk());
  }
}

void PipelineParameter_LocalCopy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PipelineParameter_LocalCopy::CopyFrom(const PipelineParameter_LocalCopy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.PipelineParameter.LocalCopy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PipelineParameter_LocalCopy::IsInitialized() const {
  return true;
}

void PipelineParameter_LocalCopy::Swap(PipelineParameter_LocalCopy* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PipelineParameter_LocalCopy* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PipelineParameter_LocalCopy::UnsafeArenaSwap(PipelineParameter_LocalCopy* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PipelineParameter_LocalCopy::InternalSwap(PipelineParameter_LocalCopy* other) {
  using std::swap;
  path_.Swap(&other->path_);
  disk_.Swap(&other->disk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PipelineParameter_LocalCopy::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PipelineParameter::InitAsDefaultInstance() {
  ::google::genomics::v1alpha2::_PipelineParameter_default_instance_._instance.get_mutable()->local_copy_ = const_cast< ::google::genomics::v1alpha2::PipelineParameter_LocalCopy*>(
      ::google::genomics::v1alpha2::PipelineParameter_LocalCopy::internal_default_instance());
}
void PipelineParameter::_slow_mutable_local_copy() {
  local_copy_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1alpha2::PipelineParameter_LocalCopy >(
      GetArenaNoVirtual());
}
void PipelineParameter::unsafe_arena_set_allocated_local_copy(
    ::google::genomics::v1alpha2::PipelineParameter_LocalCopy* local_copy) {
  if (GetArenaNoVirtual() == NULL) {
    delete local_copy_;
  }
  local_copy_ = local_copy;
  if (local_copy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1alpha2.PipelineParameter.local_copy)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PipelineParameter::kNameFieldNumber;
const int PipelineParameter::kDescriptionFieldNumber;
const int PipelineParameter::kDefaultValueFieldNumber;
const int PipelineParameter::kLocalCopyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PipelineParameter::PipelineParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.PipelineParameter)
}
PipelineParameter::PipelineParameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.PipelineParameter)
}
PipelineParameter::PipelineParameter(const PipelineParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_value().size() > 0) {
    default_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_value(),
      GetArenaNoVirtual());
  }
  if (from.has_local_copy()) {
    local_copy_ = new ::google::genomics::v1alpha2::PipelineParameter_LocalCopy(*from.local_copy_);
  } else {
    local_copy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.PipelineParameter)
}

void PipelineParameter::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_copy_ = NULL;
  _cached_size_ = 0;
}

PipelineParameter::~PipelineParameter() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.PipelineParameter)
  SharedDtor();
}

void PipelineParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete local_copy_;
}

void PipelineParameter::ArenaDtor(void* object) {
  PipelineParameter* _this = reinterpret_cast< PipelineParameter* >(object);
  (void)_this;
}
void PipelineParameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PipelineParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PipelineParameter::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PipelineParameter& PipelineParameter::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsPipelineParameter();
  return *internal_default_instance();
}

PipelineParameter* PipelineParameter::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<PipelineParameter>(arena);
}

void PipelineParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.PipelineParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  default_value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && local_copy_ != NULL) {
    delete local_copy_;
  }
  local_copy_ = NULL;
  _internal_metadata_.Clear();
}

bool PipelineParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.PipelineParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineParameter.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineParameter.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_value().data(), static_cast<int>(this->default_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.PipelineParameter.default_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1alpha2.PipelineParameter.LocalCopy local_copy = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_local_copy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.PipelineParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.PipelineParameter)
  return false;
#undef DO_
}

void PipelineParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.PipelineParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string default_value = 5;
  if (this->default_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_value().data(), static_cast<int>(this->default_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.default_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->default_value(), output);
  }

  // .google.genomics.v1alpha2.PipelineParameter.LocalCopy local_copy = 6;
  if (this->has_local_copy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->local_copy_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.PipelineParameter)
}

::google::protobuf::uint8* PipelineParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.PipelineParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string default_value = 5;
  if (this->default_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_value().data(), static_cast<int>(this->default_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.PipelineParameter.default_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->default_value(), target);
  }

  // .google.genomics.v1alpha2.PipelineParameter.LocalCopy local_copy = 6;
  if (this->has_local_copy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->local_copy_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.PipelineParameter)
  return target;
}

size_t PipelineParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.PipelineParameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string default_value = 5;
  if (this->default_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_value());
  }

  // .google.genomics.v1alpha2.PipelineParameter.LocalCopy local_copy = 6;
  if (this->has_local_copy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->local_copy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PipelineParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.PipelineParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const PipelineParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PipelineParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.PipelineParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.PipelineParameter)
    MergeFrom(*source);
  }
}

void PipelineParameter::MergeFrom(const PipelineParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.PipelineParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.default_value().size() > 0) {
    set_default_value(from.default_value());
  }
  if (from.has_local_copy()) {
    mutable_local_copy()->::google::genomics::v1alpha2::PipelineParameter_LocalCopy::MergeFrom(from.local_copy());
  }
}

void PipelineParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.PipelineParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PipelineParameter::CopyFrom(const PipelineParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.PipelineParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PipelineParameter::IsInitialized() const {
  return true;
}

void PipelineParameter::Swap(PipelineParameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PipelineParameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PipelineParameter::UnsafeArenaSwap(PipelineParameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PipelineParameter::InternalSwap(PipelineParameter* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  default_value_.Swap(&other->default_value_);
  swap(local_copy_, other->local_copy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PipelineParameter::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DockerExecutor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DockerExecutor::kImageNameFieldNumber;
const int DockerExecutor::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DockerExecutor::DockerExecutor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsDockerExecutor();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1alpha2.DockerExecutor)
}
DockerExecutor::DockerExecutor(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsDockerExecutor();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1alpha2.DockerExecutor)
}
DockerExecutor::DockerExecutor(const DockerExecutor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_name().size() > 0) {
    image_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name(),
      GetArenaNoVirtual());
  }
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1alpha2.DockerExecutor)
}

void DockerExecutor::SharedCtor() {
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DockerExecutor::~DockerExecutor() {
  // @@protoc_insertion_point(destructor:google.genomics.v1alpha2.DockerExecutor)
  SharedDtor();
}

void DockerExecutor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DockerExecutor::ArenaDtor(void* object) {
  DockerExecutor* _this = reinterpret_cast< DockerExecutor* >(object);
  (void)_this;
}
void DockerExecutor::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DockerExecutor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DockerExecutor::descriptor() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DockerExecutor& DockerExecutor::default_instance() {
  ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::InitDefaultsDockerExecutor();
  return *internal_default_instance();
}

DockerExecutor* DockerExecutor::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DockerExecutor>(arena);
}

void DockerExecutor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1alpha2.DockerExecutor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  cmd_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DockerExecutor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1alpha2.DockerExecutor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_name().data(), static_cast<int>(this->image_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.DockerExecutor.image_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1alpha2.DockerExecutor.cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1alpha2.DockerExecutor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1alpha2.DockerExecutor)
  return false;
#undef DO_
}

void DockerExecutor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1alpha2.DockerExecutor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.DockerExecutor.image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_name(), output);
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.DockerExecutor.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1alpha2.DockerExecutor)
}

::google::protobuf::uint8* DockerExecutor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1alpha2.DockerExecutor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.DockerExecutor.image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_name(), target);
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1alpha2.DockerExecutor.cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1alpha2.DockerExecutor)
  return target;
}

size_t DockerExecutor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1alpha2.DockerExecutor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string image_name = 1;
  if (this->image_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_name());
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DockerExecutor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1alpha2.DockerExecutor)
  GOOGLE_DCHECK_NE(&from, this);
  const DockerExecutor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DockerExecutor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1alpha2.DockerExecutor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1alpha2.DockerExecutor)
    MergeFrom(*source);
  }
}

void DockerExecutor::MergeFrom(const DockerExecutor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1alpha2.DockerExecutor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_name().size() > 0) {
    set_image_name(from.image_name());
  }
  if (from.cmd().size() > 0) {
    set_cmd(from.cmd());
  }
}

void DockerExecutor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1alpha2.DockerExecutor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DockerExecutor::CopyFrom(const DockerExecutor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1alpha2.DockerExecutor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DockerExecutor::IsInitialized() const {
  return true;
}

void DockerExecutor::Swap(DockerExecutor* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DockerExecutor* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DockerExecutor::UnsafeArenaSwap(DockerExecutor* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DockerExecutor::InternalSwap(DockerExecutor* other) {
  using std::swap;
  image_name_.Swap(&other->image_name_);
  cmd_.Swap(&other->cmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DockerExecutor::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1alpha2_2fpipelines_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha2
}  // namespace genomics
}  // namespace google

// @@protoc_insertion_point(global_scope)
