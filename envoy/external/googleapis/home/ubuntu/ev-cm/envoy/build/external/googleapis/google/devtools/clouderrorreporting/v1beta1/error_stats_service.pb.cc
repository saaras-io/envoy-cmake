// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto

#include "google/devtools/clouderrorreporting/v1beta1/error_stats_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {
class ListGroupStatsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListGroupStatsRequest>
      _instance;
} _ListGroupStatsRequest_default_instance_;
class ListGroupStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListGroupStatsResponse>
      _instance;
} _ListGroupStatsResponse_default_instance_;
class ErrorGroupStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorGroupStats>
      _instance;
} _ErrorGroupStats_default_instance_;
class TimedCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimedCount>
      _instance;
} _TimedCount_default_instance_;
class ListEventsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListEventsRequest>
      _instance;
} _ListEventsRequest_default_instance_;
class ListEventsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListEventsResponse>
      _instance;
} _ListEventsResponse_default_instance_;
class QueryTimeRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryTimeRange>
      _instance;
} _QueryTimeRange_default_instance_;
class ServiceContextFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceContextFilter>
      _instance;
} _ServiceContextFilter_default_instance_;
class DeleteEventsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteEventsRequest>
      _instance;
} _DeleteEventsRequest_default_instance_;
class DeleteEventsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteEventsResponse>
      _instance;
} _DeleteEventsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto {
void InitDefaultsListGroupStatsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsServiceContextFilter();
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsQueryTimeRange();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsRequest_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest::InitAsDefaultInstance();
}

void InitDefaultsListGroupStatsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListGroupStatsRequestImpl);
}

void InitDefaultsListGroupStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsErrorGroupStats();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsResponse_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsListGroupStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListGroupStatsResponseImpl);
}

void InitDefaultsErrorGroupStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::InitDefaultsErrorGroup();
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsTimedCount();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::InitDefaultsServiceContext();
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::InitDefaultsErrorEvent();
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ErrorGroupStats_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats::InitAsDefaultInstance();
}

void InitDefaultsErrorGroupStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorGroupStatsImpl);
}

void InitDefaultsTimedCountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_TimedCount_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::TimedCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::TimedCount::InitAsDefaultInstance();
}

void InitDefaultsTimedCount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimedCountImpl);
}

void InitDefaultsListEventsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsServiceContextFilter();
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsQueryTimeRange();
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ListEventsRequest_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest::InitAsDefaultInstance();
}

void InitDefaultsListEventsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListEventsRequestImpl);
}

void InitDefaultsListEventsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::InitDefaultsErrorEvent();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ListEventsResponse_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse::InitAsDefaultInstance();
}

void InitDefaultsListEventsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListEventsResponseImpl);
}

void InitDefaultsQueryTimeRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_QueryTimeRange_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::InitAsDefaultInstance();
}

void InitDefaultsQueryTimeRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryTimeRangeImpl);
}

void InitDefaultsServiceContextFilterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ServiceContextFilter_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::InitAsDefaultInstance();
}

void InitDefaultsServiceContextFilter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceContextFilterImpl);
}

void InitDefaultsDeleteEventsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_DeleteEventsRequest_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteEventsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteEventsRequestImpl);
}

void InitDefaultsDeleteEventsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_DeleteEventsResponse_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse::InitAsDefaultInstance();
}

void InitDefaultsDeleteEventsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteEventsResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, project_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, service_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, time_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, timed_count_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, alignment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, alignment_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse, error_group_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse, next_page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse, time_range_begin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, affected_users_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, timed_counts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, first_seen_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, last_seen_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, affected_services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, num_affected_services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats, representative_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::TimedCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::TimedCount, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::TimedCount, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::TimedCount, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, project_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, service_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, time_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse, error_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse, next_page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse, time_range_begin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter, resource_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest, project_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest)},
  { 15, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse)},
  { 23, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats)},
  { 37, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::TimedCount)},
  { 45, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest)},
  { 56, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse)},
  { 64, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange)},
  { 70, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter)},
  { 78, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest)},
  { 84, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ErrorGroupStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_TimedCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ListEventsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ListEventsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_QueryTimeRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ServiceContextFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_DeleteEventsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_DeleteEventsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nEgoogle/devtools/clouderrorreporting/v1"
      "beta1/error_stats_service.proto\022+google."
      "devtools.clouderrorreporting.v1beta1\032\034go"
      "ogle/api/annotations.proto\0328google/devto"
      "ols/clouderrorreporting/v1beta1/common.p"
      "roto\032\036google/protobuf/duration.proto\032\037go"
      "ogle/protobuf/timestamp.proto\"\241\004\n\025ListGr"
      "oupStatsRequest\022\024\n\014project_name\030\001 \001(\t\022\020\n"
      "\010group_id\030\002 \003(\t\022Y\n\016service_filter\030\003 \001(\0132"
      "A.google.devtools.clouderrorreporting.v1"
      "beta1.ServiceContextFilter\022O\n\ntime_range"
      "\030\005 \001(\0132;.google.devtools.clouderrorrepor"
      "ting.v1beta1.QueryTimeRange\0227\n\024timed_cou"
      "nt_duration\030\006 \001(\0132\031.google.protobuf.Dura"
      "tion\022S\n\talignment\030\007 \001(\0162@.google.devtool"
      "s.clouderrorreporting.v1beta1.TimedCount"
      "Alignment\0222\n\016alignment_time\030\010 \001(\0132\032.goog"
      "le.protobuf.Timestamp\022K\n\005order\030\t \001(\0162<.g"
      "oogle.devtools.clouderrorreporting.v1bet"
      "a1.ErrorGroupOrder\022\021\n\tpage_size\030\013 \001(\005\022\022\n"
      "\npage_token\030\014 \001(\t\"\300\001\n\026ListGroupStatsResp"
      "onse\022W\n\021error_group_stats\030\001 \003(\0132<.google"
      ".devtools.clouderrorreporting.v1beta1.Er"
      "rorGroupStats\022\027\n\017next_page_token\030\002 \001(\t\0224"
      "\n\020time_range_begin\030\004 \001(\0132\032.google.protob"
      "uf.Timestamp\"\206\004\n\017ErrorGroupStats\022F\n\005grou"
      "p\030\001 \001(\01327.google.devtools.clouderrorrepo"
      "rting.v1beta1.ErrorGroup\022\r\n\005count\030\002 \001(\003\022"
      "\034\n\024affected_users_count\030\003 \001(\003\022M\n\014timed_c"
      "ounts\030\004 \003(\01327.google.devtools.clouderror"
      "reporting.v1beta1.TimedCount\0223\n\017first_se"
      "en_time\030\005 \001(\0132\032.google.protobuf.Timestam"
      "p\0222\n\016last_seen_time\030\006 \001(\0132\032.google.proto"
      "buf.Timestamp\022V\n\021affected_services\030\007 \003(\013"
      "2;.google.devtools.clouderrorreporting.v"
      "1beta1.ServiceContext\022\035\n\025num_affected_se"
      "rvices\030\010 \001(\005\022O\n\016representative\030\t \001(\01327.g"
      "oogle.devtools.clouderrorreporting.v1bet"
      "a1.ErrorEvent\"y\n\nTimedCount\022\r\n\005count\030\001 \001"
      "(\003\022.\n\nstart_time\030\002 \001(\0132\032.google.protobuf"
      ".Timestamp\022,\n\010end_time\030\003 \001(\0132\032.google.pr"
      "otobuf.Timestamp\"\216\002\n\021ListEventsRequest\022\024"
      "\n\014project_name\030\001 \001(\t\022\020\n\010group_id\030\002 \001(\t\022Y"
      "\n\016service_filter\030\003 \001(\0132A.google.devtools"
      ".clouderrorreporting.v1beta1.ServiceCont"
      "extFilter\022O\n\ntime_range\030\004 \001(\0132;.google.d"
      "evtools.clouderrorreporting.v1beta1.Quer"
      "yTimeRange\022\021\n\tpage_size\030\006 \001(\005\022\022\n\npage_to"
      "ken\030\007 \001(\t\"\262\001\n\022ListEventsResponse\022M\n\014erro"
      "r_events\030\001 \003(\01327.google.devtools.clouder"
      "rorreporting.v1beta1.ErrorEvent\022\027\n\017next_"
      "page_token\030\002 \001(\t\0224\n\020time_range_begin\030\004 \001"
      "(\0132\032.google.protobuf.Timestamp\"\347\001\n\016Query"
      "TimeRange\022R\n\006period\030\001 \001(\0162B.google.devto"
      "ols.clouderrorreporting.v1beta1.QueryTim"
      "eRange.Period\"\200\001\n\006Period\022\026\n\022PERIOD_UNSPE"
      "CIFIED\020\000\022\021\n\rPERIOD_1_HOUR\020\001\022\022\n\016PERIOD_6_"
      "HOURS\020\002\022\020\n\014PERIOD_1_DAY\020\003\022\021\n\rPERIOD_1_WE"
      "EK\020\004\022\022\n\016PERIOD_30_DAYS\020\005\"O\n\024ServiceConte"
      "xtFilter\022\017\n\007service\030\002 \001(\t\022\017\n\007version\030\003 \001"
      "(\t\022\025\n\rresource_type\030\004 \001(\t\"+\n\023DeleteEvent"
      "sRequest\022\024\n\014project_name\030\001 \001(\t\"\026\n\024Delete"
      "EventsResponse*u\n\023TimedCountAlignment\022%\n"
      "!ERROR_COUNT_ALIGNMENT_UNSPECIFIED\020\000\022\033\n\027"
      "ALIGNMENT_EQUAL_ROUNDED\020\001\022\032\n\026ALIGNMENT_E"
      "QUAL_AT_END\020\002*}\n\017ErrorGroupOrder\022\033\n\027GROU"
      "P_ORDER_UNSPECIFIED\020\000\022\016\n\nCOUNT_DESC\020\001\022\022\n"
      "\016LAST_SEEN_DESC\020\002\022\020\n\014CREATED_DESC\020\003\022\027\n\023A"
      "FFECTED_USERS_DESC\020\0042\362\004\n\021ErrorStatsServi"
      "ce\022\320\001\n\016ListGroupStats\022B.google.devtools."
      "clouderrorreporting.v1beta1.ListGroupSta"
      "tsRequest\032C.google.devtools.clouderrorre"
      "porting.v1beta1.ListGroupStatsResponse\"5"
      "\202\323\344\223\002/\022-/v1beta1/{project_name=projects/"
      "*}/groupStats\022\300\001\n\nListEvents\022>.google.de"
      "vtools.clouderrorreporting.v1beta1.ListE"
      "ventsRequest\032\?.google.devtools.clouderro"
      "rreporting.v1beta1.ListEventsResponse\"1\202"
      "\323\344\223\002+\022)/v1beta1/{project_name=projects/*"
      "}/events\022\306\001\n\014DeleteEvents\022@.google.devto"
      "ols.clouderrorreporting.v1beta1.DeleteEv"
      "entsRequest\032A.google.devtools.clouderror"
      "reporting.v1beta1.DeleteEventsResponse\"1"
      "\202\323\344\223\002+*)/v1beta1/{project_name=projects/"
      "*}/eventsB\321\001\n/com.google.devtools.cloude"
      "rrorreporting.v1beta1B\026ErrorStatsService"
      "ProtoP\001Z^google.golang.org/genproto/goog"
      "leapis/devtools/clouderrorreporting/v1be"
      "ta1;clouderrorreporting\252\002#Google.Cloud.E"
      "rrorReporting.V1Beta1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3589);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto
namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* QueryTimeRange_Period_descriptor() {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool QueryTimeRange_Period_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QueryTimeRange_Period QueryTimeRange::PERIOD_UNSPECIFIED;
const QueryTimeRange_Period QueryTimeRange::PERIOD_1_HOUR;
const QueryTimeRange_Period QueryTimeRange::PERIOD_6_HOURS;
const QueryTimeRange_Period QueryTimeRange::PERIOD_1_DAY;
const QueryTimeRange_Period QueryTimeRange::PERIOD_1_WEEK;
const QueryTimeRange_Period QueryTimeRange::PERIOD_30_DAYS;
const QueryTimeRange_Period QueryTimeRange::Period_MIN;
const QueryTimeRange_Period QueryTimeRange::Period_MAX;
const int QueryTimeRange::Period_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TimedCountAlignment_descriptor() {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_enum_descriptors[1];
}
bool TimedCountAlignment_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ErrorGroupOrder_descriptor() {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_enum_descriptors[2];
}
bool ErrorGroupOrder_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ListGroupStatsRequest::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsRequest_default_instance_._instance.get_mutable()->service_filter_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter*>(
      ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsRequest_default_instance_._instance.get_mutable()->time_range_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange*>(
      ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsRequest_default_instance_._instance.get_mutable()->timed_count_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsRequest_default_instance_._instance.get_mutable()->alignment_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ListGroupStatsRequest::clear_timed_count_duration() {
  if (GetArenaNoVirtual() == NULL && timed_count_duration_ != NULL) {
    delete timed_count_duration_;
  }
  timed_count_duration_ = NULL;
}
void ListGroupStatsRequest::clear_alignment_time() {
  if (GetArenaNoVirtual() == NULL && alignment_time_ != NULL) {
    delete alignment_time_;
  }
  alignment_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupStatsRequest::kProjectNameFieldNumber;
const int ListGroupStatsRequest::kGroupIdFieldNumber;
const int ListGroupStatsRequest::kServiceFilterFieldNumber;
const int ListGroupStatsRequest::kTimeRangeFieldNumber;
const int ListGroupStatsRequest::kTimedCountDurationFieldNumber;
const int ListGroupStatsRequest::kAlignmentFieldNumber;
const int ListGroupStatsRequest::kAlignmentTimeFieldNumber;
const int ListGroupStatsRequest::kOrderFieldNumber;
const int ListGroupStatsRequest::kPageSizeFieldNumber;
const int ListGroupStatsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupStatsRequest::ListGroupStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListGroupStatsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
}
ListGroupStatsRequest::ListGroupStatsRequest(const ListGroupStatsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_id_(from.group_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_name().size() > 0) {
    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.has_service_filter()) {
    service_filter_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter(*from.service_filter_);
  } else {
    service_filter_ = NULL;
  }
  if (from.has_time_range()) {
    time_range_ = new ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange(*from.time_range_);
  } else {
    time_range_ = NULL;
  }
  if (from.has_timed_count_duration()) {
    timed_count_duration_ = new ::google::protobuf::Duration(*from.timed_count_duration_);
  } else {
    timed_count_duration_ = NULL;
  }
  if (from.has_alignment_time()) {
    alignment_time_ = new ::google::protobuf::Timestamp(*from.alignment_time_);
  } else {
    alignment_time_ = NULL;
  }
  ::memcpy(&alignment_, &from.alignment_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&alignment_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
}

void ListGroupStatsRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&service_filter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&service_filter_)) + sizeof(page_size_));
  _cached_size_ = 0;
}

ListGroupStatsRequest::~ListGroupStatsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  SharedDtor();
}

void ListGroupStatsRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete service_filter_;
  if (this != internal_default_instance()) delete time_range_;
  if (this != internal_default_instance()) delete timed_count_duration_;
  if (this != internal_default_instance()) delete alignment_time_;
}

void ListGroupStatsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupStatsRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListGroupStatsRequest& ListGroupStatsRequest::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListGroupStatsRequest();
  return *internal_default_instance();
}

ListGroupStatsRequest* ListGroupStatsRequest::New(::google::protobuf::Arena* arena) const {
  ListGroupStatsRequest* n = new ListGroupStatsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_.Clear();
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) {
    delete service_filter_;
  }
  service_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) {
    delete time_range_;
  }
  time_range_ = NULL;
  if (GetArenaNoVirtual() == NULL && timed_count_duration_ != NULL) {
    delete timed_count_duration_;
  }
  timed_count_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && alignment_time_ != NULL) {
    delete alignment_time_;
  }
  alignment_time_ = NULL;
  ::memset(&alignment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&alignment_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool ListGroupStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), static_cast<int>(this->project_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id(this->group_id_size() - 1).data(),
            static_cast<int>(this->group_id(this->group_id_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration timed_count_duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timed_count_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_alignment(static_cast< ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp alignment_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alignment_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_order(static_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  return false;
#undef DO_
}

void ListGroupStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  // repeated string group_id = 2;
  for (int i = 0, n = this->group_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id(i).data(), static_cast<int>(this->group_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->group_id(i), output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->service_filter_, output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
  if (this->has_time_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->time_range_, output);
  }

  // .google.protobuf.Duration timed_count_duration = 6;
  if (this->has_timed_count_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->timed_count_duration_, output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
  if (this->alignment() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->alignment(), output);
  }

  // .google.protobuf.Timestamp alignment_time = 8;
  if (this->has_alignment_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->alignment_time_, output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
  if (this->order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->order(), output);
  }

  // int32 page_size = 11;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->page_size(), output);
  }

  // string page_token = 12;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
}

::google::protobuf::uint8* ListGroupStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  // repeated string group_id = 2;
  for (int i = 0, n = this->group_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id(i).data(), static_cast<int>(this->group_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->group_id(i), target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->service_filter_, deterministic, target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
  if (this->has_time_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->time_range_, deterministic, target);
  }

  // .google.protobuf.Duration timed_count_duration = 6;
  if (this->has_timed_count_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->timed_count_duration_, deterministic, target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
  if (this->alignment() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->alignment(), target);
  }

  // .google.protobuf.Timestamp alignment_time = 8;
  if (this->has_alignment_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->alignment_time_, deterministic, target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
  if (this->order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->order(), target);
  }

  // int32 page_size = 11;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->page_size(), target);
  }

  // string page_token = 12;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  return target;
}

size_t ListGroupStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string group_id = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_id_size());
  for (int i = 0, n = this->group_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_id(i));
  }

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // string page_token = 12;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_filter_);
  }

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
  if (this->has_time_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_range_);
  }

  // .google.protobuf.Duration timed_count_duration = 6;
  if (this->has_timed_count_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timed_count_duration_);
  }

  // .google.protobuf.Timestamp alignment_time = 8;
  if (this->has_alignment_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->alignment_time_);
  }

  // .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
  if (this->alignment() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->alignment());
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
  if (this->order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->order());
  }

  // int32 page_size = 11;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListGroupStatsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
    MergeFrom(*source);
  }
}

void ListGroupStatsRequest::MergeFrom(const ListGroupStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_id_.MergeFrom(from.group_id_);
  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.has_service_filter()) {
    mutable_service_filter()->::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::MergeFrom(from.service_filter());
  }
  if (from.has_time_range()) {
    mutable_time_range()->::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::MergeFrom(from.time_range());
  }
  if (from.has_timed_count_duration()) {
    mutable_timed_count_duration()->::google::protobuf::Duration::MergeFrom(from.timed_count_duration());
  }
  if (from.has_alignment_time()) {
    mutable_alignment_time()->::google::protobuf::Timestamp::MergeFrom(from.alignment_time());
  }
  if (from.alignment() != 0) {
    set_alignment(from.alignment());
  }
  if (from.order() != 0) {
    set_order(from.order());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListGroupStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupStatsRequest::CopyFrom(const ListGroupStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListGroupStatsRequest::IsInitialized() const {
  return true;
}

void ListGroupStatsRequest::Swap(ListGroupStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupStatsRequest::InternalSwap(ListGroupStatsRequest* other) {
  using std::swap;
  group_id_.InternalSwap(&other->group_id_);
  project_name_.Swap(&other->project_name_);
  page_token_.Swap(&other->page_token_);
  swap(service_filter_, other->service_filter_);
  swap(time_range_, other->time_range_);
  swap(timed_count_duration_, other->timed_count_duration_);
  swap(alignment_time_, other->alignment_time_);
  swap(alignment_, other->alignment_);
  swap(order_, other->order_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupStatsRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListGroupStatsResponse::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_ListGroupStatsResponse_default_instance_._instance.get_mutable()->time_range_begin_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ListGroupStatsResponse::clear_time_range_begin() {
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) {
    delete time_range_begin_;
  }
  time_range_begin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupStatsResponse::kErrorGroupStatsFieldNumber;
const int ListGroupStatsResponse::kNextPageTokenFieldNumber;
const int ListGroupStatsResponse::kTimeRangeBeginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupStatsResponse::ListGroupStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListGroupStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
}
ListGroupStatsResponse::ListGroupStatsResponse(const ListGroupStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      error_group_stats_(from.error_group_stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.has_time_range_begin()) {
    time_range_begin_ = new ::google::protobuf::Timestamp(*from.time_range_begin_);
  } else {
    time_range_begin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
}

void ListGroupStatsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_range_begin_ = NULL;
  _cached_size_ = 0;
}

ListGroupStatsResponse::~ListGroupStatsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  SharedDtor();
}

void ListGroupStatsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete time_range_begin_;
}

void ListGroupStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupStatsResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListGroupStatsResponse& ListGroupStatsResponse::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListGroupStatsResponse();
  return *internal_default_instance();
}

ListGroupStatsResponse* ListGroupStatsResponse::New(::google::protobuf::Arena* arena) const {
  ListGroupStatsResponse* n = new ListGroupStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_group_stats_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) {
    delete time_range_begin_;
  }
  time_range_begin_ = NULL;
  _internal_metadata_.Clear();
}

bool ListGroupStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_error_group_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp time_range_begin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_range_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  return false;
#undef DO_
}

void ListGroupStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_group_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->error_group_stats(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->time_range_begin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
}

::google::protobuf::uint8* ListGroupStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_group_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->error_group_stats(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->time_range_begin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  return target;
}

size_t ListGroupStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->error_group_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error_group_stats(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_range_begin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListGroupStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
    MergeFrom(*source);
  }
}

void ListGroupStatsResponse::MergeFrom(const ListGroupStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_group_stats_.MergeFrom(from.error_group_stats_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.has_time_range_begin()) {
    mutable_time_range_begin()->::google::protobuf::Timestamp::MergeFrom(from.time_range_begin());
  }
}

void ListGroupStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupStatsResponse::CopyFrom(const ListGroupStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListGroupStatsResponse::IsInitialized() const {
  return true;
}

void ListGroupStatsResponse::Swap(ListGroupStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupStatsResponse::InternalSwap(ListGroupStatsResponse* other) {
  using std::swap;
  error_group_stats_.InternalSwap(&other->error_group_stats_);
  next_page_token_.Swap(&other->next_page_token_);
  swap(time_range_begin_, other->time_range_begin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupStatsResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorGroupStats::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_ErrorGroupStats_default_instance_._instance.get_mutable()->group_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup*>(
      ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ErrorGroupStats_default_instance_._instance.get_mutable()->first_seen_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ErrorGroupStats_default_instance_._instance.get_mutable()->last_seen_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ErrorGroupStats_default_instance_._instance.get_mutable()->representative_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent*>(
      ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent::internal_default_instance());
}
void ErrorGroupStats::clear_group() {
  if (GetArenaNoVirtual() == NULL && group_ != NULL) {
    delete group_;
  }
  group_ = NULL;
}
void ErrorGroupStats::clear_first_seen_time() {
  if (GetArenaNoVirtual() == NULL && first_seen_time_ != NULL) {
    delete first_seen_time_;
  }
  first_seen_time_ = NULL;
}
void ErrorGroupStats::clear_last_seen_time() {
  if (GetArenaNoVirtual() == NULL && last_seen_time_ != NULL) {
    delete last_seen_time_;
  }
  last_seen_time_ = NULL;
}
void ErrorGroupStats::clear_affected_services() {
  affected_services_.Clear();
}
void ErrorGroupStats::clear_representative() {
  if (GetArenaNoVirtual() == NULL && representative_ != NULL) {
    delete representative_;
  }
  representative_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorGroupStats::kGroupFieldNumber;
const int ErrorGroupStats::kCountFieldNumber;
const int ErrorGroupStats::kAffectedUsersCountFieldNumber;
const int ErrorGroupStats::kTimedCountsFieldNumber;
const int ErrorGroupStats::kFirstSeenTimeFieldNumber;
const int ErrorGroupStats::kLastSeenTimeFieldNumber;
const int ErrorGroupStats::kAffectedServicesFieldNumber;
const int ErrorGroupStats::kNumAffectedServicesFieldNumber;
const int ErrorGroupStats::kRepresentativeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorGroupStats::ErrorGroupStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsErrorGroupStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
}
ErrorGroupStats::ErrorGroupStats(const ErrorGroupStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      timed_counts_(from.timed_counts_),
      affected_services_(from.affected_services_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_group()) {
    group_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup(*from.group_);
  } else {
    group_ = NULL;
  }
  if (from.has_first_seen_time()) {
    first_seen_time_ = new ::google::protobuf::Timestamp(*from.first_seen_time_);
  } else {
    first_seen_time_ = NULL;
  }
  if (from.has_last_seen_time()) {
    last_seen_time_ = new ::google::protobuf::Timestamp(*from.last_seen_time_);
  } else {
    last_seen_time_ = NULL;
  }
  if (from.has_representative()) {
    representative_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent(*from.representative_);
  } else {
    representative_ = NULL;
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_affected_services_) -
    reinterpret_cast<char*>(&count_)) + sizeof(num_affected_services_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
}

void ErrorGroupStats::SharedCtor() {
  ::memset(&group_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_affected_services_) -
      reinterpret_cast<char*>(&group_)) + sizeof(num_affected_services_));
  _cached_size_ = 0;
}

ErrorGroupStats::~ErrorGroupStats() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  SharedDtor();
}

void ErrorGroupStats::SharedDtor() {
  if (this != internal_default_instance()) delete group_;
  if (this != internal_default_instance()) delete first_seen_time_;
  if (this != internal_default_instance()) delete last_seen_time_;
  if (this != internal_default_instance()) delete representative_;
}

void ErrorGroupStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorGroupStats::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorGroupStats& ErrorGroupStats::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsErrorGroupStats();
  return *internal_default_instance();
}

ErrorGroupStats* ErrorGroupStats::New(::google::protobuf::Arena* arena) const {
  ErrorGroupStats* n = new ErrorGroupStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorGroupStats::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timed_counts_.Clear();
  affected_services_.Clear();
  if (GetArenaNoVirtual() == NULL && group_ != NULL) {
    delete group_;
  }
  group_ = NULL;
  if (GetArenaNoVirtual() == NULL && first_seen_time_ != NULL) {
    delete first_seen_time_;
  }
  first_seen_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_seen_time_ != NULL) {
    delete last_seen_time_;
  }
  last_seen_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && representative_ != NULL) {
    delete representative_;
  }
  representative_ = NULL;
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_affected_services_) -
      reinterpret_cast<char*>(&count_)) + sizeof(num_affected_services_));
  _internal_metadata_.Clear();
}

bool ErrorGroupStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 affected_users_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &affected_users_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_timed_counts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp first_seen_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_first_seen_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_seen_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_seen_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_affected_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_affected_services = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_affected_services_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_representative()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  return false;
#undef DO_
}

void ErrorGroupStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  if (this->has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->group_, output);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  // int64 affected_users_count = 3;
  if (this->affected_users_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->affected_users_count(), output);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timed_counts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->timed_counts(static_cast<int>(i)), output);
  }

  // .google.protobuf.Timestamp first_seen_time = 5;
  if (this->has_first_seen_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->first_seen_time_, output);
  }

  // .google.protobuf.Timestamp last_seen_time = 6;
  if (this->has_last_seen_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->last_seen_time_, output);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->affected_services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->affected_services(static_cast<int>(i)), output);
  }

  // int32 num_affected_services = 8;
  if (this->num_affected_services() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_affected_services(), output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
  if (this->has_representative()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->representative_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
}

::google::protobuf::uint8* ErrorGroupStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  if (this->has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->group_, deterministic, target);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  // int64 affected_users_count = 3;
  if (this->affected_users_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->affected_users_count(), target);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timed_counts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->timed_counts(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp first_seen_time = 5;
  if (this->has_first_seen_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->first_seen_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp last_seen_time = 6;
  if (this->has_last_seen_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->last_seen_time_, deterministic, target);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->affected_services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->affected_services(static_cast<int>(i)), deterministic, target);
  }

  // int32 num_affected_services = 8;
  if (this->num_affected_services() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->num_affected_services(), target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
  if (this->has_representative()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->representative_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  return target;
}

size_t ErrorGroupStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->timed_counts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timed_counts(static_cast<int>(i)));
    }
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->affected_services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->affected_services(static_cast<int>(i)));
    }
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  if (this->has_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->group_);
  }

  // .google.protobuf.Timestamp first_seen_time = 5;
  if (this->has_first_seen_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->first_seen_time_);
  }

  // .google.protobuf.Timestamp last_seen_time = 6;
  if (this->has_last_seen_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->last_seen_time_);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
  if (this->has_representative()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->representative_);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // int64 affected_users_count = 3;
  if (this->affected_users_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->affected_users_count());
  }

  // int32 num_affected_services = 8;
  if (this->num_affected_services() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_affected_services());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorGroupStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorGroupStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorGroupStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
    MergeFrom(*source);
  }
}

void ErrorGroupStats::MergeFrom(const ErrorGroupStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timed_counts_.MergeFrom(from.timed_counts_);
  affected_services_.MergeFrom(from.affected_services_);
  if (from.has_group()) {
    mutable_group()->::google::devtools::clouderrorreporting::v1beta1::ErrorGroup::MergeFrom(from.group());
  }
  if (from.has_first_seen_time()) {
    mutable_first_seen_time()->::google::protobuf::Timestamp::MergeFrom(from.first_seen_time());
  }
  if (from.has_last_seen_time()) {
    mutable_last_seen_time()->::google::protobuf::Timestamp::MergeFrom(from.last_seen_time());
  }
  if (from.has_representative()) {
    mutable_representative()->::google::devtools::clouderrorreporting::v1beta1::ErrorEvent::MergeFrom(from.representative());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.affected_users_count() != 0) {
    set_affected_users_count(from.affected_users_count());
  }
  if (from.num_affected_services() != 0) {
    set_num_affected_services(from.num_affected_services());
  }
}

void ErrorGroupStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorGroupStats::CopyFrom(const ErrorGroupStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorGroupStats::IsInitialized() const {
  return true;
}

void ErrorGroupStats::Swap(ErrorGroupStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorGroupStats::InternalSwap(ErrorGroupStats* other) {
  using std::swap;
  timed_counts_.InternalSwap(&other->timed_counts_);
  affected_services_.InternalSwap(&other->affected_services_);
  swap(group_, other->group_);
  swap(first_seen_time_, other->first_seen_time_);
  swap(last_seen_time_, other->last_seen_time_);
  swap(representative_, other->representative_);
  swap(count_, other->count_);
  swap(affected_users_count_, other->affected_users_count_);
  swap(num_affected_services_, other->num_affected_services_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorGroupStats::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimedCount::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_TimedCount_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_TimedCount_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void TimedCount::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void TimedCount::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimedCount::kCountFieldNumber;
const int TimedCount::kStartTimeFieldNumber;
const int TimedCount::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimedCount::TimedCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsTimedCount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.TimedCount)
}
TimedCount::TimedCount(const TimedCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.TimedCount)
}

void TimedCount::SharedCtor() {
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(count_));
  _cached_size_ = 0;
}

TimedCount::~TimedCount() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  SharedDtor();
}

void TimedCount::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void TimedCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimedCount::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimedCount& TimedCount::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsTimedCount();
  return *internal_default_instance();
}

TimedCount* TimedCount::New(::google::protobuf::Arena* arena) const {
  TimedCount* n = new TimedCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimedCount::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  count_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TimedCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  return false;
#undef DO_
}

void TimedCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->end_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.TimedCount)
}

::google::protobuf::uint8* TimedCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->end_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  return target;
}

size_t TimedCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_time_);
  }

  // int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimedCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  GOOGLE_DCHECK_NE(&from, this);
  const TimedCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimedCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.TimedCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.TimedCount)
    MergeFrom(*source);
  }
}

void TimedCount::MergeFrom(const TimedCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void TimedCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimedCount::CopyFrom(const TimedCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimedCount::IsInitialized() const {
  return true;
}

void TimedCount::Swap(TimedCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimedCount::InternalSwap(TimedCount* other) {
  using std::swap;
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimedCount::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListEventsRequest::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_ListEventsRequest_default_instance_._instance.get_mutable()->service_filter_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter*>(
      ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ListEventsRequest_default_instance_._instance.get_mutable()->time_range_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange*>(
      ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListEventsRequest::kProjectNameFieldNumber;
const int ListEventsRequest::kGroupIdFieldNumber;
const int ListEventsRequest::kServiceFilterFieldNumber;
const int ListEventsRequest::kTimeRangeFieldNumber;
const int ListEventsRequest::kPageSizeFieldNumber;
const int ListEventsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListEventsRequest::ListEventsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListEventsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
}
ListEventsRequest::ListEventsRequest(const ListEventsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_name().size() > 0) {
    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_id().size() > 0) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.has_service_filter()) {
    service_filter_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter(*from.service_filter_);
  } else {
    service_filter_ = NULL;
  }
  if (from.has_time_range()) {
    time_range_ = new ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange(*from.time_range_);
  } else {
    time_range_ = NULL;
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
}

void ListEventsRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&service_filter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&service_filter_)) + sizeof(page_size_));
  _cached_size_ = 0;
}

ListEventsRequest::~ListEventsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  SharedDtor();
}

void ListEventsRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete service_filter_;
  if (this != internal_default_instance()) delete time_range_;
}

void ListEventsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListEventsRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListEventsRequest& ListEventsRequest::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListEventsRequest();
  return *internal_default_instance();
}

ListEventsRequest* ListEventsRequest::New(::google::protobuf::Arena* arena) const {
  ListEventsRequest* n = new ListEventsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListEventsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) {
    delete service_filter_;
  }
  service_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) {
    delete time_range_;
  }
  time_range_ = NULL;
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListEventsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), static_cast<int>(this->project_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  return false;
#undef DO_
}

void ListEventsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->service_filter_, output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
  if (this->has_time_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->time_range_, output);
  }

  // int32 page_size = 6;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->page_size(), output);
  }

  // string page_token = 7;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
}

::google::protobuf::uint8* ListEventsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->service_filter_, deterministic, target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
  if (this->has_time_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->time_range_, deterministic, target);
  }

  // int32 page_size = 6;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->page_size(), target);
  }

  // string page_token = 7;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  return target;
}

size_t ListEventsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // string group_id = 2;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // string page_token = 7;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->service_filter_);
  }

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
  if (this->has_time_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_range_);
  }

  // int32 page_size = 6;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListEventsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListEventsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListEventsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
    MergeFrom(*source);
  }
}

void ListEventsRequest::MergeFrom(const ListEventsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.has_service_filter()) {
    mutable_service_filter()->::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::MergeFrom(from.service_filter());
  }
  if (from.has_time_range()) {
    mutable_time_range()->::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::MergeFrom(from.time_range());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListEventsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListEventsRequest::CopyFrom(const ListEventsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListEventsRequest::IsInitialized() const {
  return true;
}

void ListEventsRequest::Swap(ListEventsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListEventsRequest::InternalSwap(ListEventsRequest* other) {
  using std::swap;
  project_name_.Swap(&other->project_name_);
  group_id_.Swap(&other->group_id_);
  page_token_.Swap(&other->page_token_);
  swap(service_filter_, other->service_filter_);
  swap(time_range_, other->time_range_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListEventsRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListEventsResponse::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_ListEventsResponse_default_instance_._instance.get_mutable()->time_range_begin_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ListEventsResponse::clear_error_events() {
  error_events_.Clear();
}
void ListEventsResponse::clear_time_range_begin() {
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) {
    delete time_range_begin_;
  }
  time_range_begin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListEventsResponse::kErrorEventsFieldNumber;
const int ListEventsResponse::kNextPageTokenFieldNumber;
const int ListEventsResponse::kTimeRangeBeginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListEventsResponse::ListEventsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListEventsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
}
ListEventsResponse::ListEventsResponse(const ListEventsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      error_events_(from.error_events_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.has_time_range_begin()) {
    time_range_begin_ = new ::google::protobuf::Timestamp(*from.time_range_begin_);
  } else {
    time_range_begin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
}

void ListEventsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_range_begin_ = NULL;
  _cached_size_ = 0;
}

ListEventsResponse::~ListEventsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  SharedDtor();
}

void ListEventsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete time_range_begin_;
}

void ListEventsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListEventsResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListEventsResponse& ListEventsResponse::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsListEventsResponse();
  return *internal_default_instance();
}

ListEventsResponse* ListEventsResponse::New(::google::protobuf::Arena* arena) const {
  ListEventsResponse* n = new ListEventsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListEventsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_events_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) {
    delete time_range_begin_;
  }
  time_range_begin_ = NULL;
  _internal_metadata_.Clear();
}

bool ListEventsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_error_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp time_range_begin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_range_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  return false;
#undef DO_
}

void ListEventsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->error_events(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->time_range_begin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
}

::google::protobuf::uint8* ListEventsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->error_events(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->time_range_begin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  return target;
}

size_t ListEventsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->error_events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error_events(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_range_begin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListEventsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListEventsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListEventsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
    MergeFrom(*source);
  }
}

void ListEventsResponse::MergeFrom(const ListEventsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_events_.MergeFrom(from.error_events_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.has_time_range_begin()) {
    mutable_time_range_begin()->::google::protobuf::Timestamp::MergeFrom(from.time_range_begin());
  }
}

void ListEventsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListEventsResponse::CopyFrom(const ListEventsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListEventsResponse::IsInitialized() const {
  return true;
}

void ListEventsResponse::Swap(ListEventsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListEventsResponse::InternalSwap(ListEventsResponse* other) {
  using std::swap;
  error_events_.InternalSwap(&other->error_events_);
  next_page_token_.Swap(&other->next_page_token_);
  swap(time_range_begin_, other->time_range_begin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListEventsResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryTimeRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryTimeRange::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryTimeRange::QueryTimeRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsQueryTimeRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
}
QueryTimeRange::QueryTimeRange(const QueryTimeRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  period_ = from.period_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
}

void QueryTimeRange::SharedCtor() {
  period_ = 0;
  _cached_size_ = 0;
}

QueryTimeRange::~QueryTimeRange() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  SharedDtor();
}

void QueryTimeRange::SharedDtor() {
}

void QueryTimeRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryTimeRange::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryTimeRange& QueryTimeRange::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsQueryTimeRange();
  return *internal_default_instance();
}

QueryTimeRange* QueryTimeRange::New(::google::protobuf::Arena* arena) const {
  QueryTimeRange* n = new QueryTimeRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryTimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  period_ = 0;
  _internal_metadata_.Clear();
}

bool QueryTimeRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_period(static_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  return false;
#undef DO_
}

void QueryTimeRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
  if (this->period() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
}

::google::protobuf::uint8* QueryTimeRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
  if (this->period() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->period(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  return target;
}

size_t QueryTimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
  if (this->period() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->period());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryTimeRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryTimeRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryTimeRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
    MergeFrom(*source);
  }
}

void QueryTimeRange::MergeFrom(const QueryTimeRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.period() != 0) {
    set_period(from.period());
  }
}

void QueryTimeRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryTimeRange::CopyFrom(const QueryTimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryTimeRange::IsInitialized() const {
  return true;
}

void QueryTimeRange::Swap(QueryTimeRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryTimeRange::InternalSwap(QueryTimeRange* other) {
  using std::swap;
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryTimeRange::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceContextFilter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceContextFilter::kServiceFieldNumber;
const int ServiceContextFilter::kVersionFieldNumber;
const int ServiceContextFilter::kResourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceContextFilter::ServiceContextFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsServiceContextFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
}
ServiceContextFilter::ServiceContextFilter(const ServiceContextFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_type().size() > 0) {
    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
}

void ServiceContextFilter::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ServiceContextFilter::~ServiceContextFilter() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  SharedDtor();
}

void ServiceContextFilter::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceContextFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceContextFilter::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceContextFilter& ServiceContextFilter::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsServiceContextFilter();
  return *internal_default_instance();
}

ServiceContextFilter* ServiceContextFilter::New(::google::protobuf::Arena* arena) const {
  ServiceContextFilter* n = new ServiceContextFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceContextFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServiceContextFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_type().data(), static_cast<int>(this->resource_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  return false;
#undef DO_
}

void ServiceContextFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // string resource_type = 4;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), static_cast<int>(this->resource_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->resource_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
}

::google::protobuf::uint8* ServiceContextFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // string resource_type = 4;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), static_cast<int>(this->resource_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->resource_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  return target;
}

size_t ServiceContextFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string resource_type = 4;
  if (this->resource_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceContextFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceContextFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceContextFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
    MergeFrom(*source);
  }
}

void ServiceContextFilter::MergeFrom(const ServiceContextFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.resource_type().size() > 0) {

    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
}

void ServiceContextFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceContextFilter::CopyFrom(const ServiceContextFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceContextFilter::IsInitialized() const {
  return true;
}

void ServiceContextFilter::Swap(ServiceContextFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceContextFilter::InternalSwap(ServiceContextFilter* other) {
  using std::swap;
  service_.Swap(&other->service_);
  version_.Swap(&other->version_);
  resource_type_.Swap(&other->resource_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceContextFilter::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteEventsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteEventsRequest::kProjectNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteEventsRequest::DeleteEventsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsDeleteEventsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
}
DeleteEventsRequest::DeleteEventsRequest(const DeleteEventsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_name().size() > 0) {
    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
}

void DeleteEventsRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteEventsRequest::~DeleteEventsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  SharedDtor();
}

void DeleteEventsRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteEventsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteEventsRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteEventsRequest& DeleteEventsRequest::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsDeleteEventsRequest();
  return *internal_default_instance();
}

DeleteEventsRequest* DeleteEventsRequest::New(::google::protobuf::Arena* arena) const {
  DeleteEventsRequest* n = new DeleteEventsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteEventsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteEventsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), static_cast<int>(this->project_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  return false;
#undef DO_
}

void DeleteEventsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
}

::google::protobuf::uint8* DeleteEventsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  return target;
}

size_t DeleteEventsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteEventsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteEventsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteEventsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
    MergeFrom(*source);
  }
}

void DeleteEventsRequest::MergeFrom(const DeleteEventsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
}

void DeleteEventsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteEventsRequest::CopyFrom(const DeleteEventsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteEventsRequest::IsInitialized() const {
  return true;
}

void DeleteEventsRequest::Swap(DeleteEventsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteEventsRequest::InternalSwap(DeleteEventsRequest* other) {
  using std::swap;
  project_name_.Swap(&other->project_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteEventsRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteEventsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteEventsResponse::DeleteEventsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsDeleteEventsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
}
DeleteEventsResponse::DeleteEventsResponse(const DeleteEventsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
}

void DeleteEventsResponse::SharedCtor() {
  _cached_size_ = 0;
}

DeleteEventsResponse::~DeleteEventsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  SharedDtor();
}

void DeleteEventsResponse::SharedDtor() {
}

void DeleteEventsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteEventsResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteEventsResponse& DeleteEventsResponse::default_instance() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::InitDefaultsDeleteEventsResponse();
  return *internal_default_instance();
}

DeleteEventsResponse* DeleteEventsResponse::New(::google::protobuf::Arena* arena) const {
  DeleteEventsResponse* n = new DeleteEventsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteEventsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteEventsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  return false;
#undef DO_
}

void DeleteEventsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
}

::google::protobuf::uint8* DeleteEventsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  return target;
}

size_t DeleteEventsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteEventsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteEventsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteEventsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
    MergeFrom(*source);
  }
}

void DeleteEventsResponse::MergeFrom(const DeleteEventsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteEventsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteEventsResponse::CopyFrom(const DeleteEventsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteEventsResponse::IsInitialized() const {
  return true;
}

void DeleteEventsResponse::Swap(DeleteEventsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteEventsResponse::InternalSwap(DeleteEventsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteEventsResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
