// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/genomics/v1alpha2/pipelines.proto

#include "google/genomics/v1alpha2/pipelines.pb.h"
#include "google/genomics/v1alpha2/pipelines.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace genomics {
namespace v1alpha2 {

static const char* PipelinesV1Alpha2_method_names[] = {
  "/google.genomics.v1alpha2.PipelinesV1Alpha2/CreatePipeline",
  "/google.genomics.v1alpha2.PipelinesV1Alpha2/RunPipeline",
  "/google.genomics.v1alpha2.PipelinesV1Alpha2/GetPipeline",
  "/google.genomics.v1alpha2.PipelinesV1Alpha2/ListPipelines",
  "/google.genomics.v1alpha2.PipelinesV1Alpha2/DeletePipeline",
  "/google.genomics.v1alpha2.PipelinesV1Alpha2/GetControllerConfig",
  "/google.genomics.v1alpha2.PipelinesV1Alpha2/SetOperationStatus",
};

std::unique_ptr< PipelinesV1Alpha2::Stub> PipelinesV1Alpha2::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< PipelinesV1Alpha2::Stub> stub(new PipelinesV1Alpha2::Stub(channel));
  return stub;
}

PipelinesV1Alpha2::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreatePipeline_(PipelinesV1Alpha2_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RunPipeline_(PipelinesV1Alpha2_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetPipeline_(PipelinesV1Alpha2_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListPipelines_(PipelinesV1Alpha2_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeletePipeline_(PipelinesV1Alpha2_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetControllerConfig_(PipelinesV1Alpha2_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetOperationStatus_(PipelinesV1Alpha2_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status PipelinesV1Alpha2::Stub::CreatePipeline(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::CreatePipelineRequest& request, ::google::genomics::v1alpha2::Pipeline* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreatePipeline_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::Pipeline>* PipelinesV1Alpha2::Stub::AsyncCreatePipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::CreatePipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::Pipeline>::Create(channel_.get(), cq, rpcmethod_CreatePipeline_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::Pipeline>* PipelinesV1Alpha2::Stub::PrepareAsyncCreatePipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::CreatePipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::Pipeline>::Create(channel_.get(), cq, rpcmethod_CreatePipeline_, context, request, false);
}

::grpc::Status PipelinesV1Alpha2::Stub::RunPipeline(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::RunPipelineRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_RunPipeline_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PipelinesV1Alpha2::Stub::AsyncRunPipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::RunPipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_RunPipeline_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PipelinesV1Alpha2::Stub::PrepareAsyncRunPipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::RunPipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_RunPipeline_, context, request, false);
}

::grpc::Status PipelinesV1Alpha2::Stub::GetPipeline(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::GetPipelineRequest& request, ::google::genomics::v1alpha2::Pipeline* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetPipeline_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::Pipeline>* PipelinesV1Alpha2::Stub::AsyncGetPipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::GetPipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::Pipeline>::Create(channel_.get(), cq, rpcmethod_GetPipeline_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::Pipeline>* PipelinesV1Alpha2::Stub::PrepareAsyncGetPipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::GetPipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::Pipeline>::Create(channel_.get(), cq, rpcmethod_GetPipeline_, context, request, false);
}

::grpc::Status PipelinesV1Alpha2::Stub::ListPipelines(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::ListPipelinesRequest& request, ::google::genomics::v1alpha2::ListPipelinesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListPipelines_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::ListPipelinesResponse>* PipelinesV1Alpha2::Stub::AsyncListPipelinesRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::ListPipelinesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::ListPipelinesResponse>::Create(channel_.get(), cq, rpcmethod_ListPipelines_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::ListPipelinesResponse>* PipelinesV1Alpha2::Stub::PrepareAsyncListPipelinesRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::ListPipelinesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::ListPipelinesResponse>::Create(channel_.get(), cq, rpcmethod_ListPipelines_, context, request, false);
}

::grpc::Status PipelinesV1Alpha2::Stub::DeletePipeline(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::DeletePipelineRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeletePipeline_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PipelinesV1Alpha2::Stub::AsyncDeletePipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::DeletePipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeletePipeline_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PipelinesV1Alpha2::Stub::PrepareAsyncDeletePipelineRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::DeletePipelineRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeletePipeline_, context, request, false);
}

::grpc::Status PipelinesV1Alpha2::Stub::GetControllerConfig(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::GetControllerConfigRequest& request, ::google::genomics::v1alpha2::ControllerConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetControllerConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::ControllerConfig>* PipelinesV1Alpha2::Stub::AsyncGetControllerConfigRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::GetControllerConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::ControllerConfig>::Create(channel_.get(), cq, rpcmethod_GetControllerConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1alpha2::ControllerConfig>* PipelinesV1Alpha2::Stub::PrepareAsyncGetControllerConfigRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::GetControllerConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::genomics::v1alpha2::ControllerConfig>::Create(channel_.get(), cq, rpcmethod_GetControllerConfig_, context, request, false);
}

::grpc::Status PipelinesV1Alpha2::Stub::SetOperationStatus(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::SetOperationStatusRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SetOperationStatus_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PipelinesV1Alpha2::Stub::AsyncSetOperationStatusRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::SetOperationStatusRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_SetOperationStatus_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PipelinesV1Alpha2::Stub::PrepareAsyncSetOperationStatusRaw(::grpc::ClientContext* context, const ::google::genomics::v1alpha2::SetOperationStatusRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_SetOperationStatus_, context, request, false);
}

PipelinesV1Alpha2::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PipelinesV1Alpha2_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PipelinesV1Alpha2::Service, ::google::genomics::v1alpha2::CreatePipelineRequest, ::google::genomics::v1alpha2::Pipeline>(
          std::mem_fn(&PipelinesV1Alpha2::Service::CreatePipeline), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PipelinesV1Alpha2_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PipelinesV1Alpha2::Service, ::google::genomics::v1alpha2::RunPipelineRequest, ::google::longrunning::Operation>(
          std::mem_fn(&PipelinesV1Alpha2::Service::RunPipeline), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PipelinesV1Alpha2_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PipelinesV1Alpha2::Service, ::google::genomics::v1alpha2::GetPipelineRequest, ::google::genomics::v1alpha2::Pipeline>(
          std::mem_fn(&PipelinesV1Alpha2::Service::GetPipeline), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PipelinesV1Alpha2_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PipelinesV1Alpha2::Service, ::google::genomics::v1alpha2::ListPipelinesRequest, ::google::genomics::v1alpha2::ListPipelinesResponse>(
          std::mem_fn(&PipelinesV1Alpha2::Service::ListPipelines), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PipelinesV1Alpha2_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PipelinesV1Alpha2::Service, ::google::genomics::v1alpha2::DeletePipelineRequest, ::google::protobuf::Empty>(
          std::mem_fn(&PipelinesV1Alpha2::Service::DeletePipeline), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PipelinesV1Alpha2_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PipelinesV1Alpha2::Service, ::google::genomics::v1alpha2::GetControllerConfigRequest, ::google::genomics::v1alpha2::ControllerConfig>(
          std::mem_fn(&PipelinesV1Alpha2::Service::GetControllerConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PipelinesV1Alpha2_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PipelinesV1Alpha2::Service, ::google::genomics::v1alpha2::SetOperationStatusRequest, ::google::protobuf::Empty>(
          std::mem_fn(&PipelinesV1Alpha2::Service::SetOperationStatus), this)));
}

PipelinesV1Alpha2::Service::~Service() {
}

::grpc::Status PipelinesV1Alpha2::Service::CreatePipeline(::grpc::ServerContext* context, const ::google::genomics::v1alpha2::CreatePipelineRequest* request, ::google::genomics::v1alpha2::Pipeline* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PipelinesV1Alpha2::Service::RunPipeline(::grpc::ServerContext* context, const ::google::genomics::v1alpha2::RunPipelineRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PipelinesV1Alpha2::Service::GetPipeline(::grpc::ServerContext* context, const ::google::genomics::v1alpha2::GetPipelineRequest* request, ::google::genomics::v1alpha2::Pipeline* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PipelinesV1Alpha2::Service::ListPipelines(::grpc::ServerContext* context, const ::google::genomics::v1alpha2::ListPipelinesRequest* request, ::google::genomics::v1alpha2::ListPipelinesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PipelinesV1Alpha2::Service::DeletePipeline(::grpc::ServerContext* context, const ::google::genomics::v1alpha2::DeletePipelineRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PipelinesV1Alpha2::Service::GetControllerConfig(::grpc::ServerContext* context, const ::google::genomics::v1alpha2::GetControllerConfigRequest* request, ::google::genomics::v1alpha2::ControllerConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PipelinesV1Alpha2::Service::SetOperationStatus(::grpc::ServerContext* context, const ::google::genomics::v1alpha2::SetOperationStatusRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace genomics
}  // namespace v1alpha2

