// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/annotations.proto

#ifndef PROTOBUF_google_2fgenomics_2fv1_2fannotations_2eproto__INCLUDED
#define PROTOBUF_google_2fgenomics_2fv1_2fannotations_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fgenomics_2fv1_2fannotations_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[25];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAnnotationSet_InfoEntry_DoNotUseImpl();
void InitDefaultsAnnotationSet_InfoEntry_DoNotUse();
void InitDefaultsAnnotationSetImpl();
void InitDefaultsAnnotationSet();
void InitDefaultsAnnotation_InfoEntry_DoNotUseImpl();
void InitDefaultsAnnotation_InfoEntry_DoNotUse();
void InitDefaultsAnnotationImpl();
void InitDefaultsAnnotation();
void InitDefaultsVariantAnnotation_ClinicalConditionImpl();
void InitDefaultsVariantAnnotation_ClinicalCondition();
void InitDefaultsVariantAnnotationImpl();
void InitDefaultsVariantAnnotation();
void InitDefaultsTranscript_ExonImpl();
void InitDefaultsTranscript_Exon();
void InitDefaultsTranscript_CodingSequenceImpl();
void InitDefaultsTranscript_CodingSequence();
void InitDefaultsTranscriptImpl();
void InitDefaultsTranscript();
void InitDefaultsExternalIdImpl();
void InitDefaultsExternalId();
void InitDefaultsCreateAnnotationSetRequestImpl();
void InitDefaultsCreateAnnotationSetRequest();
void InitDefaultsGetAnnotationSetRequestImpl();
void InitDefaultsGetAnnotationSetRequest();
void InitDefaultsUpdateAnnotationSetRequestImpl();
void InitDefaultsUpdateAnnotationSetRequest();
void InitDefaultsDeleteAnnotationSetRequestImpl();
void InitDefaultsDeleteAnnotationSetRequest();
void InitDefaultsSearchAnnotationSetsRequestImpl();
void InitDefaultsSearchAnnotationSetsRequest();
void InitDefaultsSearchAnnotationSetsResponseImpl();
void InitDefaultsSearchAnnotationSetsResponse();
void InitDefaultsCreateAnnotationRequestImpl();
void InitDefaultsCreateAnnotationRequest();
void InitDefaultsBatchCreateAnnotationsRequestImpl();
void InitDefaultsBatchCreateAnnotationsRequest();
void InitDefaultsBatchCreateAnnotationsResponse_EntryImpl();
void InitDefaultsBatchCreateAnnotationsResponse_Entry();
void InitDefaultsBatchCreateAnnotationsResponseImpl();
void InitDefaultsBatchCreateAnnotationsResponse();
void InitDefaultsGetAnnotationRequestImpl();
void InitDefaultsGetAnnotationRequest();
void InitDefaultsUpdateAnnotationRequestImpl();
void InitDefaultsUpdateAnnotationRequest();
void InitDefaultsDeleteAnnotationRequestImpl();
void InitDefaultsDeleteAnnotationRequest();
void InitDefaultsSearchAnnotationsRequestImpl();
void InitDefaultsSearchAnnotationsRequest();
void InitDefaultsSearchAnnotationsResponseImpl();
void InitDefaultsSearchAnnotationsResponse();
inline void InitDefaults() {
  InitDefaultsAnnotationSet_InfoEntry_DoNotUse();
  InitDefaultsAnnotationSet();
  InitDefaultsAnnotation_InfoEntry_DoNotUse();
  InitDefaultsAnnotation();
  InitDefaultsVariantAnnotation_ClinicalCondition();
  InitDefaultsVariantAnnotation();
  InitDefaultsTranscript_Exon();
  InitDefaultsTranscript_CodingSequence();
  InitDefaultsTranscript();
  InitDefaultsExternalId();
  InitDefaultsCreateAnnotationSetRequest();
  InitDefaultsGetAnnotationSetRequest();
  InitDefaultsUpdateAnnotationSetRequest();
  InitDefaultsDeleteAnnotationSetRequest();
  InitDefaultsSearchAnnotationSetsRequest();
  InitDefaultsSearchAnnotationSetsResponse();
  InitDefaultsCreateAnnotationRequest();
  InitDefaultsBatchCreateAnnotationsRequest();
  InitDefaultsBatchCreateAnnotationsResponse_Entry();
  InitDefaultsBatchCreateAnnotationsResponse();
  InitDefaultsGetAnnotationRequest();
  InitDefaultsUpdateAnnotationRequest();
  InitDefaultsDeleteAnnotationRequest();
  InitDefaultsSearchAnnotationsRequest();
  InitDefaultsSearchAnnotationsResponse();
}
}  // namespace protobuf_google_2fgenomics_2fv1_2fannotations_2eproto
namespace google {
namespace genomics {
namespace v1 {
class Annotation;
class AnnotationDefaultTypeInternal;
extern AnnotationDefaultTypeInternal _Annotation_default_instance_;
class AnnotationSet;
class AnnotationSetDefaultTypeInternal;
extern AnnotationSetDefaultTypeInternal _AnnotationSet_default_instance_;
class AnnotationSet_InfoEntry_DoNotUse;
class AnnotationSet_InfoEntry_DoNotUseDefaultTypeInternal;
extern AnnotationSet_InfoEntry_DoNotUseDefaultTypeInternal _AnnotationSet_InfoEntry_DoNotUse_default_instance_;
class Annotation_InfoEntry_DoNotUse;
class Annotation_InfoEntry_DoNotUseDefaultTypeInternal;
extern Annotation_InfoEntry_DoNotUseDefaultTypeInternal _Annotation_InfoEntry_DoNotUse_default_instance_;
class BatchCreateAnnotationsRequest;
class BatchCreateAnnotationsRequestDefaultTypeInternal;
extern BatchCreateAnnotationsRequestDefaultTypeInternal _BatchCreateAnnotationsRequest_default_instance_;
class BatchCreateAnnotationsResponse;
class BatchCreateAnnotationsResponseDefaultTypeInternal;
extern BatchCreateAnnotationsResponseDefaultTypeInternal _BatchCreateAnnotationsResponse_default_instance_;
class BatchCreateAnnotationsResponse_Entry;
class BatchCreateAnnotationsResponse_EntryDefaultTypeInternal;
extern BatchCreateAnnotationsResponse_EntryDefaultTypeInternal _BatchCreateAnnotationsResponse_Entry_default_instance_;
class CreateAnnotationRequest;
class CreateAnnotationRequestDefaultTypeInternal;
extern CreateAnnotationRequestDefaultTypeInternal _CreateAnnotationRequest_default_instance_;
class CreateAnnotationSetRequest;
class CreateAnnotationSetRequestDefaultTypeInternal;
extern CreateAnnotationSetRequestDefaultTypeInternal _CreateAnnotationSetRequest_default_instance_;
class DeleteAnnotationRequest;
class DeleteAnnotationRequestDefaultTypeInternal;
extern DeleteAnnotationRequestDefaultTypeInternal _DeleteAnnotationRequest_default_instance_;
class DeleteAnnotationSetRequest;
class DeleteAnnotationSetRequestDefaultTypeInternal;
extern DeleteAnnotationSetRequestDefaultTypeInternal _DeleteAnnotationSetRequest_default_instance_;
class ExternalId;
class ExternalIdDefaultTypeInternal;
extern ExternalIdDefaultTypeInternal _ExternalId_default_instance_;
class GetAnnotationRequest;
class GetAnnotationRequestDefaultTypeInternal;
extern GetAnnotationRequestDefaultTypeInternal _GetAnnotationRequest_default_instance_;
class GetAnnotationSetRequest;
class GetAnnotationSetRequestDefaultTypeInternal;
extern GetAnnotationSetRequestDefaultTypeInternal _GetAnnotationSetRequest_default_instance_;
class SearchAnnotationSetsRequest;
class SearchAnnotationSetsRequestDefaultTypeInternal;
extern SearchAnnotationSetsRequestDefaultTypeInternal _SearchAnnotationSetsRequest_default_instance_;
class SearchAnnotationSetsResponse;
class SearchAnnotationSetsResponseDefaultTypeInternal;
extern SearchAnnotationSetsResponseDefaultTypeInternal _SearchAnnotationSetsResponse_default_instance_;
class SearchAnnotationsRequest;
class SearchAnnotationsRequestDefaultTypeInternal;
extern SearchAnnotationsRequestDefaultTypeInternal _SearchAnnotationsRequest_default_instance_;
class SearchAnnotationsResponse;
class SearchAnnotationsResponseDefaultTypeInternal;
extern SearchAnnotationsResponseDefaultTypeInternal _SearchAnnotationsResponse_default_instance_;
class Transcript;
class TranscriptDefaultTypeInternal;
extern TranscriptDefaultTypeInternal _Transcript_default_instance_;
class Transcript_CodingSequence;
class Transcript_CodingSequenceDefaultTypeInternal;
extern Transcript_CodingSequenceDefaultTypeInternal _Transcript_CodingSequence_default_instance_;
class Transcript_Exon;
class Transcript_ExonDefaultTypeInternal;
extern Transcript_ExonDefaultTypeInternal _Transcript_Exon_default_instance_;
class UpdateAnnotationRequest;
class UpdateAnnotationRequestDefaultTypeInternal;
extern UpdateAnnotationRequestDefaultTypeInternal _UpdateAnnotationRequest_default_instance_;
class UpdateAnnotationSetRequest;
class UpdateAnnotationSetRequestDefaultTypeInternal;
extern UpdateAnnotationSetRequestDefaultTypeInternal _UpdateAnnotationSetRequest_default_instance_;
class VariantAnnotation;
class VariantAnnotationDefaultTypeInternal;
extern VariantAnnotationDefaultTypeInternal _VariantAnnotation_default_instance_;
class VariantAnnotation_ClinicalCondition;
class VariantAnnotation_ClinicalConditionDefaultTypeInternal;
extern VariantAnnotation_ClinicalConditionDefaultTypeInternal _VariantAnnotation_ClinicalCondition_default_instance_;
}  // namespace v1
}  // namespace genomics
}  // namespace google
namespace google {
namespace genomics {
namespace v1 {

enum VariantAnnotation_Type {
  VariantAnnotation_Type_TYPE_UNSPECIFIED = 0,
  VariantAnnotation_Type_TYPE_OTHER = 1,
  VariantAnnotation_Type_INSERTION = 2,
  VariantAnnotation_Type_DELETION = 3,
  VariantAnnotation_Type_SUBSTITUTION = 4,
  VariantAnnotation_Type_SNP = 5,
  VariantAnnotation_Type_STRUCTURAL = 6,
  VariantAnnotation_Type_CNV = 7,
  VariantAnnotation_Type_VariantAnnotation_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VariantAnnotation_Type_VariantAnnotation_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VariantAnnotation_Type_IsValid(int value);
const VariantAnnotation_Type VariantAnnotation_Type_Type_MIN = VariantAnnotation_Type_TYPE_UNSPECIFIED;
const VariantAnnotation_Type VariantAnnotation_Type_Type_MAX = VariantAnnotation_Type_CNV;
const int VariantAnnotation_Type_Type_ARRAYSIZE = VariantAnnotation_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* VariantAnnotation_Type_descriptor();
inline const ::std::string& VariantAnnotation_Type_Name(VariantAnnotation_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    VariantAnnotation_Type_descriptor(), value);
}
inline bool VariantAnnotation_Type_Parse(
    const ::std::string& name, VariantAnnotation_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariantAnnotation_Type>(
    VariantAnnotation_Type_descriptor(), name, value);
}
enum VariantAnnotation_Effect {
  VariantAnnotation_Effect_EFFECT_UNSPECIFIED = 0,
  VariantAnnotation_Effect_EFFECT_OTHER = 1,
  VariantAnnotation_Effect_FRAMESHIFT = 2,
  VariantAnnotation_Effect_FRAME_PRESERVING_INDEL = 3,
  VariantAnnotation_Effect_SYNONYMOUS_SNP = 4,
  VariantAnnotation_Effect_NONSYNONYMOUS_SNP = 5,
  VariantAnnotation_Effect_STOP_GAIN = 6,
  VariantAnnotation_Effect_STOP_LOSS = 7,
  VariantAnnotation_Effect_SPLICE_SITE_DISRUPTION = 8,
  VariantAnnotation_Effect_VariantAnnotation_Effect_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VariantAnnotation_Effect_VariantAnnotation_Effect_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VariantAnnotation_Effect_IsValid(int value);
const VariantAnnotation_Effect VariantAnnotation_Effect_Effect_MIN = VariantAnnotation_Effect_EFFECT_UNSPECIFIED;
const VariantAnnotation_Effect VariantAnnotation_Effect_Effect_MAX = VariantAnnotation_Effect_SPLICE_SITE_DISRUPTION;
const int VariantAnnotation_Effect_Effect_ARRAYSIZE = VariantAnnotation_Effect_Effect_MAX + 1;

const ::google::protobuf::EnumDescriptor* VariantAnnotation_Effect_descriptor();
inline const ::std::string& VariantAnnotation_Effect_Name(VariantAnnotation_Effect value) {
  return ::google::protobuf::internal::NameOfEnum(
    VariantAnnotation_Effect_descriptor(), value);
}
inline bool VariantAnnotation_Effect_Parse(
    const ::std::string& name, VariantAnnotation_Effect* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariantAnnotation_Effect>(
    VariantAnnotation_Effect_descriptor(), name, value);
}
enum VariantAnnotation_ClinicalSignificance {
  VariantAnnotation_ClinicalSignificance_CLINICAL_SIGNIFICANCE_UNSPECIFIED = 0,
  VariantAnnotation_ClinicalSignificance_CLINICAL_SIGNIFICANCE_OTHER = 1,
  VariantAnnotation_ClinicalSignificance_UNCERTAIN = 2,
  VariantAnnotation_ClinicalSignificance_BENIGN = 3,
  VariantAnnotation_ClinicalSignificance_LIKELY_BENIGN = 4,
  VariantAnnotation_ClinicalSignificance_LIKELY_PATHOGENIC = 5,
  VariantAnnotation_ClinicalSignificance_PATHOGENIC = 6,
  VariantAnnotation_ClinicalSignificance_DRUG_RESPONSE = 7,
  VariantAnnotation_ClinicalSignificance_HISTOCOMPATIBILITY = 8,
  VariantAnnotation_ClinicalSignificance_CONFERS_SENSITIVITY = 9,
  VariantAnnotation_ClinicalSignificance_RISK_FACTOR = 10,
  VariantAnnotation_ClinicalSignificance_ASSOCIATION = 11,
  VariantAnnotation_ClinicalSignificance_PROTECTIVE = 12,
  VariantAnnotation_ClinicalSignificance_MULTIPLE_REPORTED = 13,
  VariantAnnotation_ClinicalSignificance_VariantAnnotation_ClinicalSignificance_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VariantAnnotation_ClinicalSignificance_VariantAnnotation_ClinicalSignificance_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VariantAnnotation_ClinicalSignificance_IsValid(int value);
const VariantAnnotation_ClinicalSignificance VariantAnnotation_ClinicalSignificance_ClinicalSignificance_MIN = VariantAnnotation_ClinicalSignificance_CLINICAL_SIGNIFICANCE_UNSPECIFIED;
const VariantAnnotation_ClinicalSignificance VariantAnnotation_ClinicalSignificance_ClinicalSignificance_MAX = VariantAnnotation_ClinicalSignificance_MULTIPLE_REPORTED;
const int VariantAnnotation_ClinicalSignificance_ClinicalSignificance_ARRAYSIZE = VariantAnnotation_ClinicalSignificance_ClinicalSignificance_MAX + 1;

const ::google::protobuf::EnumDescriptor* VariantAnnotation_ClinicalSignificance_descriptor();
inline const ::std::string& VariantAnnotation_ClinicalSignificance_Name(VariantAnnotation_ClinicalSignificance value) {
  return ::google::protobuf::internal::NameOfEnum(
    VariantAnnotation_ClinicalSignificance_descriptor(), value);
}
inline bool VariantAnnotation_ClinicalSignificance_Parse(
    const ::std::string& name, VariantAnnotation_ClinicalSignificance* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariantAnnotation_ClinicalSignificance>(
    VariantAnnotation_ClinicalSignificance_descriptor(), name, value);
}
enum AnnotationType {
  ANNOTATION_TYPE_UNSPECIFIED = 0,
  GENERIC = 1,
  VARIANT = 2,
  GENE = 3,
  TRANSCRIPT = 4,
  AnnotationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AnnotationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AnnotationType_IsValid(int value);
const AnnotationType AnnotationType_MIN = ANNOTATION_TYPE_UNSPECIFIED;
const AnnotationType AnnotationType_MAX = TRANSCRIPT;
const int AnnotationType_ARRAYSIZE = AnnotationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AnnotationType_descriptor();
inline const ::std::string& AnnotationType_Name(AnnotationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AnnotationType_descriptor(), value);
}
inline bool AnnotationType_Parse(
    const ::std::string& name, AnnotationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AnnotationType>(
    AnnotationType_descriptor(), name, value);
}
// ===================================================================

class AnnotationSet_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AnnotationSet_InfoEntry_DoNotUse, 
    ::std::string, ::google::protobuf::ListValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AnnotationSet_InfoEntry_DoNotUse, 
    ::std::string, ::google::protobuf::ListValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  AnnotationSet_InfoEntry_DoNotUse();
  AnnotationSet_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AnnotationSet_InfoEntry_DoNotUse& other);
  static const AnnotationSet_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AnnotationSet_InfoEntry_DoNotUse*>(&_AnnotationSet_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AnnotationSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.AnnotationSet) */ {
 public:
  AnnotationSet();
  virtual ~AnnotationSet();

  AnnotationSet(const AnnotationSet& from);

  inline AnnotationSet& operator=(const AnnotationSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnotationSet(AnnotationSet&& from) noexcept
    : AnnotationSet() {
    *this = ::std::move(from);
  }

  inline AnnotationSet& operator=(AnnotationSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotationSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnnotationSet* internal_default_instance() {
    return reinterpret_cast<const AnnotationSet*>(
               &_AnnotationSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(AnnotationSet* other);
  void Swap(AnnotationSet* other);
  friend void swap(AnnotationSet& a, AnnotationSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnotationSet* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotationSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotationSet& from);
  void MergeFrom(const AnnotationSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotationSet* other);
  protected:
  explicit AnnotationSet(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.protobuf.ListValue> info = 17;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 17;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string dataset_id = 2;
  void clear_dataset_id();
  static const int kDatasetIdFieldNumber = 2;
  const ::std::string& dataset_id() const;
  void set_dataset_id(const ::std::string& value);
  #if LANG_CXX11
  void set_dataset_id(::std::string&& value);
  #endif
  void set_dataset_id(const char* value);
  void set_dataset_id(const char* value, size_t size);
  ::std::string* mutable_dataset_id();
  ::std::string* release_dataset_id();
  void set_allocated_dataset_id(::std::string* dataset_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_dataset_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_dataset_id(
      ::std::string* dataset_id);

  // string reference_set_id = 3;
  void clear_reference_set_id();
  static const int kReferenceSetIdFieldNumber = 3;
  const ::std::string& reference_set_id() const;
  void set_reference_set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_reference_set_id(::std::string&& value);
  #endif
  void set_reference_set_id(const char* value);
  void set_reference_set_id(const char* value, size_t size);
  ::std::string* mutable_reference_set_id();
  ::std::string* release_reference_set_id();
  void set_allocated_reference_set_id(::std::string* reference_set_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reference_set_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reference_set_id(
      ::std::string* reference_set_id);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string source_uri = 5;
  void clear_source_uri();
  static const int kSourceUriFieldNumber = 5;
  const ::std::string& source_uri() const;
  void set_source_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_source_uri(::std::string&& value);
  #endif
  void set_source_uri(const char* value);
  void set_source_uri(const char* value, size_t size);
  ::std::string* mutable_source_uri();
  ::std::string* release_source_uri();
  void set_allocated_source_uri(::std::string* source_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_source_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_source_uri(
      ::std::string* source_uri);

  // .google.genomics.v1.AnnotationType type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::genomics::v1::AnnotationType type() const;
  void set_type(::google::genomics::v1::AnnotationType value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.AnnotationSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::MapField<
      AnnotationSet_InfoEntry_DoNotUse,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr dataset_id_;
  ::google::protobuf::internal::ArenaStringPtr reference_set_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr source_uri_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsAnnotationSetImpl();
};
// -------------------------------------------------------------------

class Annotation_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Annotation_InfoEntry_DoNotUse, 
    ::std::string, ::google::protobuf::ListValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Annotation_InfoEntry_DoNotUse, 
    ::std::string, ::google::protobuf::ListValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Annotation_InfoEntry_DoNotUse();
  Annotation_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Annotation_InfoEntry_DoNotUse& other);
  static const Annotation_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Annotation_InfoEntry_DoNotUse*>(&_Annotation_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Annotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.Annotation) */ {
 public:
  Annotation();
  virtual ~Annotation();

  Annotation(const Annotation& from);

  inline Annotation& operator=(const Annotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Annotation(Annotation&& from) noexcept
    : Annotation() {
    *this = ::std::move(from);
  }

  inline Annotation& operator=(Annotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Annotation& default_instance();

  enum ValueCase {
    kVariant = 10,
    kTranscript = 11,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Annotation* internal_default_instance() {
    return reinterpret_cast<const Annotation*>(
               &_Annotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(Annotation* other);
  void Swap(Annotation* other);
  friend void swap(Annotation& a, Annotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Annotation* New() const PROTOBUF_FINAL { return New(NULL); }

  Annotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Annotation& from);
  void MergeFrom(const Annotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Annotation* other);
  protected:
  explicit Annotation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.protobuf.ListValue> info = 12;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 12;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string annotation_set_id = 2;
  void clear_annotation_set_id();
  static const int kAnnotationSetIdFieldNumber = 2;
  const ::std::string& annotation_set_id() const;
  void set_annotation_set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_set_id(::std::string&& value);
  #endif
  void set_annotation_set_id(const char* value);
  void set_annotation_set_id(const char* value, size_t size);
  ::std::string* mutable_annotation_set_id();
  ::std::string* release_annotation_set_id();
  void set_allocated_annotation_set_id(::std::string* annotation_set_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_annotation_set_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_annotation_set_id(
      ::std::string* annotation_set_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string reference_id = 4;
  void clear_reference_id();
  static const int kReferenceIdFieldNumber = 4;
  const ::std::string& reference_id() const;
  void set_reference_id(const ::std::string& value);
  #if LANG_CXX11
  void set_reference_id(::std::string&& value);
  #endif
  void set_reference_id(const char* value);
  void set_reference_id(const char* value, size_t size);
  ::std::string* mutable_reference_id();
  ::std::string* release_reference_id();
  void set_allocated_reference_id(::std::string* reference_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reference_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reference_id(
      ::std::string* reference_id);

  // string reference_name = 5;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 5;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  #if LANG_CXX11
  void set_reference_name(::std::string&& value);
  #endif
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reference_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // int64 start = 6;
  void clear_start();
  static const int kStartFieldNumber = 6;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // int64 end = 7;
  void clear_end();
  static const int kEndFieldNumber = 7;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // bool reverse_strand = 8;
  void clear_reverse_strand();
  static const int kReverseStrandFieldNumber = 8;
  bool reverse_strand() const;
  void set_reverse_strand(bool value);

  // .google.genomics.v1.AnnotationType type = 9;
  void clear_type();
  static const int kTypeFieldNumber = 9;
  ::google::genomics::v1::AnnotationType type() const;
  void set_type(::google::genomics::v1::AnnotationType value);

  // .google.genomics.v1.VariantAnnotation variant = 10;
  bool has_variant() const;
  void clear_variant();
  static const int kVariantFieldNumber = 10;
  private:
  void _slow_mutable_variant();
  public:
  const ::google::genomics::v1::VariantAnnotation& variant() const;
  ::google::genomics::v1::VariantAnnotation* release_variant();
  ::google::genomics::v1::VariantAnnotation* mutable_variant();
  void set_allocated_variant(::google::genomics::v1::VariantAnnotation* variant);
  void unsafe_arena_set_allocated_variant(
      ::google::genomics::v1::VariantAnnotation* variant);
  ::google::genomics::v1::VariantAnnotation* unsafe_arena_release_variant();

  // .google.genomics.v1.Transcript transcript = 11;
  bool has_transcript() const;
  void clear_transcript();
  static const int kTranscriptFieldNumber = 11;
  private:
  void _slow_mutable_transcript();
  public:
  const ::google::genomics::v1::Transcript& transcript() const;
  ::google::genomics::v1::Transcript* release_transcript();
  ::google::genomics::v1::Transcript* mutable_transcript();
  void set_allocated_transcript(::google::genomics::v1::Transcript* transcript);
  void unsafe_arena_set_allocated_transcript(
      ::google::genomics::v1::Transcript* transcript);
  ::google::genomics::v1::Transcript* unsafe_arena_release_transcript();

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.genomics.v1.Annotation)
 private:
  void set_has_variant();
  void set_has_transcript();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::MapField<
      Annotation_InfoEntry_DoNotUse,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr annotation_set_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr reference_id_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  bool reverse_strand_;
  int type_;
  union ValueUnion {
    ValueUnion() {}
    ::google::genomics::v1::VariantAnnotation* variant_;
    ::google::genomics::v1::Transcript* transcript_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsAnnotationImpl();
};
// -------------------------------------------------------------------

class VariantAnnotation_ClinicalCondition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.VariantAnnotation.ClinicalCondition) */ {
 public:
  VariantAnnotation_ClinicalCondition();
  virtual ~VariantAnnotation_ClinicalCondition();

  VariantAnnotation_ClinicalCondition(const VariantAnnotation_ClinicalCondition& from);

  inline VariantAnnotation_ClinicalCondition& operator=(const VariantAnnotation_ClinicalCondition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VariantAnnotation_ClinicalCondition(VariantAnnotation_ClinicalCondition&& from) noexcept
    : VariantAnnotation_ClinicalCondition() {
    *this = ::std::move(from);
  }

  inline VariantAnnotation_ClinicalCondition& operator=(VariantAnnotation_ClinicalCondition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantAnnotation_ClinicalCondition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VariantAnnotation_ClinicalCondition* internal_default_instance() {
    return reinterpret_cast<const VariantAnnotation_ClinicalCondition*>(
               &_VariantAnnotation_ClinicalCondition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(VariantAnnotation_ClinicalCondition* other);
  void Swap(VariantAnnotation_ClinicalCondition* other);
  friend void swap(VariantAnnotation_ClinicalCondition& a, VariantAnnotation_ClinicalCondition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VariantAnnotation_ClinicalCondition* New() const PROTOBUF_FINAL { return New(NULL); }

  VariantAnnotation_ClinicalCondition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariantAnnotation_ClinicalCondition& from);
  void MergeFrom(const VariantAnnotation_ClinicalCondition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariantAnnotation_ClinicalCondition* other);
  protected:
  explicit VariantAnnotation_ClinicalCondition(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string names = 1;
  int names_size() const;
  void clear_names();
  static const int kNamesFieldNumber = 1;
  const ::std::string& names(int index) const;
  ::std::string* mutable_names(int index);
  void set_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_names(int index, ::std::string&& value);
  #endif
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, size_t size);
  ::std::string* add_names();
  void add_names(const ::std::string& value);
  #if LANG_CXX11
  void add_names(::std::string&& value);
  #endif
  void add_names(const char* value);
  void add_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();

  // repeated .google.genomics.v1.ExternalId external_ids = 2;
  int external_ids_size() const;
  void clear_external_ids();
  static const int kExternalIdsFieldNumber = 2;
  const ::google::genomics::v1::ExternalId& external_ids(int index) const;
  ::google::genomics::v1::ExternalId* mutable_external_ids(int index);
  ::google::genomics::v1::ExternalId* add_external_ids();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ExternalId >*
      mutable_external_ids();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ExternalId >&
      external_ids() const;

  // string concept_id = 3;
  void clear_concept_id();
  static const int kConceptIdFieldNumber = 3;
  const ::std::string& concept_id() const;
  void set_concept_id(const ::std::string& value);
  #if LANG_CXX11
  void set_concept_id(::std::string&& value);
  #endif
  void set_concept_id(const char* value);
  void set_concept_id(const char* value, size_t size);
  ::std::string* mutable_concept_id();
  ::std::string* release_concept_id();
  void set_allocated_concept_id(::std::string* concept_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_concept_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_concept_id(
      ::std::string* concept_id);

  // string omim_id = 4;
  void clear_omim_id();
  static const int kOmimIdFieldNumber = 4;
  const ::std::string& omim_id() const;
  void set_omim_id(const ::std::string& value);
  #if LANG_CXX11
  void set_omim_id(::std::string&& value);
  #endif
  void set_omim_id(const char* value);
  void set_omim_id(const char* value, size_t size);
  ::std::string* mutable_omim_id();
  ::std::string* release_omim_id();
  void set_allocated_omim_id(::std::string* omim_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_omim_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_omim_id(
      ::std::string* omim_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.VariantAnnotation.ClinicalCondition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ExternalId > external_ids_;
  ::google::protobuf::internal::ArenaStringPtr concept_id_;
  ::google::protobuf::internal::ArenaStringPtr omim_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsVariantAnnotation_ClinicalConditionImpl();
};
// -------------------------------------------------------------------

class VariantAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.VariantAnnotation) */ {
 public:
  VariantAnnotation();
  virtual ~VariantAnnotation();

  VariantAnnotation(const VariantAnnotation& from);

  inline VariantAnnotation& operator=(const VariantAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VariantAnnotation(VariantAnnotation&& from) noexcept
    : VariantAnnotation() {
    *this = ::std::move(from);
  }

  inline VariantAnnotation& operator=(VariantAnnotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantAnnotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VariantAnnotation* internal_default_instance() {
    return reinterpret_cast<const VariantAnnotation*>(
               &_VariantAnnotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(VariantAnnotation* other);
  void Swap(VariantAnnotation* other);
  friend void swap(VariantAnnotation& a, VariantAnnotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VariantAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  VariantAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariantAnnotation& from);
  void MergeFrom(const VariantAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariantAnnotation* other);
  protected:
  explicit VariantAnnotation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VariantAnnotation_ClinicalCondition ClinicalCondition;

  typedef VariantAnnotation_Type Type;
  static const Type TYPE_UNSPECIFIED =
    VariantAnnotation_Type_TYPE_UNSPECIFIED;
  static const Type TYPE_OTHER =
    VariantAnnotation_Type_TYPE_OTHER;
  static const Type INSERTION =
    VariantAnnotation_Type_INSERTION;
  static const Type DELETION =
    VariantAnnotation_Type_DELETION;
  static const Type SUBSTITUTION =
    VariantAnnotation_Type_SUBSTITUTION;
  static const Type SNP =
    VariantAnnotation_Type_SNP;
  static const Type STRUCTURAL =
    VariantAnnotation_Type_STRUCTURAL;
  static const Type CNV =
    VariantAnnotation_Type_CNV;
  static inline bool Type_IsValid(int value) {
    return VariantAnnotation_Type_IsValid(value);
  }
  static const Type Type_MIN =
    VariantAnnotation_Type_Type_MIN;
  static const Type Type_MAX =
    VariantAnnotation_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    VariantAnnotation_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return VariantAnnotation_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return VariantAnnotation_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return VariantAnnotation_Type_Parse(name, value);
  }

  typedef VariantAnnotation_Effect Effect;
  static const Effect EFFECT_UNSPECIFIED =
    VariantAnnotation_Effect_EFFECT_UNSPECIFIED;
  static const Effect EFFECT_OTHER =
    VariantAnnotation_Effect_EFFECT_OTHER;
  static const Effect FRAMESHIFT =
    VariantAnnotation_Effect_FRAMESHIFT;
  static const Effect FRAME_PRESERVING_INDEL =
    VariantAnnotation_Effect_FRAME_PRESERVING_INDEL;
  static const Effect SYNONYMOUS_SNP =
    VariantAnnotation_Effect_SYNONYMOUS_SNP;
  static const Effect NONSYNONYMOUS_SNP =
    VariantAnnotation_Effect_NONSYNONYMOUS_SNP;
  static const Effect STOP_GAIN =
    VariantAnnotation_Effect_STOP_GAIN;
  static const Effect STOP_LOSS =
    VariantAnnotation_Effect_STOP_LOSS;
  static const Effect SPLICE_SITE_DISRUPTION =
    VariantAnnotation_Effect_SPLICE_SITE_DISRUPTION;
  static inline bool Effect_IsValid(int value) {
    return VariantAnnotation_Effect_IsValid(value);
  }
  static const Effect Effect_MIN =
    VariantAnnotation_Effect_Effect_MIN;
  static const Effect Effect_MAX =
    VariantAnnotation_Effect_Effect_MAX;
  static const int Effect_ARRAYSIZE =
    VariantAnnotation_Effect_Effect_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Effect_descriptor() {
    return VariantAnnotation_Effect_descriptor();
  }
  static inline const ::std::string& Effect_Name(Effect value) {
    return VariantAnnotation_Effect_Name(value);
  }
  static inline bool Effect_Parse(const ::std::string& name,
      Effect* value) {
    return VariantAnnotation_Effect_Parse(name, value);
  }

  typedef VariantAnnotation_ClinicalSignificance ClinicalSignificance;
  static const ClinicalSignificance CLINICAL_SIGNIFICANCE_UNSPECIFIED =
    VariantAnnotation_ClinicalSignificance_CLINICAL_SIGNIFICANCE_UNSPECIFIED;
  static const ClinicalSignificance CLINICAL_SIGNIFICANCE_OTHER =
    VariantAnnotation_ClinicalSignificance_CLINICAL_SIGNIFICANCE_OTHER;
  static const ClinicalSignificance UNCERTAIN =
    VariantAnnotation_ClinicalSignificance_UNCERTAIN;
  static const ClinicalSignificance BENIGN =
    VariantAnnotation_ClinicalSignificance_BENIGN;
  static const ClinicalSignificance LIKELY_BENIGN =
    VariantAnnotation_ClinicalSignificance_LIKELY_BENIGN;
  static const ClinicalSignificance LIKELY_PATHOGENIC =
    VariantAnnotation_ClinicalSignificance_LIKELY_PATHOGENIC;
  static const ClinicalSignificance PATHOGENIC =
    VariantAnnotation_ClinicalSignificance_PATHOGENIC;
  static const ClinicalSignificance DRUG_RESPONSE =
    VariantAnnotation_ClinicalSignificance_DRUG_RESPONSE;
  static const ClinicalSignificance HISTOCOMPATIBILITY =
    VariantAnnotation_ClinicalSignificance_HISTOCOMPATIBILITY;
  static const ClinicalSignificance CONFERS_SENSITIVITY =
    VariantAnnotation_ClinicalSignificance_CONFERS_SENSITIVITY;
  static const ClinicalSignificance RISK_FACTOR =
    VariantAnnotation_ClinicalSignificance_RISK_FACTOR;
  static const ClinicalSignificance ASSOCIATION =
    VariantAnnotation_ClinicalSignificance_ASSOCIATION;
  static const ClinicalSignificance PROTECTIVE =
    VariantAnnotation_ClinicalSignificance_PROTECTIVE;
  static const ClinicalSignificance MULTIPLE_REPORTED =
    VariantAnnotation_ClinicalSignificance_MULTIPLE_REPORTED;
  static inline bool ClinicalSignificance_IsValid(int value) {
    return VariantAnnotation_ClinicalSignificance_IsValid(value);
  }
  static const ClinicalSignificance ClinicalSignificance_MIN =
    VariantAnnotation_ClinicalSignificance_ClinicalSignificance_MIN;
  static const ClinicalSignificance ClinicalSignificance_MAX =
    VariantAnnotation_ClinicalSignificance_ClinicalSignificance_MAX;
  static const int ClinicalSignificance_ARRAYSIZE =
    VariantAnnotation_ClinicalSignificance_ClinicalSignificance_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ClinicalSignificance_descriptor() {
    return VariantAnnotation_ClinicalSignificance_descriptor();
  }
  static inline const ::std::string& ClinicalSignificance_Name(ClinicalSignificance value) {
    return VariantAnnotation_ClinicalSignificance_Name(value);
  }
  static inline bool ClinicalSignificance_Parse(const ::std::string& name,
      ClinicalSignificance* value) {
    return VariantAnnotation_ClinicalSignificance_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string transcript_ids = 5;
  int transcript_ids_size() const;
  void clear_transcript_ids();
  static const int kTranscriptIdsFieldNumber = 5;
  const ::std::string& transcript_ids(int index) const;
  ::std::string* mutable_transcript_ids(int index);
  void set_transcript_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_transcript_ids(int index, ::std::string&& value);
  #endif
  void set_transcript_ids(int index, const char* value);
  void set_transcript_ids(int index, const char* value, size_t size);
  ::std::string* add_transcript_ids();
  void add_transcript_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_transcript_ids(::std::string&& value);
  #endif
  void add_transcript_ids(const char* value);
  void add_transcript_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& transcript_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_transcript_ids();

  // repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;
  int conditions_size() const;
  void clear_conditions();
  static const int kConditionsFieldNumber = 6;
  const ::google::genomics::v1::VariantAnnotation_ClinicalCondition& conditions(int index) const;
  ::google::genomics::v1::VariantAnnotation_ClinicalCondition* mutable_conditions(int index);
  ::google::genomics::v1::VariantAnnotation_ClinicalCondition* add_conditions();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantAnnotation_ClinicalCondition >*
      mutable_conditions();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantAnnotation_ClinicalCondition >&
      conditions() const;

  // string alternate_bases = 3;
  void clear_alternate_bases();
  static const int kAlternateBasesFieldNumber = 3;
  const ::std::string& alternate_bases() const;
  void set_alternate_bases(const ::std::string& value);
  #if LANG_CXX11
  void set_alternate_bases(::std::string&& value);
  #endif
  void set_alternate_bases(const char* value);
  void set_alternate_bases(const char* value, size_t size);
  ::std::string* mutable_alternate_bases();
  ::std::string* release_alternate_bases();
  void set_allocated_alternate_bases(::std::string* alternate_bases);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_alternate_bases();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_alternate_bases(
      ::std::string* alternate_bases);

  // string gene_id = 4;
  void clear_gene_id();
  static const int kGeneIdFieldNumber = 4;
  const ::std::string& gene_id() const;
  void set_gene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_gene_id(::std::string&& value);
  #endif
  void set_gene_id(const char* value);
  void set_gene_id(const char* value, size_t size);
  ::std::string* mutable_gene_id();
  ::std::string* release_gene_id();
  void set_allocated_gene_id(::std::string* gene_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_gene_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_gene_id(
      ::std::string* gene_id);

  // .google.genomics.v1.VariantAnnotation.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::genomics::v1::VariantAnnotation_Type type() const;
  void set_type(::google::genomics::v1::VariantAnnotation_Type value);

  // .google.genomics.v1.VariantAnnotation.Effect effect = 2;
  void clear_effect();
  static const int kEffectFieldNumber = 2;
  ::google::genomics::v1::VariantAnnotation_Effect effect() const;
  void set_effect(::google::genomics::v1::VariantAnnotation_Effect value);

  // .google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;
  void clear_clinical_significance();
  static const int kClinicalSignificanceFieldNumber = 7;
  ::google::genomics::v1::VariantAnnotation_ClinicalSignificance clinical_significance() const;
  void set_clinical_significance(::google::genomics::v1::VariantAnnotation_ClinicalSignificance value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.VariantAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> transcript_ids_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantAnnotation_ClinicalCondition > conditions_;
  ::google::protobuf::internal::ArenaStringPtr alternate_bases_;
  ::google::protobuf::internal::ArenaStringPtr gene_id_;
  int type_;
  int effect_;
  int clinical_significance_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsVariantAnnotationImpl();
};
// -------------------------------------------------------------------

class Transcript_Exon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.Transcript.Exon) */ {
 public:
  Transcript_Exon();
  virtual ~Transcript_Exon();

  Transcript_Exon(const Transcript_Exon& from);

  inline Transcript_Exon& operator=(const Transcript_Exon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transcript_Exon(Transcript_Exon&& from) noexcept
    : Transcript_Exon() {
    *this = ::std::move(from);
  }

  inline Transcript_Exon& operator=(Transcript_Exon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transcript_Exon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transcript_Exon* internal_default_instance() {
    return reinterpret_cast<const Transcript_Exon*>(
               &_Transcript_Exon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(Transcript_Exon* other);
  void Swap(Transcript_Exon* other);
  friend void swap(Transcript_Exon& a, Transcript_Exon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transcript_Exon* New() const PROTOBUF_FINAL { return New(NULL); }

  Transcript_Exon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Transcript_Exon& from);
  void MergeFrom(const Transcript_Exon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Transcript_Exon* other);
  protected:
  explicit Transcript_Exon(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int32Value frame = 3;
  bool has_frame() const;
  void clear_frame();
  static const int kFrameFieldNumber = 3;
  private:
  void _slow_mutable_frame();
  public:
  const ::google::protobuf::Int32Value& frame() const;
  ::google::protobuf::Int32Value* release_frame();
  ::google::protobuf::Int32Value* mutable_frame();
  void set_allocated_frame(::google::protobuf::Int32Value* frame);
  void unsafe_arena_set_allocated_frame(
      ::google::protobuf::Int32Value* frame);
  ::google::protobuf::Int32Value* unsafe_arena_release_frame();

  // int64 start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // int64 end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.Transcript.Exon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int32Value* frame_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsTranscript_ExonImpl();
};
// -------------------------------------------------------------------

class Transcript_CodingSequence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.Transcript.CodingSequence) */ {
 public:
  Transcript_CodingSequence();
  virtual ~Transcript_CodingSequence();

  Transcript_CodingSequence(const Transcript_CodingSequence& from);

  inline Transcript_CodingSequence& operator=(const Transcript_CodingSequence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transcript_CodingSequence(Transcript_CodingSequence&& from) noexcept
    : Transcript_CodingSequence() {
    *this = ::std::move(from);
  }

  inline Transcript_CodingSequence& operator=(Transcript_CodingSequence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transcript_CodingSequence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transcript_CodingSequence* internal_default_instance() {
    return reinterpret_cast<const Transcript_CodingSequence*>(
               &_Transcript_CodingSequence_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(Transcript_CodingSequence* other);
  void Swap(Transcript_CodingSequence* other);
  friend void swap(Transcript_CodingSequence& a, Transcript_CodingSequence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transcript_CodingSequence* New() const PROTOBUF_FINAL { return New(NULL); }

  Transcript_CodingSequence* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Transcript_CodingSequence& from);
  void MergeFrom(const Transcript_CodingSequence& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Transcript_CodingSequence* other);
  protected:
  explicit Transcript_CodingSequence(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // int64 end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.Transcript.CodingSequence)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsTranscript_CodingSequenceImpl();
};
// -------------------------------------------------------------------

class Transcript : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.Transcript) */ {
 public:
  Transcript();
  virtual ~Transcript();

  Transcript(const Transcript& from);

  inline Transcript& operator=(const Transcript& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transcript(Transcript&& from) noexcept
    : Transcript() {
    *this = ::std::move(from);
  }

  inline Transcript& operator=(Transcript&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transcript& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transcript* internal_default_instance() {
    return reinterpret_cast<const Transcript*>(
               &_Transcript_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(Transcript* other);
  void Swap(Transcript* other);
  friend void swap(Transcript& a, Transcript& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transcript* New() const PROTOBUF_FINAL { return New(NULL); }

  Transcript* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Transcript& from);
  void MergeFrom(const Transcript& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Transcript* other);
  protected:
  explicit Transcript(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Transcript_Exon Exon;
  typedef Transcript_CodingSequence CodingSequence;

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Transcript.Exon exons = 2;
  int exons_size() const;
  void clear_exons();
  static const int kExonsFieldNumber = 2;
  const ::google::genomics::v1::Transcript_Exon& exons(int index) const;
  ::google::genomics::v1::Transcript_Exon* mutable_exons(int index);
  ::google::genomics::v1::Transcript_Exon* add_exons();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Transcript_Exon >*
      mutable_exons();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Transcript_Exon >&
      exons() const;

  // string gene_id = 1;
  void clear_gene_id();
  static const int kGeneIdFieldNumber = 1;
  const ::std::string& gene_id() const;
  void set_gene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_gene_id(::std::string&& value);
  #endif
  void set_gene_id(const char* value);
  void set_gene_id(const char* value, size_t size);
  ::std::string* mutable_gene_id();
  ::std::string* release_gene_id();
  void set_allocated_gene_id(::std::string* gene_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_gene_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_gene_id(
      ::std::string* gene_id);

  // .google.genomics.v1.Transcript.CodingSequence coding_sequence = 3;
  bool has_coding_sequence() const;
  void clear_coding_sequence();
  static const int kCodingSequenceFieldNumber = 3;
  private:
  void _slow_mutable_coding_sequence();
  public:
  const ::google::genomics::v1::Transcript_CodingSequence& coding_sequence() const;
  ::google::genomics::v1::Transcript_CodingSequence* release_coding_sequence();
  ::google::genomics::v1::Transcript_CodingSequence* mutable_coding_sequence();
  void set_allocated_coding_sequence(::google::genomics::v1::Transcript_CodingSequence* coding_sequence);
  void unsafe_arena_set_allocated_coding_sequence(
      ::google::genomics::v1::Transcript_CodingSequence* coding_sequence);
  ::google::genomics::v1::Transcript_CodingSequence* unsafe_arena_release_coding_sequence();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.Transcript)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Transcript_Exon > exons_;
  ::google::protobuf::internal::ArenaStringPtr gene_id_;
  ::google::genomics::v1::Transcript_CodingSequence* coding_sequence_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsTranscriptImpl();
};
// -------------------------------------------------------------------

class ExternalId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ExternalId) */ {
 public:
  ExternalId();
  virtual ~ExternalId();

  ExternalId(const ExternalId& from);

  inline ExternalId& operator=(const ExternalId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExternalId(ExternalId&& from) noexcept
    : ExternalId() {
    *this = ::std::move(from);
  }

  inline ExternalId& operator=(ExternalId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternalId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExternalId* internal_default_instance() {
    return reinterpret_cast<const ExternalId*>(
               &_ExternalId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ExternalId* other);
  void Swap(ExternalId* other);
  friend void swap(ExternalId& a, ExternalId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExternalId* New() const PROTOBUF_FINAL { return New(NULL); }

  ExternalId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExternalId& from);
  void MergeFrom(const ExternalId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExternalId* other);
  protected:
  explicit ExternalId(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string source_name = 1;
  void clear_source_name();
  static const int kSourceNameFieldNumber = 1;
  const ::std::string& source_name() const;
  void set_source_name(const ::std::string& value);
  #if LANG_CXX11
  void set_source_name(::std::string&& value);
  #endif
  void set_source_name(const char* value);
  void set_source_name(const char* value, size_t size);
  ::std::string* mutable_source_name();
  ::std::string* release_source_name();
  void set_allocated_source_name(::std::string* source_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_source_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_source_name(
      ::std::string* source_name);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ExternalId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr source_name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsExternalIdImpl();
};
// -------------------------------------------------------------------

class CreateAnnotationSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.CreateAnnotationSetRequest) */ {
 public:
  CreateAnnotationSetRequest();
  virtual ~CreateAnnotationSetRequest();

  CreateAnnotationSetRequest(const CreateAnnotationSetRequest& from);

  inline CreateAnnotationSetRequest& operator=(const CreateAnnotationSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAnnotationSetRequest(CreateAnnotationSetRequest&& from) noexcept
    : CreateAnnotationSetRequest() {
    *this = ::std::move(from);
  }

  inline CreateAnnotationSetRequest& operator=(CreateAnnotationSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAnnotationSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAnnotationSetRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAnnotationSetRequest*>(
               &_CreateAnnotationSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(CreateAnnotationSetRequest* other);
  void Swap(CreateAnnotationSetRequest* other);
  friend void swap(CreateAnnotationSetRequest& a, CreateAnnotationSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAnnotationSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateAnnotationSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateAnnotationSetRequest& from);
  void MergeFrom(const CreateAnnotationSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateAnnotationSetRequest* other);
  protected:
  explicit CreateAnnotationSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.genomics.v1.AnnotationSet annotation_set = 1;
  bool has_annotation_set() const;
  void clear_annotation_set();
  static const int kAnnotationSetFieldNumber = 1;
  private:
  void _slow_mutable_annotation_set();
  public:
  const ::google::genomics::v1::AnnotationSet& annotation_set() const;
  ::google::genomics::v1::AnnotationSet* release_annotation_set();
  ::google::genomics::v1::AnnotationSet* mutable_annotation_set();
  void set_allocated_annotation_set(::google::genomics::v1::AnnotationSet* annotation_set);
  void unsafe_arena_set_allocated_annotation_set(
      ::google::genomics::v1::AnnotationSet* annotation_set);
  ::google::genomics::v1::AnnotationSet* unsafe_arena_release_annotation_set();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.CreateAnnotationSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::genomics::v1::AnnotationSet* annotation_set_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsCreateAnnotationSetRequestImpl();
};
// -------------------------------------------------------------------

class GetAnnotationSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.GetAnnotationSetRequest) */ {
 public:
  GetAnnotationSetRequest();
  virtual ~GetAnnotationSetRequest();

  GetAnnotationSetRequest(const GetAnnotationSetRequest& from);

  inline GetAnnotationSetRequest& operator=(const GetAnnotationSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAnnotationSetRequest(GetAnnotationSetRequest&& from) noexcept
    : GetAnnotationSetRequest() {
    *this = ::std::move(from);
  }

  inline GetAnnotationSetRequest& operator=(GetAnnotationSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAnnotationSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAnnotationSetRequest* internal_default_instance() {
    return reinterpret_cast<const GetAnnotationSetRequest*>(
               &_GetAnnotationSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(GetAnnotationSetRequest* other);
  void Swap(GetAnnotationSetRequest* other);
  friend void swap(GetAnnotationSetRequest& a, GetAnnotationSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAnnotationSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAnnotationSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAnnotationSetRequest& from);
  void MergeFrom(const GetAnnotationSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAnnotationSetRequest* other);
  protected:
  explicit GetAnnotationSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string annotation_set_id = 1;
  void clear_annotation_set_id();
  static const int kAnnotationSetIdFieldNumber = 1;
  const ::std::string& annotation_set_id() const;
  void set_annotation_set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_set_id(::std::string&& value);
  #endif
  void set_annotation_set_id(const char* value);
  void set_annotation_set_id(const char* value, size_t size);
  ::std::string* mutable_annotation_set_id();
  ::std::string* release_annotation_set_id();
  void set_allocated_annotation_set_id(::std::string* annotation_set_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_annotation_set_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_annotation_set_id(
      ::std::string* annotation_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.GetAnnotationSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr annotation_set_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsGetAnnotationSetRequestImpl();
};
// -------------------------------------------------------------------

class UpdateAnnotationSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.UpdateAnnotationSetRequest) */ {
 public:
  UpdateAnnotationSetRequest();
  virtual ~UpdateAnnotationSetRequest();

  UpdateAnnotationSetRequest(const UpdateAnnotationSetRequest& from);

  inline UpdateAnnotationSetRequest& operator=(const UpdateAnnotationSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateAnnotationSetRequest(UpdateAnnotationSetRequest&& from) noexcept
    : UpdateAnnotationSetRequest() {
    *this = ::std::move(from);
  }

  inline UpdateAnnotationSetRequest& operator=(UpdateAnnotationSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAnnotationSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateAnnotationSetRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAnnotationSetRequest*>(
               &_UpdateAnnotationSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(UpdateAnnotationSetRequest* other);
  void Swap(UpdateAnnotationSetRequest* other);
  friend void swap(UpdateAnnotationSetRequest& a, UpdateAnnotationSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateAnnotationSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateAnnotationSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateAnnotationSetRequest& from);
  void MergeFrom(const UpdateAnnotationSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateAnnotationSetRequest* other);
  protected:
  explicit UpdateAnnotationSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string annotation_set_id = 1;
  void clear_annotation_set_id();
  static const int kAnnotationSetIdFieldNumber = 1;
  const ::std::string& annotation_set_id() const;
  void set_annotation_set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_set_id(::std::string&& value);
  #endif
  void set_annotation_set_id(const char* value);
  void set_annotation_set_id(const char* value, size_t size);
  ::std::string* mutable_annotation_set_id();
  ::std::string* release_annotation_set_id();
  void set_allocated_annotation_set_id(::std::string* annotation_set_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_annotation_set_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_annotation_set_id(
      ::std::string* annotation_set_id);

  // .google.genomics.v1.AnnotationSet annotation_set = 2;
  bool has_annotation_set() const;
  void clear_annotation_set();
  static const int kAnnotationSetFieldNumber = 2;
  private:
  void _slow_mutable_annotation_set();
  public:
  const ::google::genomics::v1::AnnotationSet& annotation_set() const;
  ::google::genomics::v1::AnnotationSet* release_annotation_set();
  ::google::genomics::v1::AnnotationSet* mutable_annotation_set();
  void set_allocated_annotation_set(::google::genomics::v1::AnnotationSet* annotation_set);
  void unsafe_arena_set_allocated_annotation_set(
      ::google::genomics::v1::AnnotationSet* annotation_set);
  ::google::genomics::v1::AnnotationSet* unsafe_arena_release_annotation_set();

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  void _slow_mutable_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.UpdateAnnotationSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr annotation_set_id_;
  ::google::genomics::v1::AnnotationSet* annotation_set_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsUpdateAnnotationSetRequestImpl();
};
// -------------------------------------------------------------------

class DeleteAnnotationSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.DeleteAnnotationSetRequest) */ {
 public:
  DeleteAnnotationSetRequest();
  virtual ~DeleteAnnotationSetRequest();

  DeleteAnnotationSetRequest(const DeleteAnnotationSetRequest& from);

  inline DeleteAnnotationSetRequest& operator=(const DeleteAnnotationSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteAnnotationSetRequest(DeleteAnnotationSetRequest&& from) noexcept
    : DeleteAnnotationSetRequest() {
    *this = ::std::move(from);
  }

  inline DeleteAnnotationSetRequest& operator=(DeleteAnnotationSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAnnotationSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteAnnotationSetRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAnnotationSetRequest*>(
               &_DeleteAnnotationSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(DeleteAnnotationSetRequest* other);
  void Swap(DeleteAnnotationSetRequest* other);
  friend void swap(DeleteAnnotationSetRequest& a, DeleteAnnotationSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteAnnotationSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAnnotationSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAnnotationSetRequest& from);
  void MergeFrom(const DeleteAnnotationSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAnnotationSetRequest* other);
  protected:
  explicit DeleteAnnotationSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string annotation_set_id = 1;
  void clear_annotation_set_id();
  static const int kAnnotationSetIdFieldNumber = 1;
  const ::std::string& annotation_set_id() const;
  void set_annotation_set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_set_id(::std::string&& value);
  #endif
  void set_annotation_set_id(const char* value);
  void set_annotation_set_id(const char* value, size_t size);
  ::std::string* mutable_annotation_set_id();
  ::std::string* release_annotation_set_id();
  void set_allocated_annotation_set_id(::std::string* annotation_set_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_annotation_set_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_annotation_set_id(
      ::std::string* annotation_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.DeleteAnnotationSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr annotation_set_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsDeleteAnnotationSetRequestImpl();
};
// -------------------------------------------------------------------

class SearchAnnotationSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchAnnotationSetsRequest) */ {
 public:
  SearchAnnotationSetsRequest();
  virtual ~SearchAnnotationSetsRequest();

  SearchAnnotationSetsRequest(const SearchAnnotationSetsRequest& from);

  inline SearchAnnotationSetsRequest& operator=(const SearchAnnotationSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchAnnotationSetsRequest(SearchAnnotationSetsRequest&& from) noexcept
    : SearchAnnotationSetsRequest() {
    *this = ::std::move(from);
  }

  inline SearchAnnotationSetsRequest& operator=(SearchAnnotationSetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchAnnotationSetsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchAnnotationSetsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchAnnotationSetsRequest*>(
               &_SearchAnnotationSetsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(SearchAnnotationSetsRequest* other);
  void Swap(SearchAnnotationSetsRequest* other);
  friend void swap(SearchAnnotationSetsRequest& a, SearchAnnotationSetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchAnnotationSetsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchAnnotationSetsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchAnnotationSetsRequest& from);
  void MergeFrom(const SearchAnnotationSetsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchAnnotationSetsRequest* other);
  protected:
  explicit SearchAnnotationSetsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string dataset_ids = 1;
  int dataset_ids_size() const;
  void clear_dataset_ids();
  static const int kDatasetIdsFieldNumber = 1;
  const ::std::string& dataset_ids(int index) const;
  ::std::string* mutable_dataset_ids(int index);
  void set_dataset_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_dataset_ids(int index, ::std::string&& value);
  #endif
  void set_dataset_ids(int index, const char* value);
  void set_dataset_ids(int index, const char* value, size_t size);
  ::std::string* add_dataset_ids();
  void add_dataset_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_dataset_ids(::std::string&& value);
  #endif
  void add_dataset_ids(const char* value);
  void add_dataset_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dataset_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dataset_ids();

  // repeated .google.genomics.v1.AnnotationType types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::genomics::v1::AnnotationType types(int index) const;
  void set_types(int index, ::google::genomics::v1::AnnotationType value);
  void add_types(::google::genomics::v1::AnnotationType value);
  const ::google::protobuf::RepeatedField<int>& types() const;
  ::google::protobuf::RepeatedField<int>* mutable_types();

  // string reference_set_id = 2;
  void clear_reference_set_id();
  static const int kReferenceSetIdFieldNumber = 2;
  const ::std::string& reference_set_id() const;
  void set_reference_set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_reference_set_id(::std::string&& value);
  #endif
  void set_reference_set_id(const char* value);
  void set_reference_set_id(const char* value, size_t size);
  ::std::string* mutable_reference_set_id();
  ::std::string* release_reference_set_id();
  void set_allocated_reference_set_id(::std::string* reference_set_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reference_set_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reference_set_id(
      ::std::string* reference_set_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string page_token = 5;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 5;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 6;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 6;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchAnnotationSetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dataset_ids_;
  ::google::protobuf::RepeatedField<int> types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reference_set_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsSearchAnnotationSetsRequestImpl();
};
// -------------------------------------------------------------------

class SearchAnnotationSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchAnnotationSetsResponse) */ {
 public:
  SearchAnnotationSetsResponse();
  virtual ~SearchAnnotationSetsResponse();

  SearchAnnotationSetsResponse(const SearchAnnotationSetsResponse& from);

  inline SearchAnnotationSetsResponse& operator=(const SearchAnnotationSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchAnnotationSetsResponse(SearchAnnotationSetsResponse&& from) noexcept
    : SearchAnnotationSetsResponse() {
    *this = ::std::move(from);
  }

  inline SearchAnnotationSetsResponse& operator=(SearchAnnotationSetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchAnnotationSetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchAnnotationSetsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchAnnotationSetsResponse*>(
               &_SearchAnnotationSetsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(SearchAnnotationSetsResponse* other);
  void Swap(SearchAnnotationSetsResponse* other);
  friend void swap(SearchAnnotationSetsResponse& a, SearchAnnotationSetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchAnnotationSetsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchAnnotationSetsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchAnnotationSetsResponse& from);
  void MergeFrom(const SearchAnnotationSetsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchAnnotationSetsResponse* other);
  protected:
  explicit SearchAnnotationSetsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.AnnotationSet annotation_sets = 1;
  int annotation_sets_size() const;
  void clear_annotation_sets();
  static const int kAnnotationSetsFieldNumber = 1;
  const ::google::genomics::v1::AnnotationSet& annotation_sets(int index) const;
  ::google::genomics::v1::AnnotationSet* mutable_annotation_sets(int index);
  ::google::genomics::v1::AnnotationSet* add_annotation_sets();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::AnnotationSet >*
      mutable_annotation_sets();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::AnnotationSet >&
      annotation_sets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchAnnotationSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::AnnotationSet > annotation_sets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsSearchAnnotationSetsResponseImpl();
};
// -------------------------------------------------------------------

class CreateAnnotationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.CreateAnnotationRequest) */ {
 public:
  CreateAnnotationRequest();
  virtual ~CreateAnnotationRequest();

  CreateAnnotationRequest(const CreateAnnotationRequest& from);

  inline CreateAnnotationRequest& operator=(const CreateAnnotationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAnnotationRequest(CreateAnnotationRequest&& from) noexcept
    : CreateAnnotationRequest() {
    *this = ::std::move(from);
  }

  inline CreateAnnotationRequest& operator=(CreateAnnotationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAnnotationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAnnotationRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAnnotationRequest*>(
               &_CreateAnnotationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(CreateAnnotationRequest* other);
  void Swap(CreateAnnotationRequest* other);
  friend void swap(CreateAnnotationRequest& a, CreateAnnotationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAnnotationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateAnnotationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateAnnotationRequest& from);
  void MergeFrom(const CreateAnnotationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateAnnotationRequest* other);
  protected:
  explicit CreateAnnotationRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.genomics.v1.Annotation annotation = 1;
  bool has_annotation() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 1;
  private:
  void _slow_mutable_annotation();
  public:
  const ::google::genomics::v1::Annotation& annotation() const;
  ::google::genomics::v1::Annotation* release_annotation();
  ::google::genomics::v1::Annotation* mutable_annotation();
  void set_allocated_annotation(::google::genomics::v1::Annotation* annotation);
  void unsafe_arena_set_allocated_annotation(
      ::google::genomics::v1::Annotation* annotation);
  ::google::genomics::v1::Annotation* unsafe_arena_release_annotation();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.CreateAnnotationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::genomics::v1::Annotation* annotation_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsCreateAnnotationRequestImpl();
};
// -------------------------------------------------------------------

class BatchCreateAnnotationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.BatchCreateAnnotationsRequest) */ {
 public:
  BatchCreateAnnotationsRequest();
  virtual ~BatchCreateAnnotationsRequest();

  BatchCreateAnnotationsRequest(const BatchCreateAnnotationsRequest& from);

  inline BatchCreateAnnotationsRequest& operator=(const BatchCreateAnnotationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchCreateAnnotationsRequest(BatchCreateAnnotationsRequest&& from) noexcept
    : BatchCreateAnnotationsRequest() {
    *this = ::std::move(from);
  }

  inline BatchCreateAnnotationsRequest& operator=(BatchCreateAnnotationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchCreateAnnotationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchCreateAnnotationsRequest* internal_default_instance() {
    return reinterpret_cast<const BatchCreateAnnotationsRequest*>(
               &_BatchCreateAnnotationsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(BatchCreateAnnotationsRequest* other);
  void Swap(BatchCreateAnnotationsRequest* other);
  friend void swap(BatchCreateAnnotationsRequest& a, BatchCreateAnnotationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchCreateAnnotationsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchCreateAnnotationsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchCreateAnnotationsRequest& from);
  void MergeFrom(const BatchCreateAnnotationsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchCreateAnnotationsRequest* other);
  protected:
  explicit BatchCreateAnnotationsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Annotation annotations = 1;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 1;
  const ::google::genomics::v1::Annotation& annotations(int index) const;
  ::google::genomics::v1::Annotation* mutable_annotations(int index);
  ::google::genomics::v1::Annotation* add_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >*
      mutable_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >&
      annotations() const;

  // string request_id = 2;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_request_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_request_id(
      ::std::string* request_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.BatchCreateAnnotationsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation > annotations_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsBatchCreateAnnotationsRequestImpl();
};
// -------------------------------------------------------------------

class BatchCreateAnnotationsResponse_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.BatchCreateAnnotationsResponse.Entry) */ {
 public:
  BatchCreateAnnotationsResponse_Entry();
  virtual ~BatchCreateAnnotationsResponse_Entry();

  BatchCreateAnnotationsResponse_Entry(const BatchCreateAnnotationsResponse_Entry& from);

  inline BatchCreateAnnotationsResponse_Entry& operator=(const BatchCreateAnnotationsResponse_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchCreateAnnotationsResponse_Entry(BatchCreateAnnotationsResponse_Entry&& from) noexcept
    : BatchCreateAnnotationsResponse_Entry() {
    *this = ::std::move(from);
  }

  inline BatchCreateAnnotationsResponse_Entry& operator=(BatchCreateAnnotationsResponse_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchCreateAnnotationsResponse_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchCreateAnnotationsResponse_Entry* internal_default_instance() {
    return reinterpret_cast<const BatchCreateAnnotationsResponse_Entry*>(
               &_BatchCreateAnnotationsResponse_Entry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(BatchCreateAnnotationsResponse_Entry* other);
  void Swap(BatchCreateAnnotationsResponse_Entry* other);
  friend void swap(BatchCreateAnnotationsResponse_Entry& a, BatchCreateAnnotationsResponse_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchCreateAnnotationsResponse_Entry* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchCreateAnnotationsResponse_Entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchCreateAnnotationsResponse_Entry& from);
  void MergeFrom(const BatchCreateAnnotationsResponse_Entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchCreateAnnotationsResponse_Entry* other);
  protected:
  explicit BatchCreateAnnotationsResponse_Entry(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.rpc.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  private:
  void _slow_mutable_status();
  public:
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* release_status();
  ::google::rpc::Status* mutable_status();
  void set_allocated_status(::google::rpc::Status* status);
  void unsafe_arena_set_allocated_status(
      ::google::rpc::Status* status);
  ::google::rpc::Status* unsafe_arena_release_status();

  // .google.genomics.v1.Annotation annotation = 2;
  bool has_annotation() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 2;
  private:
  void _slow_mutable_annotation();
  public:
  const ::google::genomics::v1::Annotation& annotation() const;
  ::google::genomics::v1::Annotation* release_annotation();
  ::google::genomics::v1::Annotation* mutable_annotation();
  void set_allocated_annotation(::google::genomics::v1::Annotation* annotation);
  void unsafe_arena_set_allocated_annotation(
      ::google::genomics::v1::Annotation* annotation);
  ::google::genomics::v1::Annotation* unsafe_arena_release_annotation();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.BatchCreateAnnotationsResponse.Entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::rpc::Status* status_;
  ::google::genomics::v1::Annotation* annotation_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsBatchCreateAnnotationsResponse_EntryImpl();
};
// -------------------------------------------------------------------

class BatchCreateAnnotationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.BatchCreateAnnotationsResponse) */ {
 public:
  BatchCreateAnnotationsResponse();
  virtual ~BatchCreateAnnotationsResponse();

  BatchCreateAnnotationsResponse(const BatchCreateAnnotationsResponse& from);

  inline BatchCreateAnnotationsResponse& operator=(const BatchCreateAnnotationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchCreateAnnotationsResponse(BatchCreateAnnotationsResponse&& from) noexcept
    : BatchCreateAnnotationsResponse() {
    *this = ::std::move(from);
  }

  inline BatchCreateAnnotationsResponse& operator=(BatchCreateAnnotationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchCreateAnnotationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchCreateAnnotationsResponse* internal_default_instance() {
    return reinterpret_cast<const BatchCreateAnnotationsResponse*>(
               &_BatchCreateAnnotationsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(BatchCreateAnnotationsResponse* other);
  void Swap(BatchCreateAnnotationsResponse* other);
  friend void swap(BatchCreateAnnotationsResponse& a, BatchCreateAnnotationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchCreateAnnotationsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchCreateAnnotationsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchCreateAnnotationsResponse& from);
  void MergeFrom(const BatchCreateAnnotationsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchCreateAnnotationsResponse* other);
  protected:
  explicit BatchCreateAnnotationsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BatchCreateAnnotationsResponse_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.BatchCreateAnnotationsResponse.Entry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry& entries(int index) const;
  ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry* mutable_entries(int index);
  ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:google.genomics.v1.BatchCreateAnnotationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry > entries_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsBatchCreateAnnotationsResponseImpl();
};
// -------------------------------------------------------------------

class GetAnnotationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.GetAnnotationRequest) */ {
 public:
  GetAnnotationRequest();
  virtual ~GetAnnotationRequest();

  GetAnnotationRequest(const GetAnnotationRequest& from);

  inline GetAnnotationRequest& operator=(const GetAnnotationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAnnotationRequest(GetAnnotationRequest&& from) noexcept
    : GetAnnotationRequest() {
    *this = ::std::move(from);
  }

  inline GetAnnotationRequest& operator=(GetAnnotationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAnnotationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAnnotationRequest* internal_default_instance() {
    return reinterpret_cast<const GetAnnotationRequest*>(
               &_GetAnnotationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(GetAnnotationRequest* other);
  void Swap(GetAnnotationRequest* other);
  friend void swap(GetAnnotationRequest& a, GetAnnotationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAnnotationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAnnotationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAnnotationRequest& from);
  void MergeFrom(const GetAnnotationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAnnotationRequest* other);
  protected:
  explicit GetAnnotationRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string annotation_id = 1;
  void clear_annotation_id();
  static const int kAnnotationIdFieldNumber = 1;
  const ::std::string& annotation_id() const;
  void set_annotation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_id(::std::string&& value);
  #endif
  void set_annotation_id(const char* value);
  void set_annotation_id(const char* value, size_t size);
  ::std::string* mutable_annotation_id();
  ::std::string* release_annotation_id();
  void set_allocated_annotation_id(::std::string* annotation_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_annotation_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_annotation_id(
      ::std::string* annotation_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.GetAnnotationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr annotation_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsGetAnnotationRequestImpl();
};
// -------------------------------------------------------------------

class UpdateAnnotationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.UpdateAnnotationRequest) */ {
 public:
  UpdateAnnotationRequest();
  virtual ~UpdateAnnotationRequest();

  UpdateAnnotationRequest(const UpdateAnnotationRequest& from);

  inline UpdateAnnotationRequest& operator=(const UpdateAnnotationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateAnnotationRequest(UpdateAnnotationRequest&& from) noexcept
    : UpdateAnnotationRequest() {
    *this = ::std::move(from);
  }

  inline UpdateAnnotationRequest& operator=(UpdateAnnotationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAnnotationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateAnnotationRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAnnotationRequest*>(
               &_UpdateAnnotationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(UpdateAnnotationRequest* other);
  void Swap(UpdateAnnotationRequest* other);
  friend void swap(UpdateAnnotationRequest& a, UpdateAnnotationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateAnnotationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateAnnotationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateAnnotationRequest& from);
  void MergeFrom(const UpdateAnnotationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateAnnotationRequest* other);
  protected:
  explicit UpdateAnnotationRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string annotation_id = 1;
  void clear_annotation_id();
  static const int kAnnotationIdFieldNumber = 1;
  const ::std::string& annotation_id() const;
  void set_annotation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_id(::std::string&& value);
  #endif
  void set_annotation_id(const char* value);
  void set_annotation_id(const char* value, size_t size);
  ::std::string* mutable_annotation_id();
  ::std::string* release_annotation_id();
  void set_allocated_annotation_id(::std::string* annotation_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_annotation_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_annotation_id(
      ::std::string* annotation_id);

  // .google.genomics.v1.Annotation annotation = 2;
  bool has_annotation() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 2;
  private:
  void _slow_mutable_annotation();
  public:
  const ::google::genomics::v1::Annotation& annotation() const;
  ::google::genomics::v1::Annotation* release_annotation();
  ::google::genomics::v1::Annotation* mutable_annotation();
  void set_allocated_annotation(::google::genomics::v1::Annotation* annotation);
  void unsafe_arena_set_allocated_annotation(
      ::google::genomics::v1::Annotation* annotation);
  ::google::genomics::v1::Annotation* unsafe_arena_release_annotation();

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  void _slow_mutable_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.UpdateAnnotationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr annotation_id_;
  ::google::genomics::v1::Annotation* annotation_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsUpdateAnnotationRequestImpl();
};
// -------------------------------------------------------------------

class DeleteAnnotationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.DeleteAnnotationRequest) */ {
 public:
  DeleteAnnotationRequest();
  virtual ~DeleteAnnotationRequest();

  DeleteAnnotationRequest(const DeleteAnnotationRequest& from);

  inline DeleteAnnotationRequest& operator=(const DeleteAnnotationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteAnnotationRequest(DeleteAnnotationRequest&& from) noexcept
    : DeleteAnnotationRequest() {
    *this = ::std::move(from);
  }

  inline DeleteAnnotationRequest& operator=(DeleteAnnotationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAnnotationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteAnnotationRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAnnotationRequest*>(
               &_DeleteAnnotationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(DeleteAnnotationRequest* other);
  void Swap(DeleteAnnotationRequest* other);
  friend void swap(DeleteAnnotationRequest& a, DeleteAnnotationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteAnnotationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAnnotationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAnnotationRequest& from);
  void MergeFrom(const DeleteAnnotationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAnnotationRequest* other);
  protected:
  explicit DeleteAnnotationRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string annotation_id = 1;
  void clear_annotation_id();
  static const int kAnnotationIdFieldNumber = 1;
  const ::std::string& annotation_id() const;
  void set_annotation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_id(::std::string&& value);
  #endif
  void set_annotation_id(const char* value);
  void set_annotation_id(const char* value, size_t size);
  ::std::string* mutable_annotation_id();
  ::std::string* release_annotation_id();
  void set_allocated_annotation_id(::std::string* annotation_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_annotation_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_annotation_id(
      ::std::string* annotation_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.DeleteAnnotationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr annotation_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsDeleteAnnotationRequestImpl();
};
// -------------------------------------------------------------------

class SearchAnnotationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchAnnotationsRequest) */ {
 public:
  SearchAnnotationsRequest();
  virtual ~SearchAnnotationsRequest();

  SearchAnnotationsRequest(const SearchAnnotationsRequest& from);

  inline SearchAnnotationsRequest& operator=(const SearchAnnotationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchAnnotationsRequest(SearchAnnotationsRequest&& from) noexcept
    : SearchAnnotationsRequest() {
    *this = ::std::move(from);
  }

  inline SearchAnnotationsRequest& operator=(SearchAnnotationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchAnnotationsRequest& default_instance();

  enum ReferenceCase {
    kReferenceId = 2,
    kReferenceName = 3,
    REFERENCE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchAnnotationsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchAnnotationsRequest*>(
               &_SearchAnnotationsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(SearchAnnotationsRequest* other);
  void Swap(SearchAnnotationsRequest* other);
  friend void swap(SearchAnnotationsRequest& a, SearchAnnotationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchAnnotationsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchAnnotationsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchAnnotationsRequest& from);
  void MergeFrom(const SearchAnnotationsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchAnnotationsRequest* other);
  protected:
  explicit SearchAnnotationsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotation_set_ids = 1;
  int annotation_set_ids_size() const;
  void clear_annotation_set_ids();
  static const int kAnnotationSetIdsFieldNumber = 1;
  const ::std::string& annotation_set_ids(int index) const;
  ::std::string* mutable_annotation_set_ids(int index);
  void set_annotation_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_annotation_set_ids(int index, ::std::string&& value);
  #endif
  void set_annotation_set_ids(int index, const char* value);
  void set_annotation_set_ids(int index, const char* value, size_t size);
  ::std::string* add_annotation_set_ids();
  void add_annotation_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_annotation_set_ids(::std::string&& value);
  #endif
  void add_annotation_set_ids(const char* value);
  void add_annotation_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotation_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotation_set_ids();

  // string page_token = 6;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 6;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int64 start = 4;
  void clear_start();
  static const int kStartFieldNumber = 4;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // int64 end = 5;
  void clear_end();
  static const int kEndFieldNumber = 5;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // int32 page_size = 7;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 7;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string reference_id = 2;
  private:
  bool has_reference_id() const;
  public:
  void clear_reference_id();
  static const int kReferenceIdFieldNumber = 2;
  const ::std::string& reference_id() const;
  void set_reference_id(const ::std::string& value);
  #if LANG_CXX11
  void set_reference_id(::std::string&& value);
  #endif
  void set_reference_id(const char* value);
  void set_reference_id(const char* value, size_t size);
  ::std::string* mutable_reference_id();
  ::std::string* release_reference_id();
  void set_allocated_reference_id(::std::string* reference_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reference_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reference_id(
      ::std::string* reference_id);

  // string reference_name = 3;
  private:
  bool has_reference_name() const;
  public:
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 3;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  #if LANG_CXX11
  void set_reference_name(::std::string&& value);
  #endif
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reference_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  ReferenceCase reference_case() const;
  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchAnnotationsRequest)
 private:
  void set_has_reference_id();
  void set_has_reference_name();

  inline bool has_reference() const;
  void clear_reference();
  inline void clear_has_reference();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotation_set_ids_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  ::google::protobuf::int32 page_size_;
  union ReferenceUnion {
    ReferenceUnion() {}
    ::google::protobuf::internal::ArenaStringPtr reference_id_;
    ::google::protobuf::internal::ArenaStringPtr reference_name_;
  } reference_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsSearchAnnotationsRequestImpl();
};
// -------------------------------------------------------------------

class SearchAnnotationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchAnnotationsResponse) */ {
 public:
  SearchAnnotationsResponse();
  virtual ~SearchAnnotationsResponse();

  SearchAnnotationsResponse(const SearchAnnotationsResponse& from);

  inline SearchAnnotationsResponse& operator=(const SearchAnnotationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchAnnotationsResponse(SearchAnnotationsResponse&& from) noexcept
    : SearchAnnotationsResponse() {
    *this = ::std::move(from);
  }

  inline SearchAnnotationsResponse& operator=(SearchAnnotationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchAnnotationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchAnnotationsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchAnnotationsResponse*>(
               &_SearchAnnotationsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(SearchAnnotationsResponse* other);
  void Swap(SearchAnnotationsResponse* other);
  friend void swap(SearchAnnotationsResponse& a, SearchAnnotationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchAnnotationsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchAnnotationsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchAnnotationsResponse& from);
  void MergeFrom(const SearchAnnotationsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchAnnotationsResponse* other);
  protected:
  explicit SearchAnnotationsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Annotation annotations = 1;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 1;
  const ::google::genomics::v1::Annotation& annotations(int index) const;
  ::google::genomics::v1::Annotation* mutable_annotations(int index);
  ::google::genomics::v1::Annotation* add_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >*
      mutable_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >&
      annotations() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchAnnotationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation > annotations_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::TableStruct;
  friend void ::protobuf_google_2fgenomics_2fv1_2fannotations_2eproto::InitDefaultsSearchAnnotationsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AnnotationSet

// string id = 1;
inline void AnnotationSet::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AnnotationSet::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.AnnotationSet.id)
  return id_.Get();
}
inline void AnnotationSet::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.AnnotationSet.id)
}
#if LANG_CXX11
inline void AnnotationSet::set_id(::std::string&& value) {
  
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.AnnotationSet.id)
}
#endif
inline void AnnotationSet::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.AnnotationSet.id)
}
inline void AnnotationSet::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.AnnotationSet.id)
}
inline ::std::string* AnnotationSet::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.AnnotationSet.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AnnotationSet::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.AnnotationSet.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AnnotationSet::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.AnnotationSet.id)
}
inline ::std::string* AnnotationSet::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.AnnotationSet.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AnnotationSet::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.AnnotationSet.id)
}

// string dataset_id = 2;
inline void AnnotationSet::clear_dataset_id() {
  dataset_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AnnotationSet::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.AnnotationSet.dataset_id)
  return dataset_id_.Get();
}
inline void AnnotationSet::set_dataset_id(const ::std::string& value) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.AnnotationSet.dataset_id)
}
#if LANG_CXX11
inline void AnnotationSet::set_dataset_id(::std::string&& value) {
  
  dataset_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.AnnotationSet.dataset_id)
}
#endif
inline void AnnotationSet::set_dataset_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.AnnotationSet.dataset_id)
}
inline void AnnotationSet::set_dataset_id(const char* value,
    size_t size) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.AnnotationSet.dataset_id)
}
inline ::std::string* AnnotationSet::mutable_dataset_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.AnnotationSet.dataset_id)
  return dataset_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AnnotationSet::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.AnnotationSet.dataset_id)
  
  return dataset_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AnnotationSet::set_allocated_dataset_id(::std::string* dataset_id) {
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataset_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.AnnotationSet.dataset_id)
}
inline ::std::string* AnnotationSet::unsafe_arena_release_dataset_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.AnnotationSet.dataset_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return dataset_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AnnotationSet::unsafe_arena_set_allocated_dataset_id(
    ::std::string* dataset_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      dataset_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.AnnotationSet.dataset_id)
}

// string reference_set_id = 3;
inline void AnnotationSet::clear_reference_set_id() {
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AnnotationSet::reference_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.AnnotationSet.reference_set_id)
  return reference_set_id_.Get();
}
inline void AnnotationSet::set_reference_set_id(const ::std::string& value) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.AnnotationSet.reference_set_id)
}
#if LANG_CXX11
inline void AnnotationSet::set_reference_set_id(::std::string&& value) {
  
  reference_set_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.AnnotationSet.reference_set_id)
}
#endif
inline void AnnotationSet::set_reference_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.AnnotationSet.reference_set_id)
}
inline void AnnotationSet::set_reference_set_id(const char* value,
    size_t size) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.AnnotationSet.reference_set_id)
}
inline ::std::string* AnnotationSet::mutable_reference_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.AnnotationSet.reference_set_id)
  return reference_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AnnotationSet::release_reference_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.AnnotationSet.reference_set_id)
  
  return reference_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AnnotationSet::set_allocated_reference_set_id(::std::string* reference_set_id) {
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.AnnotationSet.reference_set_id)
}
inline ::std::string* AnnotationSet::unsafe_arena_release_reference_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.AnnotationSet.reference_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AnnotationSet::unsafe_arena_set_allocated_reference_set_id(
    ::std::string* reference_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.AnnotationSet.reference_set_id)
}

// string name = 4;
inline void AnnotationSet::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AnnotationSet::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.AnnotationSet.name)
  return name_.Get();
}
inline void AnnotationSet::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.AnnotationSet.name)
}
#if LANG_CXX11
inline void AnnotationSet::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.AnnotationSet.name)
}
#endif
inline void AnnotationSet::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.AnnotationSet.name)
}
inline void AnnotationSet::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.AnnotationSet.name)
}
inline ::std::string* AnnotationSet::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.AnnotationSet.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AnnotationSet::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.AnnotationSet.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AnnotationSet::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.AnnotationSet.name)
}
inline ::std::string* AnnotationSet::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.AnnotationSet.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AnnotationSet::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.AnnotationSet.name)
}

// string source_uri = 5;
inline void AnnotationSet::clear_source_uri() {
  source_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AnnotationSet::source_uri() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.AnnotationSet.source_uri)
  return source_uri_.Get();
}
inline void AnnotationSet::set_source_uri(const ::std::string& value) {
  
  source_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.AnnotationSet.source_uri)
}
#if LANG_CXX11
inline void AnnotationSet::set_source_uri(::std::string&& value) {
  
  source_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.AnnotationSet.source_uri)
}
#endif
inline void AnnotationSet::set_source_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.AnnotationSet.source_uri)
}
inline void AnnotationSet::set_source_uri(const char* value,
    size_t size) {
  
  source_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.AnnotationSet.source_uri)
}
inline ::std::string* AnnotationSet::mutable_source_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.AnnotationSet.source_uri)
  return source_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AnnotationSet::release_source_uri() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.AnnotationSet.source_uri)
  
  return source_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AnnotationSet::set_allocated_source_uri(::std::string* source_uri) {
  if (source_uri != NULL) {
    
  } else {
    
  }
  source_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.AnnotationSet.source_uri)
}
inline ::std::string* AnnotationSet::unsafe_arena_release_source_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.AnnotationSet.source_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return source_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AnnotationSet::unsafe_arena_set_allocated_source_uri(
    ::std::string* source_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source_uri != NULL) {
    
  } else {
    
  }
  source_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.AnnotationSet.source_uri)
}

// .google.genomics.v1.AnnotationType type = 6;
inline void AnnotationSet::clear_type() {
  type_ = 0;
}
inline ::google::genomics::v1::AnnotationType AnnotationSet::type() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.AnnotationSet.type)
  return static_cast< ::google::genomics::v1::AnnotationType >(type_);
}
inline void AnnotationSet::set_type(::google::genomics::v1::AnnotationType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.AnnotationSet.type)
}

// map<string, .google.protobuf.ListValue> info = 17;
inline int AnnotationSet::info_size() const {
  return info_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
AnnotationSet::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.AnnotationSet.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
AnnotationSet::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.AnnotationSet.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Annotation

// string id = 1;
inline void Annotation::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Annotation::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.id)
  return id_.Get();
}
inline void Annotation::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.id)
}
#if LANG_CXX11
inline void Annotation::set_id(::std::string&& value) {
  
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.Annotation.id)
}
#endif
inline void Annotation::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Annotation.id)
}
inline void Annotation::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Annotation.id)
}
inline ::std::string* Annotation::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Annotation.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Annotation::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Annotation.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Annotation::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Annotation.id)
}
inline ::std::string* Annotation::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Annotation.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Annotation::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Annotation.id)
}

// string annotation_set_id = 2;
inline void Annotation::clear_annotation_set_id() {
  annotation_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Annotation::annotation_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.annotation_set_id)
  return annotation_set_id_.Get();
}
inline void Annotation::set_annotation_set_id(const ::std::string& value) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.annotation_set_id)
}
#if LANG_CXX11
inline void Annotation::set_annotation_set_id(::std::string&& value) {
  
  annotation_set_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.Annotation.annotation_set_id)
}
#endif
inline void Annotation::set_annotation_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Annotation.annotation_set_id)
}
inline void Annotation::set_annotation_set_id(const char* value,
    size_t size) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Annotation.annotation_set_id)
}
inline ::std::string* Annotation::mutable_annotation_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Annotation.annotation_set_id)
  return annotation_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Annotation::release_annotation_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Annotation.annotation_set_id)
  
  return annotation_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Annotation::set_allocated_annotation_set_id(::std::string* annotation_set_id) {
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Annotation.annotation_set_id)
}
inline ::std::string* Annotation::unsafe_arena_release_annotation_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Annotation.annotation_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return annotation_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Annotation::unsafe_arena_set_allocated_annotation_set_id(
    ::std::string* annotation_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      annotation_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Annotation.annotation_set_id)
}

// string name = 3;
inline void Annotation::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Annotation::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.name)
  return name_.Get();
}
inline void Annotation::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.name)
}
#if LANG_CXX11
inline void Annotation::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.Annotation.name)
}
#endif
inline void Annotation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Annotation.name)
}
inline void Annotation::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Annotation.name)
}
inline ::std::string* Annotation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Annotation.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Annotation::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Annotation.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Annotation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Annotation.name)
}
inline ::std::string* Annotation::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Annotation.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Annotation::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Annotation.name)
}

// string reference_id = 4;
inline void Annotation::clear_reference_id() {
  reference_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Annotation::reference_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.reference_id)
  return reference_id_.Get();
}
inline void Annotation::set_reference_id(const ::std::string& value) {
  
  reference_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.reference_id)
}
#if LANG_CXX11
inline void Annotation::set_reference_id(::std::string&& value) {
  
  reference_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.Annotation.reference_id)
}
#endif
inline void Annotation::set_reference_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Annotation.reference_id)
}
inline void Annotation::set_reference_id(const char* value,
    size_t size) {
  
  reference_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Annotation.reference_id)
}
inline ::std::string* Annotation::mutable_reference_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Annotation.reference_id)
  return reference_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Annotation::release_reference_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Annotation.reference_id)
  
  return reference_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Annotation::set_allocated_reference_id(::std::string* reference_id) {
  if (reference_id != NULL) {
    
  } else {
    
  }
  reference_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Annotation.reference_id)
}
inline ::std::string* Annotation::unsafe_arena_release_reference_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Annotation.reference_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Annotation::unsafe_arena_set_allocated_reference_id(
    ::std::string* reference_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_id != NULL) {
    
  } else {
    
  }
  reference_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Annotation.reference_id)
}

// string reference_name = 5;
inline void Annotation::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Annotation::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.reference_name)
  return reference_name_.Get();
}
inline void Annotation::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.reference_name)
}
#if LANG_CXX11
inline void Annotation::set_reference_name(::std::string&& value) {
  
  reference_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.Annotation.reference_name)
}
#endif
inline void Annotation::set_reference_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Annotation.reference_name)
}
inline void Annotation::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Annotation.reference_name)
}
inline ::std::string* Annotation::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Annotation.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Annotation::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Annotation.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Annotation::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Annotation.reference_name)
}
inline ::std::string* Annotation::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Annotation.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Annotation::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Annotation.reference_name)
}

// int64 start = 6;
inline void Annotation::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Annotation::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.start)
  return start_;
}
inline void Annotation::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.start)
}

// int64 end = 7;
inline void Annotation::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Annotation::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.end)
  return end_;
}
inline void Annotation::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.end)
}

// bool reverse_strand = 8;
inline void Annotation::clear_reverse_strand() {
  reverse_strand_ = false;
}
inline bool Annotation::reverse_strand() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.reverse_strand)
  return reverse_strand_;
}
inline void Annotation::set_reverse_strand(bool value) {
  
  reverse_strand_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.reverse_strand)
}

// .google.genomics.v1.AnnotationType type = 9;
inline void Annotation::clear_type() {
  type_ = 0;
}
inline ::google::genomics::v1::AnnotationType Annotation::type() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.type)
  return static_cast< ::google::genomics::v1::AnnotationType >(type_);
}
inline void Annotation::set_type(::google::genomics::v1::AnnotationType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Annotation.type)
}

// .google.genomics.v1.VariantAnnotation variant = 10;
inline bool Annotation::has_variant() const {
  return value_case() == kVariant;
}
inline void Annotation::set_has_variant() {
  _oneof_case_[0] = kVariant;
}
inline void Annotation::clear_variant() {
  if (has_variant()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_.variant_;
    }
    clear_has_value();
  }
}
inline ::google::genomics::v1::VariantAnnotation* Annotation::release_variant() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Annotation.variant)
  if (has_variant()) {
    clear_has_value();
      ::google::genomics::v1::VariantAnnotation* temp = value_.variant_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    value_.variant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::genomics::v1::VariantAnnotation& Annotation::variant() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.variant)
  return has_variant()
      ? *value_.variant_
      : *reinterpret_cast< ::google::genomics::v1::VariantAnnotation*>(&::google::genomics::v1::_VariantAnnotation_default_instance_);
}
inline ::google::genomics::v1::VariantAnnotation* Annotation::unsafe_arena_release_variant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Annotation.variant)
  if (has_variant()) {
    clear_has_value();
    ::google::genomics::v1::VariantAnnotation* temp = value_.variant_;
    value_.variant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Annotation::unsafe_arena_set_allocated_variant(::google::genomics::v1::VariantAnnotation* variant) {
  clear_value();
  if (variant) {
    set_has_variant();
    value_.variant_ = variant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Annotation.variant)
}
inline ::google::genomics::v1::VariantAnnotation* Annotation::mutable_variant() {
  if (!has_variant()) {
    clear_value();
    set_has_variant();
    value_.variant_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1::VariantAnnotation >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Annotation.variant)
  return value_.variant_;
}

// .google.genomics.v1.Transcript transcript = 11;
inline bool Annotation::has_transcript() const {
  return value_case() == kTranscript;
}
inline void Annotation::set_has_transcript() {
  _oneof_case_[0] = kTranscript;
}
inline void Annotation::clear_transcript() {
  if (has_transcript()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_.transcript_;
    }
    clear_has_value();
  }
}
inline ::google::genomics::v1::Transcript* Annotation::release_transcript() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Annotation.transcript)
  if (has_transcript()) {
    clear_has_value();
      ::google::genomics::v1::Transcript* temp = value_.transcript_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    value_.transcript_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::genomics::v1::Transcript& Annotation::transcript() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Annotation.transcript)
  return has_transcript()
      ? *value_.transcript_
      : *reinterpret_cast< ::google::genomics::v1::Transcript*>(&::google::genomics::v1::_Transcript_default_instance_);
}
inline ::google::genomics::v1::Transcript* Annotation::unsafe_arena_release_transcript() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Annotation.transcript)
  if (has_transcript()) {
    clear_has_value();
    ::google::genomics::v1::Transcript* temp = value_.transcript_;
    value_.transcript_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Annotation::unsafe_arena_set_allocated_transcript(::google::genomics::v1::Transcript* transcript) {
  clear_value();
  if (transcript) {
    set_has_transcript();
    value_.transcript_ = transcript;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Annotation.transcript)
}
inline ::google::genomics::v1::Transcript* Annotation::mutable_transcript() {
  if (!has_transcript()) {
    clear_value();
    set_has_transcript();
    value_.transcript_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1::Transcript >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Annotation.transcript)
  return value_.transcript_;
}

// map<string, .google.protobuf.ListValue> info = 12;
inline int Annotation::info_size() const {
  return info_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
Annotation::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.Annotation.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
Annotation::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.Annotation.info)
  return info_.MutableMap();
}

inline bool Annotation::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Annotation::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Annotation::ValueCase Annotation::value_case() const {
  return Annotation::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// VariantAnnotation_ClinicalCondition

// repeated string names = 1;
inline int VariantAnnotation_ClinicalCondition::names_size() const {
  return names_.size();
}
inline void VariantAnnotation_ClinicalCondition::clear_names() {
  names_.Clear();
}
inline const ::std::string& VariantAnnotation_ClinicalCondition::names(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
  return names_.Get(index);
}
inline ::std::string* VariantAnnotation_ClinicalCondition::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
  return names_.Mutable(index);
}
inline void VariantAnnotation_ClinicalCondition::set_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
  names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void VariantAnnotation_ClinicalCondition::set_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
  names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void VariantAnnotation_ClinicalCondition::set_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
}
inline void VariantAnnotation_ClinicalCondition::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
}
inline ::std::string* VariantAnnotation_ClinicalCondition::add_names() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
  return names_.Add();
}
inline void VariantAnnotation_ClinicalCondition::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
}
#if LANG_CXX11
inline void VariantAnnotation_ClinicalCondition::add_names(::std::string&& value) {
  names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
}
#endif
inline void VariantAnnotation_ClinicalCondition::add_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
}
inline void VariantAnnotation_ClinicalCondition::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
VariantAnnotation_ClinicalCondition::names() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
VariantAnnotation_ClinicalCondition::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantAnnotation.ClinicalCondition.names)
  return &names_;
}

// repeated .google.genomics.v1.ExternalId external_ids = 2;
inline int VariantAnnotation_ClinicalCondition::external_ids_size() const {
  return external_ids_.size();
}
inline void VariantAnnotation_ClinicalCondition::clear_external_ids() {
  external_ids_.Clear();
}
inline const ::google::genomics::v1::ExternalId& VariantAnnotation_ClinicalCondition::external_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.ClinicalCondition.external_ids)
  return external_ids_.Get(index);
}
inline ::google::genomics::v1::ExternalId* VariantAnnotation_ClinicalCondition::mutable_external_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.ClinicalCondition.external_ids)
  return external_ids_.Mutable(index);
}
inline ::google::genomics::v1::ExternalId* VariantAnnotation_ClinicalCondition::add_external_ids() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantAnnotation.ClinicalCondition.external_ids)
  return external_ids_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ExternalId >*
VariantAnnotation_ClinicalCondition::mutable_external_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantAnnotation.ClinicalCondition.external_ids)
  return &external_ids_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ExternalId >&
VariantAnnotation_ClinicalCondition::external_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantAnnotation.ClinicalCondition.external_ids)
  return external_ids_;
}

// string concept_id = 3;
inline void VariantAnnotation_ClinicalCondition::clear_concept_id() {
  concept_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantAnnotation_ClinicalCondition::concept_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
  return concept_id_.Get();
}
inline void VariantAnnotation_ClinicalCondition::set_concept_id(const ::std::string& value) {
  
  concept_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
}
#if LANG_CXX11
inline void VariantAnnotation_ClinicalCondition::set_concept_id(::std::string&& value) {
  
  concept_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
}
#endif
inline void VariantAnnotation_ClinicalCondition::set_concept_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  concept_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
}
inline void VariantAnnotation_ClinicalCondition::set_concept_id(const char* value,
    size_t size) {
  
  concept_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
}
inline ::std::string* VariantAnnotation_ClinicalCondition::mutable_concept_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
  return concept_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantAnnotation_ClinicalCondition::release_concept_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
  
  return concept_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void VariantAnnotation_ClinicalCondition::set_allocated_concept_id(::std::string* concept_id) {
  if (concept_id != NULL) {
    
  } else {
    
  }
  concept_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concept_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
}
inline ::std::string* VariantAnnotation_ClinicalCondition::unsafe_arena_release_concept_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return concept_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantAnnotation_ClinicalCondition::unsafe_arena_set_allocated_concept_id(
    ::std::string* concept_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (concept_id != NULL) {
    
  } else {
    
  }
  concept_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      concept_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantAnnotation.ClinicalCondition.concept_id)
}

// string omim_id = 4;
inline void VariantAnnotation_ClinicalCondition::clear_omim_id() {
  omim_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantAnnotation_ClinicalCondition::omim_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
  return omim_id_.Get();
}
inline void VariantAnnotation_ClinicalCondition::set_omim_id(const ::std::string& value) {
  
  omim_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
}
#if LANG_CXX11
inline void VariantAnnotation_ClinicalCondition::set_omim_id(::std::string&& value) {
  
  omim_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
}
#endif
inline void VariantAnnotation_ClinicalCondition::set_omim_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  omim_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
}
inline void VariantAnnotation_ClinicalCondition::set_omim_id(const char* value,
    size_t size) {
  
  omim_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
}
inline ::std::string* VariantAnnotation_ClinicalCondition::mutable_omim_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
  return omim_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantAnnotation_ClinicalCondition::release_omim_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
  
  return omim_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void VariantAnnotation_ClinicalCondition::set_allocated_omim_id(::std::string* omim_id) {
  if (omim_id != NULL) {
    
  } else {
    
  }
  omim_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), omim_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
}
inline ::std::string* VariantAnnotation_ClinicalCondition::unsafe_arena_release_omim_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return omim_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantAnnotation_ClinicalCondition::unsafe_arena_set_allocated_omim_id(
    ::std::string* omim_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (omim_id != NULL) {
    
  } else {
    
  }
  omim_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      omim_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantAnnotation.ClinicalCondition.omim_id)
}

// -------------------------------------------------------------------

// VariantAnnotation

// .google.genomics.v1.VariantAnnotation.Type type = 1;
inline void VariantAnnotation::clear_type() {
  type_ = 0;
}
inline ::google::genomics::v1::VariantAnnotation_Type VariantAnnotation::type() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.type)
  return static_cast< ::google::genomics::v1::VariantAnnotation_Type >(type_);
}
inline void VariantAnnotation::set_type(::google::genomics::v1::VariantAnnotation_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.type)
}

// .google.genomics.v1.VariantAnnotation.Effect effect = 2;
inline void VariantAnnotation::clear_effect() {
  effect_ = 0;
}
inline ::google::genomics::v1::VariantAnnotation_Effect VariantAnnotation::effect() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.effect)
  return static_cast< ::google::genomics::v1::VariantAnnotation_Effect >(effect_);
}
inline void VariantAnnotation::set_effect(::google::genomics::v1::VariantAnnotation_Effect value) {
  
  effect_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.effect)
}

// string alternate_bases = 3;
inline void VariantAnnotation::clear_alternate_bases() {
  alternate_bases_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantAnnotation::alternate_bases() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.alternate_bases)
  return alternate_bases_.Get();
}
inline void VariantAnnotation::set_alternate_bases(const ::std::string& value) {
  
  alternate_bases_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.alternate_bases)
}
#if LANG_CXX11
inline void VariantAnnotation::set_alternate_bases(::std::string&& value) {
  
  alternate_bases_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.VariantAnnotation.alternate_bases)
}
#endif
inline void VariantAnnotation::set_alternate_bases(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alternate_bases_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantAnnotation.alternate_bases)
}
inline void VariantAnnotation::set_alternate_bases(const char* value,
    size_t size) {
  
  alternate_bases_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantAnnotation.alternate_bases)
}
inline ::std::string* VariantAnnotation::mutable_alternate_bases() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.alternate_bases)
  return alternate_bases_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantAnnotation::release_alternate_bases() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantAnnotation.alternate_bases)
  
  return alternate_bases_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void VariantAnnotation::set_allocated_alternate_bases(::std::string* alternate_bases) {
  if (alternate_bases != NULL) {
    
  } else {
    
  }
  alternate_bases_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alternate_bases,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantAnnotation.alternate_bases)
}
inline ::std::string* VariantAnnotation::unsafe_arena_release_alternate_bases() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantAnnotation.alternate_bases)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return alternate_bases_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantAnnotation::unsafe_arena_set_allocated_alternate_bases(
    ::std::string* alternate_bases) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (alternate_bases != NULL) {
    
  } else {
    
  }
  alternate_bases_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      alternate_bases, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantAnnotation.alternate_bases)
}

// string gene_id = 4;
inline void VariantAnnotation::clear_gene_id() {
  gene_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantAnnotation::gene_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.gene_id)
  return gene_id_.Get();
}
inline void VariantAnnotation::set_gene_id(const ::std::string& value) {
  
  gene_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.gene_id)
}
#if LANG_CXX11
inline void VariantAnnotation::set_gene_id(::std::string&& value) {
  
  gene_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.VariantAnnotation.gene_id)
}
#endif
inline void VariantAnnotation::set_gene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gene_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantAnnotation.gene_id)
}
inline void VariantAnnotation::set_gene_id(const char* value,
    size_t size) {
  
  gene_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantAnnotation.gene_id)
}
inline ::std::string* VariantAnnotation::mutable_gene_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.gene_id)
  return gene_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantAnnotation::release_gene_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantAnnotation.gene_id)
  
  return gene_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void VariantAnnotation::set_allocated_gene_id(::std::string* gene_id) {
  if (gene_id != NULL) {
    
  } else {
    
  }
  gene_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gene_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantAnnotation.gene_id)
}
inline ::std::string* VariantAnnotation::unsafe_arena_release_gene_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantAnnotation.gene_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return gene_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantAnnotation::unsafe_arena_set_allocated_gene_id(
    ::std::string* gene_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (gene_id != NULL) {
    
  } else {
    
  }
  gene_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      gene_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantAnnotation.gene_id)
}

// repeated string transcript_ids = 5;
inline int VariantAnnotation::transcript_ids_size() const {
  return transcript_ids_.size();
}
inline void VariantAnnotation::clear_transcript_ids() {
  transcript_ids_.Clear();
}
inline const ::std::string& VariantAnnotation::transcript_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.transcript_ids)
  return transcript_ids_.Get(index);
}
inline ::std::string* VariantAnnotation::mutable_transcript_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.transcript_ids)
  return transcript_ids_.Mutable(index);
}
inline void VariantAnnotation::set_transcript_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.transcript_ids)
  transcript_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void VariantAnnotation::set_transcript_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.transcript_ids)
  transcript_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void VariantAnnotation::set_transcript_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transcript_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantAnnotation.transcript_ids)
}
inline void VariantAnnotation::set_transcript_ids(int index, const char* value, size_t size) {
  transcript_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantAnnotation.transcript_ids)
}
inline ::std::string* VariantAnnotation::add_transcript_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.VariantAnnotation.transcript_ids)
  return transcript_ids_.Add();
}
inline void VariantAnnotation::add_transcript_ids(const ::std::string& value) {
  transcript_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantAnnotation.transcript_ids)
}
#if LANG_CXX11
inline void VariantAnnotation::add_transcript_ids(::std::string&& value) {
  transcript_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantAnnotation.transcript_ids)
}
#endif
inline void VariantAnnotation::add_transcript_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transcript_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.VariantAnnotation.transcript_ids)
}
inline void VariantAnnotation::add_transcript_ids(const char* value, size_t size) {
  transcript_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.VariantAnnotation.transcript_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
VariantAnnotation::transcript_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantAnnotation.transcript_ids)
  return transcript_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
VariantAnnotation::mutable_transcript_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantAnnotation.transcript_ids)
  return &transcript_ids_;
}

// repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;
inline int VariantAnnotation::conditions_size() const {
  return conditions_.size();
}
inline void VariantAnnotation::clear_conditions() {
  conditions_.Clear();
}
inline const ::google::genomics::v1::VariantAnnotation_ClinicalCondition& VariantAnnotation::conditions(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.conditions)
  return conditions_.Get(index);
}
inline ::google::genomics::v1::VariantAnnotation_ClinicalCondition* VariantAnnotation::mutable_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantAnnotation.conditions)
  return conditions_.Mutable(index);
}
inline ::google::genomics::v1::VariantAnnotation_ClinicalCondition* VariantAnnotation::add_conditions() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantAnnotation.conditions)
  return conditions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantAnnotation_ClinicalCondition >*
VariantAnnotation::mutable_conditions() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantAnnotation.conditions)
  return &conditions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantAnnotation_ClinicalCondition >&
VariantAnnotation::conditions() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantAnnotation.conditions)
  return conditions_;
}

// .google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;
inline void VariantAnnotation::clear_clinical_significance() {
  clinical_significance_ = 0;
}
inline ::google::genomics::v1::VariantAnnotation_ClinicalSignificance VariantAnnotation::clinical_significance() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantAnnotation.clinical_significance)
  return static_cast< ::google::genomics::v1::VariantAnnotation_ClinicalSignificance >(clinical_significance_);
}
inline void VariantAnnotation::set_clinical_significance(::google::genomics::v1::VariantAnnotation_ClinicalSignificance value) {
  
  clinical_significance_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantAnnotation.clinical_significance)
}

// -------------------------------------------------------------------

// Transcript_Exon

// int64 start = 1;
inline void Transcript_Exon::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Transcript_Exon::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.Exon.start)
  return start_;
}
inline void Transcript_Exon::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Transcript.Exon.start)
}

// int64 end = 2;
inline void Transcript_Exon::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Transcript_Exon::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.Exon.end)
  return end_;
}
inline void Transcript_Exon::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Transcript.Exon.end)
}

// .google.protobuf.Int32Value frame = 3;
inline bool Transcript_Exon::has_frame() const {
  return this != internal_default_instance() && frame_ != NULL;
}
inline const ::google::protobuf::Int32Value& Transcript_Exon::frame() const {
  const ::google::protobuf::Int32Value* p = frame_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.Exon.frame)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int32Value*>(
      &::google::protobuf::_Int32Value_default_instance_);
}
inline ::google::protobuf::Int32Value* Transcript_Exon::release_frame() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Transcript.Exon.frame)
  
  ::google::protobuf::Int32Value* temp = frame_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  frame_ = NULL;
  return temp;
}
inline ::google::protobuf::Int32Value* Transcript_Exon::unsafe_arena_release_frame() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Transcript.Exon.frame)
  
  ::google::protobuf::Int32Value* temp = frame_;
  frame_ = NULL;
  return temp;
}
inline ::google::protobuf::Int32Value* Transcript_Exon::mutable_frame() {
  
  if (frame_ == NULL) {
    _slow_mutable_frame();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Transcript.Exon.frame)
  return frame_;
}
inline void Transcript_Exon::set_allocated_frame(::google::protobuf::Int32Value* frame) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(frame_);
  }
  if (frame) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(frame)->GetArena();
    if (message_arena != submessage_arena) {
      frame = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, frame, submessage_arena);
    }
    
  } else {
    
  }
  frame_ = frame;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Transcript.Exon.frame)
}

// -------------------------------------------------------------------

// Transcript_CodingSequence

// int64 start = 1;
inline void Transcript_CodingSequence::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Transcript_CodingSequence::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.CodingSequence.start)
  return start_;
}
inline void Transcript_CodingSequence::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Transcript.CodingSequence.start)
}

// int64 end = 2;
inline void Transcript_CodingSequence::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Transcript_CodingSequence::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.CodingSequence.end)
  return end_;
}
inline void Transcript_CodingSequence::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Transcript.CodingSequence.end)
}

// -------------------------------------------------------------------

// Transcript

// string gene_id = 1;
inline void Transcript::clear_gene_id() {
  gene_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Transcript::gene_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.gene_id)
  return gene_id_.Get();
}
inline void Transcript::set_gene_id(const ::std::string& value) {
  
  gene_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Transcript.gene_id)
}
#if LANG_CXX11
inline void Transcript::set_gene_id(::std::string&& value) {
  
  gene_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.Transcript.gene_id)
}
#endif
inline void Transcript::set_gene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gene_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Transcript.gene_id)
}
inline void Transcript::set_gene_id(const char* value,
    size_t size) {
  
  gene_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Transcript.gene_id)
}
inline ::std::string* Transcript::mutable_gene_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Transcript.gene_id)
  return gene_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Transcript::release_gene_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Transcript.gene_id)
  
  return gene_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Transcript::set_allocated_gene_id(::std::string* gene_id) {
  if (gene_id != NULL) {
    
  } else {
    
  }
  gene_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gene_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Transcript.gene_id)
}
inline ::std::string* Transcript::unsafe_arena_release_gene_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Transcript.gene_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return gene_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Transcript::unsafe_arena_set_allocated_gene_id(
    ::std::string* gene_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (gene_id != NULL) {
    
  } else {
    
  }
  gene_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      gene_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Transcript.gene_id)
}

// repeated .google.genomics.v1.Transcript.Exon exons = 2;
inline int Transcript::exons_size() const {
  return exons_.size();
}
inline void Transcript::clear_exons() {
  exons_.Clear();
}
inline const ::google::genomics::v1::Transcript_Exon& Transcript::exons(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.exons)
  return exons_.Get(index);
}
inline ::google::genomics::v1::Transcript_Exon* Transcript::mutable_exons(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Transcript.exons)
  return exons_.Mutable(index);
}
inline ::google::genomics::v1::Transcript_Exon* Transcript::add_exons() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.Transcript.exons)
  return exons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Transcript_Exon >*
Transcript::mutable_exons() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.Transcript.exons)
  return &exons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Transcript_Exon >&
Transcript::exons() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.Transcript.exons)
  return exons_;
}

// .google.genomics.v1.Transcript.CodingSequence coding_sequence = 3;
inline bool Transcript::has_coding_sequence() const {
  return this != internal_default_instance() && coding_sequence_ != NULL;
}
inline void Transcript::clear_coding_sequence() {
  if (GetArenaNoVirtual() == NULL && coding_sequence_ != NULL) {
    delete coding_sequence_;
  }
  coding_sequence_ = NULL;
}
inline const ::google::genomics::v1::Transcript_CodingSequence& Transcript::coding_sequence() const {
  const ::google::genomics::v1::Transcript_CodingSequence* p = coding_sequence_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.Transcript.coding_sequence)
  return p != NULL ? *p : *reinterpret_cast<const ::google::genomics::v1::Transcript_CodingSequence*>(
      &::google::genomics::v1::_Transcript_CodingSequence_default_instance_);
}
inline ::google::genomics::v1::Transcript_CodingSequence* Transcript::release_coding_sequence() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Transcript.coding_sequence)
  
  ::google::genomics::v1::Transcript_CodingSequence* temp = coding_sequence_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  coding_sequence_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Transcript_CodingSequence* Transcript::unsafe_arena_release_coding_sequence() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Transcript.coding_sequence)
  
  ::google::genomics::v1::Transcript_CodingSequence* temp = coding_sequence_;
  coding_sequence_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Transcript_CodingSequence* Transcript::mutable_coding_sequence() {
  
  if (coding_sequence_ == NULL) {
    _slow_mutable_coding_sequence();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Transcript.coding_sequence)
  return coding_sequence_;
}
inline void Transcript::set_allocated_coding_sequence(::google::genomics::v1::Transcript_CodingSequence* coding_sequence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete coding_sequence_;
  }
  if (coding_sequence) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(coding_sequence);
    if (message_arena != submessage_arena) {
      coding_sequence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coding_sequence, submessage_arena);
    }
    
  } else {
    
  }
  coding_sequence_ = coding_sequence;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Transcript.coding_sequence)
}

// -------------------------------------------------------------------

// ExternalId

// string source_name = 1;
inline void ExternalId::clear_source_name() {
  source_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExternalId::source_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExternalId.source_name)
  return source_name_.Get();
}
inline void ExternalId::set_source_name(const ::std::string& value) {
  
  source_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExternalId.source_name)
}
#if LANG_CXX11
inline void ExternalId::set_source_name(::std::string&& value) {
  
  source_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.ExternalId.source_name)
}
#endif
inline void ExternalId::set_source_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExternalId.source_name)
}
inline void ExternalId::set_source_name(const char* value,
    size_t size) {
  
  source_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExternalId.source_name)
}
inline ::std::string* ExternalId::mutable_source_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExternalId.source_name)
  return source_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExternalId::release_source_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExternalId.source_name)
  
  return source_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ExternalId::set_allocated_source_name(::std::string* source_name) {
  if (source_name != NULL) {
    
  } else {
    
  }
  source_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExternalId.source_name)
}
inline ::std::string* ExternalId::unsafe_arena_release_source_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExternalId.source_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return source_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExternalId::unsafe_arena_set_allocated_source_name(
    ::std::string* source_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source_name != NULL) {
    
  } else {
    
  }
  source_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExternalId.source_name)
}

// string id = 2;
inline void ExternalId::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExternalId::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExternalId.id)
  return id_.Get();
}
inline void ExternalId::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExternalId.id)
}
#if LANG_CXX11
inline void ExternalId::set_id(::std::string&& value) {
  
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.ExternalId.id)
}
#endif
inline void ExternalId::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExternalId.id)
}
inline void ExternalId::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExternalId.id)
}
inline ::std::string* ExternalId::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExternalId.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExternalId::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExternalId.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ExternalId::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExternalId.id)
}
inline ::std::string* ExternalId::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExternalId.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExternalId::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExternalId.id)
}

// -------------------------------------------------------------------

// CreateAnnotationSetRequest

// .google.genomics.v1.AnnotationSet annotation_set = 1;
inline bool CreateAnnotationSetRequest::has_annotation_set() const {
  return this != internal_default_instance() && annotation_set_ != NULL;
}
inline void CreateAnnotationSetRequest::clear_annotation_set() {
  if (GetArenaNoVirtual() == NULL && annotation_set_ != NULL) {
    delete annotation_set_;
  }
  annotation_set_ = NULL;
}
inline const ::google::genomics::v1::AnnotationSet& CreateAnnotationSetRequest::annotation_set() const {
  const ::google::genomics::v1::AnnotationSet* p = annotation_set_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.CreateAnnotationSetRequest.annotation_set)
  return p != NULL ? *p : *reinterpret_cast<const ::google::genomics::v1::AnnotationSet*>(
      &::google::genomics::v1::_AnnotationSet_default_instance_);
}
inline ::google::genomics::v1::AnnotationSet* CreateAnnotationSetRequest::release_annotation_set() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CreateAnnotationSetRequest.annotation_set)
  
  ::google::genomics::v1::AnnotationSet* temp = annotation_set_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  annotation_set_ = NULL;
  return temp;
}
inline ::google::genomics::v1::AnnotationSet* CreateAnnotationSetRequest::unsafe_arena_release_annotation_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.CreateAnnotationSetRequest.annotation_set)
  
  ::google::genomics::v1::AnnotationSet* temp = annotation_set_;
  annotation_set_ = NULL;
  return temp;
}
inline ::google::genomics::v1::AnnotationSet* CreateAnnotationSetRequest::mutable_annotation_set() {
  
  if (annotation_set_ == NULL) {
    _slow_mutable_annotation_set();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CreateAnnotationSetRequest.annotation_set)
  return annotation_set_;
}
inline void CreateAnnotationSetRequest::set_allocated_annotation_set(::google::genomics::v1::AnnotationSet* annotation_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annotation_set_;
  }
  if (annotation_set) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(annotation_set);
    if (message_arena != submessage_arena) {
      annotation_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation_set, submessage_arena);
    }
    
  } else {
    
  }
  annotation_set_ = annotation_set;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CreateAnnotationSetRequest.annotation_set)
}

// -------------------------------------------------------------------

// GetAnnotationSetRequest

// string annotation_set_id = 1;
inline void GetAnnotationSetRequest::clear_annotation_set_id() {
  annotation_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetAnnotationSetRequest::annotation_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
  return annotation_set_id_.Get();
}
inline void GetAnnotationSetRequest::set_annotation_set_id(const ::std::string& value) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
}
#if LANG_CXX11
inline void GetAnnotationSetRequest::set_annotation_set_id(::std::string&& value) {
  
  annotation_set_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
}
#endif
inline void GetAnnotationSetRequest::set_annotation_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
}
inline void GetAnnotationSetRequest::set_annotation_set_id(const char* value,
    size_t size) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
}
inline ::std::string* GetAnnotationSetRequest::mutable_annotation_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
  return annotation_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetAnnotationSetRequest::release_annotation_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
  
  return annotation_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetAnnotationSetRequest::set_allocated_annotation_set_id(::std::string* annotation_set_id) {
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
}
inline ::std::string* GetAnnotationSetRequest::unsafe_arena_release_annotation_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return annotation_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetAnnotationSetRequest::unsafe_arena_set_allocated_annotation_set_id(
    ::std::string* annotation_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      annotation_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.GetAnnotationSetRequest.annotation_set_id)
}

// -------------------------------------------------------------------

// UpdateAnnotationSetRequest

// string annotation_set_id = 1;
inline void UpdateAnnotationSetRequest::clear_annotation_set_id() {
  annotation_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateAnnotationSetRequest::annotation_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
  return annotation_set_id_.Get();
}
inline void UpdateAnnotationSetRequest::set_annotation_set_id(const ::std::string& value) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
}
#if LANG_CXX11
inline void UpdateAnnotationSetRequest::set_annotation_set_id(::std::string&& value) {
  
  annotation_set_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
}
#endif
inline void UpdateAnnotationSetRequest::set_annotation_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
}
inline void UpdateAnnotationSetRequest::set_annotation_set_id(const char* value,
    size_t size) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
}
inline ::std::string* UpdateAnnotationSetRequest::mutable_annotation_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
  return annotation_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateAnnotationSetRequest::release_annotation_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
  
  return annotation_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UpdateAnnotationSetRequest::set_allocated_annotation_set_id(::std::string* annotation_set_id) {
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
}
inline ::std::string* UpdateAnnotationSetRequest::unsafe_arena_release_annotation_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return annotation_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateAnnotationSetRequest::unsafe_arena_set_allocated_annotation_set_id(
    ::std::string* annotation_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      annotation_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set_id)
}

// .google.genomics.v1.AnnotationSet annotation_set = 2;
inline bool UpdateAnnotationSetRequest::has_annotation_set() const {
  return this != internal_default_instance() && annotation_set_ != NULL;
}
inline void UpdateAnnotationSetRequest::clear_annotation_set() {
  if (GetArenaNoVirtual() == NULL && annotation_set_ != NULL) {
    delete annotation_set_;
  }
  annotation_set_ = NULL;
}
inline const ::google::genomics::v1::AnnotationSet& UpdateAnnotationSetRequest::annotation_set() const {
  const ::google::genomics::v1::AnnotationSet* p = annotation_set_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set)
  return p != NULL ? *p : *reinterpret_cast<const ::google::genomics::v1::AnnotationSet*>(
      &::google::genomics::v1::_AnnotationSet_default_instance_);
}
inline ::google::genomics::v1::AnnotationSet* UpdateAnnotationSetRequest::release_annotation_set() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set)
  
  ::google::genomics::v1::AnnotationSet* temp = annotation_set_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  annotation_set_ = NULL;
  return temp;
}
inline ::google::genomics::v1::AnnotationSet* UpdateAnnotationSetRequest::unsafe_arena_release_annotation_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set)
  
  ::google::genomics::v1::AnnotationSet* temp = annotation_set_;
  annotation_set_ = NULL;
  return temp;
}
inline ::google::genomics::v1::AnnotationSet* UpdateAnnotationSetRequest::mutable_annotation_set() {
  
  if (annotation_set_ == NULL) {
    _slow_mutable_annotation_set();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set)
  return annotation_set_;
}
inline void UpdateAnnotationSetRequest::set_allocated_annotation_set(::google::genomics::v1::AnnotationSet* annotation_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annotation_set_;
  }
  if (annotation_set) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(annotation_set);
    if (message_arena != submessage_arena) {
      annotation_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation_set, submessage_arena);
    }
    
  } else {
    
  }
  annotation_set_ = annotation_set;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateAnnotationSetRequest.annotation_set)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateAnnotationSetRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateAnnotationSetRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateAnnotationSetRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateAnnotationSetRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateAnnotationSetRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateAnnotationSetRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateAnnotationSetRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateAnnotationSetRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateAnnotationSetRequest.update_mask)
  return update_mask_;
}
inline void UpdateAnnotationSetRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateAnnotationSetRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteAnnotationSetRequest

// string annotation_set_id = 1;
inline void DeleteAnnotationSetRequest::clear_annotation_set_id() {
  annotation_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteAnnotationSetRequest::annotation_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
  return annotation_set_id_.Get();
}
inline void DeleteAnnotationSetRequest::set_annotation_set_id(const ::std::string& value) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
}
#if LANG_CXX11
inline void DeleteAnnotationSetRequest::set_annotation_set_id(::std::string&& value) {
  
  annotation_set_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
}
#endif
inline void DeleteAnnotationSetRequest::set_annotation_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
}
inline void DeleteAnnotationSetRequest::set_annotation_set_id(const char* value,
    size_t size) {
  
  annotation_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
}
inline ::std::string* DeleteAnnotationSetRequest::mutable_annotation_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
  return annotation_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteAnnotationSetRequest::release_annotation_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
  
  return annotation_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteAnnotationSetRequest::set_allocated_annotation_set_id(::std::string* annotation_set_id) {
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
}
inline ::std::string* DeleteAnnotationSetRequest::unsafe_arena_release_annotation_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return annotation_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteAnnotationSetRequest::unsafe_arena_set_allocated_annotation_set_id(
    ::std::string* annotation_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (annotation_set_id != NULL) {
    
  } else {
    
  }
  annotation_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      annotation_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.DeleteAnnotationSetRequest.annotation_set_id)
}

// -------------------------------------------------------------------

// SearchAnnotationSetsRequest

// repeated string dataset_ids = 1;
inline int SearchAnnotationSetsRequest::dataset_ids_size() const {
  return dataset_ids_.size();
}
inline void SearchAnnotationSetsRequest::clear_dataset_ids() {
  dataset_ids_.Clear();
}
inline const ::std::string& SearchAnnotationSetsRequest::dataset_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
  return dataset_ids_.Get(index);
}
inline ::std::string* SearchAnnotationSetsRequest::mutable_dataset_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
  return dataset_ids_.Mutable(index);
}
inline void SearchAnnotationSetsRequest::set_dataset_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
  dataset_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchAnnotationSetsRequest::set_dataset_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
  dataset_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchAnnotationSetsRequest::set_dataset_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dataset_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
}
inline void SearchAnnotationSetsRequest::set_dataset_ids(int index, const char* value, size_t size) {
  dataset_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
}
inline ::std::string* SearchAnnotationSetsRequest::add_dataset_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
  return dataset_ids_.Add();
}
inline void SearchAnnotationSetsRequest::add_dataset_ids(const ::std::string& value) {
  dataset_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
}
#if LANG_CXX11
inline void SearchAnnotationSetsRequest::add_dataset_ids(::std::string&& value) {
  dataset_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
}
#endif
inline void SearchAnnotationSetsRequest::add_dataset_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dataset_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
}
inline void SearchAnnotationSetsRequest::add_dataset_ids(const char* value, size_t size) {
  dataset_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchAnnotationSetsRequest::dataset_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
  return dataset_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchAnnotationSetsRequest::mutable_dataset_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchAnnotationSetsRequest.dataset_ids)
  return &dataset_ids_;
}

// string reference_set_id = 2;
inline void SearchAnnotationSetsRequest::clear_reference_set_id() {
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAnnotationSetsRequest::reference_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
  return reference_set_id_.Get();
}
inline void SearchAnnotationSetsRequest::set_reference_set_id(const ::std::string& value) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
}
#if LANG_CXX11
inline void SearchAnnotationSetsRequest::set_reference_set_id(::std::string&& value) {
  
  reference_set_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
}
#endif
inline void SearchAnnotationSetsRequest::set_reference_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
}
inline void SearchAnnotationSetsRequest::set_reference_set_id(const char* value,
    size_t size) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
}
inline ::std::string* SearchAnnotationSetsRequest::mutable_reference_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
  return reference_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAnnotationSetsRequest::release_reference_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
  
  return reference_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAnnotationSetsRequest::set_allocated_reference_set_id(::std::string* reference_set_id) {
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
}
inline ::std::string* SearchAnnotationSetsRequest::unsafe_arena_release_reference_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAnnotationSetsRequest::unsafe_arena_set_allocated_reference_set_id(
    ::std::string* reference_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationSetsRequest.reference_set_id)
}

// string name = 3;
inline void SearchAnnotationSetsRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAnnotationSetsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsRequest.name)
  return name_.Get();
}
inline void SearchAnnotationSetsRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsRequest.name)
}
#if LANG_CXX11
inline void SearchAnnotationSetsRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationSetsRequest.name)
}
#endif
inline void SearchAnnotationSetsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationSetsRequest.name)
}
inline void SearchAnnotationSetsRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationSetsRequest.name)
}
inline ::std::string* SearchAnnotationSetsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationSetsRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAnnotationSetsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationSetsRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAnnotationSetsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationSetsRequest.name)
}
inline ::std::string* SearchAnnotationSetsRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationSetsRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAnnotationSetsRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationSetsRequest.name)
}

// repeated .google.genomics.v1.AnnotationType types = 4;
inline int SearchAnnotationSetsRequest::types_size() const {
  return types_.size();
}
inline void SearchAnnotationSetsRequest::clear_types() {
  types_.Clear();
}
inline ::google::genomics::v1::AnnotationType SearchAnnotationSetsRequest::types(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsRequest.types)
  return static_cast< ::google::genomics::v1::AnnotationType >(types_.Get(index));
}
inline void SearchAnnotationSetsRequest::set_types(int index, ::google::genomics::v1::AnnotationType value) {
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsRequest.types)
}
inline void SearchAnnotationSetsRequest::add_types(::google::genomics::v1::AnnotationType value) {
  types_.Add(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchAnnotationSetsRequest.types)
}
inline const ::google::protobuf::RepeatedField<int>&
SearchAnnotationSetsRequest::types() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchAnnotationSetsRequest.types)
  return types_;
}
inline ::google::protobuf::RepeatedField<int>*
SearchAnnotationSetsRequest::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchAnnotationSetsRequest.types)
  return &types_;
}

// string page_token = 5;
inline void SearchAnnotationSetsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAnnotationSetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
  return page_token_.Get();
}
inline void SearchAnnotationSetsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
}
#if LANG_CXX11
inline void SearchAnnotationSetsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
}
#endif
inline void SearchAnnotationSetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
}
inline void SearchAnnotationSetsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
}
inline ::std::string* SearchAnnotationSetsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAnnotationSetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAnnotationSetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
}
inline ::std::string* SearchAnnotationSetsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAnnotationSetsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationSetsRequest.page_token)
}

// int32 page_size = 6;
inline void SearchAnnotationSetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchAnnotationSetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsRequest.page_size)
  return page_size_;
}
inline void SearchAnnotationSetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsRequest.page_size)
}

// -------------------------------------------------------------------

// SearchAnnotationSetsResponse

// repeated .google.genomics.v1.AnnotationSet annotation_sets = 1;
inline int SearchAnnotationSetsResponse::annotation_sets_size() const {
  return annotation_sets_.size();
}
inline void SearchAnnotationSetsResponse::clear_annotation_sets() {
  annotation_sets_.Clear();
}
inline const ::google::genomics::v1::AnnotationSet& SearchAnnotationSetsResponse::annotation_sets(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsResponse.annotation_sets)
  return annotation_sets_.Get(index);
}
inline ::google::genomics::v1::AnnotationSet* SearchAnnotationSetsResponse::mutable_annotation_sets(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationSetsResponse.annotation_sets)
  return annotation_sets_.Mutable(index);
}
inline ::google::genomics::v1::AnnotationSet* SearchAnnotationSetsResponse::add_annotation_sets() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchAnnotationSetsResponse.annotation_sets)
  return annotation_sets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::AnnotationSet >*
SearchAnnotationSetsResponse::mutable_annotation_sets() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchAnnotationSetsResponse.annotation_sets)
  return &annotation_sets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::AnnotationSet >&
SearchAnnotationSetsResponse::annotation_sets() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchAnnotationSetsResponse.annotation_sets)
  return annotation_sets_;
}

// string next_page_token = 2;
inline void SearchAnnotationSetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAnnotationSetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void SearchAnnotationSetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
}
#if LANG_CXX11
inline void SearchAnnotationSetsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
}
#endif
inline void SearchAnnotationSetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
}
inline void SearchAnnotationSetsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
}
inline ::std::string* SearchAnnotationSetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAnnotationSetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAnnotationSetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
}
inline ::std::string* SearchAnnotationSetsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAnnotationSetsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationSetsResponse.next_page_token)
}

// -------------------------------------------------------------------

// CreateAnnotationRequest

// .google.genomics.v1.Annotation annotation = 1;
inline bool CreateAnnotationRequest::has_annotation() const {
  return this != internal_default_instance() && annotation_ != NULL;
}
inline void CreateAnnotationRequest::clear_annotation() {
  if (GetArenaNoVirtual() == NULL && annotation_ != NULL) {
    delete annotation_;
  }
  annotation_ = NULL;
}
inline const ::google::genomics::v1::Annotation& CreateAnnotationRequest::annotation() const {
  const ::google::genomics::v1::Annotation* p = annotation_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.CreateAnnotationRequest.annotation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::genomics::v1::Annotation*>(
      &::google::genomics::v1::_Annotation_default_instance_);
}
inline ::google::genomics::v1::Annotation* CreateAnnotationRequest::release_annotation() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CreateAnnotationRequest.annotation)
  
  ::google::genomics::v1::Annotation* temp = annotation_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  annotation_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Annotation* CreateAnnotationRequest::unsafe_arena_release_annotation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.CreateAnnotationRequest.annotation)
  
  ::google::genomics::v1::Annotation* temp = annotation_;
  annotation_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Annotation* CreateAnnotationRequest::mutable_annotation() {
  
  if (annotation_ == NULL) {
    _slow_mutable_annotation();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CreateAnnotationRequest.annotation)
  return annotation_;
}
inline void CreateAnnotationRequest::set_allocated_annotation(::google::genomics::v1::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annotation_;
  }
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(annotation);
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    
  } else {
    
  }
  annotation_ = annotation;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CreateAnnotationRequest.annotation)
}

// -------------------------------------------------------------------

// BatchCreateAnnotationsRequest

// repeated .google.genomics.v1.Annotation annotations = 1;
inline int BatchCreateAnnotationsRequest::annotations_size() const {
  return annotations_.size();
}
inline void BatchCreateAnnotationsRequest::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::genomics::v1::Annotation& BatchCreateAnnotationsRequest::annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.BatchCreateAnnotationsRequest.annotations)
  return annotations_.Get(index);
}
inline ::google::genomics::v1::Annotation* BatchCreateAnnotationsRequest::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.BatchCreateAnnotationsRequest.annotations)
  return annotations_.Mutable(index);
}
inline ::google::genomics::v1::Annotation* BatchCreateAnnotationsRequest::add_annotations() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.BatchCreateAnnotationsRequest.annotations)
  return annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >*
BatchCreateAnnotationsRequest::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.BatchCreateAnnotationsRequest.annotations)
  return &annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >&
BatchCreateAnnotationsRequest::annotations() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.BatchCreateAnnotationsRequest.annotations)
  return annotations_;
}

// string request_id = 2;
inline void BatchCreateAnnotationsRequest::clear_request_id() {
  request_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& BatchCreateAnnotationsRequest::request_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
  return request_id_.Get();
}
inline void BatchCreateAnnotationsRequest::set_request_id(const ::std::string& value) {
  
  request_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
}
#if LANG_CXX11
inline void BatchCreateAnnotationsRequest::set_request_id(::std::string&& value) {
  
  request_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
}
#endif
inline void BatchCreateAnnotationsRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
}
inline void BatchCreateAnnotationsRequest::set_request_id(const char* value,
    size_t size) {
  
  request_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
}
inline ::std::string* BatchCreateAnnotationsRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
  return request_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BatchCreateAnnotationsRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
  
  return request_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void BatchCreateAnnotationsRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
}
inline ::std::string* BatchCreateAnnotationsRequest::unsafe_arena_release_request_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return request_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void BatchCreateAnnotationsRequest::unsafe_arena_set_allocated_request_id(
    ::std::string* request_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      request_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.BatchCreateAnnotationsRequest.request_id)
}

// -------------------------------------------------------------------

// BatchCreateAnnotationsResponse_Entry

// .google.rpc.Status status = 1;
inline bool BatchCreateAnnotationsResponse_Entry::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::rpc::Status& BatchCreateAnnotationsResponse_Entry::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* BatchCreateAnnotationsResponse_Entry::release_status() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.status)
  
  ::google::rpc::Status* temp = status_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* BatchCreateAnnotationsResponse_Entry::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* BatchCreateAnnotationsResponse_Entry::mutable_status() {
  
  if (status_ == NULL) {
    _slow_mutable_status();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.status)
  return status_;
}
inline void BatchCreateAnnotationsResponse_Entry::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.status)
}

// .google.genomics.v1.Annotation annotation = 2;
inline bool BatchCreateAnnotationsResponse_Entry::has_annotation() const {
  return this != internal_default_instance() && annotation_ != NULL;
}
inline void BatchCreateAnnotationsResponse_Entry::clear_annotation() {
  if (GetArenaNoVirtual() == NULL && annotation_ != NULL) {
    delete annotation_;
  }
  annotation_ = NULL;
}
inline const ::google::genomics::v1::Annotation& BatchCreateAnnotationsResponse_Entry::annotation() const {
  const ::google::genomics::v1::Annotation* p = annotation_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.annotation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::genomics::v1::Annotation*>(
      &::google::genomics::v1::_Annotation_default_instance_);
}
inline ::google::genomics::v1::Annotation* BatchCreateAnnotationsResponse_Entry::release_annotation() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.annotation)
  
  ::google::genomics::v1::Annotation* temp = annotation_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  annotation_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Annotation* BatchCreateAnnotationsResponse_Entry::unsafe_arena_release_annotation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.annotation)
  
  ::google::genomics::v1::Annotation* temp = annotation_;
  annotation_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Annotation* BatchCreateAnnotationsResponse_Entry::mutable_annotation() {
  
  if (annotation_ == NULL) {
    _slow_mutable_annotation();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.annotation)
  return annotation_;
}
inline void BatchCreateAnnotationsResponse_Entry::set_allocated_annotation(::google::genomics::v1::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annotation_;
  }
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(annotation);
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    
  } else {
    
  }
  annotation_ = annotation;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.BatchCreateAnnotationsResponse.Entry.annotation)
}

// -------------------------------------------------------------------

// BatchCreateAnnotationsResponse

// repeated .google.genomics.v1.BatchCreateAnnotationsResponse.Entry entries = 1;
inline int BatchCreateAnnotationsResponse::entries_size() const {
  return entries_.size();
}
inline void BatchCreateAnnotationsResponse::clear_entries() {
  entries_.Clear();
}
inline const ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry& BatchCreateAnnotationsResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.BatchCreateAnnotationsResponse.entries)
  return entries_.Get(index);
}
inline ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry* BatchCreateAnnotationsResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.BatchCreateAnnotationsResponse.entries)
  return entries_.Mutable(index);
}
inline ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry* BatchCreateAnnotationsResponse::add_entries() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.BatchCreateAnnotationsResponse.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry >*
BatchCreateAnnotationsResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.BatchCreateAnnotationsResponse.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::BatchCreateAnnotationsResponse_Entry >&
BatchCreateAnnotationsResponse::entries() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.BatchCreateAnnotationsResponse.entries)
  return entries_;
}

// -------------------------------------------------------------------

// GetAnnotationRequest

// string annotation_id = 1;
inline void GetAnnotationRequest::clear_annotation_id() {
  annotation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetAnnotationRequest::annotation_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.GetAnnotationRequest.annotation_id)
  return annotation_id_.Get();
}
inline void GetAnnotationRequest::set_annotation_id(const ::std::string& value) {
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.GetAnnotationRequest.annotation_id)
}
#if LANG_CXX11
inline void GetAnnotationRequest::set_annotation_id(::std::string&& value) {
  
  annotation_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.GetAnnotationRequest.annotation_id)
}
#endif
inline void GetAnnotationRequest::set_annotation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.GetAnnotationRequest.annotation_id)
}
inline void GetAnnotationRequest::set_annotation_id(const char* value,
    size_t size) {
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.GetAnnotationRequest.annotation_id)
}
inline ::std::string* GetAnnotationRequest::mutable_annotation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.GetAnnotationRequest.annotation_id)
  return annotation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetAnnotationRequest::release_annotation_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.GetAnnotationRequest.annotation_id)
  
  return annotation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetAnnotationRequest::set_allocated_annotation_id(::std::string* annotation_id) {
  if (annotation_id != NULL) {
    
  } else {
    
  }
  annotation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.GetAnnotationRequest.annotation_id)
}
inline ::std::string* GetAnnotationRequest::unsafe_arena_release_annotation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.GetAnnotationRequest.annotation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return annotation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetAnnotationRequest::unsafe_arena_set_allocated_annotation_id(
    ::std::string* annotation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (annotation_id != NULL) {
    
  } else {
    
  }
  annotation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      annotation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.GetAnnotationRequest.annotation_id)
}

// -------------------------------------------------------------------

// UpdateAnnotationRequest

// string annotation_id = 1;
inline void UpdateAnnotationRequest::clear_annotation_id() {
  annotation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateAnnotationRequest::annotation_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
  return annotation_id_.Get();
}
inline void UpdateAnnotationRequest::set_annotation_id(const ::std::string& value) {
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
}
#if LANG_CXX11
inline void UpdateAnnotationRequest::set_annotation_id(::std::string&& value) {
  
  annotation_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
}
#endif
inline void UpdateAnnotationRequest::set_annotation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
}
inline void UpdateAnnotationRequest::set_annotation_id(const char* value,
    size_t size) {
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
}
inline ::std::string* UpdateAnnotationRequest::mutable_annotation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
  return annotation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateAnnotationRequest::release_annotation_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
  
  return annotation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UpdateAnnotationRequest::set_allocated_annotation_id(::std::string* annotation_id) {
  if (annotation_id != NULL) {
    
  } else {
    
  }
  annotation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
}
inline ::std::string* UpdateAnnotationRequest::unsafe_arena_release_annotation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return annotation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateAnnotationRequest::unsafe_arena_set_allocated_annotation_id(
    ::std::string* annotation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (annotation_id != NULL) {
    
  } else {
    
  }
  annotation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      annotation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.UpdateAnnotationRequest.annotation_id)
}

// .google.genomics.v1.Annotation annotation = 2;
inline bool UpdateAnnotationRequest::has_annotation() const {
  return this != internal_default_instance() && annotation_ != NULL;
}
inline void UpdateAnnotationRequest::clear_annotation() {
  if (GetArenaNoVirtual() == NULL && annotation_ != NULL) {
    delete annotation_;
  }
  annotation_ = NULL;
}
inline const ::google::genomics::v1::Annotation& UpdateAnnotationRequest::annotation() const {
  const ::google::genomics::v1::Annotation* p = annotation_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateAnnotationRequest.annotation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::genomics::v1::Annotation*>(
      &::google::genomics::v1::_Annotation_default_instance_);
}
inline ::google::genomics::v1::Annotation* UpdateAnnotationRequest::release_annotation() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateAnnotationRequest.annotation)
  
  ::google::genomics::v1::Annotation* temp = annotation_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  annotation_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Annotation* UpdateAnnotationRequest::unsafe_arena_release_annotation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateAnnotationRequest.annotation)
  
  ::google::genomics::v1::Annotation* temp = annotation_;
  annotation_ = NULL;
  return temp;
}
inline ::google::genomics::v1::Annotation* UpdateAnnotationRequest::mutable_annotation() {
  
  if (annotation_ == NULL) {
    _slow_mutable_annotation();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateAnnotationRequest.annotation)
  return annotation_;
}
inline void UpdateAnnotationRequest::set_allocated_annotation(::google::genomics::v1::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annotation_;
  }
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(annotation);
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    
  } else {
    
  }
  annotation_ = annotation;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateAnnotationRequest.annotation)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateAnnotationRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateAnnotationRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateAnnotationRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateAnnotationRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateAnnotationRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateAnnotationRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateAnnotationRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateAnnotationRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateAnnotationRequest.update_mask)
  return update_mask_;
}
inline void UpdateAnnotationRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateAnnotationRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteAnnotationRequest

// string annotation_id = 1;
inline void DeleteAnnotationRequest::clear_annotation_id() {
  annotation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteAnnotationRequest::annotation_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
  return annotation_id_.Get();
}
inline void DeleteAnnotationRequest::set_annotation_id(const ::std::string& value) {
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
}
#if LANG_CXX11
inline void DeleteAnnotationRequest::set_annotation_id(::std::string&& value) {
  
  annotation_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
}
#endif
inline void DeleteAnnotationRequest::set_annotation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
}
inline void DeleteAnnotationRequest::set_annotation_id(const char* value,
    size_t size) {
  
  annotation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
}
inline ::std::string* DeleteAnnotationRequest::mutable_annotation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
  return annotation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteAnnotationRequest::release_annotation_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
  
  return annotation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteAnnotationRequest::set_allocated_annotation_id(::std::string* annotation_id) {
  if (annotation_id != NULL) {
    
  } else {
    
  }
  annotation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
}
inline ::std::string* DeleteAnnotationRequest::unsafe_arena_release_annotation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return annotation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteAnnotationRequest::unsafe_arena_set_allocated_annotation_id(
    ::std::string* annotation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (annotation_id != NULL) {
    
  } else {
    
  }
  annotation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      annotation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.DeleteAnnotationRequest.annotation_id)
}

// -------------------------------------------------------------------

// SearchAnnotationsRequest

// repeated string annotation_set_ids = 1;
inline int SearchAnnotationsRequest::annotation_set_ids_size() const {
  return annotation_set_ids_.size();
}
inline void SearchAnnotationsRequest::clear_annotation_set_ids() {
  annotation_set_ids_.Clear();
}
inline const ::std::string& SearchAnnotationsRequest::annotation_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
  return annotation_set_ids_.Get(index);
}
inline ::std::string* SearchAnnotationsRequest::mutable_annotation_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
  return annotation_set_ids_.Mutable(index);
}
inline void SearchAnnotationsRequest::set_annotation_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
  annotation_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchAnnotationsRequest::set_annotation_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
  annotation_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchAnnotationsRequest::set_annotation_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  annotation_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
}
inline void SearchAnnotationsRequest::set_annotation_set_ids(int index, const char* value, size_t size) {
  annotation_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
}
inline ::std::string* SearchAnnotationsRequest::add_annotation_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
  return annotation_set_ids_.Add();
}
inline void SearchAnnotationsRequest::add_annotation_set_ids(const ::std::string& value) {
  annotation_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
}
#if LANG_CXX11
inline void SearchAnnotationsRequest::add_annotation_set_ids(::std::string&& value) {
  annotation_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
}
#endif
inline void SearchAnnotationsRequest::add_annotation_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  annotation_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
}
inline void SearchAnnotationsRequest::add_annotation_set_ids(const char* value, size_t size) {
  annotation_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchAnnotationsRequest::annotation_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
  return annotation_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchAnnotationsRequest::mutable_annotation_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchAnnotationsRequest.annotation_set_ids)
  return &annotation_set_ids_;
}

// string reference_id = 2;
inline bool SearchAnnotationsRequest::has_reference_id() const {
  return reference_case() == kReferenceId;
}
inline void SearchAnnotationsRequest::set_has_reference_id() {
  _oneof_case_[0] = kReferenceId;
}
inline void SearchAnnotationsRequest::clear_reference_id() {
  if (has_reference_id()) {
    reference_.reference_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_reference();
  }
}
inline const ::std::string& SearchAnnotationsRequest::reference_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsRequest.reference_id)
  if (has_reference_id()) {
    return reference_.reference_id_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void SearchAnnotationsRequest::set_reference_id(const ::std::string& value) {
  if (!has_reference_id()) {
    clear_reference();
    set_has_reference_id();
    reference_.reference_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.reference_id)
}
#if LANG_CXX11
inline void SearchAnnotationsRequest::set_reference_id(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.reference_id)
  if (!has_reference_id()) {
    clear_reference();
    set_has_reference_id();
    reference_.reference_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationsRequest.reference_id)
}
#endif
inline void SearchAnnotationsRequest::set_reference_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_reference_id()) {
    clear_reference();
    set_has_reference_id();
    reference_.reference_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationsRequest.reference_id)
}
inline void SearchAnnotationsRequest::set_reference_id(const char* value,
                             size_t size) {
  if (!has_reference_id()) {
    clear_reference();
    set_has_reference_id();
    reference_.reference_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_id_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationsRequest.reference_id)
}
inline ::std::string* SearchAnnotationsRequest::mutable_reference_id() {
  if (!has_reference_id()) {
    clear_reference();
    set_has_reference_id();
    reference_.reference_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return reference_.reference_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationsRequest.reference_id)
}
inline ::std::string* SearchAnnotationsRequest::release_reference_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationsRequest.reference_id)
  if (has_reference_id()) {
    clear_has_reference();
    return reference_.reference_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void SearchAnnotationsRequest::set_allocated_reference_id(::std::string* reference_id) {
  if (!has_reference_id()) {
    reference_.reference_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_reference();
  if (reference_id != NULL) {
    set_has_reference_id();
    reference_.reference_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_id,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationsRequest.reference_id)
}
inline ::std::string* SearchAnnotationsRequest::unsafe_arena_release_reference_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationsRequest.reference_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_reference_id()) {
    clear_has_reference();
    return reference_.reference_id_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void SearchAnnotationsRequest::unsafe_arena_set_allocated_reference_id(::std::string* reference_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_reference_id()) {
    reference_.reference_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_reference();
  if (reference_id) {
    set_has_reference_id();
    reference_.reference_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_id, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationsRequest.reference_id)
}

// string reference_name = 3;
inline bool SearchAnnotationsRequest::has_reference_name() const {
  return reference_case() == kReferenceName;
}
inline void SearchAnnotationsRequest::set_has_reference_name() {
  _oneof_case_[0] = kReferenceName;
}
inline void SearchAnnotationsRequest::clear_reference_name() {
  if (has_reference_name()) {
    reference_.reference_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_reference();
  }
}
inline const ::std::string& SearchAnnotationsRequest::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsRequest.reference_name)
  if (has_reference_name()) {
    return reference_.reference_name_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void SearchAnnotationsRequest::set_reference_name(const ::std::string& value) {
  if (!has_reference_name()) {
    clear_reference();
    set_has_reference_name();
    reference_.reference_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.reference_name)
}
#if LANG_CXX11
inline void SearchAnnotationsRequest::set_reference_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.reference_name)
  if (!has_reference_name()) {
    clear_reference();
    set_has_reference_name();
    reference_.reference_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationsRequest.reference_name)
}
#endif
inline void SearchAnnotationsRequest::set_reference_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_reference_name()) {
    clear_reference();
    set_has_reference_name();
    reference_.reference_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationsRequest.reference_name)
}
inline void SearchAnnotationsRequest::set_reference_name(const char* value,
                             size_t size) {
  if (!has_reference_name()) {
    clear_reference();
    set_has_reference_name();
    reference_.reference_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  reference_.reference_name_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationsRequest.reference_name)
}
inline ::std::string* SearchAnnotationsRequest::mutable_reference_name() {
  if (!has_reference_name()) {
    clear_reference();
    set_has_reference_name();
    reference_.reference_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return reference_.reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationsRequest.reference_name)
}
inline ::std::string* SearchAnnotationsRequest::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationsRequest.reference_name)
  if (has_reference_name()) {
    clear_has_reference();
    return reference_.reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void SearchAnnotationsRequest::set_allocated_reference_name(::std::string* reference_name) {
  if (!has_reference_name()) {
    reference_.reference_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_reference();
  if (reference_name != NULL) {
    set_has_reference_name();
    reference_.reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationsRequest.reference_name)
}
inline ::std::string* SearchAnnotationsRequest::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationsRequest.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_reference_name()) {
    clear_has_reference();
    return reference_.reference_name_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void SearchAnnotationsRequest::unsafe_arena_set_allocated_reference_name(::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_reference_name()) {
    reference_.reference_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_reference();
  if (reference_name) {
    set_has_reference_name();
    reference_.reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationsRequest.reference_name)
}

// int64 start = 4;
inline void SearchAnnotationsRequest::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchAnnotationsRequest::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsRequest.start)
  return start_;
}
inline void SearchAnnotationsRequest::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.start)
}

// int64 end = 5;
inline void SearchAnnotationsRequest::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchAnnotationsRequest::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsRequest.end)
  return end_;
}
inline void SearchAnnotationsRequest::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.end)
}

// string page_token = 6;
inline void SearchAnnotationsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAnnotationsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsRequest.page_token)
  return page_token_.Get();
}
inline void SearchAnnotationsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.page_token)
}
#if LANG_CXX11
inline void SearchAnnotationsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationsRequest.page_token)
}
#endif
inline void SearchAnnotationsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationsRequest.page_token)
}
inline void SearchAnnotationsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationsRequest.page_token)
}
inline ::std::string* SearchAnnotationsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAnnotationsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAnnotationsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationsRequest.page_token)
}
inline ::std::string* SearchAnnotationsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAnnotationsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationsRequest.page_token)
}

// int32 page_size = 7;
inline void SearchAnnotationsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchAnnotationsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsRequest.page_size)
  return page_size_;
}
inline void SearchAnnotationsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsRequest.page_size)
}

inline bool SearchAnnotationsRequest::has_reference() const {
  return reference_case() != REFERENCE_NOT_SET;
}
inline void SearchAnnotationsRequest::clear_has_reference() {
  _oneof_case_[0] = REFERENCE_NOT_SET;
}
inline SearchAnnotationsRequest::ReferenceCase SearchAnnotationsRequest::reference_case() const {
  return SearchAnnotationsRequest::ReferenceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SearchAnnotationsResponse

// repeated .google.genomics.v1.Annotation annotations = 1;
inline int SearchAnnotationsResponse::annotations_size() const {
  return annotations_.size();
}
inline void SearchAnnotationsResponse::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::genomics::v1::Annotation& SearchAnnotationsResponse::annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsResponse.annotations)
  return annotations_.Get(index);
}
inline ::google::genomics::v1::Annotation* SearchAnnotationsResponse::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationsResponse.annotations)
  return annotations_.Mutable(index);
}
inline ::google::genomics::v1::Annotation* SearchAnnotationsResponse::add_annotations() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchAnnotationsResponse.annotations)
  return annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >*
SearchAnnotationsResponse::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchAnnotationsResponse.annotations)
  return &annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Annotation >&
SearchAnnotationsResponse::annotations() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchAnnotationsResponse.annotations)
  return annotations_;
}

// string next_page_token = 2;
inline void SearchAnnotationsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAnnotationsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void SearchAnnotationsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
}
#if LANG_CXX11
inline void SearchAnnotationsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
}
#endif
inline void SearchAnnotationsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
}
inline void SearchAnnotationsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
}
inline ::std::string* SearchAnnotationsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAnnotationsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAnnotationsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
}
inline ::std::string* SearchAnnotationsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAnnotationsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchAnnotationsResponse.next_page_token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace genomics
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::genomics::v1::VariantAnnotation_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::VariantAnnotation_Type>() {
  return ::google::genomics::v1::VariantAnnotation_Type_descriptor();
}
template <> struct is_proto_enum< ::google::genomics::v1::VariantAnnotation_Effect> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::VariantAnnotation_Effect>() {
  return ::google::genomics::v1::VariantAnnotation_Effect_descriptor();
}
template <> struct is_proto_enum< ::google::genomics::v1::VariantAnnotation_ClinicalSignificance> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::VariantAnnotation_ClinicalSignificance>() {
  return ::google::genomics::v1::VariantAnnotation_ClinicalSignificance_descriptor();
}
template <> struct is_proto_enum< ::google::genomics::v1::AnnotationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::AnnotationType>() {
  return ::google::genomics::v1::AnnotationType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fgenomics_2fv1_2fannotations_2eproto__INCLUDED
