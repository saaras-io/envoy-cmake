// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1beta1/firestore_admin.proto

#ifndef PROTOBUF_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto__INCLUDED
#define PROTOBUF_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/firestore/admin/v1beta1/index.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsIndexOperationMetadataImpl();
void InitDefaultsIndexOperationMetadata();
void InitDefaultsProgressImpl();
void InitDefaultsProgress();
void InitDefaultsCreateIndexRequestImpl();
void InitDefaultsCreateIndexRequest();
void InitDefaultsGetIndexRequestImpl();
void InitDefaultsGetIndexRequest();
void InitDefaultsListIndexesRequestImpl();
void InitDefaultsListIndexesRequest();
void InitDefaultsDeleteIndexRequestImpl();
void InitDefaultsDeleteIndexRequest();
void InitDefaultsListIndexesResponseImpl();
void InitDefaultsListIndexesResponse();
inline void InitDefaults() {
  InitDefaultsIndexOperationMetadata();
  InitDefaultsProgress();
  InitDefaultsCreateIndexRequest();
  InitDefaultsGetIndexRequest();
  InitDefaultsListIndexesRequest();
  InitDefaultsDeleteIndexRequest();
  InitDefaultsListIndexesResponse();
}
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto
namespace google {
namespace firestore {
namespace admin {
namespace v1beta1 {
class CreateIndexRequest;
class CreateIndexRequestDefaultTypeInternal;
extern CreateIndexRequestDefaultTypeInternal _CreateIndexRequest_default_instance_;
class DeleteIndexRequest;
class DeleteIndexRequestDefaultTypeInternal;
extern DeleteIndexRequestDefaultTypeInternal _DeleteIndexRequest_default_instance_;
class GetIndexRequest;
class GetIndexRequestDefaultTypeInternal;
extern GetIndexRequestDefaultTypeInternal _GetIndexRequest_default_instance_;
class IndexOperationMetadata;
class IndexOperationMetadataDefaultTypeInternal;
extern IndexOperationMetadataDefaultTypeInternal _IndexOperationMetadata_default_instance_;
class ListIndexesRequest;
class ListIndexesRequestDefaultTypeInternal;
extern ListIndexesRequestDefaultTypeInternal _ListIndexesRequest_default_instance_;
class ListIndexesResponse;
class ListIndexesResponseDefaultTypeInternal;
extern ListIndexesResponseDefaultTypeInternal _ListIndexesResponse_default_instance_;
class Progress;
class ProgressDefaultTypeInternal;
extern ProgressDefaultTypeInternal _Progress_default_instance_;
}  // namespace v1beta1
}  // namespace admin
}  // namespace firestore
}  // namespace google
namespace google {
namespace firestore {
namespace admin {
namespace v1beta1 {

enum IndexOperationMetadata_OperationType {
  IndexOperationMetadata_OperationType_OPERATION_TYPE_UNSPECIFIED = 0,
  IndexOperationMetadata_OperationType_CREATING_INDEX = 1,
  IndexOperationMetadata_OperationType_IndexOperationMetadata_OperationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IndexOperationMetadata_OperationType_IndexOperationMetadata_OperationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IndexOperationMetadata_OperationType_IsValid(int value);
const IndexOperationMetadata_OperationType IndexOperationMetadata_OperationType_OperationType_MIN = IndexOperationMetadata_OperationType_OPERATION_TYPE_UNSPECIFIED;
const IndexOperationMetadata_OperationType IndexOperationMetadata_OperationType_OperationType_MAX = IndexOperationMetadata_OperationType_CREATING_INDEX;
const int IndexOperationMetadata_OperationType_OperationType_ARRAYSIZE = IndexOperationMetadata_OperationType_OperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* IndexOperationMetadata_OperationType_descriptor();
inline const ::std::string& IndexOperationMetadata_OperationType_Name(IndexOperationMetadata_OperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    IndexOperationMetadata_OperationType_descriptor(), value);
}
inline bool IndexOperationMetadata_OperationType_Parse(
    const ::std::string& name, IndexOperationMetadata_OperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IndexOperationMetadata_OperationType>(
    IndexOperationMetadata_OperationType_descriptor(), name, value);
}
// ===================================================================

class IndexOperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta1.IndexOperationMetadata) */ {
 public:
  IndexOperationMetadata();
  virtual ~IndexOperationMetadata();

  IndexOperationMetadata(const IndexOperationMetadata& from);

  inline IndexOperationMetadata& operator=(const IndexOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IndexOperationMetadata(IndexOperationMetadata&& from) noexcept
    : IndexOperationMetadata() {
    *this = ::std::move(from);
  }

  inline IndexOperationMetadata& operator=(IndexOperationMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexOperationMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IndexOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const IndexOperationMetadata*>(
               &_IndexOperationMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(IndexOperationMetadata* other);
  friend void swap(IndexOperationMetadata& a, IndexOperationMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IndexOperationMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  IndexOperationMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IndexOperationMetadata& from);
  void MergeFrom(const IndexOperationMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IndexOperationMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef IndexOperationMetadata_OperationType OperationType;
  static const OperationType OPERATION_TYPE_UNSPECIFIED =
    IndexOperationMetadata_OperationType_OPERATION_TYPE_UNSPECIFIED;
  static const OperationType CREATING_INDEX =
    IndexOperationMetadata_OperationType_CREATING_INDEX;
  static inline bool OperationType_IsValid(int value) {
    return IndexOperationMetadata_OperationType_IsValid(value);
  }
  static const OperationType OperationType_MIN =
    IndexOperationMetadata_OperationType_OperationType_MIN;
  static const OperationType OperationType_MAX =
    IndexOperationMetadata_OperationType_OperationType_MAX;
  static const int OperationType_ARRAYSIZE =
    IndexOperationMetadata_OperationType_OperationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OperationType_descriptor() {
    return IndexOperationMetadata_OperationType_descriptor();
  }
  static inline const ::std::string& OperationType_Name(OperationType value) {
    return IndexOperationMetadata_OperationType_Name(value);
  }
  static inline bool OperationType_Parse(const ::std::string& name,
      OperationType* value) {
    return IndexOperationMetadata_OperationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  const ::std::string& index() const;
  void set_index(const ::std::string& value);
  #if LANG_CXX11
  void set_index(::std::string&& value);
  #endif
  void set_index(const char* value);
  void set_index(const char* value, size_t size);
  ::std::string* mutable_index();
  ::std::string* release_index();
  void set_allocated_index(::std::string* index);

  // .google.protobuf.Timestamp start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 2;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // .google.firestore.admin.v1beta1.Progress document_progress = 6;
  bool has_document_progress() const;
  void clear_document_progress();
  static const int kDocumentProgressFieldNumber = 6;
  const ::google::firestore::admin::v1beta1::Progress& document_progress() const;
  ::google::firestore::admin::v1beta1::Progress* release_document_progress();
  ::google::firestore::admin::v1beta1::Progress* mutable_document_progress();
  void set_allocated_document_progress(::google::firestore::admin::v1beta1::Progress* document_progress);

  // .google.firestore.admin.v1beta1.IndexOperationMetadata.OperationType operation_type = 4;
  void clear_operation_type();
  static const int kOperationTypeFieldNumber = 4;
  ::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType operation_type() const;
  void set_operation_type(::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType value);

  // bool cancelled = 5;
  void clear_cancelled();
  static const int kCancelledFieldNumber = 5;
  bool cancelled() const;
  void set_cancelled(bool value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.IndexOperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr index_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  ::google::firestore::admin::v1beta1::Progress* document_progress_;
  int operation_type_;
  bool cancelled_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::TableStruct;
  friend void ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsIndexOperationMetadataImpl();
};
// -------------------------------------------------------------------

class Progress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta1.Progress) */ {
 public:
  Progress();
  virtual ~Progress();

  Progress(const Progress& from);

  inline Progress& operator=(const Progress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Progress(Progress&& from) noexcept
    : Progress() {
    *this = ::std::move(from);
  }

  inline Progress& operator=(Progress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Progress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Progress* internal_default_instance() {
    return reinterpret_cast<const Progress*>(
               &_Progress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Progress* other);
  friend void swap(Progress& a, Progress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Progress* New() const PROTOBUF_FINAL { return New(NULL); }

  Progress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Progress& from);
  void MergeFrom(const Progress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Progress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 work_completed = 1;
  void clear_work_completed();
  static const int kWorkCompletedFieldNumber = 1;
  ::google::protobuf::int64 work_completed() const;
  void set_work_completed(::google::protobuf::int64 value);

  // int64 work_estimated = 2;
  void clear_work_estimated();
  static const int kWorkEstimatedFieldNumber = 2;
  ::google::protobuf::int64 work_estimated() const;
  void set_work_estimated(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.Progress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 work_completed_;
  ::google::protobuf::int64 work_estimated_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::TableStruct;
  friend void ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsProgressImpl();
};
// -------------------------------------------------------------------

class CreateIndexRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta1.CreateIndexRequest) */ {
 public:
  CreateIndexRequest();
  virtual ~CreateIndexRequest();

  CreateIndexRequest(const CreateIndexRequest& from);

  inline CreateIndexRequest& operator=(const CreateIndexRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateIndexRequest(CreateIndexRequest&& from) noexcept
    : CreateIndexRequest() {
    *this = ::std::move(from);
  }

  inline CreateIndexRequest& operator=(CreateIndexRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateIndexRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateIndexRequest* internal_default_instance() {
    return reinterpret_cast<const CreateIndexRequest*>(
               &_CreateIndexRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateIndexRequest* other);
  friend void swap(CreateIndexRequest& a, CreateIndexRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateIndexRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateIndexRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateIndexRequest& from);
  void MergeFrom(const CreateIndexRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateIndexRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.firestore.admin.v1beta1.Index index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  const ::google::firestore::admin::v1beta1::Index& index() const;
  ::google::firestore::admin::v1beta1::Index* release_index();
  ::google::firestore::admin::v1beta1::Index* mutable_index();
  void set_allocated_index(::google::firestore::admin::v1beta1::Index* index);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.CreateIndexRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::firestore::admin::v1beta1::Index* index_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::TableStruct;
  friend void ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsCreateIndexRequestImpl();
};
// -------------------------------------------------------------------

class GetIndexRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta1.GetIndexRequest) */ {
 public:
  GetIndexRequest();
  virtual ~GetIndexRequest();

  GetIndexRequest(const GetIndexRequest& from);

  inline GetIndexRequest& operator=(const GetIndexRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetIndexRequest(GetIndexRequest&& from) noexcept
    : GetIndexRequest() {
    *this = ::std::move(from);
  }

  inline GetIndexRequest& operator=(GetIndexRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIndexRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetIndexRequest* internal_default_instance() {
    return reinterpret_cast<const GetIndexRequest*>(
               &_GetIndexRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GetIndexRequest* other);
  friend void swap(GetIndexRequest& a, GetIndexRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetIndexRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetIndexRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetIndexRequest& from);
  void MergeFrom(const GetIndexRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetIndexRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.GetIndexRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::TableStruct;
  friend void ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsGetIndexRequestImpl();
};
// -------------------------------------------------------------------

class ListIndexesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta1.ListIndexesRequest) */ {
 public:
  ListIndexesRequest();
  virtual ~ListIndexesRequest();

  ListIndexesRequest(const ListIndexesRequest& from);

  inline ListIndexesRequest& operator=(const ListIndexesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListIndexesRequest(ListIndexesRequest&& from) noexcept
    : ListIndexesRequest() {
    *this = ::std::move(from);
  }

  inline ListIndexesRequest& operator=(ListIndexesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListIndexesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListIndexesRequest* internal_default_instance() {
    return reinterpret_cast<const ListIndexesRequest*>(
               &_ListIndexesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListIndexesRequest* other);
  friend void swap(ListIndexesRequest& a, ListIndexesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListIndexesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListIndexesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListIndexesRequest& from);
  void MergeFrom(const ListIndexesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListIndexesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.ListIndexesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::TableStruct;
  friend void ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsListIndexesRequestImpl();
};
// -------------------------------------------------------------------

class DeleteIndexRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta1.DeleteIndexRequest) */ {
 public:
  DeleteIndexRequest();
  virtual ~DeleteIndexRequest();

  DeleteIndexRequest(const DeleteIndexRequest& from);

  inline DeleteIndexRequest& operator=(const DeleteIndexRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteIndexRequest(DeleteIndexRequest&& from) noexcept
    : DeleteIndexRequest() {
    *this = ::std::move(from);
  }

  inline DeleteIndexRequest& operator=(DeleteIndexRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteIndexRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteIndexRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteIndexRequest*>(
               &_DeleteIndexRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DeleteIndexRequest* other);
  friend void swap(DeleteIndexRequest& a, DeleteIndexRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteIndexRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteIndexRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteIndexRequest& from);
  void MergeFrom(const DeleteIndexRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteIndexRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.DeleteIndexRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::TableStruct;
  friend void ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsDeleteIndexRequestImpl();
};
// -------------------------------------------------------------------

class ListIndexesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta1.ListIndexesResponse) */ {
 public:
  ListIndexesResponse();
  virtual ~ListIndexesResponse();

  ListIndexesResponse(const ListIndexesResponse& from);

  inline ListIndexesResponse& operator=(const ListIndexesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListIndexesResponse(ListIndexesResponse&& from) noexcept
    : ListIndexesResponse() {
    *this = ::std::move(from);
  }

  inline ListIndexesResponse& operator=(ListIndexesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListIndexesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListIndexesResponse* internal_default_instance() {
    return reinterpret_cast<const ListIndexesResponse*>(
               &_ListIndexesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ListIndexesResponse* other);
  friend void swap(ListIndexesResponse& a, ListIndexesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListIndexesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListIndexesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListIndexesResponse& from);
  void MergeFrom(const ListIndexesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListIndexesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.firestore.admin.v1beta1.Index indexes = 1;
  int indexes_size() const;
  void clear_indexes();
  static const int kIndexesFieldNumber = 1;
  const ::google::firestore::admin::v1beta1::Index& indexes(int index) const;
  ::google::firestore::admin::v1beta1::Index* mutable_indexes(int index);
  ::google::firestore::admin::v1beta1::Index* add_indexes();
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta1::Index >*
      mutable_indexes();
  const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta1::Index >&
      indexes() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.ListIndexesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta1::Index > indexes_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::TableStruct;
  friend void ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsListIndexesResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IndexOperationMetadata

// .google.protobuf.Timestamp start_time = 1;
inline bool IndexOperationMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& IndexOperationMetadata::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.IndexOperationMetadata.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* IndexOperationMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.IndexOperationMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* IndexOperationMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.IndexOperationMetadata.start_time)
  return start_time_;
}
inline void IndexOperationMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.IndexOperationMetadata.start_time)
}

// .google.protobuf.Timestamp end_time = 2;
inline bool IndexOperationMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& IndexOperationMetadata::end_time() const {
  const ::google::protobuf::Timestamp* p = end_time_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.IndexOperationMetadata.end_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* IndexOperationMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.IndexOperationMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* IndexOperationMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.IndexOperationMetadata.end_time)
  return end_time_;
}
inline void IndexOperationMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.IndexOperationMetadata.end_time)
}

// string index = 3;
inline void IndexOperationMetadata::clear_index() {
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IndexOperationMetadata::index() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
  return index_.GetNoArena();
}
inline void IndexOperationMetadata::set_index(const ::std::string& value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
}
#if LANG_CXX11
inline void IndexOperationMetadata::set_index(::std::string&& value) {
  
  index_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
}
#endif
inline void IndexOperationMetadata::set_index(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
}
inline void IndexOperationMetadata::set_index(const char* value, size_t size) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
}
inline ::std::string* IndexOperationMetadata::mutable_index() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
  return index_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IndexOperationMetadata::release_index() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
  
  return index_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IndexOperationMetadata::set_allocated_index(::std::string* index) {
  if (index != NULL) {
    
  } else {
    
  }
  index_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.IndexOperationMetadata.index)
}

// .google.firestore.admin.v1beta1.IndexOperationMetadata.OperationType operation_type = 4;
inline void IndexOperationMetadata::clear_operation_type() {
  operation_type_ = 0;
}
inline ::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType IndexOperationMetadata::operation_type() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.IndexOperationMetadata.operation_type)
  return static_cast< ::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType >(operation_type_);
}
inline void IndexOperationMetadata::set_operation_type(::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.IndexOperationMetadata.operation_type)
}

// bool cancelled = 5;
inline void IndexOperationMetadata::clear_cancelled() {
  cancelled_ = false;
}
inline bool IndexOperationMetadata::cancelled() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.IndexOperationMetadata.cancelled)
  return cancelled_;
}
inline void IndexOperationMetadata::set_cancelled(bool value) {
  
  cancelled_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.IndexOperationMetadata.cancelled)
}

// .google.firestore.admin.v1beta1.Progress document_progress = 6;
inline bool IndexOperationMetadata::has_document_progress() const {
  return this != internal_default_instance() && document_progress_ != NULL;
}
inline void IndexOperationMetadata::clear_document_progress() {
  if (GetArenaNoVirtual() == NULL && document_progress_ != NULL) {
    delete document_progress_;
  }
  document_progress_ = NULL;
}
inline const ::google::firestore::admin::v1beta1::Progress& IndexOperationMetadata::document_progress() const {
  const ::google::firestore::admin::v1beta1::Progress* p = document_progress_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.IndexOperationMetadata.document_progress)
  return p != NULL ? *p : *reinterpret_cast<const ::google::firestore::admin::v1beta1::Progress*>(
      &::google::firestore::admin::v1beta1::_Progress_default_instance_);
}
inline ::google::firestore::admin::v1beta1::Progress* IndexOperationMetadata::release_document_progress() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.IndexOperationMetadata.document_progress)
  
  ::google::firestore::admin::v1beta1::Progress* temp = document_progress_;
  document_progress_ = NULL;
  return temp;
}
inline ::google::firestore::admin::v1beta1::Progress* IndexOperationMetadata::mutable_document_progress() {
  
  if (document_progress_ == NULL) {
    document_progress_ = new ::google::firestore::admin::v1beta1::Progress;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.IndexOperationMetadata.document_progress)
  return document_progress_;
}
inline void IndexOperationMetadata::set_allocated_document_progress(::google::firestore::admin::v1beta1::Progress* document_progress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete document_progress_;
  }
  if (document_progress) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      document_progress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document_progress, submessage_arena);
    }
    
  } else {
    
  }
  document_progress_ = document_progress;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.IndexOperationMetadata.document_progress)
}

// -------------------------------------------------------------------

// Progress

// int64 work_completed = 1;
inline void Progress::clear_work_completed() {
  work_completed_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Progress::work_completed() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.Progress.work_completed)
  return work_completed_;
}
inline void Progress::set_work_completed(::google::protobuf::int64 value) {
  
  work_completed_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.Progress.work_completed)
}

// int64 work_estimated = 2;
inline void Progress::clear_work_estimated() {
  work_estimated_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Progress::work_estimated() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.Progress.work_estimated)
  return work_estimated_;
}
inline void Progress::set_work_estimated(::google::protobuf::int64 value) {
  
  work_estimated_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.Progress.work_estimated)
}

// -------------------------------------------------------------------

// CreateIndexRequest

// string parent = 1;
inline void CreateIndexRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateIndexRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateIndexRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
}
#if LANG_CXX11
inline void CreateIndexRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
}
#endif
inline void CreateIndexRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
}
inline void CreateIndexRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
}
inline ::std::string* CreateIndexRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateIndexRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateIndexRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.CreateIndexRequest.parent)
}

// .google.firestore.admin.v1beta1.Index index = 2;
inline bool CreateIndexRequest::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::google::firestore::admin::v1beta1::Index& CreateIndexRequest::index() const {
  const ::google::firestore::admin::v1beta1::Index* p = index_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.CreateIndexRequest.index)
  return p != NULL ? *p : *reinterpret_cast<const ::google::firestore::admin::v1beta1::Index*>(
      &::google::firestore::admin::v1beta1::_Index_default_instance_);
}
inline ::google::firestore::admin::v1beta1::Index* CreateIndexRequest::release_index() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.CreateIndexRequest.index)
  
  ::google::firestore::admin::v1beta1::Index* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::google::firestore::admin::v1beta1::Index* CreateIndexRequest::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::google::firestore::admin::v1beta1::Index;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.CreateIndexRequest.index)
  return index_;
}
inline void CreateIndexRequest::set_allocated_index(::google::firestore::admin::v1beta1::Index* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.CreateIndexRequest.index)
}

// -------------------------------------------------------------------

// GetIndexRequest

// string name = 1;
inline void GetIndexRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetIndexRequest::name() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.GetIndexRequest.name)
  return name_.GetNoArena();
}
inline void GetIndexRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.GetIndexRequest.name)
}
#if LANG_CXX11
inline void GetIndexRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.GetIndexRequest.name)
}
#endif
inline void GetIndexRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.GetIndexRequest.name)
}
inline void GetIndexRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.GetIndexRequest.name)
}
inline ::std::string* GetIndexRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.GetIndexRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetIndexRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.GetIndexRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIndexRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.GetIndexRequest.name)
}

// -------------------------------------------------------------------

// ListIndexesRequest

// string parent = 1;
inline void ListIndexesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListIndexesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListIndexesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
}
#if LANG_CXX11
inline void ListIndexesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
}
#endif
inline void ListIndexesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
}
inline void ListIndexesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
}
inline ::std::string* ListIndexesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListIndexesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListIndexesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.ListIndexesRequest.parent)
}

// string filter = 2;
inline void ListIndexesRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListIndexesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
  return filter_.GetNoArena();
}
inline void ListIndexesRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
}
#if LANG_CXX11
inline void ListIndexesRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
}
#endif
inline void ListIndexesRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
}
inline void ListIndexesRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
}
inline ::std::string* ListIndexesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListIndexesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListIndexesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.ListIndexesRequest.filter)
}

// int32 page_size = 3;
inline void ListIndexesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListIndexesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.ListIndexesRequest.page_size)
  return page_size_;
}
inline void ListIndexesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.ListIndexesRequest.page_size)
}

// string page_token = 4;
inline void ListIndexesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListIndexesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListIndexesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
}
#if LANG_CXX11
inline void ListIndexesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
}
#endif
inline void ListIndexesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
}
inline void ListIndexesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
}
inline ::std::string* ListIndexesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListIndexesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListIndexesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.ListIndexesRequest.page_token)
}

// -------------------------------------------------------------------

// DeleteIndexRequest

// string name = 1;
inline void DeleteIndexRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteIndexRequest::name() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
  return name_.GetNoArena();
}
inline void DeleteIndexRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
}
#if LANG_CXX11
inline void DeleteIndexRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
}
#endif
inline void DeleteIndexRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
}
inline void DeleteIndexRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
}
inline ::std::string* DeleteIndexRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteIndexRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteIndexRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.DeleteIndexRequest.name)
}

// -------------------------------------------------------------------

// ListIndexesResponse

// repeated .google.firestore.admin.v1beta1.Index indexes = 1;
inline int ListIndexesResponse::indexes_size() const {
  return indexes_.size();
}
inline const ::google::firestore::admin::v1beta1::Index& ListIndexesResponse::indexes(int index) const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.ListIndexesResponse.indexes)
  return indexes_.Get(index);
}
inline ::google::firestore::admin::v1beta1::Index* ListIndexesResponse::mutable_indexes(int index) {
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.ListIndexesResponse.indexes)
  return indexes_.Mutable(index);
}
inline ::google::firestore::admin::v1beta1::Index* ListIndexesResponse::add_indexes() {
  // @@protoc_insertion_point(field_add:google.firestore.admin.v1beta1.ListIndexesResponse.indexes)
  return indexes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta1::Index >*
ListIndexesResponse::mutable_indexes() {
  // @@protoc_insertion_point(field_mutable_list:google.firestore.admin.v1beta1.ListIndexesResponse.indexes)
  return &indexes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta1::Index >&
ListIndexesResponse::indexes() const {
  // @@protoc_insertion_point(field_list:google.firestore.admin.v1beta1.ListIndexesResponse.indexes)
  return indexes_;
}

// string next_page_token = 2;
inline void ListIndexesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListIndexesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListIndexesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListIndexesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
}
#endif
inline void ListIndexesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
}
inline void ListIndexesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
}
inline ::std::string* ListIndexesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListIndexesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListIndexesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace admin
}  // namespace firestore
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType>() {
  return ::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto__INCLUDED
