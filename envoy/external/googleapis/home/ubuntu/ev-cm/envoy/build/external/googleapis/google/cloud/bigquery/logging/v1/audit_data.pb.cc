// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

#include "google/cloud/bigquery/logging/v1/audit_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace bigquery {
namespace logging {
namespace v1 {
class AuditDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuditData>
      _instance;
  const ::google::cloud::bigquery::logging::v1::TableInsertRequest* table_insert_request_;
  const ::google::cloud::bigquery::logging::v1::TableUpdateRequest* table_update_request_;
  const ::google::cloud::bigquery::logging::v1::DatasetListRequest* dataset_list_request_;
  const ::google::cloud::bigquery::logging::v1::DatasetInsertRequest* dataset_insert_request_;
  const ::google::cloud::bigquery::logging::v1::DatasetUpdateRequest* dataset_update_request_;
  const ::google::cloud::bigquery::logging::v1::JobInsertRequest* job_insert_request_;
  const ::google::cloud::bigquery::logging::v1::JobQueryRequest* job_query_request_;
  const ::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest* job_get_query_results_request_;
  const ::google::cloud::bigquery::logging::v1::TableDataListRequest* table_data_list_request_;
  const ::google::cloud::bigquery::logging::v1::TableInsertResponse* table_insert_response_;
  const ::google::cloud::bigquery::logging::v1::TableUpdateResponse* table_update_response_;
  const ::google::cloud::bigquery::logging::v1::DatasetInsertResponse* dataset_insert_response_;
  const ::google::cloud::bigquery::logging::v1::DatasetUpdateResponse* dataset_update_response_;
  const ::google::cloud::bigquery::logging::v1::JobInsertResponse* job_insert_response_;
  const ::google::cloud::bigquery::logging::v1::JobQueryResponse* job_query_response_;
  const ::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse* job_get_query_results_response_;
  const ::google::cloud::bigquery::logging::v1::JobQueryDoneResponse* job_query_done_response_;
} _AuditData_default_instance_;
class TableInsertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableInsertRequest>
      _instance;
} _TableInsertRequest_default_instance_;
class TableUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableUpdateRequest>
      _instance;
} _TableUpdateRequest_default_instance_;
class TableInsertResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableInsertResponse>
      _instance;
} _TableInsertResponse_default_instance_;
class TableUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableUpdateResponse>
      _instance;
} _TableUpdateResponse_default_instance_;
class DatasetListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatasetListRequest>
      _instance;
} _DatasetListRequest_default_instance_;
class DatasetInsertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatasetInsertRequest>
      _instance;
} _DatasetInsertRequest_default_instance_;
class DatasetInsertResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatasetInsertResponse>
      _instance;
} _DatasetInsertResponse_default_instance_;
class DatasetUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatasetUpdateRequest>
      _instance;
} _DatasetUpdateRequest_default_instance_;
class DatasetUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatasetUpdateResponse>
      _instance;
} _DatasetUpdateResponse_default_instance_;
class JobInsertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobInsertRequest>
      _instance;
} _JobInsertRequest_default_instance_;
class JobInsertResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobInsertResponse>
      _instance;
} _JobInsertResponse_default_instance_;
class JobQueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobQueryRequest>
      _instance;
} _JobQueryRequest_default_instance_;
class JobQueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobQueryResponse>
      _instance;
} _JobQueryResponse_default_instance_;
class JobGetQueryResultsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobGetQueryResultsRequest>
      _instance;
} _JobGetQueryResultsRequest_default_instance_;
class JobGetQueryResultsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobGetQueryResultsResponse>
      _instance;
} _JobGetQueryResultsResponse_default_instance_;
class JobQueryDoneResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobQueryDoneResponse>
      _instance;
} _JobQueryDoneResponse_default_instance_;
class JobCompletedEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobCompletedEvent>
      _instance;
} _JobCompletedEvent_default_instance_;
class TableDataListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableDataListRequest>
      _instance;
} _TableDataListRequest_default_instance_;
class TableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Table>
      _instance;
} _Table_default_instance_;
class TableInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableInfo>
      _instance;
} _TableInfo_default_instance_;
class TableViewDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableViewDefinition>
      _instance;
} _TableViewDefinition_default_instance_;
class DatasetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dataset>
      _instance;
} _Dataset_default_instance_;
class DatasetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatasetInfo>
      _instance;
} _DatasetInfo_default_instance_;
class BigQueryAcl_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BigQueryAcl_Entry>
      _instance;
} _BigQueryAcl_Entry_default_instance_;
class BigQueryAclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BigQueryAcl>
      _instance;
} _BigQueryAcl_default_instance_;
class JobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job>
      _instance;
} _Job_default_instance_;
class JobConfiguration_QueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobConfiguration_Query>
      _instance;
} _JobConfiguration_Query_default_instance_;
class JobConfiguration_LoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobConfiguration_Load>
      _instance;
} _JobConfiguration_Load_default_instance_;
class JobConfiguration_ExtractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobConfiguration_Extract>
      _instance;
} _JobConfiguration_Extract_default_instance_;
class JobConfiguration_TableCopyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobConfiguration_TableCopy>
      _instance;
} _JobConfiguration_TableCopy_default_instance_;
class JobConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobConfiguration>
      _instance;
  const ::google::cloud::bigquery::logging::v1::JobConfiguration_Query* query_;
  const ::google::cloud::bigquery::logging::v1::JobConfiguration_Load* load_;
  const ::google::cloud::bigquery::logging::v1::JobConfiguration_Extract* extract_;
  const ::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy* table_copy_;
} _JobConfiguration_default_instance_;
class TableDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableDefinition>
      _instance;
} _TableDefinition_default_instance_;
class JobStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobStatus>
      _instance;
} _JobStatus_default_instance_;
class JobStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobStatistics>
      _instance;
} _JobStatistics_default_instance_;
class DatasetNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatasetName>
      _instance;
} _DatasetName_default_instance_;
class TableNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableName>
      _instance;
} _TableName_default_instance_;
class JobNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobName>
      _instance;
} _JobName_default_instance_;
}  // namespace v1
}  // namespace logging
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto {
void InitDefaultsAuditDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInsertRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableUpdateRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetListRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInsertRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetUpdateRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobInsertRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobGetQueryResultsRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableDataListRequest();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInsertResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableUpdateResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInsertResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetUpdateResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobInsertResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobGetQueryResultsResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryDoneResponse();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobCompletedEvent();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_AuditData_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::AuditData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::AuditData::InitAsDefaultInstance();
}

void InitDefaultsAuditData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuditDataImpl);
}

void InitDefaultsTableInsertRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTable();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableInsertRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableInsertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableInsertRequest::InitAsDefaultInstance();
}

void InitDefaultsTableInsertRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableInsertRequestImpl);
}

void InitDefaultsTableUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTable();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableUpdateRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsTableUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableUpdateRequestImpl);
}

void InitDefaultsTableInsertResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTable();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableInsertResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableInsertResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableInsertResponse::InitAsDefaultInstance();
}

void InitDefaultsTableInsertResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableInsertResponseImpl);
}

void InitDefaultsTableUpdateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTable();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableUpdateResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableUpdateResponse::InitAsDefaultInstance();
}

void InitDefaultsTableUpdateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableUpdateResponseImpl);
}

void InitDefaultsDatasetListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_DatasetListRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::DatasetListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::DatasetListRequest::InitAsDefaultInstance();
}

void InitDefaultsDatasetListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetListRequestImpl);
}

void InitDefaultsDatasetInsertRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDataset();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_DatasetInsertRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::DatasetInsertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::DatasetInsertRequest::InitAsDefaultInstance();
}

void InitDefaultsDatasetInsertRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetInsertRequestImpl);
}

void InitDefaultsDatasetInsertResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDataset();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_DatasetInsertResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::DatasetInsertResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::DatasetInsertResponse::InitAsDefaultInstance();
}

void InitDefaultsDatasetInsertResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetInsertResponseImpl);
}

void InitDefaultsDatasetUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDataset();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_DatasetUpdateRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::DatasetUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::DatasetUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsDatasetUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetUpdateRequestImpl);
}

void InitDefaultsDatasetUpdateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDataset();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_DatasetUpdateResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::DatasetUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::DatasetUpdateResponse::InitAsDefaultInstance();
}

void InitDefaultsDatasetUpdateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetUpdateResponseImpl);
}

void InitDefaultsJobInsertRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobInsertRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobInsertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobInsertRequest::InitAsDefaultInstance();
}

void InitDefaultsJobInsertRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobInsertRequestImpl);
}

void InitDefaultsJobInsertResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobInsertResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobInsertResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobInsertResponse::InitAsDefaultInstance();
}

void InitDefaultsJobInsertResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobInsertResponseImpl);
}

void InitDefaultsJobQueryRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetName();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobQueryRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobQueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobQueryRequest::InitAsDefaultInstance();
}

void InitDefaultsJobQueryRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobQueryRequestImpl);
}

void InitDefaultsJobQueryResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobQueryResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobQueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobQueryResponse::InitAsDefaultInstance();
}

void InitDefaultsJobQueryResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobQueryResponseImpl);
}

void InitDefaultsJobGetQueryResultsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobGetQueryResultsRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest::InitAsDefaultInstance();
}

void InitDefaultsJobGetQueryResultsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobGetQueryResultsRequestImpl);
}

void InitDefaultsJobGetQueryResultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobGetQueryResultsResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse::InitAsDefaultInstance();
}

void InitDefaultsJobGetQueryResultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobGetQueryResultsResponseImpl);
}

void InitDefaultsJobQueryDoneResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobQueryDoneResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobQueryDoneResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobQueryDoneResponse::InitAsDefaultInstance();
}

void InitDefaultsJobQueryDoneResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobQueryDoneResponseImpl);
}

void InitDefaultsJobCompletedEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobCompletedEvent_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobCompletedEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobCompletedEvent::InitAsDefaultInstance();
}

void InitDefaultsJobCompletedEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobCompletedEventImpl);
}

void InitDefaultsTableDataListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableDataListRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableDataListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableDataListRequest::InitAsDefaultInstance();
}

void InitDefaultsTableDataListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableDataListRequestImpl);
}

void InitDefaultsTableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInfo();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableViewDefinition();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_Table_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::Table();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::Table::InitAsDefaultInstance();
}

void InitDefaultsTable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableImpl);
}

void InitDefaultsTableInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableInfo_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableInfo::InitAsDefaultInstance();
}

void InitDefaultsTableInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableInfoImpl);
}

void InitDefaultsTableViewDefinitionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableViewDefinition_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableViewDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableViewDefinition::InitAsDefaultInstance();
}

void InitDefaultsTableViewDefinition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableViewDefinitionImpl);
}

void InitDefaultsDatasetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetName();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInfo();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsBigQueryAcl();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_Dataset_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::Dataset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::Dataset::InitAsDefaultInstance();
}

void InitDefaultsDataset() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetImpl);
}

void InitDefaultsDatasetInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_DatasetInfo_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::DatasetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::DatasetInfo::InitAsDefaultInstance();
}

void InitDefaultsDatasetInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetInfoImpl);
}

void InitDefaultsBigQueryAcl_EntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_BigQueryAcl_Entry_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry::InitAsDefaultInstance();
}

void InitDefaultsBigQueryAcl_Entry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBigQueryAcl_EntryImpl);
}

void InitDefaultsBigQueryAclImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsBigQueryAcl_Entry();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_BigQueryAcl_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::BigQueryAcl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::BigQueryAcl::InitAsDefaultInstance();
}

void InitDefaultsBigQueryAcl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBigQueryAclImpl);
}

void InitDefaultsJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobName();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobStatus();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobStatistics();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_Job_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::Job();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::Job::InitAsDefaultInstance();
}

void InitDefaultsJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobImpl);
}

void InitDefaultsJobConfiguration_QueryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetName();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableDefinition();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobConfiguration_Query_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobConfiguration_Query();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobConfiguration_Query::InitAsDefaultInstance();
}

void InitDefaultsJobConfiguration_Query() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobConfiguration_QueryImpl);
}

void InitDefaultsJobConfiguration_LoadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobConfiguration_Load_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobConfiguration_Load();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobConfiguration_Load::InitAsDefaultInstance();
}

void InitDefaultsJobConfiguration_Load() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobConfiguration_LoadImpl);
}

void InitDefaultsJobConfiguration_ExtractImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobConfiguration_Extract_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobConfiguration_Extract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobConfiguration_Extract::InitAsDefaultInstance();
}

void InitDefaultsJobConfiguration_Extract() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobConfiguration_ExtractImpl);
}

void InitDefaultsJobConfiguration_TableCopyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobConfiguration_TableCopy_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy::InitAsDefaultInstance();
}

void InitDefaultsJobConfiguration_TableCopy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobConfiguration_TableCopyImpl);
}

void InitDefaultsJobConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Query();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Load();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Extract();
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_TableCopy();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobConfiguration_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobConfiguration::InitAsDefaultInstance();
}

void InitDefaultsJobConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobConfigurationImpl);
}

void InitDefaultsTableDefinitionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableDefinition_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableDefinition::InitAsDefaultInstance();
}

void InitDefaultsTableDefinition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableDefinitionImpl);
}

void InitDefaultsJobStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobStatus_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobStatus::InitAsDefaultInstance();
}

void InitDefaultsJobStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobStatusImpl);
}

void InitDefaultsJobStatisticsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobStatistics_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobStatistics::InitAsDefaultInstance();
}

void InitDefaultsJobStatistics() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobStatisticsImpl);
}

void InitDefaultsDatasetNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_DatasetName_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::DatasetName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::DatasetName::InitAsDefaultInstance();
}

void InitDefaultsDatasetName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDatasetNameImpl);
}

void InitDefaultsTableNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_TableName_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::TableName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::TableName::InitAsDefaultInstance();
}

void InitDefaultsTableName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTableNameImpl);
}

void InitDefaultsJobNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::bigquery::logging::v1::_JobName_default_instance_;
    new (ptr) ::google::cloud::bigquery::logging::v1::JobName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::logging::v1::JobName::InitAsDefaultInstance();
}

void InitDefaultsJobName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobNameImpl);
}

::google::protobuf::Metadata file_level_metadata[38];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::AuditData, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::AuditData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, table_insert_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, table_update_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, dataset_list_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, dataset_insert_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, dataset_update_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, job_insert_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, job_query_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, job_get_query_results_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, table_data_list_request_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, table_insert_response_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, table_update_response_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, dataset_insert_response_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, dataset_update_response_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, job_insert_response_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, job_query_response_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, job_get_query_results_response_),
  offsetof(::google::cloud::bigquery::logging::v1::AuditDataDefaultTypeInternal, job_query_done_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::AuditData, job_completed_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::AuditData, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::AuditData, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableInsertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableInsertRequest, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableUpdateRequest, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableInsertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableInsertResponse, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableUpdateResponse, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetListRequest, list_all_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetInsertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetInsertRequest, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetInsertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetInsertResponse, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetUpdateRequest, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetUpdateResponse, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobInsertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobInsertRequest, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobInsertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobInsertResponse, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryRequest, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryRequest, max_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryRequest, default_dataset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryRequest, dry_run_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryResponse, total_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryResponse, job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest, max_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest, start_row_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse, total_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse, job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryDoneResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobQueryDoneResponse, job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobCompletedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobCompletedEvent, event_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobCompletedEvent, job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableDataListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableDataListRequest, start_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableDataListRequest, max_results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, schema_json_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, expire_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Table, truncate_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableInfo, friendly_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableInfo, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableViewDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableViewDefinition, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Dataset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Dataset, dataset_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Dataset, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Dataset, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Dataset, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Dataset, acl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Dataset, default_table_expire_duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetInfo, friendly_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetInfo, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry, group_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry, user_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry, special_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry, view_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::BigQueryAcl, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Job, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Job, job_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Job, job_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Job, job_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::Job, job_statistics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Query, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Query, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Query, destination_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Query, create_disposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Query, write_disposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Query, default_dataset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Query, table_definitions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Load, source_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Load, schema_json_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Load, destination_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Load, create_disposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Load, write_disposition_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Extract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Extract, destination_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_Extract, source_table_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy, source_tables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy, destination_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy, create_disposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy, write_disposition_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::bigquery::logging::v1::JobConfigurationDefaultTypeInternal, query_),
  offsetof(::google::cloud::bigquery::logging::v1::JobConfigurationDefaultTypeInternal, load_),
  offsetof(::google::cloud::bigquery::logging::v1::JobConfigurationDefaultTypeInternal, extract_),
  offsetof(::google::cloud::bigquery::logging::v1::JobConfigurationDefaultTypeInternal, table_copy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration, dry_run_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobConfiguration, configuration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableDefinition, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableDefinition, source_uris_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatus, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatistics, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatistics, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatistics, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatistics, total_processed_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatistics, total_billed_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobStatistics, billing_tier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetName, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::DatasetName, dataset_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableName, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableName, dataset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::TableName, table_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobName, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::logging::v1::JobName, job_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::bigquery::logging::v1::AuditData)},
  { 25, -1, sizeof(::google::cloud::bigquery::logging::v1::TableInsertRequest)},
  { 31, -1, sizeof(::google::cloud::bigquery::logging::v1::TableUpdateRequest)},
  { 37, -1, sizeof(::google::cloud::bigquery::logging::v1::TableInsertResponse)},
  { 43, -1, sizeof(::google::cloud::bigquery::logging::v1::TableUpdateResponse)},
  { 49, -1, sizeof(::google::cloud::bigquery::logging::v1::DatasetListRequest)},
  { 55, -1, sizeof(::google::cloud::bigquery::logging::v1::DatasetInsertRequest)},
  { 61, -1, sizeof(::google::cloud::bigquery::logging::v1::DatasetInsertResponse)},
  { 67, -1, sizeof(::google::cloud::bigquery::logging::v1::DatasetUpdateRequest)},
  { 73, -1, sizeof(::google::cloud::bigquery::logging::v1::DatasetUpdateResponse)},
  { 79, -1, sizeof(::google::cloud::bigquery::logging::v1::JobInsertRequest)},
  { 85, -1, sizeof(::google::cloud::bigquery::logging::v1::JobInsertResponse)},
  { 91, -1, sizeof(::google::cloud::bigquery::logging::v1::JobQueryRequest)},
  { 101, -1, sizeof(::google::cloud::bigquery::logging::v1::JobQueryResponse)},
  { 108, -1, sizeof(::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest)},
  { 115, -1, sizeof(::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse)},
  { 122, -1, sizeof(::google::cloud::bigquery::logging::v1::JobQueryDoneResponse)},
  { 128, -1, sizeof(::google::cloud::bigquery::logging::v1::JobCompletedEvent)},
  { 135, -1, sizeof(::google::cloud::bigquery::logging::v1::TableDataListRequest)},
  { 142, -1, sizeof(::google::cloud::bigquery::logging::v1::Table)},
  { 154, -1, sizeof(::google::cloud::bigquery::logging::v1::TableInfo)},
  { 161, -1, sizeof(::google::cloud::bigquery::logging::v1::TableViewDefinition)},
  { 167, -1, sizeof(::google::cloud::bigquery::logging::v1::Dataset)},
  { 178, -1, sizeof(::google::cloud::bigquery::logging::v1::DatasetInfo)},
  { 185, -1, sizeof(::google::cloud::bigquery::logging::v1::BigQueryAcl_Entry)},
  { 196, -1, sizeof(::google::cloud::bigquery::logging::v1::BigQueryAcl)},
  { 202, -1, sizeof(::google::cloud::bigquery::logging::v1::Job)},
  { 211, -1, sizeof(::google::cloud::bigquery::logging::v1::JobConfiguration_Query)},
  { 222, -1, sizeof(::google::cloud::bigquery::logging::v1::JobConfiguration_Load)},
  { 232, -1, sizeof(::google::cloud::bigquery::logging::v1::JobConfiguration_Extract)},
  { 239, -1, sizeof(::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy)},
  { 248, -1, sizeof(::google::cloud::bigquery::logging::v1::JobConfiguration)},
  { 259, -1, sizeof(::google::cloud::bigquery::logging::v1::TableDefinition)},
  { 266, -1, sizeof(::google::cloud::bigquery::logging::v1::JobStatus)},
  { 273, -1, sizeof(::google::cloud::bigquery::logging::v1::JobStatistics)},
  { 284, -1, sizeof(::google::cloud::bigquery::logging::v1::DatasetName)},
  { 291, -1, sizeof(::google::cloud::bigquery::logging::v1::TableName)},
  { 299, -1, sizeof(::google::cloud::bigquery::logging::v1::JobName)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_AuditData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableInsertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableInsertResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_DatasetListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_DatasetInsertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_DatasetInsertResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_DatasetUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_DatasetUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobInsertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobInsertResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobQueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobGetQueryResultsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobGetQueryResultsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobQueryDoneResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobCompletedEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableDataListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_Table_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableViewDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_Dataset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_DatasetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_BigQueryAcl_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_BigQueryAcl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_Job_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobConfiguration_Query_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobConfiguration_Load_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobConfiguration_Extract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobConfiguration_TableCopy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_DatasetName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_TableName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::logging::v1::_JobName_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/bigquery/logging/v1/audit_data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 38);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n1google/cloud/bigquery/logging/v1/audit"
      "_data.proto\022 google.cloud.bigquery.loggi"
      "ng.v1\032\034google/api/annotations.proto\032\036goo"
      "gle/protobuf/duration.proto\032\037google/prot"
      "obuf/timestamp.proto\032\027google/rpc/status."
      "proto\"\336\014\n\tAuditData\022T\n\024table_insert_requ"
      "est\030\001 \001(\01324.google.cloud.bigquery.loggin"
      "g.v1.TableInsertRequestH\000\022T\n\024table_updat"
      "e_request\030\020 \001(\01324.google.cloud.bigquery."
      "logging.v1.TableUpdateRequestH\000\022T\n\024datas"
      "et_list_request\030\002 \001(\01324.google.cloud.big"
      "query.logging.v1.DatasetListRequestH\000\022X\n"
      "\026dataset_insert_request\030\003 \001(\01326.google.c"
      "loud.bigquery.logging.v1.DatasetInsertRe"
      "questH\000\022X\n\026dataset_update_request\030\004 \001(\0132"
      "6.google.cloud.bigquery.logging.v1.Datas"
      "etUpdateRequestH\000\022P\n\022job_insert_request\030"
      "\005 \001(\01322.google.cloud.bigquery.logging.v1"
      ".JobInsertRequestH\000\022N\n\021job_query_request"
      "\030\006 \001(\01321.google.cloud.bigquery.logging.v"
      "1.JobQueryRequestH\000\022d\n\035job_get_query_res"
      "ults_request\030\007 \001(\0132;.google.cloud.bigque"
      "ry.logging.v1.JobGetQueryResultsRequestH"
      "\000\022Y\n\027table_data_list_request\030\010 \001(\01326.goo"
      "gle.cloud.bigquery.logging.v1.TableDataL"
      "istRequestH\000\022V\n\025table_insert_response\030\t "
      "\001(\01325.google.cloud.bigquery.logging.v1.T"
      "ableInsertResponseH\001\022V\n\025table_update_res"
      "ponse\030\n \001(\01325.google.cloud.bigquery.logg"
      "ing.v1.TableUpdateResponseH\001\022Z\n\027dataset_"
      "insert_response\030\013 \001(\01327.google.cloud.big"
      "query.logging.v1.DatasetInsertResponseH\001"
      "\022Z\n\027dataset_update_response\030\014 \001(\01327.goog"
      "le.cloud.bigquery.logging.v1.DatasetUpda"
      "teResponseH\001\022R\n\023job_insert_response\030\022 \001("
      "\01323.google.cloud.bigquery.logging.v1.Job"
      "InsertResponseH\001\022P\n\022job_query_response\030\r"
      " \001(\01322.google.cloud.bigquery.logging.v1."
      "JobQueryResponseH\001\022f\n\036job_get_query_resu"
      "lts_response\030\016 \001(\0132<.google.cloud.bigque"
      "ry.logging.v1.JobGetQueryResultsResponse"
      "H\001\022Y\n\027job_query_done_response\030\017 \001(\01326.go"
      "ogle.cloud.bigquery.logging.v1.JobQueryD"
      "oneResponseH\001\022P\n\023job_completed_event\030\021 \001"
      "(\01323.google.cloud.bigquery.logging.v1.Jo"
      "bCompletedEventB\t\n\007requestB\n\n\010response\"O"
      "\n\022TableInsertRequest\0229\n\010resource\030\001 \001(\0132\'"
      ".google.cloud.bigquery.logging.v1.Table\""
      "O\n\022TableUpdateRequest\0229\n\010resource\030\001 \001(\0132"
      "\'.google.cloud.bigquery.logging.v1.Table"
      "\"P\n\023TableInsertResponse\0229\n\010resource\030\001 \001("
      "\0132\'.google.cloud.bigquery.logging.v1.Tab"
      "le\"P\n\023TableUpdateResponse\0229\n\010resource\030\001 "
      "\001(\0132\'.google.cloud.bigquery.logging.v1.T"
      "able\"&\n\022DatasetListRequest\022\020\n\010list_all\030\001"
      " \001(\010\"S\n\024DatasetInsertRequest\022;\n\010resource"
      "\030\001 \001(\0132).google.cloud.bigquery.logging.v"
      "1.Dataset\"T\n\025DatasetInsertResponse\022;\n\010re"
      "source\030\001 \001(\0132).google.cloud.bigquery.log"
      "ging.v1.Dataset\"S\n\024DatasetUpdateRequest\022"
      ";\n\010resource\030\001 \001(\0132).google.cloud.bigquer"
      "y.logging.v1.Dataset\"T\n\025DatasetUpdateRes"
      "ponse\022;\n\010resource\030\001 \001(\0132).google.cloud.b"
      "igquery.logging.v1.Dataset\"K\n\020JobInsertR"
      "equest\0227\n\010resource\030\001 \001(\0132%.google.cloud."
      "bigquery.logging.v1.Job\"L\n\021JobInsertResp"
      "onse\0227\n\010resource\030\001 \001(\0132%.google.cloud.bi"
      "gquery.logging.v1.Job\"\242\001\n\017JobQueryReques"
      "t\022\r\n\005query\030\001 \001(\t\022\023\n\013max_results\030\002 \001(\r\022F\n"
      "\017default_dataset\030\003 \001(\0132-.google.cloud.bi"
      "gquery.logging.v1.DatasetName\022\022\n\nproject"
      "_id\030\004 \001(\t\022\017\n\007dry_run\030\005 \001(\010\"]\n\020JobQueryRe"
      "sponse\022\025\n\rtotal_results\030\001 \001(\004\0222\n\003job\030\002 \001"
      "(\0132%.google.cloud.bigquery.logging.v1.Jo"
      "b\"C\n\031JobGetQueryResultsRequest\022\023\n\013max_re"
      "sults\030\001 \001(\r\022\021\n\tstart_row\030\002 \001(\004\"g\n\032JobGet"
      "QueryResultsResponse\022\025\n\rtotal_results\030\001 "
      "\001(\004\0222\n\003job\030\002 \001(\0132%.google.cloud.bigquery"
      ".logging.v1.Job\"J\n\024JobQueryDoneResponse\022"
      "2\n\003job\030\001 \001(\0132%.google.cloud.bigquery.log"
      "ging.v1.Job\"[\n\021JobCompletedEvent\022\022\n\neven"
      "t_name\030\001 \001(\t\0222\n\003job\030\002 \001(\0132%.google.cloud"
      ".bigquery.logging.v1.Job\">\n\024TableDataLis"
      "tRequest\022\021\n\tstart_row\030\001 \001(\004\022\023\n\013max_resul"
      "ts\030\002 \001(\r\"\362\002\n\005Table\022\?\n\ntable_name\030\001 \001(\0132+"
      ".google.cloud.bigquery.logging.v1.TableN"
      "ame\0229\n\004info\030\002 \001(\0132+.google.cloud.bigquer"
      "y.logging.v1.TableInfo\022\023\n\013schema_json\030\010 "
      "\001(\t\022C\n\004view\030\004 \001(\01325.google.cloud.bigquer"
      "y.logging.v1.TableViewDefinition\022/\n\013expi"
      "re_time\030\005 \001(\0132\032.google.protobuf.Timestam"
      "p\022/\n\013create_time\030\006 \001(\0132\032.google.protobuf"
      ".Timestamp\0221\n\rtruncate_time\030\007 \001(\0132\032.goog"
      "le.protobuf.Timestamp\"7\n\tTableInfo\022\025\n\rfr"
      "iendly_name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\"$"
      "\n\023TableViewDefinition\022\r\n\005query\030\001 \001(\t\"\353\002\n"
      "\007Dataset\022C\n\014dataset_name\030\001 \001(\0132-.google."
      "cloud.bigquery.logging.v1.DatasetName\022;\n"
      "\004info\030\002 \001(\0132-.google.cloud.bigquery.logg"
      "ing.v1.DatasetInfo\022/\n\013create_time\030\004 \001(\0132"
      "\032.google.protobuf.Timestamp\022/\n\013update_ti"
      "me\030\005 \001(\0132\032.google.protobuf.Timestamp\022:\n\003"
      "acl\030\006 \001(\0132-.google.cloud.bigquery.loggin"
      "g.v1.BigQueryAcl\022@\n\035default_table_expire"
      "_duration\030\010 \001(\0132\031.google.protobuf.Durati"
      "on\"9\n\013DatasetInfo\022\025\n\rfriendly_name\030\001 \001(\t"
      "\022\023\n\013description\030\002 \001(\t\"\373\001\n\013BigQueryAcl\022D\n"
      "\007entries\030\001 \003(\01323.google.cloud.bigquery.l"
      "ogging.v1.BigQueryAcl.Entry\032\245\001\n\005Entry\022\014\n"
      "\004role\030\001 \001(\t\022\023\n\013group_email\030\002 \001(\t\022\022\n\nuser"
      "_email\030\003 \001(\t\022\016\n\006domain\030\004 \001(\t\022\025\n\rspecial_"
      "group\030\005 \001(\t\022>\n\tview_name\030\006 \001(\0132+.google."
      "cloud.bigquery.logging.v1.TableName\"\233\002\n\003"
      "Job\022;\n\010job_name\030\001 \001(\0132).google.cloud.big"
      "query.logging.v1.JobName\022M\n\021job_configur"
      "ation\030\002 \001(\01322.google.cloud.bigquery.logg"
      "ing.v1.JobConfiguration\022\?\n\njob_status\030\003 "
      "\001(\0132+.google.cloud.bigquery.logging.v1.J"
      "obStatus\022G\n\016job_statistics\030\004 \001(\0132/.googl"
      "e.cloud.bigquery.logging.v1.JobStatistic"
      "s\"\204\t\n\020JobConfiguration\022I\n\005query\030\005 \001(\01328."
      "google.cloud.bigquery.logging.v1.JobConf"
      "iguration.QueryH\000\022G\n\004load\030\006 \001(\01327.google"
      ".cloud.bigquery.logging.v1.JobConfigurat"
      "ion.LoadH\000\022M\n\007extract\030\007 \001(\0132:.google.clo"
      "ud.bigquery.logging.v1.JobConfiguration."
      "ExtractH\000\022R\n\ntable_copy\030\010 \001(\0132<.google.c"
      "loud.bigquery.logging.v1.JobConfiguratio"
      "n.TableCopyH\000\022\017\n\007dry_run\030\t \001(\010\032\253\002\n\005Query"
      "\022\r\n\005query\030\001 \001(\t\022F\n\021destination_table\030\002 \001"
      "(\0132+.google.cloud.bigquery.logging.v1.Ta"
      "bleName\022\032\n\022create_disposition\030\003 \001(\t\022\031\n\021w"
      "rite_disposition\030\004 \001(\t\022F\n\017default_datase"
      "t\030\005 \001(\0132-.google.cloud.bigquery.logging."
      "v1.DatasetName\022L\n\021table_definitions\030\006 \003("
      "\01321.google.cloud.bigquery.logging.v1.Tab"
      "leDefinition\032\257\001\n\004Load\022\023\n\013source_uris\030\001 \003"
      "(\t\022\023\n\013schema_json\030\006 \001(\t\022F\n\021destination_t"
      "able\030\003 \001(\0132+.google.cloud.bigquery.loggi"
      "ng.v1.TableName\022\032\n\022create_disposition\030\004 "
      "\001(\t\022\031\n\021write_disposition\030\005 \001(\t\032f\n\007Extrac"
      "t\022\030\n\020destination_uris\030\001 \003(\t\022A\n\014source_ta"
      "ble\030\002 \001(\0132+.google.cloud.bigquery.loggin"
      "g.v1.TableName\032\316\001\n\tTableCopy\022B\n\rsource_t"
      "ables\030\001 \003(\0132+.google.cloud.bigquery.logg"
      "ing.v1.TableName\022F\n\021destination_table\030\002 "
      "\001(\0132+.google.cloud.bigquery.logging.v1.T"
      "ableName\022\032\n\022create_disposition\030\003 \001(\t\022\031\n\021"
      "write_disposition\030\004 \001(\tB\017\n\rconfiguration"
      "\"4\n\017TableDefinition\022\014\n\004name\030\001 \001(\t\022\023\n\013sou"
      "rce_uris\030\002 \003(\t\"=\n\tJobStatus\022\r\n\005state\030\001 \001"
      "(\t\022!\n\005error\030\002 \001(\0132\022.google.rpc.Status\"\357\001"
      "\n\rJobStatistics\022/\n\013create_time\030\001 \001(\0132\032.g"
      "oogle.protobuf.Timestamp\022.\n\nstart_time\030\002"
      " \001(\0132\032.google.protobuf.Timestamp\022,\n\010end_"
      "time\030\003 \001(\0132\032.google.protobuf.Timestamp\022\035"
      "\n\025total_processed_bytes\030\004 \001(\003\022\032\n\022total_b"
      "illed_bytes\030\005 \001(\003\022\024\n\014billing_tier\030\007 \001(\005\""
      "5\n\013DatasetName\022\022\n\nproject_id\030\001 \001(\t\022\022\n\nda"
      "taset_id\030\002 \001(\t\"E\n\tTableName\022\022\n\nproject_i"
      "d\030\001 \001(\t\022\022\n\ndataset_id\030\002 \001(\t\022\020\n\010table_id\030"
      "\003 \001(\t\"-\n\007JobName\022\022\n\nproject_id\030\001 \001(\t\022\016\n\006"
      "job_id\030\002 \001(\tB\201\001\n$com.google.cloud.bigque"
      "ry.logging.v1B\016AuditDataProtoP\001ZGgoogle."
      "golang.org/genproto/googleapis/cloud/big"
      "query/logging/v1;loggingb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6632);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/bigquery/logging/v1/audit_data.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto
namespace google {
namespace cloud {
namespace bigquery {
namespace logging {
namespace v1 {

// ===================================================================

void AuditData::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.table_insert_request_ = const_cast< ::google::cloud::bigquery::logging::v1::TableInsertRequest*>(
      ::google::cloud::bigquery::logging::v1::TableInsertRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.table_update_request_ = const_cast< ::google::cloud::bigquery::logging::v1::TableUpdateRequest*>(
      ::google::cloud::bigquery::logging::v1::TableUpdateRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.dataset_list_request_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetListRequest*>(
      ::google::cloud::bigquery::logging::v1::DatasetListRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.dataset_insert_request_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetInsertRequest*>(
      ::google::cloud::bigquery::logging::v1::DatasetInsertRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.dataset_update_request_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetUpdateRequest*>(
      ::google::cloud::bigquery::logging::v1::DatasetUpdateRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.job_insert_request_ = const_cast< ::google::cloud::bigquery::logging::v1::JobInsertRequest*>(
      ::google::cloud::bigquery::logging::v1::JobInsertRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.job_query_request_ = const_cast< ::google::cloud::bigquery::logging::v1::JobQueryRequest*>(
      ::google::cloud::bigquery::logging::v1::JobQueryRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.job_get_query_results_request_ = const_cast< ::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest*>(
      ::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.table_data_list_request_ = const_cast< ::google::cloud::bigquery::logging::v1::TableDataListRequest*>(
      ::google::cloud::bigquery::logging::v1::TableDataListRequest::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.table_insert_response_ = const_cast< ::google::cloud::bigquery::logging::v1::TableInsertResponse*>(
      ::google::cloud::bigquery::logging::v1::TableInsertResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.table_update_response_ = const_cast< ::google::cloud::bigquery::logging::v1::TableUpdateResponse*>(
      ::google::cloud::bigquery::logging::v1::TableUpdateResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.dataset_insert_response_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetInsertResponse*>(
      ::google::cloud::bigquery::logging::v1::DatasetInsertResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.dataset_update_response_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetUpdateResponse*>(
      ::google::cloud::bigquery::logging::v1::DatasetUpdateResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.job_insert_response_ = const_cast< ::google::cloud::bigquery::logging::v1::JobInsertResponse*>(
      ::google::cloud::bigquery::logging::v1::JobInsertResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.job_query_response_ = const_cast< ::google::cloud::bigquery::logging::v1::JobQueryResponse*>(
      ::google::cloud::bigquery::logging::v1::JobQueryResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.job_get_query_results_response_ = const_cast< ::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse*>(
      ::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_.job_query_done_response_ = const_cast< ::google::cloud::bigquery::logging::v1::JobQueryDoneResponse*>(
      ::google::cloud::bigquery::logging::v1::JobQueryDoneResponse::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_AuditData_default_instance_._instance.get_mutable()->job_completed_event_ = const_cast< ::google::cloud::bigquery::logging::v1::JobCompletedEvent*>(
      ::google::cloud::bigquery::logging::v1::JobCompletedEvent::internal_default_instance());
}
void AuditData::set_allocated_table_insert_request(::google::cloud::bigquery::logging::v1::TableInsertRequest* table_insert_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (table_insert_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_insert_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_insert_request, submessage_arena);
    }
    set_has_table_insert_request();
    request_.table_insert_request_ = table_insert_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.table_insert_request)
}
void AuditData::set_allocated_table_update_request(::google::cloud::bigquery::logging::v1::TableUpdateRequest* table_update_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (table_update_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_update_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_update_request, submessage_arena);
    }
    set_has_table_update_request();
    request_.table_update_request_ = table_update_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.table_update_request)
}
void AuditData::set_allocated_dataset_list_request(::google::cloud::bigquery::logging::v1::DatasetListRequest* dataset_list_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (dataset_list_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dataset_list_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dataset_list_request, submessage_arena);
    }
    set_has_dataset_list_request();
    request_.dataset_list_request_ = dataset_list_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.dataset_list_request)
}
void AuditData::set_allocated_dataset_insert_request(::google::cloud::bigquery::logging::v1::DatasetInsertRequest* dataset_insert_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (dataset_insert_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dataset_insert_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dataset_insert_request, submessage_arena);
    }
    set_has_dataset_insert_request();
    request_.dataset_insert_request_ = dataset_insert_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.dataset_insert_request)
}
void AuditData::set_allocated_dataset_update_request(::google::cloud::bigquery::logging::v1::DatasetUpdateRequest* dataset_update_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (dataset_update_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dataset_update_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dataset_update_request, submessage_arena);
    }
    set_has_dataset_update_request();
    request_.dataset_update_request_ = dataset_update_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.dataset_update_request)
}
void AuditData::set_allocated_job_insert_request(::google::cloud::bigquery::logging::v1::JobInsertRequest* job_insert_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (job_insert_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job_insert_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job_insert_request, submessage_arena);
    }
    set_has_job_insert_request();
    request_.job_insert_request_ = job_insert_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.job_insert_request)
}
void AuditData::set_allocated_job_query_request(::google::cloud::bigquery::logging::v1::JobQueryRequest* job_query_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (job_query_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job_query_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job_query_request, submessage_arena);
    }
    set_has_job_query_request();
    request_.job_query_request_ = job_query_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.job_query_request)
}
void AuditData::set_allocated_job_get_query_results_request(::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest* job_get_query_results_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (job_get_query_results_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job_get_query_results_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job_get_query_results_request, submessage_arena);
    }
    set_has_job_get_query_results_request();
    request_.job_get_query_results_request_ = job_get_query_results_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.job_get_query_results_request)
}
void AuditData::set_allocated_table_data_list_request(::google::cloud::bigquery::logging::v1::TableDataListRequest* table_data_list_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (table_data_list_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_data_list_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_data_list_request, submessage_arena);
    }
    set_has_table_data_list_request();
    request_.table_data_list_request_ = table_data_list_request;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.table_data_list_request)
}
void AuditData::set_allocated_table_insert_response(::google::cloud::bigquery::logging::v1::TableInsertResponse* table_insert_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (table_insert_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_insert_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_insert_response, submessage_arena);
    }
    set_has_table_insert_response();
    response_.table_insert_response_ = table_insert_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.table_insert_response)
}
void AuditData::set_allocated_table_update_response(::google::cloud::bigquery::logging::v1::TableUpdateResponse* table_update_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (table_update_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_update_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_update_response, submessage_arena);
    }
    set_has_table_update_response();
    response_.table_update_response_ = table_update_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.table_update_response)
}
void AuditData::set_allocated_dataset_insert_response(::google::cloud::bigquery::logging::v1::DatasetInsertResponse* dataset_insert_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (dataset_insert_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dataset_insert_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dataset_insert_response, submessage_arena);
    }
    set_has_dataset_insert_response();
    response_.dataset_insert_response_ = dataset_insert_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.dataset_insert_response)
}
void AuditData::set_allocated_dataset_update_response(::google::cloud::bigquery::logging::v1::DatasetUpdateResponse* dataset_update_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (dataset_update_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dataset_update_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dataset_update_response, submessage_arena);
    }
    set_has_dataset_update_response();
    response_.dataset_update_response_ = dataset_update_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.dataset_update_response)
}
void AuditData::set_allocated_job_insert_response(::google::cloud::bigquery::logging::v1::JobInsertResponse* job_insert_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (job_insert_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job_insert_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job_insert_response, submessage_arena);
    }
    set_has_job_insert_response();
    response_.job_insert_response_ = job_insert_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.job_insert_response)
}
void AuditData::set_allocated_job_query_response(::google::cloud::bigquery::logging::v1::JobQueryResponse* job_query_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (job_query_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job_query_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job_query_response, submessage_arena);
    }
    set_has_job_query_response();
    response_.job_query_response_ = job_query_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.job_query_response)
}
void AuditData::set_allocated_job_get_query_results_response(::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse* job_get_query_results_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (job_get_query_results_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job_get_query_results_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job_get_query_results_response, submessage_arena);
    }
    set_has_job_get_query_results_response();
    response_.job_get_query_results_response_ = job_get_query_results_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.job_get_query_results_response)
}
void AuditData::set_allocated_job_query_done_response(::google::cloud::bigquery::logging::v1::JobQueryDoneResponse* job_query_done_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (job_query_done_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job_query_done_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job_query_done_response, submessage_arena);
    }
    set_has_job_query_done_response();
    response_.job_query_done_response_ = job_query_done_response;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.AuditData.job_query_done_response)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuditData::kTableInsertRequestFieldNumber;
const int AuditData::kTableUpdateRequestFieldNumber;
const int AuditData::kDatasetListRequestFieldNumber;
const int AuditData::kDatasetInsertRequestFieldNumber;
const int AuditData::kDatasetUpdateRequestFieldNumber;
const int AuditData::kJobInsertRequestFieldNumber;
const int AuditData::kJobQueryRequestFieldNumber;
const int AuditData::kJobGetQueryResultsRequestFieldNumber;
const int AuditData::kTableDataListRequestFieldNumber;
const int AuditData::kTableInsertResponseFieldNumber;
const int AuditData::kTableUpdateResponseFieldNumber;
const int AuditData::kDatasetInsertResponseFieldNumber;
const int AuditData::kDatasetUpdateResponseFieldNumber;
const int AuditData::kJobInsertResponseFieldNumber;
const int AuditData::kJobQueryResponseFieldNumber;
const int AuditData::kJobGetQueryResultsResponseFieldNumber;
const int AuditData::kJobQueryDoneResponseFieldNumber;
const int AuditData::kJobCompletedEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuditData::AuditData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsAuditData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.AuditData)
}
AuditData::AuditData(const AuditData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job_completed_event()) {
    job_completed_event_ = new ::google::cloud::bigquery::logging::v1::JobCompletedEvent(*from.job_completed_event_);
  } else {
    job_completed_event_ = NULL;
  }
  clear_has_request();
  switch (from.request_case()) {
    case kTableInsertRequest: {
      mutable_table_insert_request()->::google::cloud::bigquery::logging::v1::TableInsertRequest::MergeFrom(from.table_insert_request());
      break;
    }
    case kTableUpdateRequest: {
      mutable_table_update_request()->::google::cloud::bigquery::logging::v1::TableUpdateRequest::MergeFrom(from.table_update_request());
      break;
    }
    case kDatasetListRequest: {
      mutable_dataset_list_request()->::google::cloud::bigquery::logging::v1::DatasetListRequest::MergeFrom(from.dataset_list_request());
      break;
    }
    case kDatasetInsertRequest: {
      mutable_dataset_insert_request()->::google::cloud::bigquery::logging::v1::DatasetInsertRequest::MergeFrom(from.dataset_insert_request());
      break;
    }
    case kDatasetUpdateRequest: {
      mutable_dataset_update_request()->::google::cloud::bigquery::logging::v1::DatasetUpdateRequest::MergeFrom(from.dataset_update_request());
      break;
    }
    case kJobInsertRequest: {
      mutable_job_insert_request()->::google::cloud::bigquery::logging::v1::JobInsertRequest::MergeFrom(from.job_insert_request());
      break;
    }
    case kJobQueryRequest: {
      mutable_job_query_request()->::google::cloud::bigquery::logging::v1::JobQueryRequest::MergeFrom(from.job_query_request());
      break;
    }
    case kJobGetQueryResultsRequest: {
      mutable_job_get_query_results_request()->::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest::MergeFrom(from.job_get_query_results_request());
      break;
    }
    case kTableDataListRequest: {
      mutable_table_data_list_request()->::google::cloud::bigquery::logging::v1::TableDataListRequest::MergeFrom(from.table_data_list_request());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  clear_has_response();
  switch (from.response_case()) {
    case kTableInsertResponse: {
      mutable_table_insert_response()->::google::cloud::bigquery::logging::v1::TableInsertResponse::MergeFrom(from.table_insert_response());
      break;
    }
    case kTableUpdateResponse: {
      mutable_table_update_response()->::google::cloud::bigquery::logging::v1::TableUpdateResponse::MergeFrom(from.table_update_response());
      break;
    }
    case kDatasetInsertResponse: {
      mutable_dataset_insert_response()->::google::cloud::bigquery::logging::v1::DatasetInsertResponse::MergeFrom(from.dataset_insert_response());
      break;
    }
    case kDatasetUpdateResponse: {
      mutable_dataset_update_response()->::google::cloud::bigquery::logging::v1::DatasetUpdateResponse::MergeFrom(from.dataset_update_response());
      break;
    }
    case kJobInsertResponse: {
      mutable_job_insert_response()->::google::cloud::bigquery::logging::v1::JobInsertResponse::MergeFrom(from.job_insert_response());
      break;
    }
    case kJobQueryResponse: {
      mutable_job_query_response()->::google::cloud::bigquery::logging::v1::JobQueryResponse::MergeFrom(from.job_query_response());
      break;
    }
    case kJobGetQueryResultsResponse: {
      mutable_job_get_query_results_response()->::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse::MergeFrom(from.job_get_query_results_response());
      break;
    }
    case kJobQueryDoneResponse: {
      mutable_job_query_done_response()->::google::cloud::bigquery::logging::v1::JobQueryDoneResponse::MergeFrom(from.job_query_done_response());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.AuditData)
}

void AuditData::SharedCtor() {
  job_completed_event_ = NULL;
  clear_has_request();
  clear_has_response();
  _cached_size_ = 0;
}

AuditData::~AuditData() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.AuditData)
  SharedDtor();
}

void AuditData::SharedDtor() {
  if (this != internal_default_instance()) delete job_completed_event_;
  if (has_request()) {
    clear_request();
  }
  if (has_response()) {
    clear_response();
  }
}

void AuditData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuditData::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuditData& AuditData::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsAuditData();
  return *internal_default_instance();
}

AuditData* AuditData::New(::google::protobuf::Arena* arena) const {
  AuditData* n = new AuditData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuditData::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.bigquery.logging.v1.AuditData)
  switch (request_case()) {
    case kTableInsertRequest: {
      delete request_.table_insert_request_;
      break;
    }
    case kTableUpdateRequest: {
      delete request_.table_update_request_;
      break;
    }
    case kDatasetListRequest: {
      delete request_.dataset_list_request_;
      break;
    }
    case kDatasetInsertRequest: {
      delete request_.dataset_insert_request_;
      break;
    }
    case kDatasetUpdateRequest: {
      delete request_.dataset_update_request_;
      break;
    }
    case kJobInsertRequest: {
      delete request_.job_insert_request_;
      break;
    }
    case kJobQueryRequest: {
      delete request_.job_query_request_;
      break;
    }
    case kJobGetQueryResultsRequest: {
      delete request_.job_get_query_results_request_;
      break;
    }
    case kTableDataListRequest: {
      delete request_.table_data_list_request_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}

void AuditData::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.bigquery.logging.v1.AuditData)
  switch (response_case()) {
    case kTableInsertResponse: {
      delete response_.table_insert_response_;
      break;
    }
    case kTableUpdateResponse: {
      delete response_.table_update_response_;
      break;
    }
    case kDatasetInsertResponse: {
      delete response_.dataset_insert_response_;
      break;
    }
    case kDatasetUpdateResponse: {
      delete response_.dataset_update_response_;
      break;
    }
    case kJobInsertResponse: {
      delete response_.job_insert_response_;
      break;
    }
    case kJobQueryResponse: {
      delete response_.job_query_response_;
      break;
    }
    case kJobGetQueryResultsResponse: {
      delete response_.job_get_query_results_response_;
      break;
    }
    case kJobQueryDoneResponse: {
      delete response_.job_query_done_response_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = RESPONSE_NOT_SET;
}


void AuditData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.AuditData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_completed_event_ != NULL) {
    delete job_completed_event_;
  }
  job_completed_event_ = NULL;
  clear_request();
  clear_response();
  _internal_metadata_.Clear();
}

bool AuditData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.AuditData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.TableInsertRequest table_insert_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_insert_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetListRequest dataset_list_request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset_list_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetInsertRequest dataset_insert_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset_insert_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetUpdateRequest dataset_update_request = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset_update_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobInsertRequest job_insert_request = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_insert_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobQueryRequest job_query_request = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_query_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest job_get_query_results_request = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_get_query_results_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableDataListRequest table_data_list_request = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_data_list_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableInsertResponse table_insert_response = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_insert_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableUpdateResponse table_update_response = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_update_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetInsertResponse dataset_insert_response = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset_insert_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetUpdateResponse dataset_update_response = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset_update_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobQueryResponse job_query_response = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_query_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse job_get_query_results_response = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_get_query_results_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobQueryDoneResponse job_query_done_response = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_query_done_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableUpdateRequest table_update_request = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_update_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobCompletedEvent job_completed_event = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_completed_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobInsertResponse job_insert_response = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_insert_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.AuditData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.AuditData)
  return false;
#undef DO_
}

void AuditData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.AuditData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.TableInsertRequest table_insert_request = 1;
  if (has_table_insert_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *request_.table_insert_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetListRequest dataset_list_request = 2;
  if (has_dataset_list_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *request_.dataset_list_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetInsertRequest dataset_insert_request = 3;
  if (has_dataset_insert_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *request_.dataset_insert_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetUpdateRequest dataset_update_request = 4;
  if (has_dataset_update_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *request_.dataset_update_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobInsertRequest job_insert_request = 5;
  if (has_job_insert_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *request_.job_insert_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobQueryRequest job_query_request = 6;
  if (has_job_query_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *request_.job_query_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest job_get_query_results_request = 7;
  if (has_job_get_query_results_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *request_.job_get_query_results_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.TableDataListRequest table_data_list_request = 8;
  if (has_table_data_list_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *request_.table_data_list_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.TableInsertResponse table_insert_response = 9;
  if (has_table_insert_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *response_.table_insert_response_, output);
  }

  // .google.cloud.bigquery.logging.v1.TableUpdateResponse table_update_response = 10;
  if (has_table_update_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *response_.table_update_response_, output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetInsertResponse dataset_insert_response = 11;
  if (has_dataset_insert_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *response_.dataset_insert_response_, output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetUpdateResponse dataset_update_response = 12;
  if (has_dataset_update_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *response_.dataset_update_response_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobQueryResponse job_query_response = 13;
  if (has_job_query_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *response_.job_query_response_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse job_get_query_results_response = 14;
  if (has_job_get_query_results_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *response_.job_get_query_results_response_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobQueryDoneResponse job_query_done_response = 15;
  if (has_job_query_done_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *response_.job_query_done_response_, output);
  }

  // .google.cloud.bigquery.logging.v1.TableUpdateRequest table_update_request = 16;
  if (has_table_update_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *request_.table_update_request_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobCompletedEvent job_completed_event = 17;
  if (this->has_job_completed_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->job_completed_event_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobInsertResponse job_insert_response = 18;
  if (has_job_insert_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *response_.job_insert_response_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.AuditData)
}

::google::protobuf::uint8* AuditData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.AuditData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.TableInsertRequest table_insert_request = 1;
  if (has_table_insert_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *request_.table_insert_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetListRequest dataset_list_request = 2;
  if (has_dataset_list_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *request_.dataset_list_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetInsertRequest dataset_insert_request = 3;
  if (has_dataset_insert_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *request_.dataset_insert_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetUpdateRequest dataset_update_request = 4;
  if (has_dataset_update_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *request_.dataset_update_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobInsertRequest job_insert_request = 5;
  if (has_job_insert_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *request_.job_insert_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobQueryRequest job_query_request = 6;
  if (has_job_query_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *request_.job_query_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest job_get_query_results_request = 7;
  if (has_job_get_query_results_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *request_.job_get_query_results_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.TableDataListRequest table_data_list_request = 8;
  if (has_table_data_list_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *request_.table_data_list_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.TableInsertResponse table_insert_response = 9;
  if (has_table_insert_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *response_.table_insert_response_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.TableUpdateResponse table_update_response = 10;
  if (has_table_update_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *response_.table_update_response_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetInsertResponse dataset_insert_response = 11;
  if (has_dataset_insert_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *response_.dataset_insert_response_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetUpdateResponse dataset_update_response = 12;
  if (has_dataset_update_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *response_.dataset_update_response_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobQueryResponse job_query_response = 13;
  if (has_job_query_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *response_.job_query_response_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse job_get_query_results_response = 14;
  if (has_job_get_query_results_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *response_.job_get_query_results_response_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobQueryDoneResponse job_query_done_response = 15;
  if (has_job_query_done_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *response_.job_query_done_response_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.TableUpdateRequest table_update_request = 16;
  if (has_table_update_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *request_.table_update_request_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobCompletedEvent job_completed_event = 17;
  if (this->has_job_completed_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->job_completed_event_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobInsertResponse job_insert_response = 18;
  if (has_job_insert_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *response_.job_insert_response_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.AuditData)
  return target;
}

size_t AuditData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.AuditData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.JobCompletedEvent job_completed_event = 17;
  if (this->has_job_completed_event()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_completed_event_);
  }

  switch (request_case()) {
    // .google.cloud.bigquery.logging.v1.TableInsertRequest table_insert_request = 1;
    case kTableInsertRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.table_insert_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.TableUpdateRequest table_update_request = 16;
    case kTableUpdateRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.table_update_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.DatasetListRequest dataset_list_request = 2;
    case kDatasetListRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.dataset_list_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.DatasetInsertRequest dataset_insert_request = 3;
    case kDatasetInsertRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.dataset_insert_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.DatasetUpdateRequest dataset_update_request = 4;
    case kDatasetUpdateRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.dataset_update_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobInsertRequest job_insert_request = 5;
    case kJobInsertRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.job_insert_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobQueryRequest job_query_request = 6;
    case kJobQueryRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.job_query_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest job_get_query_results_request = 7;
    case kJobGetQueryResultsRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.job_get_query_results_request_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.TableDataListRequest table_data_list_request = 8;
    case kTableDataListRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.table_data_list_request_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  switch (response_case()) {
    // .google.cloud.bigquery.logging.v1.TableInsertResponse table_insert_response = 9;
    case kTableInsertResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.table_insert_response_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.TableUpdateResponse table_update_response = 10;
    case kTableUpdateResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.table_update_response_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.DatasetInsertResponse dataset_insert_response = 11;
    case kDatasetInsertResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.dataset_insert_response_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.DatasetUpdateResponse dataset_update_response = 12;
    case kDatasetUpdateResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.dataset_update_response_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobInsertResponse job_insert_response = 18;
    case kJobInsertResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.job_insert_response_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobQueryResponse job_query_response = 13;
    case kJobQueryResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.job_query_response_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse job_get_query_results_response = 14;
    case kJobGetQueryResultsResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.job_get_query_results_response_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobQueryDoneResponse job_query_done_response = 15;
    case kJobQueryDoneResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.job_query_done_response_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuditData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.AuditData)
  GOOGLE_DCHECK_NE(&from, this);
  const AuditData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuditData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.AuditData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.AuditData)
    MergeFrom(*source);
  }
}

void AuditData::MergeFrom(const AuditData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.AuditData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job_completed_event()) {
    mutable_job_completed_event()->::google::cloud::bigquery::logging::v1::JobCompletedEvent::MergeFrom(from.job_completed_event());
  }
  switch (from.request_case()) {
    case kTableInsertRequest: {
      mutable_table_insert_request()->::google::cloud::bigquery::logging::v1::TableInsertRequest::MergeFrom(from.table_insert_request());
      break;
    }
    case kTableUpdateRequest: {
      mutable_table_update_request()->::google::cloud::bigquery::logging::v1::TableUpdateRequest::MergeFrom(from.table_update_request());
      break;
    }
    case kDatasetListRequest: {
      mutable_dataset_list_request()->::google::cloud::bigquery::logging::v1::DatasetListRequest::MergeFrom(from.dataset_list_request());
      break;
    }
    case kDatasetInsertRequest: {
      mutable_dataset_insert_request()->::google::cloud::bigquery::logging::v1::DatasetInsertRequest::MergeFrom(from.dataset_insert_request());
      break;
    }
    case kDatasetUpdateRequest: {
      mutable_dataset_update_request()->::google::cloud::bigquery::logging::v1::DatasetUpdateRequest::MergeFrom(from.dataset_update_request());
      break;
    }
    case kJobInsertRequest: {
      mutable_job_insert_request()->::google::cloud::bigquery::logging::v1::JobInsertRequest::MergeFrom(from.job_insert_request());
      break;
    }
    case kJobQueryRequest: {
      mutable_job_query_request()->::google::cloud::bigquery::logging::v1::JobQueryRequest::MergeFrom(from.job_query_request());
      break;
    }
    case kJobGetQueryResultsRequest: {
      mutable_job_get_query_results_request()->::google::cloud::bigquery::logging::v1::JobGetQueryResultsRequest::MergeFrom(from.job_get_query_results_request());
      break;
    }
    case kTableDataListRequest: {
      mutable_table_data_list_request()->::google::cloud::bigquery::logging::v1::TableDataListRequest::MergeFrom(from.table_data_list_request());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  switch (from.response_case()) {
    case kTableInsertResponse: {
      mutable_table_insert_response()->::google::cloud::bigquery::logging::v1::TableInsertResponse::MergeFrom(from.table_insert_response());
      break;
    }
    case kTableUpdateResponse: {
      mutable_table_update_response()->::google::cloud::bigquery::logging::v1::TableUpdateResponse::MergeFrom(from.table_update_response());
      break;
    }
    case kDatasetInsertResponse: {
      mutable_dataset_insert_response()->::google::cloud::bigquery::logging::v1::DatasetInsertResponse::MergeFrom(from.dataset_insert_response());
      break;
    }
    case kDatasetUpdateResponse: {
      mutable_dataset_update_response()->::google::cloud::bigquery::logging::v1::DatasetUpdateResponse::MergeFrom(from.dataset_update_response());
      break;
    }
    case kJobInsertResponse: {
      mutable_job_insert_response()->::google::cloud::bigquery::logging::v1::JobInsertResponse::MergeFrom(from.job_insert_response());
      break;
    }
    case kJobQueryResponse: {
      mutable_job_query_response()->::google::cloud::bigquery::logging::v1::JobQueryResponse::MergeFrom(from.job_query_response());
      break;
    }
    case kJobGetQueryResultsResponse: {
      mutable_job_get_query_results_response()->::google::cloud::bigquery::logging::v1::JobGetQueryResultsResponse::MergeFrom(from.job_get_query_results_response());
      break;
    }
    case kJobQueryDoneResponse: {
      mutable_job_query_done_response()->::google::cloud::bigquery::logging::v1::JobQueryDoneResponse::MergeFrom(from.job_query_done_response());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void AuditData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.AuditData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuditData::CopyFrom(const AuditData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.AuditData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuditData::IsInitialized() const {
  return true;
}

void AuditData::Swap(AuditData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuditData::InternalSwap(AuditData* other) {
  using std::swap;
  swap(job_completed_event_, other->job_completed_event_);
  swap(request_, other->request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(response_, other->response_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuditData::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableInsertRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_TableInsertRequest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Table*>(
      ::google::cloud::bigquery::logging::v1::Table::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableInsertRequest::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableInsertRequest::TableInsertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInsertRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableInsertRequest)
}
TableInsertRequest::TableInsertRequest(const TableInsertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Table(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableInsertRequest)
}

void TableInsertRequest::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

TableInsertRequest::~TableInsertRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableInsertRequest)
  SharedDtor();
}

void TableInsertRequest::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void TableInsertRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableInsertRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableInsertRequest& TableInsertRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInsertRequest();
  return *internal_default_instance();
}

TableInsertRequest* TableInsertRequest::New(::google::protobuf::Arena* arena) const {
  TableInsertRequest* n = new TableInsertRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableInsertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool TableInsertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Table resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableInsertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableInsertRequest)
  return false;
#undef DO_
}

void TableInsertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableInsertRequest)
}

::google::protobuf::uint8* TableInsertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableInsertRequest)
  return target;
}

size_t TableInsertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableInsertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TableInsertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableInsertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableInsertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableInsertRequest)
    MergeFrom(*source);
  }
}

void TableInsertRequest::MergeFrom(const TableInsertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Table::MergeFrom(from.resource());
  }
}

void TableInsertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInsertRequest::CopyFrom(const TableInsertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableInsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInsertRequest::IsInitialized() const {
  return true;
}

void TableInsertRequest::Swap(TableInsertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableInsertRequest::InternalSwap(TableInsertRequest* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableInsertRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableUpdateRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_TableUpdateRequest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Table*>(
      ::google::cloud::bigquery::logging::v1::Table::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableUpdateRequest::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableUpdateRequest::TableUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableUpdateRequest)
}
TableUpdateRequest::TableUpdateRequest(const TableUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Table(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableUpdateRequest)
}

void TableUpdateRequest::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

TableUpdateRequest::~TableUpdateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  SharedDtor();
}

void TableUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void TableUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableUpdateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableUpdateRequest& TableUpdateRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableUpdateRequest();
  return *internal_default_instance();
}

TableUpdateRequest* TableUpdateRequest::New(::google::protobuf::Arena* arena) const {
  TableUpdateRequest* n = new TableUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool TableUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Table resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  return false;
#undef DO_
}

void TableUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableUpdateRequest)
}

::google::protobuf::uint8* TableUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  return target;
}

size_t TableUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TableUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableUpdateRequest)
    MergeFrom(*source);
  }
}

void TableUpdateRequest::MergeFrom(const TableUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Table::MergeFrom(from.resource());
  }
}

void TableUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableUpdateRequest::CopyFrom(const TableUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableUpdateRequest::IsInitialized() const {
  return true;
}

void TableUpdateRequest::Swap(TableUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableUpdateRequest::InternalSwap(TableUpdateRequest* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableUpdateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableInsertResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_TableInsertResponse_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Table*>(
      ::google::cloud::bigquery::logging::v1::Table::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableInsertResponse::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableInsertResponse::TableInsertResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInsertResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableInsertResponse)
}
TableInsertResponse::TableInsertResponse(const TableInsertResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Table(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableInsertResponse)
}

void TableInsertResponse::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

TableInsertResponse::~TableInsertResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableInsertResponse)
  SharedDtor();
}

void TableInsertResponse::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void TableInsertResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableInsertResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableInsertResponse& TableInsertResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInsertResponse();
  return *internal_default_instance();
}

TableInsertResponse* TableInsertResponse::New(::google::protobuf::Arena* arena) const {
  TableInsertResponse* n = new TableInsertResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableInsertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool TableInsertResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Table resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableInsertResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableInsertResponse)
  return false;
#undef DO_
}

void TableInsertResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableInsertResponse)
}

::google::protobuf::uint8* TableInsertResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableInsertResponse)
  return target;
}

size_t TableInsertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableInsertResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TableInsertResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableInsertResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableInsertResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableInsertResponse)
    MergeFrom(*source);
  }
}

void TableInsertResponse::MergeFrom(const TableInsertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Table::MergeFrom(from.resource());
  }
}

void TableInsertResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInsertResponse::CopyFrom(const TableInsertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableInsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInsertResponse::IsInitialized() const {
  return true;
}

void TableInsertResponse::Swap(TableInsertResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableInsertResponse::InternalSwap(TableInsertResponse* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableInsertResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableUpdateResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_TableUpdateResponse_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Table*>(
      ::google::cloud::bigquery::logging::v1::Table::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableUpdateResponse::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableUpdateResponse::TableUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableUpdateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableUpdateResponse)
}
TableUpdateResponse::TableUpdateResponse(const TableUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Table(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableUpdateResponse)
}

void TableUpdateResponse::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

TableUpdateResponse::~TableUpdateResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  SharedDtor();
}

void TableUpdateResponse::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void TableUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableUpdateResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableUpdateResponse& TableUpdateResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableUpdateResponse();
  return *internal_default_instance();
}

TableUpdateResponse* TableUpdateResponse::New(::google::protobuf::Arena* arena) const {
  TableUpdateResponse* n = new TableUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool TableUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Table resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  return false;
#undef DO_
}

void TableUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableUpdateResponse)
}

::google::protobuf::uint8* TableUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  return target;
}

size_t TableUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Table resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TableUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableUpdateResponse)
    MergeFrom(*source);
  }
}

void TableUpdateResponse::MergeFrom(const TableUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Table::MergeFrom(from.resource());
  }
}

void TableUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableUpdateResponse::CopyFrom(const TableUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableUpdateResponse::IsInitialized() const {
  return true;
}

void TableUpdateResponse::Swap(TableUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableUpdateResponse::InternalSwap(TableUpdateResponse* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableUpdateResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatasetListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatasetListRequest::kListAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatasetListRequest::DatasetListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.DatasetListRequest)
}
DatasetListRequest::DatasetListRequest(const DatasetListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_all_ = from.list_all_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.DatasetListRequest)
}

void DatasetListRequest::SharedCtor() {
  list_all_ = false;
  _cached_size_ = 0;
}

DatasetListRequest::~DatasetListRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.DatasetListRequest)
  SharedDtor();
}

void DatasetListRequest::SharedDtor() {
}

void DatasetListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatasetListRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatasetListRequest& DatasetListRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetListRequest();
  return *internal_default_instance();
}

DatasetListRequest* DatasetListRequest::New(::google::protobuf::Arena* arena) const {
  DatasetListRequest* n = new DatasetListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatasetListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_all_ = false;
  _internal_metadata_.Clear();
}

bool DatasetListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool list_all = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &list_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.DatasetListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.DatasetListRequest)
  return false;
#undef DO_
}

void DatasetListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_all = 1;
  if (this->list_all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->list_all(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.DatasetListRequest)
}

::google::protobuf::uint8* DatasetListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_all = 1;
  if (this->list_all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->list_all(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.DatasetListRequest)
  return target;
}

size_t DatasetListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool list_all = 1;
  if (this->list_all() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatasetListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatasetListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.DatasetListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.DatasetListRequest)
    MergeFrom(*source);
  }
}

void DatasetListRequest::MergeFrom(const DatasetListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list_all() != 0) {
    set_list_all(from.list_all());
  }
}

void DatasetListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetListRequest::CopyFrom(const DatasetListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.DatasetListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetListRequest::IsInitialized() const {
  return true;
}

void DatasetListRequest::Swap(DatasetListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatasetListRequest::InternalSwap(DatasetListRequest* other) {
  using std::swap;
  swap(list_all_, other->list_all_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatasetListRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatasetInsertRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_DatasetInsertRequest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Dataset*>(
      ::google::cloud::bigquery::logging::v1::Dataset::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatasetInsertRequest::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatasetInsertRequest::DatasetInsertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInsertRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
}
DatasetInsertRequest::DatasetInsertRequest(const DatasetInsertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Dataset(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
}

void DatasetInsertRequest::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

DatasetInsertRequest::~DatasetInsertRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  SharedDtor();
}

void DatasetInsertRequest::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void DatasetInsertRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatasetInsertRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatasetInsertRequest& DatasetInsertRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInsertRequest();
  return *internal_default_instance();
}

DatasetInsertRequest* DatasetInsertRequest::New(::google::protobuf::Arena* arena) const {
  DatasetInsertRequest* n = new DatasetInsertRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatasetInsertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool DatasetInsertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  return false;
#undef DO_
}

void DatasetInsertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
}

::google::protobuf::uint8* DatasetInsertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  return target;
}

size_t DatasetInsertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatasetInsertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetInsertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatasetInsertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
    MergeFrom(*source);
  }
}

void DatasetInsertRequest::MergeFrom(const DatasetInsertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Dataset::MergeFrom(from.resource());
  }
}

void DatasetInsertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetInsertRequest::CopyFrom(const DatasetInsertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.DatasetInsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetInsertRequest::IsInitialized() const {
  return true;
}

void DatasetInsertRequest::Swap(DatasetInsertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatasetInsertRequest::InternalSwap(DatasetInsertRequest* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatasetInsertRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatasetInsertResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_DatasetInsertResponse_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Dataset*>(
      ::google::cloud::bigquery::logging::v1::Dataset::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatasetInsertResponse::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatasetInsertResponse::DatasetInsertResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInsertResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
}
DatasetInsertResponse::DatasetInsertResponse(const DatasetInsertResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Dataset(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
}

void DatasetInsertResponse::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

DatasetInsertResponse::~DatasetInsertResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  SharedDtor();
}

void DatasetInsertResponse::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void DatasetInsertResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatasetInsertResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatasetInsertResponse& DatasetInsertResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInsertResponse();
  return *internal_default_instance();
}

DatasetInsertResponse* DatasetInsertResponse::New(::google::protobuf::Arena* arena) const {
  DatasetInsertResponse* n = new DatasetInsertResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatasetInsertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool DatasetInsertResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  return false;
#undef DO_
}

void DatasetInsertResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
}

::google::protobuf::uint8* DatasetInsertResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  return target;
}

size_t DatasetInsertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatasetInsertResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetInsertResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatasetInsertResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
    MergeFrom(*source);
  }
}

void DatasetInsertResponse::MergeFrom(const DatasetInsertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Dataset::MergeFrom(from.resource());
  }
}

void DatasetInsertResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetInsertResponse::CopyFrom(const DatasetInsertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.DatasetInsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetInsertResponse::IsInitialized() const {
  return true;
}

void DatasetInsertResponse::Swap(DatasetInsertResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatasetInsertResponse::InternalSwap(DatasetInsertResponse* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatasetInsertResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatasetUpdateRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_DatasetUpdateRequest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Dataset*>(
      ::google::cloud::bigquery::logging::v1::Dataset::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatasetUpdateRequest::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatasetUpdateRequest::DatasetUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
}
DatasetUpdateRequest::DatasetUpdateRequest(const DatasetUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Dataset(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
}

void DatasetUpdateRequest::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

DatasetUpdateRequest::~DatasetUpdateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  SharedDtor();
}

void DatasetUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void DatasetUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatasetUpdateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatasetUpdateRequest& DatasetUpdateRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetUpdateRequest();
  return *internal_default_instance();
}

DatasetUpdateRequest* DatasetUpdateRequest::New(::google::protobuf::Arena* arena) const {
  DatasetUpdateRequest* n = new DatasetUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatasetUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool DatasetUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  return false;
#undef DO_
}

void DatasetUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
}

::google::protobuf::uint8* DatasetUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  return target;
}

size_t DatasetUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatasetUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatasetUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
    MergeFrom(*source);
  }
}

void DatasetUpdateRequest::MergeFrom(const DatasetUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Dataset::MergeFrom(from.resource());
  }
}

void DatasetUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetUpdateRequest::CopyFrom(const DatasetUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetUpdateRequest::IsInitialized() const {
  return true;
}

void DatasetUpdateRequest::Swap(DatasetUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatasetUpdateRequest::InternalSwap(DatasetUpdateRequest* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatasetUpdateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatasetUpdateResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_DatasetUpdateResponse_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Dataset*>(
      ::google::cloud::bigquery::logging::v1::Dataset::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatasetUpdateResponse::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatasetUpdateResponse::DatasetUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetUpdateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
}
DatasetUpdateResponse::DatasetUpdateResponse(const DatasetUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Dataset(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
}

void DatasetUpdateResponse::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

DatasetUpdateResponse::~DatasetUpdateResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  SharedDtor();
}

void DatasetUpdateResponse::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void DatasetUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatasetUpdateResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatasetUpdateResponse& DatasetUpdateResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetUpdateResponse();
  return *internal_default_instance();
}

DatasetUpdateResponse* DatasetUpdateResponse::New(::google::protobuf::Arena* arena) const {
  DatasetUpdateResponse* n = new DatasetUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatasetUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool DatasetUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  return false;
#undef DO_
}

void DatasetUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
}

::google::protobuf::uint8* DatasetUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  return target;
}

size_t DatasetUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Dataset resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatasetUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatasetUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
    MergeFrom(*source);
  }
}

void DatasetUpdateResponse::MergeFrom(const DatasetUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Dataset::MergeFrom(from.resource());
  }
}

void DatasetUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetUpdateResponse::CopyFrom(const DatasetUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.DatasetUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetUpdateResponse::IsInitialized() const {
  return true;
}

void DatasetUpdateResponse::Swap(DatasetUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatasetUpdateResponse::InternalSwap(DatasetUpdateResponse* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatasetUpdateResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobInsertRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobInsertRequest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Job*>(
      ::google::cloud::bigquery::logging::v1::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobInsertRequest::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobInsertRequest::JobInsertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobInsertRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobInsertRequest)
}
JobInsertRequest::JobInsertRequest(const JobInsertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Job(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobInsertRequest)
}

void JobInsertRequest::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

JobInsertRequest::~JobInsertRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobInsertRequest)
  SharedDtor();
}

void JobInsertRequest::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void JobInsertRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobInsertRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobInsertRequest& JobInsertRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobInsertRequest();
  return *internal_default_instance();
}

JobInsertRequest* JobInsertRequest::New(::google::protobuf::Arena* arena) const {
  JobInsertRequest* n = new JobInsertRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobInsertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool JobInsertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Job resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobInsertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobInsertRequest)
  return false;
#undef DO_
}

void JobInsertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Job resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobInsertRequest)
}

::google::protobuf::uint8* JobInsertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Job resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobInsertRequest)
  return target;
}

size_t JobInsertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Job resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobInsertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JobInsertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobInsertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobInsertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobInsertRequest)
    MergeFrom(*source);
  }
}

void JobInsertRequest::MergeFrom(const JobInsertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Job::MergeFrom(from.resource());
  }
}

void JobInsertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobInsertRequest::CopyFrom(const JobInsertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobInsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobInsertRequest::IsInitialized() const {
  return true;
}

void JobInsertRequest::Swap(JobInsertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobInsertRequest::InternalSwap(JobInsertRequest* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobInsertRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobInsertResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobInsertResponse_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::bigquery::logging::v1::Job*>(
      ::google::cloud::bigquery::logging::v1::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobInsertResponse::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobInsertResponse::JobInsertResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobInsertResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobInsertResponse)
}
JobInsertResponse::JobInsertResponse(const JobInsertResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::google::cloud::bigquery::logging::v1::Job(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobInsertResponse)
}

void JobInsertResponse::SharedCtor() {
  resource_ = NULL;
  _cached_size_ = 0;
}

JobInsertResponse::~JobInsertResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobInsertResponse)
  SharedDtor();
}

void JobInsertResponse::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void JobInsertResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobInsertResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobInsertResponse& JobInsertResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobInsertResponse();
  return *internal_default_instance();
}

JobInsertResponse* JobInsertResponse::New(::google::protobuf::Arena* arena) const {
  JobInsertResponse* n = new JobInsertResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobInsertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool JobInsertResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Job resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobInsertResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobInsertResponse)
  return false;
#undef DO_
}

void JobInsertResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Job resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobInsertResponse)
}

::google::protobuf::uint8* JobInsertResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Job resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resource_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobInsertResponse)
  return target;
}

size_t JobInsertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Job resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobInsertResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JobInsertResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobInsertResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobInsertResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobInsertResponse)
    MergeFrom(*source);
  }
}

void JobInsertResponse::MergeFrom(const JobInsertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::google::cloud::bigquery::logging::v1::Job::MergeFrom(from.resource());
  }
}

void JobInsertResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobInsertResponse::CopyFrom(const JobInsertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobInsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobInsertResponse::IsInitialized() const {
  return true;
}

void JobInsertResponse::Swap(JobInsertResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobInsertResponse::InternalSwap(JobInsertResponse* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobInsertResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobQueryRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobQueryRequest_default_instance_._instance.get_mutable()->default_dataset_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetName*>(
      ::google::cloud::bigquery::logging::v1::DatasetName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobQueryRequest::kQueryFieldNumber;
const int JobQueryRequest::kMaxResultsFieldNumber;
const int JobQueryRequest::kDefaultDatasetFieldNumber;
const int JobQueryRequest::kProjectIdFieldNumber;
const int JobQueryRequest::kDryRunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobQueryRequest::JobQueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobQueryRequest)
}
JobQueryRequest::JobQueryRequest(const JobQueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_default_dataset()) {
    default_dataset_ = new ::google::cloud::bigquery::logging::v1::DatasetName(*from.default_dataset_);
  } else {
    default_dataset_ = NULL;
  }
  ::memcpy(&max_results_, &from.max_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&dry_run_) -
    reinterpret_cast<char*>(&max_results_)) + sizeof(dry_run_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobQueryRequest)
}

void JobQueryRequest::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&default_dataset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dry_run_) -
      reinterpret_cast<char*>(&default_dataset_)) + sizeof(dry_run_));
  _cached_size_ = 0;
}

JobQueryRequest::~JobQueryRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobQueryRequest)
  SharedDtor();
}

void JobQueryRequest::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_dataset_;
}

void JobQueryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobQueryRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobQueryRequest& JobQueryRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryRequest();
  return *internal_default_instance();
}

JobQueryRequest* JobQueryRequest::New(::google::protobuf::Arena* arena) const {
  JobQueryRequest* n = new JobQueryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && default_dataset_ != NULL) {
    delete default_dataset_;
  }
  default_dataset_ = NULL;
  ::memset(&max_results_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dry_run_) -
      reinterpret_cast<char*>(&max_results_)) + sizeof(dry_run_));
  _internal_metadata_.Clear();
}

bool JobQueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobQueryRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_dataset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobQueryRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dry_run = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dry_run_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobQueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobQueryRequest)
  return false;
#undef DO_
}

void JobQueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobQueryRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 max_results = 2;
  if (this->max_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_results(), output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 3;
  if (this->has_default_dataset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->default_dataset_, output);
  }

  // string project_id = 4;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobQueryRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->project_id(), output);
  }

  // bool dry_run = 5;
  if (this->dry_run() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dry_run(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobQueryRequest)
}

::google::protobuf::uint8* JobQueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobQueryRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 max_results = 2;
  if (this->max_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_results(), target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 3;
  if (this->has_default_dataset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->default_dataset_, deterministic, target);
  }

  // string project_id = 4;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobQueryRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->project_id(), target);
  }

  // bool dry_run = 5;
  if (this->dry_run() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dry_run(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobQueryRequest)
  return target;
}

size_t JobQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // string project_id = 4;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 3;
  if (this->has_default_dataset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->default_dataset_);
  }

  // uint32 max_results = 2;
  if (this->max_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_results());
  }

  // bool dry_run = 5;
  if (this->dry_run() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobQueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JobQueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobQueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobQueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobQueryRequest)
    MergeFrom(*source);
  }
}

void JobQueryRequest::MergeFrom(const JobQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_default_dataset()) {
    mutable_default_dataset()->::google::cloud::bigquery::logging::v1::DatasetName::MergeFrom(from.default_dataset());
  }
  if (from.max_results() != 0) {
    set_max_results(from.max_results());
  }
  if (from.dry_run() != 0) {
    set_dry_run(from.dry_run());
  }
}

void JobQueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobQueryRequest::CopyFrom(const JobQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobQueryRequest::IsInitialized() const {
  return true;
}

void JobQueryRequest::Swap(JobQueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobQueryRequest::InternalSwap(JobQueryRequest* other) {
  using std::swap;
  query_.Swap(&other->query_);
  project_id_.Swap(&other->project_id_);
  swap(default_dataset_, other->default_dataset_);
  swap(max_results_, other->max_results_);
  swap(dry_run_, other->dry_run_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobQueryRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobQueryResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobQueryResponse_default_instance_._instance.get_mutable()->job_ = const_cast< ::google::cloud::bigquery::logging::v1::Job*>(
      ::google::cloud::bigquery::logging::v1::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobQueryResponse::kTotalResultsFieldNumber;
const int JobQueryResponse::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobQueryResponse::JobQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobQueryResponse)
}
JobQueryResponse::JobQueryResponse(const JobQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job()) {
    job_ = new ::google::cloud::bigquery::logging::v1::Job(*from.job_);
  } else {
    job_ = NULL;
  }
  total_results_ = from.total_results_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobQueryResponse)
}

void JobQueryResponse::SharedCtor() {
  ::memset(&job_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_results_) -
      reinterpret_cast<char*>(&job_)) + sizeof(total_results_));
  _cached_size_ = 0;
}

JobQueryResponse::~JobQueryResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobQueryResponse)
  SharedDtor();
}

void JobQueryResponse::SharedDtor() {
  if (this != internal_default_instance()) delete job_;
}

void JobQueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobQueryResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobQueryResponse& JobQueryResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryResponse();
  return *internal_default_instance();
}

JobQueryResponse* JobQueryResponse::New(::google::protobuf::Arena* arena) const {
  JobQueryResponse* n = new JobQueryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
  total_results_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool JobQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 total_results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.Job job = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobQueryResponse)
  return false;
#undef DO_
}

void JobQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 total_results = 1;
  if (this->total_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->total_results(), output);
  }

  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobQueryResponse)
}

::google::protobuf::uint8* JobQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 total_results = 1;
  if (this->total_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->total_results(), target);
  }

  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->job_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobQueryResponse)
  return target;
}

size_t JobQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_);
  }

  // uint64 total_results = 1;
  if (this->total_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JobQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobQueryResponse)
    MergeFrom(*source);
  }
}

void JobQueryResponse::MergeFrom(const JobQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job()) {
    mutable_job()->::google::cloud::bigquery::logging::v1::Job::MergeFrom(from.job());
  }
  if (from.total_results() != 0) {
    set_total_results(from.total_results());
  }
}

void JobQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobQueryResponse::CopyFrom(const JobQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobQueryResponse::IsInitialized() const {
  return true;
}

void JobQueryResponse::Swap(JobQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobQueryResponse::InternalSwap(JobQueryResponse* other) {
  using std::swap;
  swap(job_, other->job_);
  swap(total_results_, other->total_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobQueryResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobGetQueryResultsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobGetQueryResultsRequest::kMaxResultsFieldNumber;
const int JobGetQueryResultsRequest::kStartRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobGetQueryResultsRequest::JobGetQueryResultsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobGetQueryResultsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
}
JobGetQueryResultsRequest::JobGetQueryResultsRequest(const JobGetQueryResultsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_row_, &from.start_row_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_results_) -
    reinterpret_cast<char*>(&start_row_)) + sizeof(max_results_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
}

void JobGetQueryResultsRequest::SharedCtor() {
  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_results_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(max_results_));
  _cached_size_ = 0;
}

JobGetQueryResultsRequest::~JobGetQueryResultsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  SharedDtor();
}

void JobGetQueryResultsRequest::SharedDtor() {
}

void JobGetQueryResultsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobGetQueryResultsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobGetQueryResultsRequest& JobGetQueryResultsRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobGetQueryResultsRequest();
  return *internal_default_instance();
}

JobGetQueryResultsRequest* JobGetQueryResultsRequest::New(::google::protobuf::Arena* arena) const {
  JobGetQueryResultsRequest* n = new JobGetQueryResultsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobGetQueryResultsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_results_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(max_results_));
  _internal_metadata_.Clear();
}

bool JobGetQueryResultsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 max_results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  return false;
#undef DO_
}

void JobGetQueryResultsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_results = 1;
  if (this->max_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_results(), output);
  }

  // uint64 start_row = 2;
  if (this->start_row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_row(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
}

::google::protobuf::uint8* JobGetQueryResultsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_results = 1;
  if (this->max_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_results(), target);
  }

  // uint64 start_row = 2;
  if (this->start_row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_row(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  return target;
}

size_t JobGetQueryResultsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 start_row = 2;
  if (this->start_row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_row());
  }

  // uint32 max_results = 1;
  if (this->max_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobGetQueryResultsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JobGetQueryResultsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobGetQueryResultsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
    MergeFrom(*source);
  }
}

void JobGetQueryResultsRequest::MergeFrom(const JobGetQueryResultsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_row() != 0) {
    set_start_row(from.start_row());
  }
  if (from.max_results() != 0) {
    set_max_results(from.max_results());
  }
}

void JobGetQueryResultsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobGetQueryResultsRequest::CopyFrom(const JobGetQueryResultsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobGetQueryResultsRequest::IsInitialized() const {
  return true;
}

void JobGetQueryResultsRequest::Swap(JobGetQueryResultsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobGetQueryResultsRequest::InternalSwap(JobGetQueryResultsRequest* other) {
  using std::swap;
  swap(start_row_, other->start_row_);
  swap(max_results_, other->max_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobGetQueryResultsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobGetQueryResultsResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobGetQueryResultsResponse_default_instance_._instance.get_mutable()->job_ = const_cast< ::google::cloud::bigquery::logging::v1::Job*>(
      ::google::cloud::bigquery::logging::v1::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobGetQueryResultsResponse::kTotalResultsFieldNumber;
const int JobGetQueryResultsResponse::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobGetQueryResultsResponse::JobGetQueryResultsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobGetQueryResultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
}
JobGetQueryResultsResponse::JobGetQueryResultsResponse(const JobGetQueryResultsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job()) {
    job_ = new ::google::cloud::bigquery::logging::v1::Job(*from.job_);
  } else {
    job_ = NULL;
  }
  total_results_ = from.total_results_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
}

void JobGetQueryResultsResponse::SharedCtor() {
  ::memset(&job_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_results_) -
      reinterpret_cast<char*>(&job_)) + sizeof(total_results_));
  _cached_size_ = 0;
}

JobGetQueryResultsResponse::~JobGetQueryResultsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  SharedDtor();
}

void JobGetQueryResultsResponse::SharedDtor() {
  if (this != internal_default_instance()) delete job_;
}

void JobGetQueryResultsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobGetQueryResultsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobGetQueryResultsResponse& JobGetQueryResultsResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobGetQueryResultsResponse();
  return *internal_default_instance();
}

JobGetQueryResultsResponse* JobGetQueryResultsResponse::New(::google::protobuf::Arena* arena) const {
  JobGetQueryResultsResponse* n = new JobGetQueryResultsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobGetQueryResultsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
  total_results_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool JobGetQueryResultsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 total_results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.Job job = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  return false;
#undef DO_
}

void JobGetQueryResultsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 total_results = 1;
  if (this->total_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->total_results(), output);
  }

  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
}

::google::protobuf::uint8* JobGetQueryResultsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 total_results = 1;
  if (this->total_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->total_results(), target);
  }

  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->job_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  return target;
}

size_t JobGetQueryResultsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_);
  }

  // uint64 total_results = 1;
  if (this->total_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobGetQueryResultsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JobGetQueryResultsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobGetQueryResultsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
    MergeFrom(*source);
  }
}

void JobGetQueryResultsResponse::MergeFrom(const JobGetQueryResultsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job()) {
    mutable_job()->::google::cloud::bigquery::logging::v1::Job::MergeFrom(from.job());
  }
  if (from.total_results() != 0) {
    set_total_results(from.total_results());
  }
}

void JobGetQueryResultsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobGetQueryResultsResponse::CopyFrom(const JobGetQueryResultsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobGetQueryResultsResponse::IsInitialized() const {
  return true;
}

void JobGetQueryResultsResponse::Swap(JobGetQueryResultsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobGetQueryResultsResponse::InternalSwap(JobGetQueryResultsResponse* other) {
  using std::swap;
  swap(job_, other->job_);
  swap(total_results_, other->total_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobGetQueryResultsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobQueryDoneResponse::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobQueryDoneResponse_default_instance_._instance.get_mutable()->job_ = const_cast< ::google::cloud::bigquery::logging::v1::Job*>(
      ::google::cloud::bigquery::logging::v1::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobQueryDoneResponse::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobQueryDoneResponse::JobQueryDoneResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryDoneResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
}
JobQueryDoneResponse::JobQueryDoneResponse(const JobQueryDoneResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job()) {
    job_ = new ::google::cloud::bigquery::logging::v1::Job(*from.job_);
  } else {
    job_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
}

void JobQueryDoneResponse::SharedCtor() {
  job_ = NULL;
  _cached_size_ = 0;
}

JobQueryDoneResponse::~JobQueryDoneResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  SharedDtor();
}

void JobQueryDoneResponse::SharedDtor() {
  if (this != internal_default_instance()) delete job_;
}

void JobQueryDoneResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobQueryDoneResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobQueryDoneResponse& JobQueryDoneResponse::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobQueryDoneResponse();
  return *internal_default_instance();
}

JobQueryDoneResponse* JobQueryDoneResponse::New(::google::protobuf::Arena* arena) const {
  JobQueryDoneResponse* n = new JobQueryDoneResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobQueryDoneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
  _internal_metadata_.Clear();
}

bool JobQueryDoneResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.Job job = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  return false;
#undef DO_
}

void JobQueryDoneResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Job job = 1;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->job_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
}

::google::protobuf::uint8* JobQueryDoneResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.Job job = 1;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->job_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  return target;
}

size_t JobQueryDoneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.Job job = 1;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobQueryDoneResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JobQueryDoneResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobQueryDoneResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
    MergeFrom(*source);
  }
}

void JobQueryDoneResponse::MergeFrom(const JobQueryDoneResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job()) {
    mutable_job()->::google::cloud::bigquery::logging::v1::Job::MergeFrom(from.job());
  }
}

void JobQueryDoneResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobQueryDoneResponse::CopyFrom(const JobQueryDoneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobQueryDoneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobQueryDoneResponse::IsInitialized() const {
  return true;
}

void JobQueryDoneResponse::Swap(JobQueryDoneResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobQueryDoneResponse::InternalSwap(JobQueryDoneResponse* other) {
  using std::swap;
  swap(job_, other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobQueryDoneResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobCompletedEvent::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobCompletedEvent_default_instance_._instance.get_mutable()->job_ = const_cast< ::google::cloud::bigquery::logging::v1::Job*>(
      ::google::cloud::bigquery::logging::v1::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobCompletedEvent::kEventNameFieldNumber;
const int JobCompletedEvent::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobCompletedEvent::JobCompletedEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobCompletedEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobCompletedEvent)
}
JobCompletedEvent::JobCompletedEvent(const JobCompletedEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_name().size() > 0) {
    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  if (from.has_job()) {
    job_ = new ::google::cloud::bigquery::logging::v1::Job(*from.job_);
  } else {
    job_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobCompletedEvent)
}

void JobCompletedEvent::SharedCtor() {
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_ = NULL;
  _cached_size_ = 0;
}

JobCompletedEvent::~JobCompletedEvent() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  SharedDtor();
}

void JobCompletedEvent::SharedDtor() {
  event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete job_;
}

void JobCompletedEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobCompletedEvent::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobCompletedEvent& JobCompletedEvent::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobCompletedEvent();
  return *internal_default_instance();
}

JobCompletedEvent* JobCompletedEvent::New(::google::protobuf::Arena* arena) const {
  JobCompletedEvent* n = new JobCompletedEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobCompletedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
  _internal_metadata_.Clear();
}

bool JobCompletedEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_name().data(), static_cast<int>(this->event_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobCompletedEvent.event_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.Job job = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  return false;
#undef DO_
}

void JobCompletedEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_name = 1;
  if (this->event_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobCompletedEvent.event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_name(), output);
  }

  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobCompletedEvent)
}

::google::protobuf::uint8* JobCompletedEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_name = 1;
  if (this->event_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobCompletedEvent.event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_name(), target);
  }

  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->job_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  return target;
}

size_t JobCompletedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string event_name = 1;
  if (this->event_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_name());
  }

  // .google.cloud.bigquery.logging.v1.Job job = 2;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobCompletedEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const JobCompletedEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobCompletedEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobCompletedEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobCompletedEvent)
    MergeFrom(*source);
  }
}

void JobCompletedEvent::MergeFrom(const JobCompletedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_name().size() > 0) {

    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  if (from.has_job()) {
    mutable_job()->::google::cloud::bigquery::logging::v1::Job::MergeFrom(from.job());
  }
}

void JobCompletedEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobCompletedEvent::CopyFrom(const JobCompletedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobCompletedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobCompletedEvent::IsInitialized() const {
  return true;
}

void JobCompletedEvent::Swap(JobCompletedEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobCompletedEvent::InternalSwap(JobCompletedEvent* other) {
  using std::swap;
  event_name_.Swap(&other->event_name_);
  swap(job_, other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobCompletedEvent::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableDataListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableDataListRequest::kStartRowFieldNumber;
const int TableDataListRequest::kMaxResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableDataListRequest::TableDataListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableDataListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableDataListRequest)
}
TableDataListRequest::TableDataListRequest(const TableDataListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_row_, &from.start_row_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_results_) -
    reinterpret_cast<char*>(&start_row_)) + sizeof(max_results_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableDataListRequest)
}

void TableDataListRequest::SharedCtor() {
  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_results_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(max_results_));
  _cached_size_ = 0;
}

TableDataListRequest::~TableDataListRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableDataListRequest)
  SharedDtor();
}

void TableDataListRequest::SharedDtor() {
}

void TableDataListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableDataListRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableDataListRequest& TableDataListRequest::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableDataListRequest();
  return *internal_default_instance();
}

TableDataListRequest* TableDataListRequest::New(::google::protobuf::Arena* arena) const {
  TableDataListRequest* n = new TableDataListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableDataListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_results_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(max_results_));
  _internal_metadata_.Clear();
}

bool TableDataListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 start_row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableDataListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableDataListRequest)
  return false;
#undef DO_
}

void TableDataListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 start_row = 1;
  if (this->start_row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_row(), output);
  }

  // uint32 max_results = 2;
  if (this->max_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_results(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableDataListRequest)
}

::google::protobuf::uint8* TableDataListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 start_row = 1;
  if (this->start_row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_row(), target);
  }

  // uint32 max_results = 2;
  if (this->max_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_results(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableDataListRequest)
  return target;
}

size_t TableDataListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 start_row = 1;
  if (this->start_row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_row());
  }

  // uint32 max_results = 2;
  if (this->max_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableDataListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TableDataListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableDataListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableDataListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableDataListRequest)
    MergeFrom(*source);
  }
}

void TableDataListRequest::MergeFrom(const TableDataListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_row() != 0) {
    set_start_row(from.start_row());
  }
  if (from.max_results() != 0) {
    set_max_results(from.max_results());
  }
}

void TableDataListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableDataListRequest::CopyFrom(const TableDataListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableDataListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableDataListRequest::IsInitialized() const {
  return true;
}

void TableDataListRequest::Swap(TableDataListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableDataListRequest::InternalSwap(TableDataListRequest* other) {
  using std::swap;
  swap(start_row_, other->start_row_);
  swap(max_results_, other->max_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableDataListRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Table::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_Table_default_instance_._instance.get_mutable()->table_name_ = const_cast< ::google::cloud::bigquery::logging::v1::TableName*>(
      ::google::cloud::bigquery::logging::v1::TableName::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Table_default_instance_._instance.get_mutable()->info_ = const_cast< ::google::cloud::bigquery::logging::v1::TableInfo*>(
      ::google::cloud::bigquery::logging::v1::TableInfo::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Table_default_instance_._instance.get_mutable()->view_ = const_cast< ::google::cloud::bigquery::logging::v1::TableViewDefinition*>(
      ::google::cloud::bigquery::logging::v1::TableViewDefinition::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Table_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Table_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Table_default_instance_._instance.get_mutable()->truncate_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Table::clear_expire_time() {
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
}
void Table::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Table::clear_truncate_time() {
  if (GetArenaNoVirtual() == NULL && truncate_time_ != NULL) {
    delete truncate_time_;
  }
  truncate_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Table::kTableNameFieldNumber;
const int Table::kInfoFieldNumber;
const int Table::kSchemaJsonFieldNumber;
const int Table::kViewFieldNumber;
const int Table::kExpireTimeFieldNumber;
const int Table::kCreateTimeFieldNumber;
const int Table::kTruncateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Table::Table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.Table)
}
Table::Table(const Table& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schema_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.schema_json().size() > 0) {
    schema_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_json_);
  }
  if (from.has_table_name()) {
    table_name_ = new ::google::cloud::bigquery::logging::v1::TableName(*from.table_name_);
  } else {
    table_name_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::google::cloud::bigquery::logging::v1::TableInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  if (from.has_view()) {
    view_ = new ::google::cloud::bigquery::logging::v1::TableViewDefinition(*from.view_);
  } else {
    view_ = NULL;
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = NULL;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_truncate_time()) {
    truncate_time_ = new ::google::protobuf::Timestamp(*from.truncate_time_);
  } else {
    truncate_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.Table)
}

void Table::SharedCtor() {
  schema_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truncate_time_) -
      reinterpret_cast<char*>(&table_name_)) + sizeof(truncate_time_));
  _cached_size_ = 0;
}

Table::~Table() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.Table)
  SharedDtor();
}

void Table::SharedDtor() {
  schema_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_name_;
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete view_;
  if (this != internal_default_instance()) delete expire_time_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete truncate_time_;
}

void Table::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Table::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Table& Table::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTable();
  return *internal_default_instance();
}

Table* Table::New(::google::protobuf::Arena* arena) const {
  Table* n = new Table;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Table::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schema_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && table_name_ != NULL) {
    delete table_name_;
  }
  table_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  if (GetArenaNoVirtual() == NULL && view_ != NULL) {
    delete view_;
  }
  view_ = NULL;
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && truncate_time_ != NULL) {
    delete truncate_time_;
  }
  truncate_time_ = NULL;
  _internal_metadata_.Clear();
}

bool Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.Table)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.TableName table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp truncate_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_truncate_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string schema_json = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schema_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->schema_json().data(), static_cast<int>(this->schema_json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.Table.schema_json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.Table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.Table)
  return false;
#undef DO_
}

void Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.TableName table_name = 1;
  if (this->has_table_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->table_name_, output);
  }

  // .google.cloud.bigquery.logging.v1.TableInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;
  if (this->has_view()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->view_, output);
  }

  // .google.protobuf.Timestamp expire_time = 5;
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->expire_time_, output);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->create_time_, output);
  }

  // .google.protobuf.Timestamp truncate_time = 7;
  if (this->has_truncate_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->truncate_time_, output);
  }

  // string schema_json = 8;
  if (this->schema_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schema_json().data(), static_cast<int>(this->schema_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.Table.schema_json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->schema_json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.Table)
}

::google::protobuf::uint8* Table::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.TableName table_name = 1;
  if (this->has_table_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->table_name_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.TableInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->info_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;
  if (this->has_view()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->view_, deterministic, target);
  }

  // .google.protobuf.Timestamp expire_time = 5;
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->expire_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->create_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp truncate_time = 7;
  if (this->has_truncate_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->truncate_time_, deterministic, target);
  }

  // string schema_json = 8;
  if (this->schema_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schema_json().data(), static_cast<int>(this->schema_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.Table.schema_json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->schema_json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.Table)
  return target;
}

size_t Table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.Table)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string schema_json = 8;
  if (this->schema_json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->schema_json());
  }

  // .google.cloud.bigquery.logging.v1.TableName table_name = 1;
  if (this->has_table_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->table_name_);
  }

  // .google.cloud.bigquery.logging.v1.TableInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;
  if (this->has_view()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->view_);
  }

  // .google.protobuf.Timestamp expire_time = 5;
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->expire_time_);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->create_time_);
  }

  // .google.protobuf.Timestamp truncate_time = 7;
  if (this->has_truncate_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->truncate_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.Table)
  GOOGLE_DCHECK_NE(&from, this);
  const Table* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.Table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.Table)
    MergeFrom(*source);
  }
}

void Table::MergeFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.Table)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.schema_json().size() > 0) {

    schema_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_json_);
  }
  if (from.has_table_name()) {
    mutable_table_name()->::google::cloud::bigquery::logging::v1::TableName::MergeFrom(from.table_name());
  }
  if (from.has_info()) {
    mutable_info()->::google::cloud::bigquery::logging::v1::TableInfo::MergeFrom(from.info());
  }
  if (from.has_view()) {
    mutable_view()->::google::cloud::bigquery::logging::v1::TableViewDefinition::MergeFrom(from.view());
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_truncate_time()) {
    mutable_truncate_time()->::google::protobuf::Timestamp::MergeFrom(from.truncate_time());
  }
}

void Table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Table::CopyFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Table::IsInitialized() const {
  return true;
}

void Table::Swap(Table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Table::InternalSwap(Table* other) {
  using std::swap;
  schema_json_.Swap(&other->schema_json_);
  swap(table_name_, other->table_name_);
  swap(info_, other->info_);
  swap(view_, other->view_);
  swap(expire_time_, other->expire_time_);
  swap(create_time_, other->create_time_);
  swap(truncate_time_, other->truncate_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Table::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableInfo::kFriendlyNameFieldNumber;
const int TableInfo::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableInfo::TableInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableInfo)
}
TableInfo::TableInfo(const TableInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friendly_name().size() > 0) {
    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableInfo)
}

void TableInfo::SharedCtor() {
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TableInfo::~TableInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableInfo)
  SharedDtor();
}

void TableInfo::SharedDtor() {
  friendly_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableInfo::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableInfo& TableInfo::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableInfo();
  return *internal_default_instance();
}

TableInfo* TableInfo::New(::google::protobuf::Arena* arena) const {
  TableInfo* n = new TableInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendly_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TableInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string friendly_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friendly_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableInfo.friendly_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableInfo.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableInfo)
  return false;
#undef DO_
}

void TableInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string friendly_name = 1;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableInfo.friendly_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->friendly_name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableInfo)
}

::google::protobuf::uint8* TableInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string friendly_name = 1;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableInfo.friendly_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->friendly_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableInfo)
  return target;
}

size_t TableInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friendly_name = 1;
  if (this->friendly_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friendly_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TableInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableInfo)
    MergeFrom(*source);
  }
}

void TableInfo::MergeFrom(const TableInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friendly_name().size() > 0) {

    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void TableInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInfo::CopyFrom(const TableInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInfo::IsInitialized() const {
  return true;
}

void TableInfo::Swap(TableInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableInfo::InternalSwap(TableInfo* other) {
  using std::swap;
  friendly_name_.Swap(&other->friendly_name_);
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableInfo::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableViewDefinition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableViewDefinition::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableViewDefinition::TableViewDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableViewDefinition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableViewDefinition)
}
TableViewDefinition::TableViewDefinition(const TableViewDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableViewDefinition)
}

void TableViewDefinition::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TableViewDefinition::~TableViewDefinition() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableViewDefinition)
  SharedDtor();
}

void TableViewDefinition::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableViewDefinition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableViewDefinition::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableViewDefinition& TableViewDefinition::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableViewDefinition();
  return *internal_default_instance();
}

TableViewDefinition* TableViewDefinition::New(::google::protobuf::Arena* arena) const {
  TableViewDefinition* n = new TableViewDefinition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableViewDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TableViewDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableViewDefinition.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableViewDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableViewDefinition)
  return false;
#undef DO_
}

void TableViewDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableViewDefinition.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableViewDefinition)
}

::google::protobuf::uint8* TableViewDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableViewDefinition.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableViewDefinition)
  return target;
}

size_t TableViewDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableViewDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const TableViewDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableViewDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableViewDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableViewDefinition)
    MergeFrom(*source);
  }
}

void TableViewDefinition::MergeFrom(const TableViewDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void TableViewDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableViewDefinition::CopyFrom(const TableViewDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableViewDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableViewDefinition::IsInitialized() const {
  return true;
}

void TableViewDefinition::Swap(TableViewDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableViewDefinition::InternalSwap(TableViewDefinition* other) {
  using std::swap;
  query_.Swap(&other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableViewDefinition::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dataset::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_Dataset_default_instance_._instance.get_mutable()->dataset_name_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetName*>(
      ::google::cloud::bigquery::logging::v1::DatasetName::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Dataset_default_instance_._instance.get_mutable()->info_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetInfo*>(
      ::google::cloud::bigquery::logging::v1::DatasetInfo::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Dataset_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Dataset_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Dataset_default_instance_._instance.get_mutable()->acl_ = const_cast< ::google::cloud::bigquery::logging::v1::BigQueryAcl*>(
      ::google::cloud::bigquery::logging::v1::BigQueryAcl::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Dataset_default_instance_._instance.get_mutable()->default_table_expire_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void Dataset::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Dataset::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
void Dataset::clear_default_table_expire_duration() {
  if (GetArenaNoVirtual() == NULL && default_table_expire_duration_ != NULL) {
    delete default_table_expire_duration_;
  }
  default_table_expire_duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dataset::kDatasetNameFieldNumber;
const int Dataset::kInfoFieldNumber;
const int Dataset::kCreateTimeFieldNumber;
const int Dataset::kUpdateTimeFieldNumber;
const int Dataset::kAclFieldNumber;
const int Dataset::kDefaultTableExpireDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dataset::Dataset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDataset();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.Dataset)
}
Dataset::Dataset(const Dataset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dataset_name()) {
    dataset_name_ = new ::google::cloud::bigquery::logging::v1::DatasetName(*from.dataset_name_);
  } else {
    dataset_name_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::google::cloud::bigquery::logging::v1::DatasetInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  if (from.has_acl()) {
    acl_ = new ::google::cloud::bigquery::logging::v1::BigQueryAcl(*from.acl_);
  } else {
    acl_ = NULL;
  }
  if (from.has_default_table_expire_duration()) {
    default_table_expire_duration_ = new ::google::protobuf::Duration(*from.default_table_expire_duration_);
  } else {
    default_table_expire_duration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.Dataset)
}

void Dataset::SharedCtor() {
  ::memset(&dataset_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_table_expire_duration_) -
      reinterpret_cast<char*>(&dataset_name_)) + sizeof(default_table_expire_duration_));
  _cached_size_ = 0;
}

Dataset::~Dataset() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.Dataset)
  SharedDtor();
}

void Dataset::SharedDtor() {
  if (this != internal_default_instance()) delete dataset_name_;
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (this != internal_default_instance()) delete acl_;
  if (this != internal_default_instance()) delete default_table_expire_duration_;
}

void Dataset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dataset::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dataset& Dataset::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDataset();
  return *internal_default_instance();
}

Dataset* Dataset::New(::google::protobuf::Arena* arena) const {
  Dataset* n = new Dataset;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dataset::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.Dataset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dataset_name_ != NULL) {
    delete dataset_name_;
  }
  dataset_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && acl_ != NULL) {
    delete acl_;
  }
  acl_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_table_expire_duration_ != NULL) {
    delete default_table_expire_duration_;
  }
  default_table_expire_duration_ = NULL;
  _internal_metadata_.Clear();
}

bool Dataset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.Dataset)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dataset_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration default_table_expire_duration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_table_expire_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.Dataset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.Dataset)
  return false;
#undef DO_
}

void Dataset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.Dataset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;
  if (this->has_dataset_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dataset_name_, output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->create_time_, output);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->update_time_, output);
  }

  // .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;
  if (this->has_acl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->acl_, output);
  }

  // .google.protobuf.Duration default_table_expire_duration = 8;
  if (this->has_default_table_expire_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->default_table_expire_duration_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.Dataset)
}

::google::protobuf::uint8* Dataset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.Dataset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;
  if (this->has_dataset_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->dataset_name_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->info_, deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->create_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->update_time_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;
  if (this->has_acl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->acl_, deterministic, target);
  }

  // .google.protobuf.Duration default_table_expire_duration = 8;
  if (this->has_default_table_expire_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->default_table_expire_duration_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.Dataset)
  return target;
}

size_t Dataset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.Dataset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;
  if (this->has_dataset_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dataset_name_);
  }

  // .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_time_);
  }

  // .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;
  if (this->has_acl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_);
  }

  // .google.protobuf.Duration default_table_expire_duration = 8;
  if (this->has_default_table_expire_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->default_table_expire_duration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dataset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.Dataset)
  GOOGLE_DCHECK_NE(&from, this);
  const Dataset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dataset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.Dataset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.Dataset)
    MergeFrom(*source);
  }
}

void Dataset::MergeFrom(const Dataset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.Dataset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dataset_name()) {
    mutable_dataset_name()->::google::cloud::bigquery::logging::v1::DatasetName::MergeFrom(from.dataset_name());
  }
  if (from.has_info()) {
    mutable_info()->::google::cloud::bigquery::logging::v1::DatasetInfo::MergeFrom(from.info());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.has_acl()) {
    mutable_acl()->::google::cloud::bigquery::logging::v1::BigQueryAcl::MergeFrom(from.acl());
  }
  if (from.has_default_table_expire_duration()) {
    mutable_default_table_expire_duration()->::google::protobuf::Duration::MergeFrom(from.default_table_expire_duration());
  }
}

void Dataset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.Dataset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dataset::CopyFrom(const Dataset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.Dataset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dataset::IsInitialized() const {
  return true;
}

void Dataset::Swap(Dataset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dataset::InternalSwap(Dataset* other) {
  using std::swap;
  swap(dataset_name_, other->dataset_name_);
  swap(info_, other->info_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(acl_, other->acl_);
  swap(default_table_expire_duration_, other->default_table_expire_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Dataset::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatasetInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatasetInfo::kFriendlyNameFieldNumber;
const int DatasetInfo::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatasetInfo::DatasetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.DatasetInfo)
}
DatasetInfo::DatasetInfo(const DatasetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friendly_name().size() > 0) {
    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.DatasetInfo)
}

void DatasetInfo::SharedCtor() {
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DatasetInfo::~DatasetInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.DatasetInfo)
  SharedDtor();
}

void DatasetInfo::SharedDtor() {
  friendly_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DatasetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatasetInfo::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatasetInfo& DatasetInfo::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetInfo();
  return *internal_default_instance();
}

DatasetInfo* DatasetInfo::New(::google::protobuf::Arena* arena) const {
  DatasetInfo* n = new DatasetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatasetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendly_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DatasetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string friendly_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friendly_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.DatasetInfo.friendly_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.DatasetInfo.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.DatasetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.DatasetInfo)
  return false;
#undef DO_
}

void DatasetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string friendly_name = 1;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetInfo.friendly_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->friendly_name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.DatasetInfo)
}

::google::protobuf::uint8* DatasetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string friendly_name = 1;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetInfo.friendly_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->friendly_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.DatasetInfo)
  return target;
}

size_t DatasetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friendly_name = 1;
  if (this->friendly_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friendly_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatasetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatasetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.DatasetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.DatasetInfo)
    MergeFrom(*source);
  }
}

void DatasetInfo::MergeFrom(const DatasetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friendly_name().size() > 0) {

    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void DatasetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetInfo::CopyFrom(const DatasetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.DatasetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetInfo::IsInitialized() const {
  return true;
}

void DatasetInfo::Swap(DatasetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatasetInfo::InternalSwap(DatasetInfo* other) {
  using std::swap;
  friendly_name_.Swap(&other->friendly_name_);
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatasetInfo::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BigQueryAcl_Entry::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_BigQueryAcl_Entry_default_instance_._instance.get_mutable()->view_name_ = const_cast< ::google::cloud::bigquery::logging::v1::TableName*>(
      ::google::cloud::bigquery::logging::v1::TableName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BigQueryAcl_Entry::kRoleFieldNumber;
const int BigQueryAcl_Entry::kGroupEmailFieldNumber;
const int BigQueryAcl_Entry::kUserEmailFieldNumber;
const int BigQueryAcl_Entry::kDomainFieldNumber;
const int BigQueryAcl_Entry::kSpecialGroupFieldNumber;
const int BigQueryAcl_Entry::kViewNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BigQueryAcl_Entry::BigQueryAcl_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsBigQueryAcl_Entry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
}
BigQueryAcl_Entry::BigQueryAcl_Entry(const BigQueryAcl_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  group_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_email().size() > 0) {
    group_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_email_);
  }
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_email().size() > 0) {
    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  special_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.special_group().size() > 0) {
    special_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.special_group_);
  }
  if (from.has_view_name()) {
    view_name_ = new ::google::cloud::bigquery::logging::v1::TableName(*from.view_name_);
  } else {
    view_name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
}

void BigQueryAcl_Entry::SharedCtor() {
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  special_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_name_ = NULL;
  _cached_size_ = 0;
}

BigQueryAcl_Entry::~BigQueryAcl_Entry() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  SharedDtor();
}

void BigQueryAcl_Entry::SharedDtor() {
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  special_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete view_name_;
}

void BigQueryAcl_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BigQueryAcl_Entry::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BigQueryAcl_Entry& BigQueryAcl_Entry::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsBigQueryAcl_Entry();
  return *internal_default_instance();
}

BigQueryAcl_Entry* BigQueryAcl_Entry::New(::google::protobuf::Arena* arena) const {
  BigQueryAcl_Entry* n = new BigQueryAcl_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BigQueryAcl_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  special_group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && view_name_ != NULL) {
    delete view_name_;
  }
  view_name_ = NULL;
  _internal_metadata_.Clear();
}

bool BigQueryAcl_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_email().data(), static_cast<int>(this->group_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.group_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_email().data(), static_cast<int>(this->user_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.user_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string special_group = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_special_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->special_group().data(), static_cast<int>(this->special_group().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.special_group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableName view_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  return false;
#undef DO_
}

void BigQueryAcl_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->role(), output);
  }

  // string group_email = 2;
  if (this->group_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_email().data(), static_cast<int>(this->group_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.group_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_email(), output);
  }

  // string user_email = 3;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.user_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_email(), output);
  }

  // string domain = 4;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain(), output);
  }

  // string special_group = 5;
  if (this->special_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->special_group().data(), static_cast<int>(this->special_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.special_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->special_group(), output);
  }

  // .google.cloud.bigquery.logging.v1.TableName view_name = 6;
  if (this->has_view_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->view_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
}

::google::protobuf::uint8* BigQueryAcl_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role(), target);
  }

  // string group_email = 2;
  if (this->group_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_email().data(), static_cast<int>(this->group_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.group_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_email(), target);
  }

  // string user_email = 3;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.user_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_email(), target);
  }

  // string domain = 4;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain(), target);
  }

  // string special_group = 5;
  if (this->special_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->special_group().data(), static_cast<int>(this->special_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.special_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->special_group(), target);
  }

  // .google.cloud.bigquery.logging.v1.TableName view_name = 6;
  if (this->has_view_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->view_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  return target;
}

size_t BigQueryAcl_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string role = 1;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  // string group_email = 2;
  if (this->group_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_email());
  }

  // string user_email = 3;
  if (this->user_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_email());
  }

  // string domain = 4;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string special_group = 5;
  if (this->special_group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->special_group());
  }

  // .google.cloud.bigquery.logging.v1.TableName view_name = 6;
  if (this->has_view_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->view_name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BigQueryAcl_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const BigQueryAcl_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BigQueryAcl_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
    MergeFrom(*source);
  }
}

void BigQueryAcl_Entry::MergeFrom(const BigQueryAcl_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  if (from.group_email().size() > 0) {

    group_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_email_);
  }
  if (from.user_email().size() > 0) {

    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.special_group().size() > 0) {

    special_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.special_group_);
  }
  if (from.has_view_name()) {
    mutable_view_name()->::google::cloud::bigquery::logging::v1::TableName::MergeFrom(from.view_name());
  }
}

void BigQueryAcl_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BigQueryAcl_Entry::CopyFrom(const BigQueryAcl_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BigQueryAcl_Entry::IsInitialized() const {
  return true;
}

void BigQueryAcl_Entry::Swap(BigQueryAcl_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BigQueryAcl_Entry::InternalSwap(BigQueryAcl_Entry* other) {
  using std::swap;
  role_.Swap(&other->role_);
  group_email_.Swap(&other->group_email_);
  user_email_.Swap(&other->user_email_);
  domain_.Swap(&other->domain_);
  special_group_.Swap(&other->special_group_);
  swap(view_name_, other->view_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BigQueryAcl_Entry::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BigQueryAcl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BigQueryAcl::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BigQueryAcl::BigQueryAcl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsBigQueryAcl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.BigQueryAcl)
}
BigQueryAcl::BigQueryAcl(const BigQueryAcl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.BigQueryAcl)
}

void BigQueryAcl::SharedCtor() {
  _cached_size_ = 0;
}

BigQueryAcl::~BigQueryAcl() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.BigQueryAcl)
  SharedDtor();
}

void BigQueryAcl::SharedDtor() {
}

void BigQueryAcl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BigQueryAcl::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BigQueryAcl& BigQueryAcl::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsBigQueryAcl();
  return *internal_default_instance();
}

BigQueryAcl* BigQueryAcl::New(::google::protobuf::Arena* arena) const {
  BigQueryAcl* n = new BigQueryAcl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BigQueryAcl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool BigQueryAcl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.bigquery.logging.v1.BigQueryAcl.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.BigQueryAcl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.BigQueryAcl)
  return false;
#undef DO_
}

void BigQueryAcl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.logging.v1.BigQueryAcl.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.BigQueryAcl)
}

::google::protobuf::uint8* BigQueryAcl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.logging.v1.BigQueryAcl.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.BigQueryAcl)
  return target;
}

size_t BigQueryAcl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.logging.v1.BigQueryAcl.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BigQueryAcl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  GOOGLE_DCHECK_NE(&from, this);
  const BigQueryAcl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BigQueryAcl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.BigQueryAcl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.BigQueryAcl)
    MergeFrom(*source);
  }
}

void BigQueryAcl::MergeFrom(const BigQueryAcl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void BigQueryAcl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BigQueryAcl::CopyFrom(const BigQueryAcl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.BigQueryAcl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BigQueryAcl::IsInitialized() const {
  return true;
}

void BigQueryAcl::Swap(BigQueryAcl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BigQueryAcl::InternalSwap(BigQueryAcl* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BigQueryAcl::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_Job_default_instance_._instance.get_mutable()->job_name_ = const_cast< ::google::cloud::bigquery::logging::v1::JobName*>(
      ::google::cloud::bigquery::logging::v1::JobName::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Job_default_instance_._instance.get_mutable()->job_configuration_ = const_cast< ::google::cloud::bigquery::logging::v1::JobConfiguration*>(
      ::google::cloud::bigquery::logging::v1::JobConfiguration::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Job_default_instance_._instance.get_mutable()->job_status_ = const_cast< ::google::cloud::bigquery::logging::v1::JobStatus*>(
      ::google::cloud::bigquery::logging::v1::JobStatus::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_Job_default_instance_._instance.get_mutable()->job_statistics_ = const_cast< ::google::cloud::bigquery::logging::v1::JobStatistics*>(
      ::google::cloud::bigquery::logging::v1::JobStatistics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job::kJobNameFieldNumber;
const int Job::kJobConfigurationFieldNumber;
const int Job::kJobStatusFieldNumber;
const int Job::kJobStatisticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job::Job()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.Job)
}
Job::Job(const Job& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job_name()) {
    job_name_ = new ::google::cloud::bigquery::logging::v1::JobName(*from.job_name_);
  } else {
    job_name_ = NULL;
  }
  if (from.has_job_configuration()) {
    job_configuration_ = new ::google::cloud::bigquery::logging::v1::JobConfiguration(*from.job_configuration_);
  } else {
    job_configuration_ = NULL;
  }
  if (from.has_job_status()) {
    job_status_ = new ::google::cloud::bigquery::logging::v1::JobStatus(*from.job_status_);
  } else {
    job_status_ = NULL;
  }
  if (from.has_job_statistics()) {
    job_statistics_ = new ::google::cloud::bigquery::logging::v1::JobStatistics(*from.job_statistics_);
  } else {
    job_statistics_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.Job)
}

void Job::SharedCtor() {
  ::memset(&job_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_statistics_) -
      reinterpret_cast<char*>(&job_name_)) + sizeof(job_statistics_));
  _cached_size_ = 0;
}

Job::~Job() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.Job)
  SharedDtor();
}

void Job::SharedDtor() {
  if (this != internal_default_instance()) delete job_name_;
  if (this != internal_default_instance()) delete job_configuration_;
  if (this != internal_default_instance()) delete job_status_;
  if (this != internal_default_instance()) delete job_statistics_;
}

void Job::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Job::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job& Job::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJob();
  return *internal_default_instance();
}

Job* Job::New(::google::protobuf::Arena* arena) const {
  Job* n = new Job;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_name_ != NULL) {
    delete job_name_;
  }
  job_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && job_configuration_ != NULL) {
    delete job_configuration_;
  }
  job_configuration_ = NULL;
  if (GetArenaNoVirtual() == NULL && job_status_ != NULL) {
    delete job_status_;
  }
  job_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && job_statistics_ != NULL) {
    delete job_statistics_;
  }
  job_statistics_ = NULL;
  _internal_metadata_.Clear();
}

bool Job::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.Job)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.JobName job_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobConfiguration job_configuration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobStatus job_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobStatistics job_statistics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job_statistics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.Job)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.Job)
  return false;
#undef DO_
}

void Job::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.JobName job_name = 1;
  if (this->has_job_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->job_name_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration job_configuration = 2;
  if (this->has_job_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_configuration_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobStatus job_status = 3;
  if (this->has_job_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->job_status_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobStatistics job_statistics = 4;
  if (this->has_job_statistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->job_statistics_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.Job)
}

::google::protobuf::uint8* Job::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.JobName job_name = 1;
  if (this->has_job_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->job_name_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration job_configuration = 2;
  if (this->has_job_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->job_configuration_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobStatus job_status = 3;
  if (this->has_job_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->job_status_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobStatistics job_statistics = 4;
  if (this->has_job_statistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->job_statistics_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.Job)
  return target;
}

size_t Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.Job)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.bigquery.logging.v1.JobName job_name = 1;
  if (this->has_job_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_name_);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration job_configuration = 2;
  if (this->has_job_configuration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_configuration_);
  }

  // .google.cloud.bigquery.logging.v1.JobStatus job_status = 3;
  if (this->has_job_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_status_);
  }

  // .google.cloud.bigquery.logging.v1.JobStatistics job_statistics = 4;
  if (this->has_job_statistics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_statistics_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Job::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.Job)
  GOOGLE_DCHECK_NE(&from, this);
  const Job* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.Job)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.Job)
    MergeFrom(*source);
  }
}

void Job::MergeFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.Job)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job_name()) {
    mutable_job_name()->::google::cloud::bigquery::logging::v1::JobName::MergeFrom(from.job_name());
  }
  if (from.has_job_configuration()) {
    mutable_job_configuration()->::google::cloud::bigquery::logging::v1::JobConfiguration::MergeFrom(from.job_configuration());
  }
  if (from.has_job_status()) {
    mutable_job_status()->::google::cloud::bigquery::logging::v1::JobStatus::MergeFrom(from.job_status());
  }
  if (from.has_job_statistics()) {
    mutable_job_statistics()->::google::cloud::bigquery::logging::v1::JobStatistics::MergeFrom(from.job_statistics());
  }
}

void Job::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job::IsInitialized() const {
  return true;
}

void Job::Swap(Job* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job::InternalSwap(Job* other) {
  using std::swap;
  swap(job_name_, other->job_name_);
  swap(job_configuration_, other->job_configuration_);
  swap(job_status_, other->job_status_);
  swap(job_statistics_, other->job_statistics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Job::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobConfiguration_Query::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_Query_default_instance_._instance.get_mutable()->destination_table_ = const_cast< ::google::cloud::bigquery::logging::v1::TableName*>(
      ::google::cloud::bigquery::logging::v1::TableName::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_Query_default_instance_._instance.get_mutable()->default_dataset_ = const_cast< ::google::cloud::bigquery::logging::v1::DatasetName*>(
      ::google::cloud::bigquery::logging::v1::DatasetName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobConfiguration_Query::kQueryFieldNumber;
const int JobConfiguration_Query::kDestinationTableFieldNumber;
const int JobConfiguration_Query::kCreateDispositionFieldNumber;
const int JobConfiguration_Query::kWriteDispositionFieldNumber;
const int JobConfiguration_Query::kDefaultDatasetFieldNumber;
const int JobConfiguration_Query::kTableDefinitionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobConfiguration_Query::JobConfiguration_Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Query();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
}
JobConfiguration_Query::JobConfiguration_Query(const JobConfiguration_Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      table_definitions_(from.table_definitions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  create_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_disposition().size() > 0) {
    create_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_disposition_);
  }
  write_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.write_disposition().size() > 0) {
    write_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_disposition_);
  }
  if (from.has_destination_table()) {
    destination_table_ = new ::google::cloud::bigquery::logging::v1::TableName(*from.destination_table_);
  } else {
    destination_table_ = NULL;
  }
  if (from.has_default_dataset()) {
    default_dataset_ = new ::google::cloud::bigquery::logging::v1::DatasetName(*from.default_dataset_);
  } else {
    default_dataset_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
}

void JobConfiguration_Query::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&destination_table_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_dataset_) -
      reinterpret_cast<char*>(&destination_table_)) + sizeof(default_dataset_));
  _cached_size_ = 0;
}

JobConfiguration_Query::~JobConfiguration_Query() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  SharedDtor();
}

void JobConfiguration_Query::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_disposition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete destination_table_;
  if (this != internal_default_instance()) delete default_dataset_;
}

void JobConfiguration_Query::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobConfiguration_Query::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobConfiguration_Query& JobConfiguration_Query::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Query();
  return *internal_default_instance();
}

JobConfiguration_Query* JobConfiguration_Query::New(::google::protobuf::Arena* arena) const {
  JobConfiguration_Query* n = new JobConfiguration_Query;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobConfiguration_Query::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_definitions_.Clear();
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_disposition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && destination_table_ != NULL) {
    delete destination_table_;
  }
  destination_table_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_dataset_ != NULL) {
    delete default_dataset_;
  }
  default_dataset_ = NULL;
  _internal_metadata_.Clear();
}

bool JobConfiguration_Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Query.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_disposition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_disposition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Query.create_disposition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string write_disposition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_write_disposition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Query.write_disposition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_dataset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_table_definitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  return false;
#undef DO_
}

void JobConfiguration_Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Query.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
  if (this->has_destination_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->destination_table_, output);
  }

  // string create_disposition = 3;
  if (this->create_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Query.create_disposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->create_disposition(), output);
  }

  // string write_disposition = 4;
  if (this->write_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Query.write_disposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->write_disposition(), output);
  }

  // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;
  if (this->has_default_dataset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->default_dataset_, output);
  }

  // repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_definitions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->table_definitions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
}

::google::protobuf::uint8* JobConfiguration_Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Query.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
  if (this->has_destination_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->destination_table_, deterministic, target);
  }

  // string create_disposition = 3;
  if (this->create_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Query.create_disposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->create_disposition(), target);
  }

  // string write_disposition = 4;
  if (this->write_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Query.write_disposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->write_disposition(), target);
  }

  // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;
  if (this->has_default_dataset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->default_dataset_, deterministic, target);
  }

  // repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_definitions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->table_definitions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  return target;
}

size_t JobConfiguration_Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->table_definitions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table_definitions(static_cast<int>(i)));
    }
  }

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // string create_disposition = 3;
  if (this->create_disposition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_disposition());
  }

  // string write_disposition = 4;
  if (this->write_disposition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->write_disposition());
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
  if (this->has_destination_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_table_);
  }

  // .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;
  if (this->has_default_dataset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->default_dataset_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobConfiguration_Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  GOOGLE_DCHECK_NE(&from, this);
  const JobConfiguration_Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobConfiguration_Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
    MergeFrom(*source);
  }
}

void JobConfiguration_Query::MergeFrom(const JobConfiguration_Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_definitions_.MergeFrom(from.table_definitions_);
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.create_disposition().size() > 0) {

    create_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_disposition_);
  }
  if (from.write_disposition().size() > 0) {

    write_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_disposition_);
  }
  if (from.has_destination_table()) {
    mutable_destination_table()->::google::cloud::bigquery::logging::v1::TableName::MergeFrom(from.destination_table());
  }
  if (from.has_default_dataset()) {
    mutable_default_dataset()->::google::cloud::bigquery::logging::v1::DatasetName::MergeFrom(from.default_dataset());
  }
}

void JobConfiguration_Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobConfiguration_Query::CopyFrom(const JobConfiguration_Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobConfiguration_Query::IsInitialized() const {
  return true;
}

void JobConfiguration_Query::Swap(JobConfiguration_Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobConfiguration_Query::InternalSwap(JobConfiguration_Query* other) {
  using std::swap;
  table_definitions_.InternalSwap(&other->table_definitions_);
  query_.Swap(&other->query_);
  create_disposition_.Swap(&other->create_disposition_);
  write_disposition_.Swap(&other->write_disposition_);
  swap(destination_table_, other->destination_table_);
  swap(default_dataset_, other->default_dataset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobConfiguration_Query::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobConfiguration_Load::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_Load_default_instance_._instance.get_mutable()->destination_table_ = const_cast< ::google::cloud::bigquery::logging::v1::TableName*>(
      ::google::cloud::bigquery::logging::v1::TableName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobConfiguration_Load::kSourceUrisFieldNumber;
const int JobConfiguration_Load::kSchemaJsonFieldNumber;
const int JobConfiguration_Load::kDestinationTableFieldNumber;
const int JobConfiguration_Load::kCreateDispositionFieldNumber;
const int JobConfiguration_Load::kWriteDispositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobConfiguration_Load::JobConfiguration_Load()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Load();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
}
JobConfiguration_Load::JobConfiguration_Load(const JobConfiguration_Load& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      source_uris_(from.source_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  create_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_disposition().size() > 0) {
    create_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_disposition_);
  }
  write_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.write_disposition().size() > 0) {
    write_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_disposition_);
  }
  schema_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.schema_json().size() > 0) {
    schema_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_json_);
  }
  if (from.has_destination_table()) {
    destination_table_ = new ::google::cloud::bigquery::logging::v1::TableName(*from.destination_table_);
  } else {
    destination_table_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
}

void JobConfiguration_Load::SharedCtor() {
  create_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_table_ = NULL;
  _cached_size_ = 0;
}

JobConfiguration_Load::~JobConfiguration_Load() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  SharedDtor();
}

void JobConfiguration_Load::SharedDtor() {
  create_disposition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete destination_table_;
}

void JobConfiguration_Load::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobConfiguration_Load::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobConfiguration_Load& JobConfiguration_Load::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Load();
  return *internal_default_instance();
}

JobConfiguration_Load* JobConfiguration_Load::New(::google::protobuf::Arena* arena) const {
  JobConfiguration_Load* n = new JobConfiguration_Load;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobConfiguration_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_uris_.Clear();
  create_disposition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && destination_table_ != NULL) {
    delete destination_table_;
  }
  destination_table_ = NULL;
  _internal_metadata_.Clear();
}

bool JobConfiguration_Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string source_uris = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_source_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_uris(this->source_uris_size() - 1).data(),
            static_cast<int>(this->source_uris(this->source_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Load.source_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableName destination_table = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_disposition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_disposition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Load.create_disposition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string write_disposition = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_write_disposition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Load.write_disposition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string schema_json = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schema_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->schema_json().data(), static_cast<int>(this->schema_json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Load.schema_json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  return false;
#undef DO_
}

void JobConfiguration_Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string source_uris = 1;
  for (int i = 0, n = this->source_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_uris(i).data(), static_cast<int>(this->source_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.source_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->source_uris(i), output);
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 3;
  if (this->has_destination_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->destination_table_, output);
  }

  // string create_disposition = 4;
  if (this->create_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.create_disposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->create_disposition(), output);
  }

  // string write_disposition = 5;
  if (this->write_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.write_disposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->write_disposition(), output);
  }

  // string schema_json = 6;
  if (this->schema_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schema_json().data(), static_cast<int>(this->schema_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.schema_json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->schema_json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
}

::google::protobuf::uint8* JobConfiguration_Load::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string source_uris = 1;
  for (int i = 0, n = this->source_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_uris(i).data(), static_cast<int>(this->source_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.source_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->source_uris(i), target);
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 3;
  if (this->has_destination_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->destination_table_, deterministic, target);
  }

  // string create_disposition = 4;
  if (this->create_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.create_disposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->create_disposition(), target);
  }

  // string write_disposition = 5;
  if (this->write_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.write_disposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->write_disposition(), target);
  }

  // string schema_json = 6;
  if (this->schema_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schema_json().data(), static_cast<int>(this->schema_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Load.schema_json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->schema_json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  return target;
}

size_t JobConfiguration_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string source_uris = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->source_uris_size());
  for (int i = 0, n = this->source_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->source_uris(i));
  }

  // string create_disposition = 4;
  if (this->create_disposition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_disposition());
  }

  // string write_disposition = 5;
  if (this->write_disposition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->write_disposition());
  }

  // string schema_json = 6;
  if (this->schema_json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->schema_json());
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 3;
  if (this->has_destination_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_table_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobConfiguration_Load::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  GOOGLE_DCHECK_NE(&from, this);
  const JobConfiguration_Load* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobConfiguration_Load>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
    MergeFrom(*source);
  }
}

void JobConfiguration_Load::MergeFrom(const JobConfiguration_Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_uris_.MergeFrom(from.source_uris_);
  if (from.create_disposition().size() > 0) {

    create_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_disposition_);
  }
  if (from.write_disposition().size() > 0) {

    write_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_disposition_);
  }
  if (from.schema_json().size() > 0) {

    schema_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_json_);
  }
  if (from.has_destination_table()) {
    mutable_destination_table()->::google::cloud::bigquery::logging::v1::TableName::MergeFrom(from.destination_table());
  }
}

void JobConfiguration_Load::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobConfiguration_Load::CopyFrom(const JobConfiguration_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobConfiguration_Load::IsInitialized() const {
  return true;
}

void JobConfiguration_Load::Swap(JobConfiguration_Load* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobConfiguration_Load::InternalSwap(JobConfiguration_Load* other) {
  using std::swap;
  source_uris_.InternalSwap(&other->source_uris_);
  create_disposition_.Swap(&other->create_disposition_);
  write_disposition_.Swap(&other->write_disposition_);
  schema_json_.Swap(&other->schema_json_);
  swap(destination_table_, other->destination_table_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobConfiguration_Load::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobConfiguration_Extract::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_Extract_default_instance_._instance.get_mutable()->source_table_ = const_cast< ::google::cloud::bigquery::logging::v1::TableName*>(
      ::google::cloud::bigquery::logging::v1::TableName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobConfiguration_Extract::kDestinationUrisFieldNumber;
const int JobConfiguration_Extract::kSourceTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobConfiguration_Extract::JobConfiguration_Extract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Extract();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
}
JobConfiguration_Extract::JobConfiguration_Extract(const JobConfiguration_Extract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      destination_uris_(from.destination_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_table()) {
    source_table_ = new ::google::cloud::bigquery::logging::v1::TableName(*from.source_table_);
  } else {
    source_table_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
}

void JobConfiguration_Extract::SharedCtor() {
  source_table_ = NULL;
  _cached_size_ = 0;
}

JobConfiguration_Extract::~JobConfiguration_Extract() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  SharedDtor();
}

void JobConfiguration_Extract::SharedDtor() {
  if (this != internal_default_instance()) delete source_table_;
}

void JobConfiguration_Extract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobConfiguration_Extract::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobConfiguration_Extract& JobConfiguration_Extract::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_Extract();
  return *internal_default_instance();
}

JobConfiguration_Extract* JobConfiguration_Extract::New(::google::protobuf::Arena* arena) const {
  JobConfiguration_Extract* n = new JobConfiguration_Extract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobConfiguration_Extract::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destination_uris_.Clear();
  if (GetArenaNoVirtual() == NULL && source_table_ != NULL) {
    delete source_table_;
  }
  source_table_ = NULL;
  _internal_metadata_.Clear();
}

bool JobConfiguration_Extract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string destination_uris = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_destination_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_uris(this->destination_uris_size() - 1).data(),
            static_cast<int>(this->destination_uris(this->destination_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.Extract.destination_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableName source_table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  return false;
#undef DO_
}

void JobConfiguration_Extract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string destination_uris = 1;
  for (int i = 0, n = this->destination_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_uris(i).data(), static_cast<int>(this->destination_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Extract.destination_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->destination_uris(i), output);
  }

  // .google.cloud.bigquery.logging.v1.TableName source_table = 2;
  if (this->has_source_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->source_table_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
}

::google::protobuf::uint8* JobConfiguration_Extract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string destination_uris = 1;
  for (int i = 0, n = this->destination_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_uris(i).data(), static_cast<int>(this->destination_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.Extract.destination_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->destination_uris(i), target);
  }

  // .google.cloud.bigquery.logging.v1.TableName source_table = 2;
  if (this->has_source_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->source_table_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  return target;
}

size_t JobConfiguration_Extract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string destination_uris = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->destination_uris_size());
  for (int i = 0, n = this->destination_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->destination_uris(i));
  }

  // .google.cloud.bigquery.logging.v1.TableName source_table = 2;
  if (this->has_source_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_table_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobConfiguration_Extract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  GOOGLE_DCHECK_NE(&from, this);
  const JobConfiguration_Extract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobConfiguration_Extract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
    MergeFrom(*source);
  }
}

void JobConfiguration_Extract::MergeFrom(const JobConfiguration_Extract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  destination_uris_.MergeFrom(from.destination_uris_);
  if (from.has_source_table()) {
    mutable_source_table()->::google::cloud::bigquery::logging::v1::TableName::MergeFrom(from.source_table());
  }
}

void JobConfiguration_Extract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobConfiguration_Extract::CopyFrom(const JobConfiguration_Extract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobConfiguration_Extract::IsInitialized() const {
  return true;
}

void JobConfiguration_Extract::Swap(JobConfiguration_Extract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobConfiguration_Extract::InternalSwap(JobConfiguration_Extract* other) {
  using std::swap;
  destination_uris_.InternalSwap(&other->destination_uris_);
  swap(source_table_, other->source_table_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobConfiguration_Extract::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobConfiguration_TableCopy::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_TableCopy_default_instance_._instance.get_mutable()->destination_table_ = const_cast< ::google::cloud::bigquery::logging::v1::TableName*>(
      ::google::cloud::bigquery::logging::v1::TableName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobConfiguration_TableCopy::kSourceTablesFieldNumber;
const int JobConfiguration_TableCopy::kDestinationTableFieldNumber;
const int JobConfiguration_TableCopy::kCreateDispositionFieldNumber;
const int JobConfiguration_TableCopy::kWriteDispositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobConfiguration_TableCopy::JobConfiguration_TableCopy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_TableCopy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
}
JobConfiguration_TableCopy::JobConfiguration_TableCopy(const JobConfiguration_TableCopy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      source_tables_(from.source_tables_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  create_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_disposition().size() > 0) {
    create_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_disposition_);
  }
  write_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.write_disposition().size() > 0) {
    write_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_disposition_);
  }
  if (from.has_destination_table()) {
    destination_table_ = new ::google::cloud::bigquery::logging::v1::TableName(*from.destination_table_);
  } else {
    destination_table_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
}

void JobConfiguration_TableCopy::SharedCtor() {
  create_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_table_ = NULL;
  _cached_size_ = 0;
}

JobConfiguration_TableCopy::~JobConfiguration_TableCopy() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  SharedDtor();
}

void JobConfiguration_TableCopy::SharedDtor() {
  create_disposition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete destination_table_;
}

void JobConfiguration_TableCopy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobConfiguration_TableCopy::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobConfiguration_TableCopy& JobConfiguration_TableCopy::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration_TableCopy();
  return *internal_default_instance();
}

JobConfiguration_TableCopy* JobConfiguration_TableCopy::New(::google::protobuf::Arena* arena) const {
  JobConfiguration_TableCopy* n = new JobConfiguration_TableCopy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobConfiguration_TableCopy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_tables_.Clear();
  create_disposition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_disposition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && destination_table_ != NULL) {
    delete destination_table_;
  }
  destination_table_ = NULL;
  _internal_metadata_.Clear();
}

bool JobConfiguration_TableCopy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_source_tables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_disposition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_disposition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.create_disposition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string write_disposition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_write_disposition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.write_disposition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  return false;
#undef DO_
}

void JobConfiguration_TableCopy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_tables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->source_tables(static_cast<int>(i)), output);
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
  if (this->has_destination_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->destination_table_, output);
  }

  // string create_disposition = 3;
  if (this->create_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.create_disposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->create_disposition(), output);
  }

  // string write_disposition = 4;
  if (this->write_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.write_disposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->write_disposition(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
}

::google::protobuf::uint8* JobConfiguration_TableCopy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_tables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->source_tables(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
  if (this->has_destination_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->destination_table_, deterministic, target);
  }

  // string create_disposition = 3;
  if (this->create_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_disposition().data(), static_cast<int>(this->create_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.create_disposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->create_disposition(), target);
  }

  // string write_disposition = 4;
  if (this->write_disposition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_disposition().data(), static_cast<int>(this->write_disposition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.write_disposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->write_disposition(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  return target;
}

size_t JobConfiguration_TableCopy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->source_tables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->source_tables(static_cast<int>(i)));
    }
  }

  // string create_disposition = 3;
  if (this->create_disposition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_disposition());
  }

  // string write_disposition = 4;
  if (this->write_disposition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->write_disposition());
  }

  // .google.cloud.bigquery.logging.v1.TableName destination_table = 2;
  if (this->has_destination_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_table_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobConfiguration_TableCopy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  GOOGLE_DCHECK_NE(&from, this);
  const JobConfiguration_TableCopy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobConfiguration_TableCopy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
    MergeFrom(*source);
  }
}

void JobConfiguration_TableCopy::MergeFrom(const JobConfiguration_TableCopy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_tables_.MergeFrom(from.source_tables_);
  if (from.create_disposition().size() > 0) {

    create_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_disposition_);
  }
  if (from.write_disposition().size() > 0) {

    write_disposition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_disposition_);
  }
  if (from.has_destination_table()) {
    mutable_destination_table()->::google::cloud::bigquery::logging::v1::TableName::MergeFrom(from.destination_table());
  }
}

void JobConfiguration_TableCopy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobConfiguration_TableCopy::CopyFrom(const JobConfiguration_TableCopy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobConfiguration_TableCopy::IsInitialized() const {
  return true;
}

void JobConfiguration_TableCopy::Swap(JobConfiguration_TableCopy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobConfiguration_TableCopy::InternalSwap(JobConfiguration_TableCopy* other) {
  using std::swap;
  source_tables_.InternalSwap(&other->source_tables_);
  create_disposition_.Swap(&other->create_disposition_);
  write_disposition_.Swap(&other->write_disposition_);
  swap(destination_table_, other->destination_table_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobConfiguration_TableCopy::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobConfiguration::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_default_instance_.query_ = const_cast< ::google::cloud::bigquery::logging::v1::JobConfiguration_Query*>(
      ::google::cloud::bigquery::logging::v1::JobConfiguration_Query::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_default_instance_.load_ = const_cast< ::google::cloud::bigquery::logging::v1::JobConfiguration_Load*>(
      ::google::cloud::bigquery::logging::v1::JobConfiguration_Load::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_default_instance_.extract_ = const_cast< ::google::cloud::bigquery::logging::v1::JobConfiguration_Extract*>(
      ::google::cloud::bigquery::logging::v1::JobConfiguration_Extract::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_JobConfiguration_default_instance_.table_copy_ = const_cast< ::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy*>(
      ::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy::internal_default_instance());
}
void JobConfiguration::set_allocated_query(::google::cloud::bigquery::logging::v1::JobConfiguration_Query* query) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (query) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      query = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query, submessage_arena);
    }
    set_has_query();
    configuration_.query_ = query;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.JobConfiguration.query)
}
void JobConfiguration::set_allocated_load(::google::cloud::bigquery::logging::v1::JobConfiguration_Load* load) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (load) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      load = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, load, submessage_arena);
    }
    set_has_load();
    configuration_.load_ = load;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.JobConfiguration.load)
}
void JobConfiguration::set_allocated_extract(::google::cloud::bigquery::logging::v1::JobConfiguration_Extract* extract) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (extract) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extract = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extract, submessage_arena);
    }
    set_has_extract();
    configuration_.extract_ = extract;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.JobConfiguration.extract)
}
void JobConfiguration::set_allocated_table_copy(::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy* table_copy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_configuration();
  if (table_copy) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_copy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_copy, submessage_arena);
    }
    set_has_table_copy();
    configuration_.table_copy_ = table_copy;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.logging.v1.JobConfiguration.table_copy)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobConfiguration::kQueryFieldNumber;
const int JobConfiguration::kLoadFieldNumber;
const int JobConfiguration::kExtractFieldNumber;
const int JobConfiguration::kTableCopyFieldNumber;
const int JobConfiguration::kDryRunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobConfiguration::JobConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobConfiguration)
}
JobConfiguration::JobConfiguration(const JobConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dry_run_ = from.dry_run_;
  clear_has_configuration();
  switch (from.configuration_case()) {
    case kQuery: {
      mutable_query()->::google::cloud::bigquery::logging::v1::JobConfiguration_Query::MergeFrom(from.query());
      break;
    }
    case kLoad: {
      mutable_load()->::google::cloud::bigquery::logging::v1::JobConfiguration_Load::MergeFrom(from.load());
      break;
    }
    case kExtract: {
      mutable_extract()->::google::cloud::bigquery::logging::v1::JobConfiguration_Extract::MergeFrom(from.extract());
      break;
    }
    case kTableCopy: {
      mutable_table_copy()->::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy::MergeFrom(from.table_copy());
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobConfiguration)
}

void JobConfiguration::SharedCtor() {
  dry_run_ = false;
  clear_has_configuration();
  _cached_size_ = 0;
}

JobConfiguration::~JobConfiguration() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobConfiguration)
  SharedDtor();
}

void JobConfiguration::SharedDtor() {
  if (has_configuration()) {
    clear_configuration();
  }
}

void JobConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobConfiguration::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobConfiguration& JobConfiguration::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobConfiguration();
  return *internal_default_instance();
}

JobConfiguration* JobConfiguration::New(::google::protobuf::Arena* arena) const {
  JobConfiguration* n = new JobConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobConfiguration::clear_configuration() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  switch (configuration_case()) {
    case kQuery: {
      delete configuration_.query_;
      break;
    }
    case kLoad: {
      delete configuration_.load_;
      break;
    }
    case kExtract: {
      delete configuration_.extract_;
      break;
    }
    case kTableCopy: {
      delete configuration_.table_copy_;
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONFIGURATION_NOT_SET;
}


void JobConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dry_run_ = false;
  clear_configuration();
  _internal_metadata_.Clear();
}

bool JobConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_load()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_copy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dry_run = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dry_run_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobConfiguration)
  return false;
#undef DO_
}

void JobConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;
  if (has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *configuration_.query_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;
  if (has_load()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *configuration_.load_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;
  if (has_extract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *configuration_.extract_, output);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;
  if (has_table_copy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *configuration_.table_copy_, output);
  }

  // bool dry_run = 9;
  if (this->dry_run() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->dry_run(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobConfiguration)
}

::google::protobuf::uint8* JobConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;
  if (has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *configuration_.query_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;
  if (has_load()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *configuration_.load_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;
  if (has_extract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *configuration_.extract_, deterministic, target);
  }

  // .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;
  if (has_table_copy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *configuration_.table_copy_, deterministic, target);
  }

  // bool dry_run = 9;
  if (this->dry_run() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->dry_run(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobConfiguration)
  return target;
}

size_t JobConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool dry_run = 9;
  if (this->dry_run() != 0) {
    total_size += 1 + 1;
  }

  switch (configuration_case()) {
    // .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;
    case kQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.query_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;
    case kLoad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.load_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;
    case kExtract: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.extract_);
      break;
    }
    // .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;
    case kTableCopy: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *configuration_.table_copy_);
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const JobConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobConfiguration)
    MergeFrom(*source);
  }
}

void JobConfiguration::MergeFrom(const JobConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dry_run() != 0) {
    set_dry_run(from.dry_run());
  }
  switch (from.configuration_case()) {
    case kQuery: {
      mutable_query()->::google::cloud::bigquery::logging::v1::JobConfiguration_Query::MergeFrom(from.query());
      break;
    }
    case kLoad: {
      mutable_load()->::google::cloud::bigquery::logging::v1::JobConfiguration_Load::MergeFrom(from.load());
      break;
    }
    case kExtract: {
      mutable_extract()->::google::cloud::bigquery::logging::v1::JobConfiguration_Extract::MergeFrom(from.extract());
      break;
    }
    case kTableCopy: {
      mutable_table_copy()->::google::cloud::bigquery::logging::v1::JobConfiguration_TableCopy::MergeFrom(from.table_copy());
      break;
    }
    case CONFIGURATION_NOT_SET: {
      break;
    }
  }
}

void JobConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobConfiguration::CopyFrom(const JobConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobConfiguration::IsInitialized() const {
  return true;
}

void JobConfiguration::Swap(JobConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobConfiguration::InternalSwap(JobConfiguration* other) {
  using std::swap;
  swap(dry_run_, other->dry_run_);
  swap(configuration_, other->configuration_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobConfiguration::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableDefinition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableDefinition::kNameFieldNumber;
const int TableDefinition::kSourceUrisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableDefinition::TableDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableDefinition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableDefinition)
}
TableDefinition::TableDefinition(const TableDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      source_uris_(from.source_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableDefinition)
}

void TableDefinition::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TableDefinition::~TableDefinition() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableDefinition)
  SharedDtor();
}

void TableDefinition::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableDefinition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableDefinition::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableDefinition& TableDefinition::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableDefinition();
  return *internal_default_instance();
}

TableDefinition* TableDefinition::New(::google::protobuf::Arena* arena) const {
  TableDefinition* n = new TableDefinition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_uris_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TableDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableDefinition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableDefinition.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string source_uris = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_source_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_uris(this->source_uris_size() - 1).data(),
            static_cast<int>(this->source_uris(this->source_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableDefinition.source_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableDefinition)
  return false;
#undef DO_
}

void TableDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableDefinition.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string source_uris = 2;
  for (int i = 0, n = this->source_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_uris(i).data(), static_cast<int>(this->source_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableDefinition.source_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->source_uris(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableDefinition)
}

::google::protobuf::uint8* TableDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableDefinition.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string source_uris = 2;
  for (int i = 0, n = this->source_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_uris(i).data(), static_cast<int>(this->source_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableDefinition.source_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->source_uris(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableDefinition)
  return target;
}

size_t TableDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableDefinition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string source_uris = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->source_uris_size());
  for (int i = 0, n = this->source_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->source_uris(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const TableDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableDefinition)
    MergeFrom(*source);
  }
}

void TableDefinition::MergeFrom(const TableDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_uris_.MergeFrom(from.source_uris_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void TableDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableDefinition::CopyFrom(const TableDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableDefinition::IsInitialized() const {
  return true;
}

void TableDefinition::Swap(TableDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableDefinition::InternalSwap(TableDefinition* other) {
  using std::swap;
  source_uris_.InternalSwap(&other->source_uris_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableDefinition::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobStatus::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobStatus_default_instance_._instance.get_mutable()->error_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void JobStatus::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobStatus::kStateFieldNumber;
const int JobStatus::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobStatus::JobStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobStatus)
}
JobStatus::JobStatus(const JobStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.has_error()) {
    error_ = new ::google::rpc::Status(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobStatus)
}

void JobStatus::SharedCtor() {
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

JobStatus::~JobStatus() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobStatus)
  SharedDtor();
}

void JobStatus::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void JobStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobStatus::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobStatus& JobStatus::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobStatus();
  return *internal_default_instance();
}

JobStatus* JobStatus::New(::google::protobuf::Arena* arena) const {
  JobStatus* n = new JobStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool JobStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobStatus.state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobStatus)
  return false;
#undef DO_
}

void JobStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobStatus.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->state(), output);
  }

  // .google.rpc.Status error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobStatus)
}

::google::protobuf::uint8* JobStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobStatus.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->state(), target);
  }

  // .google.rpc.Status error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobStatus)
  return target;
}

size_t JobStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string state = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  // .google.rpc.Status error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const JobStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobStatus)
    MergeFrom(*source);
  }
}

void JobStatus::MergeFrom(const JobStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.has_error()) {
    mutable_error()->::google::rpc::Status::MergeFrom(from.error());
  }
}

void JobStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobStatus::CopyFrom(const JobStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobStatus::IsInitialized() const {
  return true;
}

void JobStatus::Swap(JobStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobStatus::InternalSwap(JobStatus* other) {
  using std::swap;
  state_.Swap(&other->state_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobStatus::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobStatistics::InitAsDefaultInstance() {
  ::google::cloud::bigquery::logging::v1::_JobStatistics_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_JobStatistics_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::logging::v1::_JobStatistics_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void JobStatistics::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void JobStatistics::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void JobStatistics::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobStatistics::kCreateTimeFieldNumber;
const int JobStatistics::kStartTimeFieldNumber;
const int JobStatistics::kEndTimeFieldNumber;
const int JobStatistics::kTotalProcessedBytesFieldNumber;
const int JobStatistics::kTotalBilledBytesFieldNumber;
const int JobStatistics::kBillingTierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobStatistics::JobStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobStatistics();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobStatistics)
}
JobStatistics::JobStatistics(const JobStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  ::memcpy(&total_processed_bytes_, &from.total_processed_bytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&billing_tier_) -
    reinterpret_cast<char*>(&total_processed_bytes_)) + sizeof(billing_tier_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobStatistics)
}

void JobStatistics::SharedCtor() {
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&billing_tier_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(billing_tier_));
  _cached_size_ = 0;
}

JobStatistics::~JobStatistics() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobStatistics)
  SharedDtor();
}

void JobStatistics::SharedDtor() {
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void JobStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobStatistics::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobStatistics& JobStatistics::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobStatistics();
  return *internal_default_instance();
}

JobStatistics* JobStatistics::New(::google::protobuf::Arena* arena) const {
  JobStatistics* n = new JobStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  ::memset(&total_processed_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&billing_tier_) -
      reinterpret_cast<char*>(&total_processed_bytes_)) + sizeof(billing_tier_));
  _internal_metadata_.Clear();
}

bool JobStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp create_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_processed_bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_processed_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_billed_bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_billed_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 billing_tier = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &billing_tier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobStatistics)
  return false;
#undef DO_
}

void JobStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp create_time = 1;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->create_time_, output);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->end_time_, output);
  }

  // int64 total_processed_bytes = 4;
  if (this->total_processed_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->total_processed_bytes(), output);
  }

  // int64 total_billed_bytes = 5;
  if (this->total_billed_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->total_billed_bytes(), output);
  }

  // int32 billing_tier = 7;
  if (this->billing_tier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->billing_tier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobStatistics)
}

::google::protobuf::uint8* JobStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp create_time = 1;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->create_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->end_time_, deterministic, target);
  }

  // int64 total_processed_bytes = 4;
  if (this->total_processed_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->total_processed_bytes(), target);
  }

  // int64 total_billed_bytes = 5;
  if (this->total_billed_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->total_billed_bytes(), target);
  }

  // int32 billing_tier = 7;
  if (this->billing_tier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->billing_tier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobStatistics)
  return target;
}

size_t JobStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp create_time = 1;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->create_time_);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_time_);
  }

  // int64 total_processed_bytes = 4;
  if (this->total_processed_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_processed_bytes());
  }

  // int64 total_billed_bytes = 5;
  if (this->total_billed_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_billed_bytes());
  }

  // int32 billing_tier = 7;
  if (this->billing_tier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->billing_tier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const JobStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobStatistics)
    MergeFrom(*source);
  }
}

void JobStatistics::MergeFrom(const JobStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.total_processed_bytes() != 0) {
    set_total_processed_bytes(from.total_processed_bytes());
  }
  if (from.total_billed_bytes() != 0) {
    set_total_billed_bytes(from.total_billed_bytes());
  }
  if (from.billing_tier() != 0) {
    set_billing_tier(from.billing_tier());
  }
}

void JobStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobStatistics::CopyFrom(const JobStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobStatistics::IsInitialized() const {
  return true;
}

void JobStatistics::Swap(JobStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobStatistics::InternalSwap(JobStatistics* other) {
  using std::swap;
  swap(create_time_, other->create_time_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(total_processed_bytes_, other->total_processed_bytes_);
  swap(total_billed_bytes_, other->total_billed_bytes_);
  swap(billing_tier_, other->billing_tier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobStatistics::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatasetName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatasetName::kProjectIdFieldNumber;
const int DatasetName::kDatasetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatasetName::DatasetName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.DatasetName)
}
DatasetName::DatasetName(const DatasetName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataset_id().size() > 0) {
    dataset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.DatasetName)
}

void DatasetName::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DatasetName::~DatasetName() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.DatasetName)
  SharedDtor();
}

void DatasetName::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DatasetName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatasetName::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatasetName& DatasetName::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsDatasetName();
  return *internal_default_instance();
}

DatasetName* DatasetName::New(::google::protobuf::Arena* arena) const {
  DatasetName* n = new DatasetName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatasetName::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.DatasetName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DatasetName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.DatasetName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.DatasetName.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dataset_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataset_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.DatasetName.dataset_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.DatasetName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.DatasetName)
  return false;
#undef DO_
}

void DatasetName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.DatasetName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetName.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetName.dataset_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dataset_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.DatasetName)
}

::google::protobuf::uint8* DatasetName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.DatasetName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetName.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.DatasetName.dataset_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dataset_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.DatasetName)
  return target;
}

size_t DatasetName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.DatasetName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dataset_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatasetName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.DatasetName)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatasetName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.DatasetName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.DatasetName)
    MergeFrom(*source);
  }
}

void DatasetName::MergeFrom(const DatasetName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.DatasetName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.dataset_id().size() > 0) {

    dataset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id_);
  }
}

void DatasetName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.DatasetName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetName::CopyFrom(const DatasetName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.DatasetName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetName::IsInitialized() const {
  return true;
}

void DatasetName::Swap(DatasetName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatasetName::InternalSwap(DatasetName* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  dataset_id_.Swap(&other->dataset_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatasetName::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableName::kProjectIdFieldNumber;
const int TableName::kDatasetIdFieldNumber;
const int TableName::kTableIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableName::TableName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.TableName)
}
TableName::TableName(const TableName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataset_id().size() > 0) {
    dataset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id_);
  }
  table_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_id().size() > 0) {
    table_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.TableName)
}

void TableName::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TableName::~TableName() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.TableName)
  SharedDtor();
}

void TableName::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableName::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableName& TableName::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsTableName();
  return *internal_default_instance();
}

TableName* TableName::New(::google::protobuf::Arena* arena) const {
  TableName* n = new TableName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TableName::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.TableName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TableName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.TableName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableName.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dataset_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataset_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableName.dataset_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_id().data(), static_cast<int>(this->table_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.TableName.table_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.TableName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.TableName)
  return false;
#undef DO_
}

void TableName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.TableName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableName.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableName.dataset_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dataset_id(), output);
  }

  // string table_id = 3;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), static_cast<int>(this->table_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableName.table_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->table_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.TableName)
}

::google::protobuf::uint8* TableName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.TableName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableName.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableName.dataset_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dataset_id(), target);
  }

  // string table_id = 3;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), static_cast<int>(this->table_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.TableName.table_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->table_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.TableName)
  return target;
}

size_t TableName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.TableName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dataset_id());
  }

  // string table_id = 3;
  if (this->table_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.TableName)
  GOOGLE_DCHECK_NE(&from, this);
  const TableName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.TableName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.TableName)
    MergeFrom(*source);
  }
}

void TableName::MergeFrom(const TableName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.TableName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.dataset_id().size() > 0) {

    dataset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id_);
  }
  if (from.table_id().size() > 0) {

    table_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_id_);
  }
}

void TableName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.TableName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableName::CopyFrom(const TableName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.TableName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableName::IsInitialized() const {
  return true;
}

void TableName::Swap(TableName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableName::InternalSwap(TableName* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  dataset_id_.Swap(&other->dataset_id_);
  table_id_.Swap(&other->table_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TableName::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobName::kProjectIdFieldNumber;
const int JobName::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobName::JobName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.logging.v1.JobName)
}
JobName::JobName(const JobName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.logging.v1.JobName)
}

void JobName::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

JobName::~JobName() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.logging.v1.JobName)
  SharedDtor();
}

void JobName::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JobName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobName::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobName& JobName::default_instance() {
  ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::InitDefaultsJobName();
  return *internal_default_instance();
}

JobName* JobName::New(::google::protobuf::Arena* arena) const {
  JobName* n = new JobName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobName::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.logging.v1.JobName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JobName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.logging.v1.JobName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobName.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.logging.v1.JobName.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.logging.v1.JobName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.logging.v1.JobName)
  return false;
#undef DO_
}

void JobName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.logging.v1.JobName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobName.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobName.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.logging.v1.JobName)
}

::google::protobuf::uint8* JobName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.logging.v1.JobName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobName.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.logging.v1.JobName.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.logging.v1.JobName)
  return target;
}

size_t JobName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.logging.v1.JobName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.logging.v1.JobName)
  GOOGLE_DCHECK_NE(&from, this);
  const JobName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.logging.v1.JobName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.logging.v1.JobName)
    MergeFrom(*source);
  }
}

void JobName::MergeFrom(const JobName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.logging.v1.JobName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
}

void JobName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.logging.v1.JobName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobName::CopyFrom(const JobName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.logging.v1.JobName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobName::IsInitialized() const {
  return true;
}

void JobName::Swap(JobName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobName::InternalSwap(JobName* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  job_id_.Swap(&other->job_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobName::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2flogging_2fv1_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace logging
}  // namespace bigquery
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
