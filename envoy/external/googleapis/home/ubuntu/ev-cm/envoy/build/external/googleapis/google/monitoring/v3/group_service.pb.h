// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/group_service.proto

#ifndef PROTOBUF_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto__INCLUDED
#define PROTOBUF_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/monitored_resource.pb.h"
#include "google/monitoring/v3/common.pb.h"
#include "google/monitoring/v3/group.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsListGroupsRequestImpl();
void InitDefaultsListGroupsRequest();
void InitDefaultsListGroupsResponseImpl();
void InitDefaultsListGroupsResponse();
void InitDefaultsGetGroupRequestImpl();
void InitDefaultsGetGroupRequest();
void InitDefaultsCreateGroupRequestImpl();
void InitDefaultsCreateGroupRequest();
void InitDefaultsUpdateGroupRequestImpl();
void InitDefaultsUpdateGroupRequest();
void InitDefaultsDeleteGroupRequestImpl();
void InitDefaultsDeleteGroupRequest();
void InitDefaultsListGroupMembersRequestImpl();
void InitDefaultsListGroupMembersRequest();
void InitDefaultsListGroupMembersResponseImpl();
void InitDefaultsListGroupMembersResponse();
inline void InitDefaults() {
  InitDefaultsListGroupsRequest();
  InitDefaultsListGroupsResponse();
  InitDefaultsGetGroupRequest();
  InitDefaultsCreateGroupRequest();
  InitDefaultsUpdateGroupRequest();
  InitDefaultsDeleteGroupRequest();
  InitDefaultsListGroupMembersRequest();
  InitDefaultsListGroupMembersResponse();
}
}  // namespace protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class CreateGroupRequest;
class CreateGroupRequestDefaultTypeInternal;
extern CreateGroupRequestDefaultTypeInternal _CreateGroupRequest_default_instance_;
class DeleteGroupRequest;
class DeleteGroupRequestDefaultTypeInternal;
extern DeleteGroupRequestDefaultTypeInternal _DeleteGroupRequest_default_instance_;
class GetGroupRequest;
class GetGroupRequestDefaultTypeInternal;
extern GetGroupRequestDefaultTypeInternal _GetGroupRequest_default_instance_;
class ListGroupMembersRequest;
class ListGroupMembersRequestDefaultTypeInternal;
extern ListGroupMembersRequestDefaultTypeInternal _ListGroupMembersRequest_default_instance_;
class ListGroupMembersResponse;
class ListGroupMembersResponseDefaultTypeInternal;
extern ListGroupMembersResponseDefaultTypeInternal _ListGroupMembersResponse_default_instance_;
class ListGroupsRequest;
class ListGroupsRequestDefaultTypeInternal;
extern ListGroupsRequestDefaultTypeInternal _ListGroupsRequest_default_instance_;
class ListGroupsResponse;
class ListGroupsResponseDefaultTypeInternal;
extern ListGroupsResponseDefaultTypeInternal _ListGroupsResponse_default_instance_;
class UpdateGroupRequest;
class UpdateGroupRequestDefaultTypeInternal;
extern UpdateGroupRequestDefaultTypeInternal _UpdateGroupRequest_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace monitoring {
namespace v3 {

// ===================================================================

class ListGroupsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListGroupsRequest) */ {
 public:
  ListGroupsRequest();
  virtual ~ListGroupsRequest();

  ListGroupsRequest(const ListGroupsRequest& from);

  inline ListGroupsRequest& operator=(const ListGroupsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupsRequest(ListGroupsRequest&& from) noexcept
    : ListGroupsRequest() {
    *this = ::std::move(from);
  }

  inline ListGroupsRequest& operator=(ListGroupsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGroupsRequest& default_instance();

  enum FilterCase {
    kChildrenOfGroup = 2,
    kAncestorsOfGroup = 3,
    kDescendantsOfGroup = 4,
    FILTER_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupsRequest* internal_default_instance() {
    return reinterpret_cast<const ListGroupsRequest*>(
               &_ListGroupsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ListGroupsRequest* other);
  friend void swap(ListGroupsRequest& a, ListGroupsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGroupsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGroupsRequest& from);
  void MergeFrom(const ListGroupsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGroupsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string page_token = 6;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 6;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string name = 7;
  void clear_name();
  static const int kNameFieldNumber = 7;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 page_size = 5;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 5;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string children_of_group = 2;
  private:
  bool has_children_of_group() const;
  public:
  void clear_children_of_group();
  static const int kChildrenOfGroupFieldNumber = 2;
  const ::std::string& children_of_group() const;
  void set_children_of_group(const ::std::string& value);
  #if LANG_CXX11
  void set_children_of_group(::std::string&& value);
  #endif
  void set_children_of_group(const char* value);
  void set_children_of_group(const char* value, size_t size);
  ::std::string* mutable_children_of_group();
  ::std::string* release_children_of_group();
  void set_allocated_children_of_group(::std::string* children_of_group);

  // string ancestors_of_group = 3;
  private:
  bool has_ancestors_of_group() const;
  public:
  void clear_ancestors_of_group();
  static const int kAncestorsOfGroupFieldNumber = 3;
  const ::std::string& ancestors_of_group() const;
  void set_ancestors_of_group(const ::std::string& value);
  #if LANG_CXX11
  void set_ancestors_of_group(::std::string&& value);
  #endif
  void set_ancestors_of_group(const char* value);
  void set_ancestors_of_group(const char* value, size_t size);
  ::std::string* mutable_ancestors_of_group();
  ::std::string* release_ancestors_of_group();
  void set_allocated_ancestors_of_group(::std::string* ancestors_of_group);

  // string descendants_of_group = 4;
  private:
  bool has_descendants_of_group() const;
  public:
  void clear_descendants_of_group();
  static const int kDescendantsOfGroupFieldNumber = 4;
  const ::std::string& descendants_of_group() const;
  void set_descendants_of_group(const ::std::string& value);
  #if LANG_CXX11
  void set_descendants_of_group(::std::string&& value);
  #endif
  void set_descendants_of_group(const char* value);
  void set_descendants_of_group(const char* value, size_t size);
  ::std::string* mutable_descendants_of_group();
  ::std::string* release_descendants_of_group();
  void set_allocated_descendants_of_group(::std::string* descendants_of_group);

  FilterCase filter_case() const;
  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListGroupsRequest)
 private:
  void set_has_children_of_group();
  void set_has_ancestors_of_group();
  void set_has_descendants_of_group();

  inline bool has_filter() const;
  void clear_filter();
  inline void clear_has_filter();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 page_size_;
  union FilterUnion {
    FilterUnion() {}
    ::google::protobuf::internal::ArenaStringPtr children_of_group_;
    ::google::protobuf::internal::ArenaStringPtr ancestors_of_group_;
    ::google::protobuf::internal::ArenaStringPtr descendants_of_group_;
  } filter_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsListGroupsRequestImpl();
};
// -------------------------------------------------------------------

class ListGroupsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListGroupsResponse) */ {
 public:
  ListGroupsResponse();
  virtual ~ListGroupsResponse();

  ListGroupsResponse(const ListGroupsResponse& from);

  inline ListGroupsResponse& operator=(const ListGroupsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupsResponse(ListGroupsResponse&& from) noexcept
    : ListGroupsResponse() {
    *this = ::std::move(from);
  }

  inline ListGroupsResponse& operator=(ListGroupsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGroupsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupsResponse* internal_default_instance() {
    return reinterpret_cast<const ListGroupsResponse*>(
               &_ListGroupsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ListGroupsResponse* other);
  friend void swap(ListGroupsResponse& a, ListGroupsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGroupsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGroupsResponse& from);
  void MergeFrom(const ListGroupsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGroupsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.monitoring.v3.Group group = 1;
  int group_size() const;
  void clear_group();
  static const int kGroupFieldNumber = 1;
  const ::google::monitoring::v3::Group& group(int index) const;
  ::google::monitoring::v3::Group* mutable_group(int index);
  ::google::monitoring::v3::Group* add_group();
  ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::Group >*
      mutable_group();
  const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::Group >&
      group() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListGroupsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::Group > group_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsListGroupsResponseImpl();
};
// -------------------------------------------------------------------

class GetGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.GetGroupRequest) */ {
 public:
  GetGroupRequest();
  virtual ~GetGroupRequest();

  GetGroupRequest(const GetGroupRequest& from);

  inline GetGroupRequest& operator=(const GetGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupRequest(GetGroupRequest&& from) noexcept
    : GetGroupRequest() {
    *this = ::std::move(from);
  }

  inline GetGroupRequest& operator=(GetGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupRequest*>(
               &_GetGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetGroupRequest* other);
  friend void swap(GetGroupRequest& a, GetGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGroupRequest& from);
  void MergeFrom(const GetGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.GetGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsGetGroupRequestImpl();
};
// -------------------------------------------------------------------

class CreateGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.CreateGroupRequest) */ {
 public:
  CreateGroupRequest();
  virtual ~CreateGroupRequest();

  CreateGroupRequest(const CreateGroupRequest& from);

  inline CreateGroupRequest& operator=(const CreateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGroupRequest(CreateGroupRequest&& from) noexcept
    : CreateGroupRequest() {
    *this = ::std::move(from);
  }

  inline CreateGroupRequest& operator=(CreateGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CreateGroupRequest*>(
               &_CreateGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CreateGroupRequest* other);
  friend void swap(CreateGroupRequest& a, CreateGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGroupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGroupRequest& from);
  void MergeFrom(const CreateGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.monitoring.v3.Group group = 2;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 2;
  const ::google::monitoring::v3::Group& group() const;
  ::google::monitoring::v3::Group* release_group();
  ::google::monitoring::v3::Group* mutable_group();
  void set_allocated_group(::google::monitoring::v3::Group* group);

  // bool validate_only = 3;
  void clear_validate_only();
  static const int kValidateOnlyFieldNumber = 3;
  bool validate_only() const;
  void set_validate_only(bool value);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.CreateGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::monitoring::v3::Group* group_;
  bool validate_only_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsCreateGroupRequestImpl();
};
// -------------------------------------------------------------------

class UpdateGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.UpdateGroupRequest) */ {
 public:
  UpdateGroupRequest();
  virtual ~UpdateGroupRequest();

  UpdateGroupRequest(const UpdateGroupRequest& from);

  inline UpdateGroupRequest& operator=(const UpdateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateGroupRequest(UpdateGroupRequest&& from) noexcept
    : UpdateGroupRequest() {
    *this = ::std::move(from);
  }

  inline UpdateGroupRequest& operator=(UpdateGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateGroupRequest*>(
               &_UpdateGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UpdateGroupRequest* other);
  friend void swap(UpdateGroupRequest& a, UpdateGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateGroupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateGroupRequest& from);
  void MergeFrom(const UpdateGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.monitoring.v3.Group group = 2;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 2;
  const ::google::monitoring::v3::Group& group() const;
  ::google::monitoring::v3::Group* release_group();
  ::google::monitoring::v3::Group* mutable_group();
  void set_allocated_group(::google::monitoring::v3::Group* group);

  // bool validate_only = 3;
  void clear_validate_only();
  static const int kValidateOnlyFieldNumber = 3;
  bool validate_only() const;
  void set_validate_only(bool value);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.UpdateGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::monitoring::v3::Group* group_;
  bool validate_only_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsUpdateGroupRequestImpl();
};
// -------------------------------------------------------------------

class DeleteGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.DeleteGroupRequest) */ {
 public:
  DeleteGroupRequest();
  virtual ~DeleteGroupRequest();

  DeleteGroupRequest(const DeleteGroupRequest& from);

  inline DeleteGroupRequest& operator=(const DeleteGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteGroupRequest(DeleteGroupRequest&& from) noexcept
    : DeleteGroupRequest() {
    *this = ::std::move(from);
  }

  inline DeleteGroupRequest& operator=(DeleteGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteGroupRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteGroupRequest*>(
               &_DeleteGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DeleteGroupRequest* other);
  friend void swap(DeleteGroupRequest& a, DeleteGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteGroupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteGroupRequest& from);
  void MergeFrom(const DeleteGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.DeleteGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsDeleteGroupRequestImpl();
};
// -------------------------------------------------------------------

class ListGroupMembersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListGroupMembersRequest) */ {
 public:
  ListGroupMembersRequest();
  virtual ~ListGroupMembersRequest();

  ListGroupMembersRequest(const ListGroupMembersRequest& from);

  inline ListGroupMembersRequest& operator=(const ListGroupMembersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupMembersRequest(ListGroupMembersRequest&& from) noexcept
    : ListGroupMembersRequest() {
    *this = ::std::move(from);
  }

  inline ListGroupMembersRequest& operator=(ListGroupMembersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGroupMembersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupMembersRequest* internal_default_instance() {
    return reinterpret_cast<const ListGroupMembersRequest*>(
               &_ListGroupMembersRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ListGroupMembersRequest* other);
  friend void swap(ListGroupMembersRequest& a, ListGroupMembersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupMembersRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGroupMembersRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGroupMembersRequest& from);
  void MergeFrom(const ListGroupMembersRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGroupMembersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string filter = 5;
  void clear_filter();
  static const int kFilterFieldNumber = 5;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string name = 7;
  void clear_name();
  static const int kNameFieldNumber = 7;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.monitoring.v3.TimeInterval interval = 6;
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 6;
  const ::google::monitoring::v3::TimeInterval& interval() const;
  ::google::monitoring::v3::TimeInterval* release_interval();
  ::google::monitoring::v3::TimeInterval* mutable_interval();
  void set_allocated_interval(::google::monitoring::v3::TimeInterval* interval);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListGroupMembersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::monitoring::v3::TimeInterval* interval_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsListGroupMembersRequestImpl();
};
// -------------------------------------------------------------------

class ListGroupMembersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListGroupMembersResponse) */ {
 public:
  ListGroupMembersResponse();
  virtual ~ListGroupMembersResponse();

  ListGroupMembersResponse(const ListGroupMembersResponse& from);

  inline ListGroupMembersResponse& operator=(const ListGroupMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupMembersResponse(ListGroupMembersResponse&& from) noexcept
    : ListGroupMembersResponse() {
    *this = ::std::move(from);
  }

  inline ListGroupMembersResponse& operator=(ListGroupMembersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGroupMembersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupMembersResponse* internal_default_instance() {
    return reinterpret_cast<const ListGroupMembersResponse*>(
               &_ListGroupMembersResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ListGroupMembersResponse* other);
  friend void swap(ListGroupMembersResponse& a, ListGroupMembersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupMembersResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGroupMembersResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGroupMembersResponse& from);
  void MergeFrom(const ListGroupMembersResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGroupMembersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.MonitoredResource members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::google::api::MonitoredResource& members(int index) const;
  ::google::api::MonitoredResource* mutable_members(int index);
  ::google::api::MonitoredResource* add_members();
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResource >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResource >&
      members() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // int32 total_size = 3;
  void clear_total_size();
  static const int kTotalSizeFieldNumber = 3;
  ::google::protobuf::int32 total_size() const;
  void set_total_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListGroupMembersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResource > members_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::int32 total_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto::InitDefaultsListGroupMembersResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListGroupsRequest

// string name = 7;
inline void ListGroupsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.name)
  return name_.GetNoArena();
}
inline void ListGroupsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.name)
}
#if LANG_CXX11
inline void ListGroupsRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupsRequest.name)
}
#endif
inline void ListGroupsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.name)
}
inline void ListGroupsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.name)
}
inline ::std::string* ListGroupsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.name)
}

// string children_of_group = 2;
inline bool ListGroupsRequest::has_children_of_group() const {
  return filter_case() == kChildrenOfGroup;
}
inline void ListGroupsRequest::set_has_children_of_group() {
  _oneof_case_[0] = kChildrenOfGroup;
}
inline void ListGroupsRequest::clear_children_of_group() {
  if (has_children_of_group()) {
    filter_.children_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_filter();
  }
}
inline const ::std::string& ListGroupsRequest::children_of_group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.children_of_group)
  if (has_children_of_group()) {
    return filter_.children_of_group_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListGroupsRequest::set_children_of_group(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.children_of_group)
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.children_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.children_of_group)
}
#if LANG_CXX11
inline void ListGroupsRequest::set_children_of_group(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.children_of_group)
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.children_of_group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupsRequest.children_of_group)
}
#endif
inline void ListGroupsRequest::set_children_of_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.children_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.children_of_group)
}
inline void ListGroupsRequest::set_children_of_group(const char* value, size_t size) {
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.children_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.children_of_group)
}
inline ::std::string* ListGroupsRequest::mutable_children_of_group() {
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.children_of_group)
  return filter_.children_of_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupsRequest::release_children_of_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.children_of_group)
  if (has_children_of_group()) {
    clear_has_filter();
    return filter_.children_of_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListGroupsRequest::set_allocated_children_of_group(::std::string* children_of_group) {
  if (!has_children_of_group()) {
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_filter();
  if (children_of_group != NULL) {
    set_has_children_of_group();
    filter_.children_of_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        children_of_group);
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.children_of_group)
}

// string ancestors_of_group = 3;
inline bool ListGroupsRequest::has_ancestors_of_group() const {
  return filter_case() == kAncestorsOfGroup;
}
inline void ListGroupsRequest::set_has_ancestors_of_group() {
  _oneof_case_[0] = kAncestorsOfGroup;
}
inline void ListGroupsRequest::clear_ancestors_of_group() {
  if (has_ancestors_of_group()) {
    filter_.ancestors_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_filter();
  }
}
inline const ::std::string& ListGroupsRequest::ancestors_of_group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  if (has_ancestors_of_group()) {
    return filter_.ancestors_of_group_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListGroupsRequest::set_ancestors_of_group(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.ancestors_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}
#if LANG_CXX11
inline void ListGroupsRequest::set_ancestors_of_group(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.ancestors_of_group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}
#endif
inline void ListGroupsRequest::set_ancestors_of_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.ancestors_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}
inline void ListGroupsRequest::set_ancestors_of_group(const char* value, size_t size) {
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.ancestors_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}
inline ::std::string* ListGroupsRequest::mutable_ancestors_of_group() {
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  return filter_.ancestors_of_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupsRequest::release_ancestors_of_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  if (has_ancestors_of_group()) {
    clear_has_filter();
    return filter_.ancestors_of_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListGroupsRequest::set_allocated_ancestors_of_group(::std::string* ancestors_of_group) {
  if (!has_ancestors_of_group()) {
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_filter();
  if (ancestors_of_group != NULL) {
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ancestors_of_group);
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}

// string descendants_of_group = 4;
inline bool ListGroupsRequest::has_descendants_of_group() const {
  return filter_case() == kDescendantsOfGroup;
}
inline void ListGroupsRequest::set_has_descendants_of_group() {
  _oneof_case_[0] = kDescendantsOfGroup;
}
inline void ListGroupsRequest::clear_descendants_of_group() {
  if (has_descendants_of_group()) {
    filter_.descendants_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_filter();
  }
}
inline const ::std::string& ListGroupsRequest::descendants_of_group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  if (has_descendants_of_group()) {
    return filter_.descendants_of_group_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListGroupsRequest::set_descendants_of_group(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.descendants_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}
#if LANG_CXX11
inline void ListGroupsRequest::set_descendants_of_group(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.descendants_of_group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}
#endif
inline void ListGroupsRequest::set_descendants_of_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.descendants_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}
inline void ListGroupsRequest::set_descendants_of_group(const char* value, size_t size) {
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.descendants_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}
inline ::std::string* ListGroupsRequest::mutable_descendants_of_group() {
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  return filter_.descendants_of_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupsRequest::release_descendants_of_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  if (has_descendants_of_group()) {
    clear_has_filter();
    return filter_.descendants_of_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListGroupsRequest::set_allocated_descendants_of_group(::std::string* descendants_of_group) {
  if (!has_descendants_of_group()) {
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_filter();
  if (descendants_of_group != NULL) {
    set_has_descendants_of_group();
    filter_.descendants_of_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        descendants_of_group);
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}

// int32 page_size = 5;
inline void ListGroupsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListGroupsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.page_size)
  return page_size_;
}
inline void ListGroupsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.page_size)
}

// string page_token = 6;
inline void ListGroupsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListGroupsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.page_token)
}
#if LANG_CXX11
inline void ListGroupsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupsRequest.page_token)
}
#endif
inline void ListGroupsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.page_token)
}
inline void ListGroupsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.page_token)
}
inline ::std::string* ListGroupsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.page_token)
}

inline bool ListGroupsRequest::has_filter() const {
  return filter_case() != FILTER_NOT_SET;
}
inline void ListGroupsRequest::clear_has_filter() {
  _oneof_case_[0] = FILTER_NOT_SET;
}
inline ListGroupsRequest::FilterCase ListGroupsRequest::filter_case() const {
  return ListGroupsRequest::FilterCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListGroupsResponse

// repeated .google.monitoring.v3.Group group = 1;
inline int ListGroupsResponse::group_size() const {
  return group_.size();
}
inline const ::google::monitoring::v3::Group& ListGroupsResponse::group(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsResponse.group)
  return group_.Get(index);
}
inline ::google::monitoring::v3::Group* ListGroupsResponse::mutable_group(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsResponse.group)
  return group_.Mutable(index);
}
inline ::google::monitoring::v3::Group* ListGroupsResponse::add_group() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListGroupsResponse.group)
  return group_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::Group >*
ListGroupsResponse::mutable_group() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListGroupsResponse.group)
  return &group_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::Group >&
ListGroupsResponse::group() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListGroupsResponse.group)
  return group_;
}

// string next_page_token = 2;
inline void ListGroupsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListGroupsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListGroupsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupsResponse.next_page_token)
}
#endif
inline void ListGroupsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsResponse.next_page_token)
}
inline void ListGroupsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsResponse.next_page_token)
}
inline ::std::string* ListGroupsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetGroupRequest

// string name = 3;
inline void GetGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.GetGroupRequest.name)
  return name_.GetNoArena();
}
inline void GetGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.GetGroupRequest.name)
}
#if LANG_CXX11
inline void GetGroupRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.GetGroupRequest.name)
}
#endif
inline void GetGroupRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.GetGroupRequest.name)
}
inline void GetGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.GetGroupRequest.name)
}
inline ::std::string* GetGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.GetGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.GetGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.GetGroupRequest.name)
}

// -------------------------------------------------------------------

// CreateGroupRequest

// string name = 4;
inline void CreateGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateGroupRequest.name)
  return name_.GetNoArena();
}
inline void CreateGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateGroupRequest.name)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.CreateGroupRequest.name)
}
#endif
inline void CreateGroupRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.CreateGroupRequest.name)
}
inline void CreateGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.CreateGroupRequest.name)
}
inline ::std::string* CreateGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateGroupRequest.name)
}

// .google.monitoring.v3.Group group = 2;
inline bool CreateGroupRequest::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
inline const ::google::monitoring::v3::Group& CreateGroupRequest::group() const {
  const ::google::monitoring::v3::Group* p = group_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateGroupRequest.group)
  return p != NULL ? *p : *reinterpret_cast<const ::google::monitoring::v3::Group*>(
      &::google::monitoring::v3::_Group_default_instance_);
}
inline ::google::monitoring::v3::Group* CreateGroupRequest::release_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateGroupRequest.group)
  
  ::google::monitoring::v3::Group* temp = group_;
  group_ = NULL;
  return temp;
}
inline ::google::monitoring::v3::Group* CreateGroupRequest::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::google::monitoring::v3::Group;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateGroupRequest.group)
  return group_;
}
inline void CreateGroupRequest::set_allocated_group(::google::monitoring::v3::Group* group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(group_);
  }
  if (group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group, submessage_arena);
    }
    
  } else {
    
  }
  group_ = group;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateGroupRequest.group)
}

// bool validate_only = 3;
inline void CreateGroupRequest::clear_validate_only() {
  validate_only_ = false;
}
inline bool CreateGroupRequest::validate_only() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateGroupRequest.validate_only)
  return validate_only_;
}
inline void CreateGroupRequest::set_validate_only(bool value) {
  
  validate_only_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateGroupRequest.validate_only)
}

// -------------------------------------------------------------------

// UpdateGroupRequest

// .google.monitoring.v3.Group group = 2;
inline bool UpdateGroupRequest::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
inline const ::google::monitoring::v3::Group& UpdateGroupRequest::group() const {
  const ::google::monitoring::v3::Group* p = group_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.UpdateGroupRequest.group)
  return p != NULL ? *p : *reinterpret_cast<const ::google::monitoring::v3::Group*>(
      &::google::monitoring::v3::_Group_default_instance_);
}
inline ::google::monitoring::v3::Group* UpdateGroupRequest::release_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.UpdateGroupRequest.group)
  
  ::google::monitoring::v3::Group* temp = group_;
  group_ = NULL;
  return temp;
}
inline ::google::monitoring::v3::Group* UpdateGroupRequest::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::google::monitoring::v3::Group;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.UpdateGroupRequest.group)
  return group_;
}
inline void UpdateGroupRequest::set_allocated_group(::google::monitoring::v3::Group* group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(group_);
  }
  if (group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group, submessage_arena);
    }
    
  } else {
    
  }
  group_ = group;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.UpdateGroupRequest.group)
}

// bool validate_only = 3;
inline void UpdateGroupRequest::clear_validate_only() {
  validate_only_ = false;
}
inline bool UpdateGroupRequest::validate_only() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.UpdateGroupRequest.validate_only)
  return validate_only_;
}
inline void UpdateGroupRequest::set_validate_only(bool value) {
  
  validate_only_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.UpdateGroupRequest.validate_only)
}

// -------------------------------------------------------------------

// DeleteGroupRequest

// string name = 3;
inline void DeleteGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.DeleteGroupRequest.name)
  return name_.GetNoArena();
}
inline void DeleteGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.DeleteGroupRequest.name)
}
#if LANG_CXX11
inline void DeleteGroupRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.DeleteGroupRequest.name)
}
#endif
inline void DeleteGroupRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.DeleteGroupRequest.name)
}
inline void DeleteGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.DeleteGroupRequest.name)
}
inline ::std::string* DeleteGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.DeleteGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.DeleteGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.DeleteGroupRequest.name)
}

// -------------------------------------------------------------------

// ListGroupMembersRequest

// string name = 7;
inline void ListGroupMembersRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupMembersRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.name)
  return name_.GetNoArena();
}
inline void ListGroupMembersRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.name)
}
#if LANG_CXX11
inline void ListGroupMembersRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupMembersRequest.name)
}
#endif
inline void ListGroupMembersRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersRequest.name)
}
inline void ListGroupMembersRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersRequest.name)
}
inline ::std::string* ListGroupMembersRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupMembersRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupMembersRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.name)
}

// int32 page_size = 3;
inline void ListGroupMembersRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListGroupMembersRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.page_size)
  return page_size_;
}
inline void ListGroupMembersRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.page_size)
}

// string page_token = 4;
inline void ListGroupMembersRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupMembersRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListGroupMembersRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.page_token)
}
#if LANG_CXX11
inline void ListGroupMembersRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupMembersRequest.page_token)
}
#endif
inline void ListGroupMembersRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersRequest.page_token)
}
inline void ListGroupMembersRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersRequest.page_token)
}
inline ::std::string* ListGroupMembersRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupMembersRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupMembersRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.page_token)
}

// string filter = 5;
inline void ListGroupMembersRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupMembersRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.filter)
  return filter_.GetNoArena();
}
inline void ListGroupMembersRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.filter)
}
#if LANG_CXX11
inline void ListGroupMembersRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupMembersRequest.filter)
}
#endif
inline void ListGroupMembersRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersRequest.filter)
}
inline void ListGroupMembersRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersRequest.filter)
}
inline ::std::string* ListGroupMembersRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupMembersRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupMembersRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.filter)
}

// .google.monitoring.v3.TimeInterval interval = 6;
inline bool ListGroupMembersRequest::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::google::monitoring::v3::TimeInterval& ListGroupMembersRequest::interval() const {
  const ::google::monitoring::v3::TimeInterval* p = interval_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::google::monitoring::v3::TimeInterval*>(
      &::google::monitoring::v3::_TimeInterval_default_instance_);
}
inline ::google::monitoring::v3::TimeInterval* ListGroupMembersRequest::release_interval() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.interval)
  
  ::google::monitoring::v3::TimeInterval* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::google::monitoring::v3::TimeInterval* ListGroupMembersRequest::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::monitoring::v3::TimeInterval;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.interval)
  return interval_;
}
inline void ListGroupMembersRequest::set_allocated_interval(::google::monitoring::v3::TimeInterval* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.interval)
}

// -------------------------------------------------------------------

// ListGroupMembersResponse

// repeated .google.api.MonitoredResource members = 1;
inline int ListGroupMembersResponse::members_size() const {
  return members_.size();
}
inline const ::google::api::MonitoredResource& ListGroupMembersResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_.Get(index);
}
inline ::google::api::MonitoredResource* ListGroupMembersResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_.Mutable(index);
}
inline ::google::api::MonitoredResource* ListGroupMembersResponse::add_members() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResource >*
ListGroupMembersResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListGroupMembersResponse.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResource >&
ListGroupMembersResponse::members() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_;
}

// string next_page_token = 2;
inline void ListGroupMembersResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupMembersResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListGroupMembersResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}
#if LANG_CXX11
inline void ListGroupMembersResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}
#endif
inline void ListGroupMembersResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}
inline void ListGroupMembersResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}
inline ::std::string* ListGroupMembersResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupMembersResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupMembersResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}

// int32 total_size = 3;
inline void ListGroupMembersResponse::clear_total_size() {
  total_size_ = 0;
}
inline ::google::protobuf::int32 ListGroupMembersResponse::total_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersResponse.total_size)
  return total_size_;
}
inline void ListGroupMembersResponse::set_total_size(::google::protobuf::int32 value) {
  
  total_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersResponse.total_size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v3
}  // namespace monitoring
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto__INCLUDED
