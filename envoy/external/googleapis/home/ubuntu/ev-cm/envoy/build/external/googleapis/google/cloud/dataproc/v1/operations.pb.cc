// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1/operations.proto

#include "google/cloud/dataproc/v1/operations.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace dataproc {
namespace v1 {
class ClusterOperationStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterOperationStatus>
      _instance;
} _ClusterOperationStatus_default_instance_;
class ClusterOperationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterOperationMetadata>
      _instance;
} _ClusterOperationMetadata_default_instance_;
}  // namespace v1
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto {
void InitDefaultsClusterOperationStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::cloud::dataproc::v1::_ClusterOperationStatus_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::ClusterOperationStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::ClusterOperationStatus::InitAsDefaultInstance();
}

void InitDefaultsClusterOperationStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterOperationStatusImpl);
}

void InitDefaultsClusterOperationMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::InitDefaultsClusterOperationStatus();
  {
    void* ptr = &::google::cloud::dataproc::v1::_ClusterOperationMetadata_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::ClusterOperationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::ClusterOperationMetadata::InitAsDefaultInstance();
}

void InitDefaultsClusterOperationMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterOperationMetadataImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationStatus, inner_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationStatus, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationStatus, state_start_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationMetadata, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationMetadata, cluster_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationMetadata, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationMetadata, status_history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationMetadata, operation_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ClusterOperationMetadata, description_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::dataproc::v1::ClusterOperationStatus)},
  { 9, -1, sizeof(::google::cloud::dataproc::v1::ClusterOperationMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_ClusterOperationStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_ClusterOperationMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/dataproc/v1/operations.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)google/cloud/dataproc/v1/operations.pr"
      "oto\022\030google.cloud.dataproc.v1\032\034google/ap"
      "i/annotations.proto\032#google/longrunning/"
      "operations.proto\032\033google/protobuf/empty."
      "proto\032\037google/protobuf/timestamp.proto\"\365"
      "\001\n\026ClusterOperationStatus\022E\n\005state\030\001 \001(\016"
      "26.google.cloud.dataproc.v1.ClusterOpera"
      "tionStatus.State\022\023\n\013inner_state\030\002 \001(\t\022\017\n"
      "\007details\030\003 \001(\t\0224\n\020state_start_time\030\004 \001(\013"
      "2\032.google.protobuf.Timestamp\"8\n\005State\022\013\n"
      "\007UNKNOWN\020\000\022\013\n\007PENDING\020\001\022\013\n\007RUNNING\020\002\022\010\n\004"
      "DONE\020\003\"\377\001\n\030ClusterOperationMetadata\022\024\n\014c"
      "luster_name\030\007 \001(\t\022\024\n\014cluster_uuid\030\010 \001(\t\022"
      "@\n\006status\030\t \001(\01320.google.cloud.dataproc."
      "v1.ClusterOperationStatus\022H\n\016status_hist"
      "ory\030\n \003(\01320.google.cloud.dataproc.v1.Clu"
      "sterOperationStatus\022\026\n\016operation_type\030\013 "
      "\001(\t\022\023\n\013description\030\014 \001(\tBs\n\034com.google.c"
      "loud.dataproc.v1B\017OperationsProtoP\001Z@goo"
      "gle.golang.org/genproto/googleapis/cloud"
      "/dataproc/v1;dataprocb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 829);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dataproc/v1/operations.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1 {
const ::google::protobuf::EnumDescriptor* ClusterOperationStatus_State_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::file_level_enum_descriptors[0];
}
bool ClusterOperationStatus_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClusterOperationStatus_State ClusterOperationStatus::UNKNOWN;
const ClusterOperationStatus_State ClusterOperationStatus::PENDING;
const ClusterOperationStatus_State ClusterOperationStatus::RUNNING;
const ClusterOperationStatus_State ClusterOperationStatus::DONE;
const ClusterOperationStatus_State ClusterOperationStatus::State_MIN;
const ClusterOperationStatus_State ClusterOperationStatus::State_MAX;
const int ClusterOperationStatus::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ClusterOperationStatus::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_ClusterOperationStatus_default_instance_._instance.get_mutable()->state_start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ClusterOperationStatus::clear_state_start_time() {
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) {
    delete state_start_time_;
  }
  state_start_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterOperationStatus::kStateFieldNumber;
const int ClusterOperationStatus::kInnerStateFieldNumber;
const int ClusterOperationStatus::kDetailsFieldNumber;
const int ClusterOperationStatus::kStateStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterOperationStatus::ClusterOperationStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::InitDefaultsClusterOperationStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.ClusterOperationStatus)
}
ClusterOperationStatus::ClusterOperationStatus(const ClusterOperationStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inner_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inner_state().size() > 0) {
    inner_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inner_state_);
  }
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.details().size() > 0) {
    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_state_start_time()) {
    state_start_time_ = new ::google::protobuf::Timestamp(*from.state_start_time_);
  } else {
    state_start_time_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.ClusterOperationStatus)
}

void ClusterOperationStatus::SharedCtor() {
  inner_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&state_start_time_)) + sizeof(state_));
  _cached_size_ = 0;
}

ClusterOperationStatus::~ClusterOperationStatus() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.ClusterOperationStatus)
  SharedDtor();
}

void ClusterOperationStatus::SharedDtor() {
  inner_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_start_time_;
}

void ClusterOperationStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterOperationStatus::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterOperationStatus& ClusterOperationStatus::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::InitDefaultsClusterOperationStatus();
  return *internal_default_instance();
}

ClusterOperationStatus* ClusterOperationStatus::New(::google::protobuf::Arena* arena) const {
  ClusterOperationStatus* n = new ClusterOperationStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterOperationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inner_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) {
    delete state_start_time_;
  }
  state_start_time_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool ClusterOperationStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::dataproc::v1::ClusterOperationStatus_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inner_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inner_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inner_state().data(), static_cast<int>(this->inner_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationStatus.inner_state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details().data(), static_cast<int>(this->details().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationStatus.details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp state_start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.ClusterOperationStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.ClusterOperationStatus)
  return false;
#undef DO_
}

void ClusterOperationStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // string inner_state = 2;
  if (this->inner_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inner_state().data(), static_cast<int>(this->inner_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.inner_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->inner_state(), output);
  }

  // string details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->details(), output);
  }

  // .google.protobuf.Timestamp state_start_time = 4;
  if (this->has_state_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->state_start_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.ClusterOperationStatus)
}

::google::protobuf::uint8* ClusterOperationStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // string inner_state = 2;
  if (this->inner_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inner_state().data(), static_cast<int>(this->inner_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.inner_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->inner_state(), target);
  }

  // string details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->details(), target);
  }

  // .google.protobuf.Timestamp state_start_time = 4;
  if (this->has_state_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->state_start_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.ClusterOperationStatus)
  return target;
}

size_t ClusterOperationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string inner_state = 2;
  if (this->inner_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inner_state());
  }

  // string details = 3;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->details());
  }

  // .google.protobuf.Timestamp state_start_time = 4;
  if (this->has_state_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_start_time_);
  }

  // .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterOperationStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterOperationStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterOperationStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.ClusterOperationStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.ClusterOperationStatus)
    MergeFrom(*source);
  }
}

void ClusterOperationStatus::MergeFrom(const ClusterOperationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.inner_state().size() > 0) {

    inner_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inner_state_);
  }
  if (from.details().size() > 0) {

    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_state_start_time()) {
    mutable_state_start_time()->::google::protobuf::Timestamp::MergeFrom(from.state_start_time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void ClusterOperationStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterOperationStatus::CopyFrom(const ClusterOperationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterOperationStatus::IsInitialized() const {
  return true;
}

void ClusterOperationStatus::Swap(ClusterOperationStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterOperationStatus::InternalSwap(ClusterOperationStatus* other) {
  using std::swap;
  inner_state_.Swap(&other->inner_state_);
  details_.Swap(&other->details_);
  swap(state_start_time_, other->state_start_time_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterOperationStatus::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterOperationMetadata::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_ClusterOperationMetadata_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::cloud::dataproc::v1::ClusterOperationStatus*>(
      ::google::cloud::dataproc::v1::ClusterOperationStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterOperationMetadata::kClusterNameFieldNumber;
const int ClusterOperationMetadata::kClusterUuidFieldNumber;
const int ClusterOperationMetadata::kStatusFieldNumber;
const int ClusterOperationMetadata::kStatusHistoryFieldNumber;
const int ClusterOperationMetadata::kOperationTypeFieldNumber;
const int ClusterOperationMetadata::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterOperationMetadata::ClusterOperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::InitDefaultsClusterOperationMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.ClusterOperationMetadata)
}
ClusterOperationMetadata::ClusterOperationMetadata(const ClusterOperationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_history_(from.status_history_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_uuid().size() > 0) {
    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  operation_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_type().size() > 0) {
    operation_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_type_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_status()) {
    status_ = new ::google::cloud::dataproc::v1::ClusterOperationStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.ClusterOperationMetadata)
}

void ClusterOperationMetadata::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
  _cached_size_ = 0;
}

ClusterOperationMetadata::~ClusterOperationMetadata() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.ClusterOperationMetadata)
  SharedDtor();
}

void ClusterOperationMetadata::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void ClusterOperationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterOperationMetadata::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterOperationMetadata& ClusterOperationMetadata::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::InitDefaultsClusterOperationMetadata();
  return *internal_default_instance();
}

ClusterOperationMetadata* ClusterOperationMetadata::New(::google::protobuf::Arena* arena) const {
  ClusterOperationMetadata* n = new ClusterOperationMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterOperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_history_.Clear();
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool ClusterOperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_uuid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_status_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_type().data(), static_cast<int>(this->operation_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.ClusterOperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.ClusterOperationMetadata)
  return false;
#undef DO_
}

void ClusterOperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cluster_name(), output);
  }

  // string cluster_uuid = 8;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->cluster_uuid(), output);
  }

  // .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->status_, output);
  }

  // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_history_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->status_history(static_cast<int>(i)), output);
  }

  // string operation_type = 11;
  if (this->operation_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_type().data(), static_cast<int>(this->operation_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->operation_type(), output);
  }

  // string description = 12;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.ClusterOperationMetadata)
}

::google::protobuf::uint8* ClusterOperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cluster_name(), target);
  }

  // string cluster_uuid = 8;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->cluster_uuid(), target);
  }

  // .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->status_, deterministic, target);
  }

  // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_history_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->status_history(static_cast<int>(i)), deterministic, target);
  }

  // string operation_type = 11;
  if (this->operation_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_type().data(), static_cast<int>(this->operation_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->operation_type(), target);
  }

  // string description = 12;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.ClusterOperationMetadata)
  return target;
}

size_t ClusterOperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->status_history_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->status_history(static_cast<int>(i)));
    }
  }

  // string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string cluster_uuid = 8;
  if (this->cluster_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_uuid());
  }

  // string operation_type = 11;
  if (this->operation_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_type());
  }

  // string description = 12;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterOperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterOperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterOperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.ClusterOperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.ClusterOperationMetadata)
    MergeFrom(*source);
  }
}

void ClusterOperationMetadata::MergeFrom(const ClusterOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_history_.MergeFrom(from.status_history_);
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.cluster_uuid().size() > 0) {

    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  if (from.operation_type().size() > 0) {

    operation_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_type_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_status()) {
    mutable_status()->::google::cloud::dataproc::v1::ClusterOperationStatus::MergeFrom(from.status());
  }
}

void ClusterOperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterOperationMetadata::CopyFrom(const ClusterOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterOperationMetadata::IsInitialized() const {
  return true;
}

void ClusterOperationMetadata::Swap(ClusterOperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterOperationMetadata::InternalSwap(ClusterOperationMetadata* other) {
  using std::swap;
  status_history_.InternalSwap(&other->status_history_);
  cluster_name_.Swap(&other->cluster_name_);
  cluster_uuid_.Swap(&other->cluster_uuid_);
  operation_type_.Swap(&other->operation_type_);
  description_.Swap(&other->description_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterOperationMetadata::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace dataproc
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
