// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bytestream/bytestream.proto

#include "google/bytestream/bytestream.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace bytestream {
class ReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRequest>
      _instance;
} _ReadRequest_default_instance_;
class ReadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResponse>
      _instance;
} _ReadResponse_default_instance_;
class WriteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRequest>
      _instance;
} _WriteRequest_default_instance_;
class WriteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteResponse>
      _instance;
} _WriteResponse_default_instance_;
class QueryWriteStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryWriteStatusRequest>
      _instance;
} _QueryWriteStatusRequest_default_instance_;
class QueryWriteStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryWriteStatusResponse>
      _instance;
} _QueryWriteStatusResponse_default_instance_;
}  // namespace bytestream
}  // namespace google
namespace protobuf_google_2fbytestream_2fbytestream_2eproto {
void InitDefaultsReadRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bytestream::_ReadRequest_default_instance_;
    new (ptr) ::google::bytestream::ReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bytestream::ReadRequest::InitAsDefaultInstance();
}

void InitDefaultsReadRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadRequestImpl);
}

void InitDefaultsReadResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bytestream::_ReadResponse_default_instance_;
    new (ptr) ::google::bytestream::ReadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bytestream::ReadResponse::InitAsDefaultInstance();
}

void InitDefaultsReadResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadResponseImpl);
}

void InitDefaultsWriteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bytestream::_WriteRequest_default_instance_;
    new (ptr) ::google::bytestream::WriteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bytestream::WriteRequest::InitAsDefaultInstance();
}

void InitDefaultsWriteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteRequestImpl);
}

void InitDefaultsWriteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bytestream::_WriteResponse_default_instance_;
    new (ptr) ::google::bytestream::WriteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bytestream::WriteResponse::InitAsDefaultInstance();
}

void InitDefaultsWriteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteResponseImpl);
}

void InitDefaultsQueryWriteStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bytestream::_QueryWriteStatusRequest_default_instance_;
    new (ptr) ::google::bytestream::QueryWriteStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bytestream::QueryWriteStatusRequest::InitAsDefaultInstance();
}

void InitDefaultsQueryWriteStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryWriteStatusRequestImpl);
}

void InitDefaultsQueryWriteStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bytestream::_QueryWriteStatusResponse_default_instance_;
    new (ptr) ::google::bytestream::QueryWriteStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bytestream::QueryWriteStatusResponse::InitAsDefaultInstance();
}

void InitDefaultsQueryWriteStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryWriteStatusResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::ReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::ReadRequest, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::ReadRequest, read_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::ReadRequest, read_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::ReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::ReadResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::WriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::WriteRequest, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::WriteRequest, write_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::WriteRequest, finish_write_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::WriteRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::WriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::WriteResponse, committed_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::QueryWriteStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::QueryWriteStatusRequest, resource_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::QueryWriteStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::QueryWriteStatusResponse, committed_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bytestream::QueryWriteStatusResponse, complete_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::bytestream::ReadRequest)},
  { 8, -1, sizeof(::google::bytestream::ReadResponse)},
  { 14, -1, sizeof(::google::bytestream::WriteRequest)},
  { 23, -1, sizeof(::google::bytestream::WriteResponse)},
  { 29, -1, sizeof(::google::bytestream::QueryWriteStatusRequest)},
  { 35, -1, sizeof(::google::bytestream::QueryWriteStatusResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bytestream::_ReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bytestream::_ReadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bytestream::_WriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bytestream::_WriteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bytestream::_QueryWriteStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bytestream::_QueryWriteStatusResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/bytestream/bytestream.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"google/bytestream/bytestream.proto\022\021go"
      "ogle.bytestream\032\034google/api/annotations."
      "proto\032\036google/protobuf/wrappers.proto\"M\n"
      "\013ReadRequest\022\025\n\rresource_name\030\001 \001(\t\022\023\n\013r"
      "ead_offset\030\002 \001(\003\022\022\n\nread_limit\030\003 \001(\003\"\034\n\014"
      "ReadResponse\022\014\n\004data\030\n \001(\014\"_\n\014WriteReque"
      "st\022\025\n\rresource_name\030\001 \001(\t\022\024\n\014write_offse"
      "t\030\002 \001(\003\022\024\n\014finish_write\030\003 \001(\010\022\014\n\004data\030\n "
      "\001(\014\"\'\n\rWriteResponse\022\026\n\016committed_size\030\001"
      " \001(\003\"0\n\027QueryWriteStatusRequest\022\025\n\rresou"
      "rce_name\030\001 \001(\t\"D\n\030QueryWriteStatusRespon"
      "se\022\026\n\016committed_size\030\001 \001(\003\022\020\n\010complete\030\002"
      " \001(\0102\222\002\n\nByteStream\022I\n\004Read\022\036.google.byt"
      "estream.ReadRequest\032\037.google.bytestream."
      "ReadResponse0\001\022L\n\005Write\022\037.google.bytestr"
      "eam.WriteRequest\032 .google.bytestream.Wri"
      "teResponse(\001\022k\n\020QueryWriteStatus\022*.googl"
      "e.bytestream.QueryWriteStatusRequest\032+.g"
      "oogle.bytestream.QueryWriteStatusRespons"
      "eBe\n\025com.google.bytestreamB\017ByteStreamPr"
      "otoZ;google.golang.org/genproto/googleap"
      "is/bytestream;bytestreamb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 872);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bytestream/bytestream.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fbytestream_2fbytestream_2eproto
namespace google {
namespace bytestream {

// ===================================================================

void ReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kResourceNameFieldNumber;
const int ReadRequest::kReadOffsetFieldNumber;
const int ReadRequest::kReadLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsReadRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.ReadRequest)
}
ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  ::memcpy(&read_offset_, &from.read_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&read_limit_) -
    reinterpret_cast<char*>(&read_offset_)) + sizeof(read_limit_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadRequest)
}

void ReadRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&read_limit_) -
      reinterpret_cast<char*>(&read_offset_)) + sizeof(read_limit_));
  _cached_size_ = 0;
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRequest& ReadRequest::default_instance() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsReadRequest();
  return *internal_default_instance();
}

ReadRequest* ReadRequest::New(::google::protobuf::Arena* arena) const {
  ReadRequest* n = new ReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&read_limit_) -
      reinterpret_cast<char*>(&read_offset_)) + sizeof(read_limit_));
  _internal_metadata_.Clear();
}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.ReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.ReadRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 read_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 read_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.ReadRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->read_offset(), output);
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->read_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bytestream.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.ReadRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->read_offset(), target);
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->read_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_offset());
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.read_offset() != 0) {
    set_read_offset(from.read_offset());
  }
  if (from.read_limit() != 0) {
    set_read_limit(from.read_limit());
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {
  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  using std::swap;
  resource_name_.Swap(&other->resource_name_);
  swap(read_offset_, other->read_offset_);
  swap(read_limit_, other->read_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsReadResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.ReadResponse)
}
ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadResponse)
}

void ReadResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadResponse::descriptor() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResponse& ReadResponse::default_instance() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsReadResponse();
  return *internal_default_instance();
}

ReadResponse* ReadResponse::New(::google::protobuf::Arena* arena) const {
  ReadResponse* n = new ReadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.ReadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.ReadResponse)
  return false;
#undef DO_
}

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bytestream.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadResponse)
    MergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponse::IsInitialized() const {
  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kResourceNameFieldNumber;
const int WriteRequest::kWriteOffsetFieldNumber;
const int WriteRequest::kFinishWriteFieldNumber;
const int WriteRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsWriteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.WriteRequest)
}
WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&write_offset_, &from.write_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&finish_write_) -
    reinterpret_cast<char*>(&write_offset_)) + sizeof(finish_write_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteRequest)
}

void WriteRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&write_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_write_) -
      reinterpret_cast<char*>(&write_offset_)) + sizeof(finish_write_));
  _cached_size_ = 0;
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteRequest& WriteRequest::default_instance() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsWriteRequest();
  return *internal_default_instance();
}

WriteRequest* WriteRequest::New(::google::protobuf::Arena* arena) const {
  WriteRequest* n = new WriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&write_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_write_) -
      reinterpret_cast<char*>(&write_offset_)) + sizeof(finish_write_));
  _internal_metadata_.Clear();
}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.WriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.WriteRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 write_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &write_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool finish_write = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finish_write_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.WriteRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->write_offset(), output);
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->finish_write(), output);
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bytestream.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.WriteRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->write_offset(), target);
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->finish_write(), target);
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->write_offset());
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.write_offset() != 0) {
    set_write_offset(from.write_offset());
  }
  if (from.finish_write() != 0) {
    set_finish_write(from.finish_write());
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {
  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  using std::swap;
  resource_name_.Swap(&other->resource_name_);
  data_.Swap(&other->data_);
  swap(write_offset_, other->write_offset_);
  swap(finish_write_, other->finish_write_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteResponse::kCommittedSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResponse::WriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsWriteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.WriteResponse)
}
WriteResponse::WriteResponse(const WriteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  committed_size_ = from.committed_size_;
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteResponse)
}

void WriteResponse::SharedCtor() {
  committed_size_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

WriteResponse::~WriteResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteResponse)
  SharedDtor();
}

void WriteResponse::SharedDtor() {
}

void WriteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteResponse::descriptor() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteResponse& WriteResponse::default_instance() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsWriteResponse();
  return *internal_default_instance();
}

WriteResponse* WriteResponse::New(::google::protobuf::Arena* arena) const {
  WriteResponse* n = new WriteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  committed_size_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool WriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.WriteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 committed_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &committed_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.WriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.WriteResponse)
  return false;
#undef DO_
}

void WriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->committed_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bytestream.WriteResponse)
}

::google::protobuf::uint8* WriteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->committed_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteResponse)
  return target;
}

size_t WriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->committed_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteResponse)
    MergeFrom(*source);
  }
}

void WriteResponse::MergeFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.committed_size() != 0) {
    set_committed_size(from.committed_size());
  }
}

void WriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResponse::CopyFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResponse::IsInitialized() const {
  return true;
}

void WriteResponse::Swap(WriteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteResponse::InternalSwap(WriteResponse* other) {
  using std::swap;
  swap(committed_size_, other->committed_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteResponse::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryWriteStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryWriteStatusRequest::kResourceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryWriteStatusRequest::QueryWriteStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsQueryWriteStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.QueryWriteStatusRequest)
}
QueryWriteStatusRequest::QueryWriteStatusRequest(const QueryWriteStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusRequest)
}

void QueryWriteStatusRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryWriteStatusRequest::~QueryWriteStatusRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusRequest)
  SharedDtor();
}

void QueryWriteStatusRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryWriteStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWriteStatusRequest::descriptor() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryWriteStatusRequest& QueryWriteStatusRequest::default_instance() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsQueryWriteStatusRequest();
  return *internal_default_instance();
}

QueryWriteStatusRequest* QueryWriteStatusRequest::New(::google::protobuf::Arena* arena) const {
  QueryWriteStatusRequest* n = new QueryWriteStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryWriteStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryWriteStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.QueryWriteStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.QueryWriteStatusRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.QueryWriteStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.QueryWriteStatusRequest)
  return false;
#undef DO_
}

void QueryWriteStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.QueryWriteStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.QueryWriteStatusRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bytestream.QueryWriteStatusRequest)
}

::google::protobuf::uint8* QueryWriteStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.QueryWriteStatusRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusRequest)
  return target;
}

size_t QueryWriteStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWriteStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryWriteStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryWriteStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusRequest)
    MergeFrom(*source);
  }
}

void QueryWriteStatusRequest::MergeFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
}

void QueryWriteStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusRequest::CopyFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWriteStatusRequest::IsInitialized() const {
  return true;
}

void QueryWriteStatusRequest::Swap(QueryWriteStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryWriteStatusRequest::InternalSwap(QueryWriteStatusRequest* other) {
  using std::swap;
  resource_name_.Swap(&other->resource_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryWriteStatusRequest::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryWriteStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryWriteStatusResponse::kCommittedSizeFieldNumber;
const int QueryWriteStatusResponse::kCompleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryWriteStatusResponse::QueryWriteStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsQueryWriteStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.QueryWriteStatusResponse)
}
QueryWriteStatusResponse::QueryWriteStatusResponse(const QueryWriteStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&committed_size_, &from.committed_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&complete_) -
    reinterpret_cast<char*>(&committed_size_)) + sizeof(complete_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusResponse)
}

void QueryWriteStatusResponse::SharedCtor() {
  ::memset(&committed_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&complete_) -
      reinterpret_cast<char*>(&committed_size_)) + sizeof(complete_));
  _cached_size_ = 0;
}

QueryWriteStatusResponse::~QueryWriteStatusResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusResponse)
  SharedDtor();
}

void QueryWriteStatusResponse::SharedDtor() {
}

void QueryWriteStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWriteStatusResponse::descriptor() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryWriteStatusResponse& QueryWriteStatusResponse::default_instance() {
  ::protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaultsQueryWriteStatusResponse();
  return *internal_default_instance();
}

QueryWriteStatusResponse* QueryWriteStatusResponse::New(::google::protobuf::Arena* arena) const {
  QueryWriteStatusResponse* n = new QueryWriteStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryWriteStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&committed_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&complete_) -
      reinterpret_cast<char*>(&committed_size_)) + sizeof(complete_));
  _internal_metadata_.Clear();
}

bool QueryWriteStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.QueryWriteStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 committed_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &committed_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool complete = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &complete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.QueryWriteStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.QueryWriteStatusResponse)
  return false;
#undef DO_
}

void QueryWriteStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.QueryWriteStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->committed_size(), output);
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->complete(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bytestream.QueryWriteStatusResponse)
}

::google::protobuf::uint8* QueryWriteStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->committed_size(), target);
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->complete(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusResponse)
  return target;
}

size_t QueryWriteStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->committed_size());
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWriteStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryWriteStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryWriteStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusResponse)
    MergeFrom(*source);
  }
}

void QueryWriteStatusResponse::MergeFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.committed_size() != 0) {
    set_committed_size(from.committed_size());
  }
  if (from.complete() != 0) {
    set_complete(from.complete());
  }
}

void QueryWriteStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusResponse::CopyFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWriteStatusResponse::IsInitialized() const {
  return true;
}

void QueryWriteStatusResponse::Swap(QueryWriteStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryWriteStatusResponse::InternalSwap(QueryWriteStatusResponse* other) {
  using std::swap;
  swap(committed_size_, other->committed_size_);
  swap(complete_, other->complete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryWriteStatusResponse::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bytestream
}  // namespace google

// @@protoc_insertion_point(global_scope)
