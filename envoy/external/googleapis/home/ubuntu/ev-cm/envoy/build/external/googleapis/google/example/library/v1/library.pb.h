// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/example/library/v1/library.proto

#ifndef PROTOBUF_google_2fexample_2flibrary_2fv1_2flibrary_2eproto__INCLUDED
#define PROTOBUF_google_2fexample_2flibrary_2fv1_2flibrary_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[15];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsBookImpl();
void InitDefaultsBook();
void InitDefaultsShelfImpl();
void InitDefaultsShelf();
void InitDefaultsCreateShelfRequestImpl();
void InitDefaultsCreateShelfRequest();
void InitDefaultsGetShelfRequestImpl();
void InitDefaultsGetShelfRequest();
void InitDefaultsListShelvesRequestImpl();
void InitDefaultsListShelvesRequest();
void InitDefaultsListShelvesResponseImpl();
void InitDefaultsListShelvesResponse();
void InitDefaultsDeleteShelfRequestImpl();
void InitDefaultsDeleteShelfRequest();
void InitDefaultsMergeShelvesRequestImpl();
void InitDefaultsMergeShelvesRequest();
void InitDefaultsCreateBookRequestImpl();
void InitDefaultsCreateBookRequest();
void InitDefaultsGetBookRequestImpl();
void InitDefaultsGetBookRequest();
void InitDefaultsListBooksRequestImpl();
void InitDefaultsListBooksRequest();
void InitDefaultsListBooksResponseImpl();
void InitDefaultsListBooksResponse();
void InitDefaultsUpdateBookRequestImpl();
void InitDefaultsUpdateBookRequest();
void InitDefaultsDeleteBookRequestImpl();
void InitDefaultsDeleteBookRequest();
void InitDefaultsMoveBookRequestImpl();
void InitDefaultsMoveBookRequest();
inline void InitDefaults() {
  InitDefaultsBook();
  InitDefaultsShelf();
  InitDefaultsCreateShelfRequest();
  InitDefaultsGetShelfRequest();
  InitDefaultsListShelvesRequest();
  InitDefaultsListShelvesResponse();
  InitDefaultsDeleteShelfRequest();
  InitDefaultsMergeShelvesRequest();
  InitDefaultsCreateBookRequest();
  InitDefaultsGetBookRequest();
  InitDefaultsListBooksRequest();
  InitDefaultsListBooksResponse();
  InitDefaultsUpdateBookRequest();
  InitDefaultsDeleteBookRequest();
  InitDefaultsMoveBookRequest();
}
}  // namespace protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto
namespace google {
namespace example {
namespace library {
namespace v1 {
class Book;
class BookDefaultTypeInternal;
extern BookDefaultTypeInternal _Book_default_instance_;
class CreateBookRequest;
class CreateBookRequestDefaultTypeInternal;
extern CreateBookRequestDefaultTypeInternal _CreateBookRequest_default_instance_;
class CreateShelfRequest;
class CreateShelfRequestDefaultTypeInternal;
extern CreateShelfRequestDefaultTypeInternal _CreateShelfRequest_default_instance_;
class DeleteBookRequest;
class DeleteBookRequestDefaultTypeInternal;
extern DeleteBookRequestDefaultTypeInternal _DeleteBookRequest_default_instance_;
class DeleteShelfRequest;
class DeleteShelfRequestDefaultTypeInternal;
extern DeleteShelfRequestDefaultTypeInternal _DeleteShelfRequest_default_instance_;
class GetBookRequest;
class GetBookRequestDefaultTypeInternal;
extern GetBookRequestDefaultTypeInternal _GetBookRequest_default_instance_;
class GetShelfRequest;
class GetShelfRequestDefaultTypeInternal;
extern GetShelfRequestDefaultTypeInternal _GetShelfRequest_default_instance_;
class ListBooksRequest;
class ListBooksRequestDefaultTypeInternal;
extern ListBooksRequestDefaultTypeInternal _ListBooksRequest_default_instance_;
class ListBooksResponse;
class ListBooksResponseDefaultTypeInternal;
extern ListBooksResponseDefaultTypeInternal _ListBooksResponse_default_instance_;
class ListShelvesRequest;
class ListShelvesRequestDefaultTypeInternal;
extern ListShelvesRequestDefaultTypeInternal _ListShelvesRequest_default_instance_;
class ListShelvesResponse;
class ListShelvesResponseDefaultTypeInternal;
extern ListShelvesResponseDefaultTypeInternal _ListShelvesResponse_default_instance_;
class MergeShelvesRequest;
class MergeShelvesRequestDefaultTypeInternal;
extern MergeShelvesRequestDefaultTypeInternal _MergeShelvesRequest_default_instance_;
class MoveBookRequest;
class MoveBookRequestDefaultTypeInternal;
extern MoveBookRequestDefaultTypeInternal _MoveBookRequest_default_instance_;
class Shelf;
class ShelfDefaultTypeInternal;
extern ShelfDefaultTypeInternal _Shelf_default_instance_;
class UpdateBookRequest;
class UpdateBookRequestDefaultTypeInternal;
extern UpdateBookRequestDefaultTypeInternal _UpdateBookRequest_default_instance_;
}  // namespace v1
}  // namespace library
}  // namespace example
}  // namespace google
namespace google {
namespace example {
namespace library {
namespace v1 {

// ===================================================================

class Book : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.Book) */ {
 public:
  Book();
  virtual ~Book();

  Book(const Book& from);

  inline Book& operator=(const Book& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Book(Book&& from) noexcept
    : Book() {
    *this = ::std::move(from);
  }

  inline Book& operator=(Book&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Book& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Book* internal_default_instance() {
    return reinterpret_cast<const Book*>(
               &_Book_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Book* other);
  friend void swap(Book& a, Book& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Book* New() const PROTOBUF_FINAL { return New(NULL); }

  Book* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Book& from);
  void MergeFrom(const Book& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Book* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string author = 2;
  void clear_author();
  static const int kAuthorFieldNumber = 2;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // bool read = 4;
  void clear_read();
  static const int kReadFieldNumber = 4;
  bool read() const;
  void set_read(bool value);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.Book)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  bool read_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsBookImpl();
};
// -------------------------------------------------------------------

class Shelf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.Shelf) */ {
 public:
  Shelf();
  virtual ~Shelf();

  Shelf(const Shelf& from);

  inline Shelf& operator=(const Shelf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Shelf(Shelf&& from) noexcept
    : Shelf() {
    *this = ::std::move(from);
  }

  inline Shelf& operator=(Shelf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Shelf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Shelf* internal_default_instance() {
    return reinterpret_cast<const Shelf*>(
               &_Shelf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Shelf* other);
  friend void swap(Shelf& a, Shelf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Shelf* New() const PROTOBUF_FINAL { return New(NULL); }

  Shelf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shelf& from);
  void MergeFrom(const Shelf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shelf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string theme = 2;
  void clear_theme();
  static const int kThemeFieldNumber = 2;
  const ::std::string& theme() const;
  void set_theme(const ::std::string& value);
  #if LANG_CXX11
  void set_theme(::std::string&& value);
  #endif
  void set_theme(const char* value);
  void set_theme(const char* value, size_t size);
  ::std::string* mutable_theme();
  ::std::string* release_theme();
  void set_allocated_theme(::std::string* theme);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.Shelf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr theme_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsShelfImpl();
};
// -------------------------------------------------------------------

class CreateShelfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.CreateShelfRequest) */ {
 public:
  CreateShelfRequest();
  virtual ~CreateShelfRequest();

  CreateShelfRequest(const CreateShelfRequest& from);

  inline CreateShelfRequest& operator=(const CreateShelfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateShelfRequest(CreateShelfRequest&& from) noexcept
    : CreateShelfRequest() {
    *this = ::std::move(from);
  }

  inline CreateShelfRequest& operator=(CreateShelfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateShelfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateShelfRequest* internal_default_instance() {
    return reinterpret_cast<const CreateShelfRequest*>(
               &_CreateShelfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateShelfRequest* other);
  friend void swap(CreateShelfRequest& a, CreateShelfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateShelfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateShelfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateShelfRequest& from);
  void MergeFrom(const CreateShelfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateShelfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.example.library.v1.Shelf shelf = 1;
  bool has_shelf() const;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  const ::google::example::library::v1::Shelf& shelf() const;
  ::google::example::library::v1::Shelf* release_shelf();
  ::google::example::library::v1::Shelf* mutable_shelf();
  void set_allocated_shelf(::google::example::library::v1::Shelf* shelf);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.CreateShelfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::example::library::v1::Shelf* shelf_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsCreateShelfRequestImpl();
};
// -------------------------------------------------------------------

class GetShelfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.GetShelfRequest) */ {
 public:
  GetShelfRequest();
  virtual ~GetShelfRequest();

  GetShelfRequest(const GetShelfRequest& from);

  inline GetShelfRequest& operator=(const GetShelfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetShelfRequest(GetShelfRequest&& from) noexcept
    : GetShelfRequest() {
    *this = ::std::move(from);
  }

  inline GetShelfRequest& operator=(GetShelfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShelfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetShelfRequest* internal_default_instance() {
    return reinterpret_cast<const GetShelfRequest*>(
               &_GetShelfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GetShelfRequest* other);
  friend void swap(GetShelfRequest& a, GetShelfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetShelfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetShelfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetShelfRequest& from);
  void MergeFrom(const GetShelfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetShelfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.GetShelfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsGetShelfRequestImpl();
};
// -------------------------------------------------------------------

class ListShelvesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.ListShelvesRequest) */ {
 public:
  ListShelvesRequest();
  virtual ~ListShelvesRequest();

  ListShelvesRequest(const ListShelvesRequest& from);

  inline ListShelvesRequest& operator=(const ListShelvesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListShelvesRequest(ListShelvesRequest&& from) noexcept
    : ListShelvesRequest() {
    *this = ::std::move(from);
  }

  inline ListShelvesRequest& operator=(ListShelvesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListShelvesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListShelvesRequest* internal_default_instance() {
    return reinterpret_cast<const ListShelvesRequest*>(
               &_ListShelvesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListShelvesRequest* other);
  friend void swap(ListShelvesRequest& a, ListShelvesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListShelvesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListShelvesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListShelvesRequest& from);
  void MergeFrom(const ListShelvesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListShelvesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 1;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 1;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.ListShelvesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsListShelvesRequestImpl();
};
// -------------------------------------------------------------------

class ListShelvesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.ListShelvesResponse) */ {
 public:
  ListShelvesResponse();
  virtual ~ListShelvesResponse();

  ListShelvesResponse(const ListShelvesResponse& from);

  inline ListShelvesResponse& operator=(const ListShelvesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListShelvesResponse(ListShelvesResponse&& from) noexcept
    : ListShelvesResponse() {
    *this = ::std::move(from);
  }

  inline ListShelvesResponse& operator=(ListShelvesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListShelvesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListShelvesResponse* internal_default_instance() {
    return reinterpret_cast<const ListShelvesResponse*>(
               &_ListShelvesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ListShelvesResponse* other);
  friend void swap(ListShelvesResponse& a, ListShelvesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListShelvesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListShelvesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListShelvesResponse& from);
  void MergeFrom(const ListShelvesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListShelvesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.example.library.v1.Shelf shelves = 1;
  int shelves_size() const;
  void clear_shelves();
  static const int kShelvesFieldNumber = 1;
  const ::google::example::library::v1::Shelf& shelves(int index) const;
  ::google::example::library::v1::Shelf* mutable_shelves(int index);
  ::google::example::library::v1::Shelf* add_shelves();
  ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Shelf >*
      mutable_shelves();
  const ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Shelf >&
      shelves() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.ListShelvesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Shelf > shelves_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsListShelvesResponseImpl();
};
// -------------------------------------------------------------------

class DeleteShelfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.DeleteShelfRequest) */ {
 public:
  DeleteShelfRequest();
  virtual ~DeleteShelfRequest();

  DeleteShelfRequest(const DeleteShelfRequest& from);

  inline DeleteShelfRequest& operator=(const DeleteShelfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteShelfRequest(DeleteShelfRequest&& from) noexcept
    : DeleteShelfRequest() {
    *this = ::std::move(from);
  }

  inline DeleteShelfRequest& operator=(DeleteShelfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteShelfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteShelfRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteShelfRequest*>(
               &_DeleteShelfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DeleteShelfRequest* other);
  friend void swap(DeleteShelfRequest& a, DeleteShelfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteShelfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteShelfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteShelfRequest& from);
  void MergeFrom(const DeleteShelfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteShelfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.DeleteShelfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsDeleteShelfRequestImpl();
};
// -------------------------------------------------------------------

class MergeShelvesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.MergeShelvesRequest) */ {
 public:
  MergeShelvesRequest();
  virtual ~MergeShelvesRequest();

  MergeShelvesRequest(const MergeShelvesRequest& from);

  inline MergeShelvesRequest& operator=(const MergeShelvesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeShelvesRequest(MergeShelvesRequest&& from) noexcept
    : MergeShelvesRequest() {
    *this = ::std::move(from);
  }

  inline MergeShelvesRequest& operator=(MergeShelvesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MergeShelvesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeShelvesRequest* internal_default_instance() {
    return reinterpret_cast<const MergeShelvesRequest*>(
               &_MergeShelvesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MergeShelvesRequest* other);
  friend void swap(MergeShelvesRequest& a, MergeShelvesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeShelvesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  MergeShelvesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MergeShelvesRequest& from);
  void MergeFrom(const MergeShelvesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MergeShelvesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string other_shelf_name = 2;
  void clear_other_shelf_name();
  static const int kOtherShelfNameFieldNumber = 2;
  const ::std::string& other_shelf_name() const;
  void set_other_shelf_name(const ::std::string& value);
  #if LANG_CXX11
  void set_other_shelf_name(::std::string&& value);
  #endif
  void set_other_shelf_name(const char* value);
  void set_other_shelf_name(const char* value, size_t size);
  ::std::string* mutable_other_shelf_name();
  ::std::string* release_other_shelf_name();
  void set_allocated_other_shelf_name(::std::string* other_shelf_name);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.MergeShelvesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr other_shelf_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsMergeShelvesRequestImpl();
};
// -------------------------------------------------------------------

class CreateBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.CreateBookRequest) */ {
 public:
  CreateBookRequest();
  virtual ~CreateBookRequest();

  CreateBookRequest(const CreateBookRequest& from);

  inline CreateBookRequest& operator=(const CreateBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateBookRequest(CreateBookRequest&& from) noexcept
    : CreateBookRequest() {
    *this = ::std::move(from);
  }

  inline CreateBookRequest& operator=(CreateBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateBookRequest* internal_default_instance() {
    return reinterpret_cast<const CreateBookRequest*>(
               &_CreateBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CreateBookRequest* other);
  friend void swap(CreateBookRequest& a, CreateBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateBookRequest& from);
  void MergeFrom(const CreateBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.example.library.v1.Book book = 2;
  bool has_book() const;
  void clear_book();
  static const int kBookFieldNumber = 2;
  const ::google::example::library::v1::Book& book() const;
  ::google::example::library::v1::Book* release_book();
  ::google::example::library::v1::Book* mutable_book();
  void set_allocated_book(::google::example::library::v1::Book* book);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.CreateBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::example::library::v1::Book* book_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsCreateBookRequestImpl();
};
// -------------------------------------------------------------------

class GetBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.GetBookRequest) */ {
 public:
  GetBookRequest();
  virtual ~GetBookRequest();

  GetBookRequest(const GetBookRequest& from);

  inline GetBookRequest& operator=(const GetBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBookRequest(GetBookRequest&& from) noexcept
    : GetBookRequest() {
    *this = ::std::move(from);
  }

  inline GetBookRequest& operator=(GetBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBookRequest* internal_default_instance() {
    return reinterpret_cast<const GetBookRequest*>(
               &_GetBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetBookRequest* other);
  friend void swap(GetBookRequest& a, GetBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBookRequest& from);
  void MergeFrom(const GetBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.GetBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsGetBookRequestImpl();
};
// -------------------------------------------------------------------

class ListBooksRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.ListBooksRequest) */ {
 public:
  ListBooksRequest();
  virtual ~ListBooksRequest();

  ListBooksRequest(const ListBooksRequest& from);

  inline ListBooksRequest& operator=(const ListBooksRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBooksRequest(ListBooksRequest&& from) noexcept
    : ListBooksRequest() {
    *this = ::std::move(from);
  }

  inline ListBooksRequest& operator=(ListBooksRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBooksRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBooksRequest* internal_default_instance() {
    return reinterpret_cast<const ListBooksRequest*>(
               &_ListBooksRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ListBooksRequest* other);
  friend void swap(ListBooksRequest& a, ListBooksRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBooksRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBooksRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBooksRequest& from);
  void MergeFrom(const ListBooksRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBooksRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.ListBooksRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsListBooksRequestImpl();
};
// -------------------------------------------------------------------

class ListBooksResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.ListBooksResponse) */ {
 public:
  ListBooksResponse();
  virtual ~ListBooksResponse();

  ListBooksResponse(const ListBooksResponse& from);

  inline ListBooksResponse& operator=(const ListBooksResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBooksResponse(ListBooksResponse&& from) noexcept
    : ListBooksResponse() {
    *this = ::std::move(from);
  }

  inline ListBooksResponse& operator=(ListBooksResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBooksResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBooksResponse* internal_default_instance() {
    return reinterpret_cast<const ListBooksResponse*>(
               &_ListBooksResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ListBooksResponse* other);
  friend void swap(ListBooksResponse& a, ListBooksResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBooksResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBooksResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBooksResponse& from);
  void MergeFrom(const ListBooksResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBooksResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.example.library.v1.Book books = 1;
  int books_size() const;
  void clear_books();
  static const int kBooksFieldNumber = 1;
  const ::google::example::library::v1::Book& books(int index) const;
  ::google::example::library::v1::Book* mutable_books(int index);
  ::google::example::library::v1::Book* add_books();
  ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Book >*
      mutable_books();
  const ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Book >&
      books() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.ListBooksResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Book > books_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsListBooksResponseImpl();
};
// -------------------------------------------------------------------

class UpdateBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.UpdateBookRequest) */ {
 public:
  UpdateBookRequest();
  virtual ~UpdateBookRequest();

  UpdateBookRequest(const UpdateBookRequest& from);

  inline UpdateBookRequest& operator=(const UpdateBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateBookRequest(UpdateBookRequest&& from) noexcept
    : UpdateBookRequest() {
    *this = ::std::move(from);
  }

  inline UpdateBookRequest& operator=(UpdateBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateBookRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateBookRequest*>(
               &_UpdateBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(UpdateBookRequest* other);
  friend void swap(UpdateBookRequest& a, UpdateBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateBookRequest& from);
  void MergeFrom(const UpdateBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.example.library.v1.Book book = 2;
  bool has_book() const;
  void clear_book();
  static const int kBookFieldNumber = 2;
  const ::google::example::library::v1::Book& book() const;
  ::google::example::library::v1::Book* release_book();
  ::google::example::library::v1::Book* mutable_book();
  void set_allocated_book(::google::example::library::v1::Book* book);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.UpdateBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::example::library::v1::Book* book_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsUpdateBookRequestImpl();
};
// -------------------------------------------------------------------

class DeleteBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.DeleteBookRequest) */ {
 public:
  DeleteBookRequest();
  virtual ~DeleteBookRequest();

  DeleteBookRequest(const DeleteBookRequest& from);

  inline DeleteBookRequest& operator=(const DeleteBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteBookRequest(DeleteBookRequest&& from) noexcept
    : DeleteBookRequest() {
    *this = ::std::move(from);
  }

  inline DeleteBookRequest& operator=(DeleteBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteBookRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteBookRequest*>(
               &_DeleteBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(DeleteBookRequest* other);
  friend void swap(DeleteBookRequest& a, DeleteBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteBookRequest& from);
  void MergeFrom(const DeleteBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.DeleteBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsDeleteBookRequestImpl();
};
// -------------------------------------------------------------------

class MoveBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.example.library.v1.MoveBookRequest) */ {
 public:
  MoveBookRequest();
  virtual ~MoveBookRequest();

  MoveBookRequest(const MoveBookRequest& from);

  inline MoveBookRequest& operator=(const MoveBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveBookRequest(MoveBookRequest&& from) noexcept
    : MoveBookRequest() {
    *this = ::std::move(from);
  }

  inline MoveBookRequest& operator=(MoveBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveBookRequest* internal_default_instance() {
    return reinterpret_cast<const MoveBookRequest*>(
               &_MoveBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(MoveBookRequest* other);
  friend void swap(MoveBookRequest& a, MoveBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MoveBookRequest& from);
  void MergeFrom(const MoveBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MoveBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string other_shelf_name = 2;
  void clear_other_shelf_name();
  static const int kOtherShelfNameFieldNumber = 2;
  const ::std::string& other_shelf_name() const;
  void set_other_shelf_name(const ::std::string& value);
  #if LANG_CXX11
  void set_other_shelf_name(::std::string&& value);
  #endif
  void set_other_shelf_name(const char* value);
  void set_other_shelf_name(const char* value, size_t size);
  ::std::string* mutable_other_shelf_name();
  ::std::string* release_other_shelf_name();
  void set_allocated_other_shelf_name(::std::string* other_shelf_name);

  // @@protoc_insertion_point(class_scope:google.example.library.v1.MoveBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr other_shelf_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::TableStruct;
  friend void ::protobuf_google_2fexample_2flibrary_2fv1_2flibrary_2eproto::InitDefaultsMoveBookRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Book

// string name = 1;
inline void Book::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Book::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.Book.name)
  return name_.GetNoArena();
}
inline void Book::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.Book.name)
}
#if LANG_CXX11
inline void Book::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.Book.name)
}
#endif
inline void Book::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.Book.name)
}
inline void Book::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.Book.name)
}
inline ::std::string* Book::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.Book.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Book::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.Book.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.Book.name)
}

// string author = 2;
inline void Book::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Book::author() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.Book.author)
  return author_.GetNoArena();
}
inline void Book::set_author(const ::std::string& value) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.Book.author)
}
#if LANG_CXX11
inline void Book::set_author(::std::string&& value) {
  
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.Book.author)
}
#endif
inline void Book::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.Book.author)
}
inline void Book::set_author(const char* value, size_t size) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.Book.author)
}
inline ::std::string* Book::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.Book.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Book::release_author() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.Book.author)
  
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.Book.author)
}

// string title = 3;
inline void Book::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Book::title() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.Book.title)
  return title_.GetNoArena();
}
inline void Book::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.Book.title)
}
#if LANG_CXX11
inline void Book::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.Book.title)
}
#endif
inline void Book::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.Book.title)
}
inline void Book::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.Book.title)
}
inline ::std::string* Book::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.Book.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Book::release_title() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.Book.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.Book.title)
}

// bool read = 4;
inline void Book::clear_read() {
  read_ = false;
}
inline bool Book::read() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.Book.read)
  return read_;
}
inline void Book::set_read(bool value) {
  
  read_ = value;
  // @@protoc_insertion_point(field_set:google.example.library.v1.Book.read)
}

// -------------------------------------------------------------------

// Shelf

// string name = 1;
inline void Shelf::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shelf::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.Shelf.name)
  return name_.GetNoArena();
}
inline void Shelf::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.Shelf.name)
}
#if LANG_CXX11
inline void Shelf::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.Shelf.name)
}
#endif
inline void Shelf::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.Shelf.name)
}
inline void Shelf::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.Shelf.name)
}
inline ::std::string* Shelf::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.Shelf.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shelf::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.Shelf.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shelf::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.Shelf.name)
}

// string theme = 2;
inline void Shelf::clear_theme() {
  theme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shelf::theme() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.Shelf.theme)
  return theme_.GetNoArena();
}
inline void Shelf::set_theme(const ::std::string& value) {
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.Shelf.theme)
}
#if LANG_CXX11
inline void Shelf::set_theme(::std::string&& value) {
  
  theme_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.Shelf.theme)
}
#endif
inline void Shelf::set_theme(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.Shelf.theme)
}
inline void Shelf::set_theme(const char* value, size_t size) {
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.Shelf.theme)
}
inline ::std::string* Shelf::mutable_theme() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.Shelf.theme)
  return theme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shelf::release_theme() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.Shelf.theme)
  
  return theme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shelf::set_allocated_theme(::std::string* theme) {
  if (theme != NULL) {
    
  } else {
    
  }
  theme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), theme);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.Shelf.theme)
}

// -------------------------------------------------------------------

// CreateShelfRequest

// .google.example.library.v1.Shelf shelf = 1;
inline bool CreateShelfRequest::has_shelf() const {
  return this != internal_default_instance() && shelf_ != NULL;
}
inline void CreateShelfRequest::clear_shelf() {
  if (GetArenaNoVirtual() == NULL && shelf_ != NULL) {
    delete shelf_;
  }
  shelf_ = NULL;
}
inline const ::google::example::library::v1::Shelf& CreateShelfRequest::shelf() const {
  const ::google::example::library::v1::Shelf* p = shelf_;
  // @@protoc_insertion_point(field_get:google.example.library.v1.CreateShelfRequest.shelf)
  return p != NULL ? *p : *reinterpret_cast<const ::google::example::library::v1::Shelf*>(
      &::google::example::library::v1::_Shelf_default_instance_);
}
inline ::google::example::library::v1::Shelf* CreateShelfRequest::release_shelf() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.CreateShelfRequest.shelf)
  
  ::google::example::library::v1::Shelf* temp = shelf_;
  shelf_ = NULL;
  return temp;
}
inline ::google::example::library::v1::Shelf* CreateShelfRequest::mutable_shelf() {
  
  if (shelf_ == NULL) {
    shelf_ = new ::google::example::library::v1::Shelf;
  }
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.CreateShelfRequest.shelf)
  return shelf_;
}
inline void CreateShelfRequest::set_allocated_shelf(::google::example::library::v1::Shelf* shelf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shelf_;
  }
  if (shelf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      shelf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shelf, submessage_arena);
    }
    
  } else {
    
  }
  shelf_ = shelf;
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.CreateShelfRequest.shelf)
}

// -------------------------------------------------------------------

// GetShelfRequest

// string name = 1;
inline void GetShelfRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetShelfRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.GetShelfRequest.name)
  return name_.GetNoArena();
}
inline void GetShelfRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.GetShelfRequest.name)
}
#if LANG_CXX11
inline void GetShelfRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.GetShelfRequest.name)
}
#endif
inline void GetShelfRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.GetShelfRequest.name)
}
inline void GetShelfRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.GetShelfRequest.name)
}
inline ::std::string* GetShelfRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.GetShelfRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetShelfRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.GetShelfRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetShelfRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.GetShelfRequest.name)
}

// -------------------------------------------------------------------

// ListShelvesRequest

// int32 page_size = 1;
inline void ListShelvesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListShelvesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListShelvesRequest.page_size)
  return page_size_;
}
inline void ListShelvesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.example.library.v1.ListShelvesRequest.page_size)
}

// string page_token = 2;
inline void ListShelvesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListShelvesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListShelvesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListShelvesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.ListShelvesRequest.page_token)
}
#if LANG_CXX11
inline void ListShelvesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.ListShelvesRequest.page_token)
}
#endif
inline void ListShelvesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.ListShelvesRequest.page_token)
}
inline void ListShelvesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.ListShelvesRequest.page_token)
}
inline ::std::string* ListShelvesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.ListShelvesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListShelvesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.ListShelvesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListShelvesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.ListShelvesRequest.page_token)
}

// -------------------------------------------------------------------

// ListShelvesResponse

// repeated .google.example.library.v1.Shelf shelves = 1;
inline int ListShelvesResponse::shelves_size() const {
  return shelves_.size();
}
inline void ListShelvesResponse::clear_shelves() {
  shelves_.Clear();
}
inline const ::google::example::library::v1::Shelf& ListShelvesResponse::shelves(int index) const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListShelvesResponse.shelves)
  return shelves_.Get(index);
}
inline ::google::example::library::v1::Shelf* ListShelvesResponse::mutable_shelves(int index) {
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.ListShelvesResponse.shelves)
  return shelves_.Mutable(index);
}
inline ::google::example::library::v1::Shelf* ListShelvesResponse::add_shelves() {
  // @@protoc_insertion_point(field_add:google.example.library.v1.ListShelvesResponse.shelves)
  return shelves_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Shelf >*
ListShelvesResponse::mutable_shelves() {
  // @@protoc_insertion_point(field_mutable_list:google.example.library.v1.ListShelvesResponse.shelves)
  return &shelves_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Shelf >&
ListShelvesResponse::shelves() const {
  // @@protoc_insertion_point(field_list:google.example.library.v1.ListShelvesResponse.shelves)
  return shelves_;
}

// string next_page_token = 2;
inline void ListShelvesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListShelvesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListShelvesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListShelvesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.ListShelvesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListShelvesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.ListShelvesResponse.next_page_token)
}
#endif
inline void ListShelvesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.ListShelvesResponse.next_page_token)
}
inline void ListShelvesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.ListShelvesResponse.next_page_token)
}
inline ::std::string* ListShelvesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.ListShelvesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListShelvesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.ListShelvesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListShelvesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.ListShelvesResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteShelfRequest

// string name = 1;
inline void DeleteShelfRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteShelfRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.DeleteShelfRequest.name)
  return name_.GetNoArena();
}
inline void DeleteShelfRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.DeleteShelfRequest.name)
}
#if LANG_CXX11
inline void DeleteShelfRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.DeleteShelfRequest.name)
}
#endif
inline void DeleteShelfRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.DeleteShelfRequest.name)
}
inline void DeleteShelfRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.DeleteShelfRequest.name)
}
inline ::std::string* DeleteShelfRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.DeleteShelfRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteShelfRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.DeleteShelfRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteShelfRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.DeleteShelfRequest.name)
}

// -------------------------------------------------------------------

// MergeShelvesRequest

// string name = 1;
inline void MergeShelvesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeShelvesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.MergeShelvesRequest.name)
  return name_.GetNoArena();
}
inline void MergeShelvesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.MergeShelvesRequest.name)
}
#if LANG_CXX11
inline void MergeShelvesRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.MergeShelvesRequest.name)
}
#endif
inline void MergeShelvesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.MergeShelvesRequest.name)
}
inline void MergeShelvesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.MergeShelvesRequest.name)
}
inline ::std::string* MergeShelvesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.MergeShelvesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeShelvesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.MergeShelvesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeShelvesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.MergeShelvesRequest.name)
}

// string other_shelf_name = 2;
inline void MergeShelvesRequest::clear_other_shelf_name() {
  other_shelf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeShelvesRequest::other_shelf_name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
  return other_shelf_name_.GetNoArena();
}
inline void MergeShelvesRequest::set_other_shelf_name(const ::std::string& value) {
  
  other_shelf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
}
#if LANG_CXX11
inline void MergeShelvesRequest::set_other_shelf_name(::std::string&& value) {
  
  other_shelf_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
}
#endif
inline void MergeShelvesRequest::set_other_shelf_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  other_shelf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
}
inline void MergeShelvesRequest::set_other_shelf_name(const char* value, size_t size) {
  
  other_shelf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
}
inline ::std::string* MergeShelvesRequest::mutable_other_shelf_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
  return other_shelf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeShelvesRequest::release_other_shelf_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
  
  return other_shelf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeShelvesRequest::set_allocated_other_shelf_name(::std::string* other_shelf_name) {
  if (other_shelf_name != NULL) {
    
  } else {
    
  }
  other_shelf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other_shelf_name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.MergeShelvesRequest.other_shelf_name)
}

// -------------------------------------------------------------------

// CreateBookRequest

// string name = 1;
inline void CreateBookRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateBookRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.CreateBookRequest.name)
  return name_.GetNoArena();
}
inline void CreateBookRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.CreateBookRequest.name)
}
#if LANG_CXX11
inline void CreateBookRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.CreateBookRequest.name)
}
#endif
inline void CreateBookRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.CreateBookRequest.name)
}
inline void CreateBookRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.CreateBookRequest.name)
}
inline ::std::string* CreateBookRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.CreateBookRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateBookRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.CreateBookRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateBookRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.CreateBookRequest.name)
}

// .google.example.library.v1.Book book = 2;
inline bool CreateBookRequest::has_book() const {
  return this != internal_default_instance() && book_ != NULL;
}
inline void CreateBookRequest::clear_book() {
  if (GetArenaNoVirtual() == NULL && book_ != NULL) {
    delete book_;
  }
  book_ = NULL;
}
inline const ::google::example::library::v1::Book& CreateBookRequest::book() const {
  const ::google::example::library::v1::Book* p = book_;
  // @@protoc_insertion_point(field_get:google.example.library.v1.CreateBookRequest.book)
  return p != NULL ? *p : *reinterpret_cast<const ::google::example::library::v1::Book*>(
      &::google::example::library::v1::_Book_default_instance_);
}
inline ::google::example::library::v1::Book* CreateBookRequest::release_book() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.CreateBookRequest.book)
  
  ::google::example::library::v1::Book* temp = book_;
  book_ = NULL;
  return temp;
}
inline ::google::example::library::v1::Book* CreateBookRequest::mutable_book() {
  
  if (book_ == NULL) {
    book_ = new ::google::example::library::v1::Book;
  }
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.CreateBookRequest.book)
  return book_;
}
inline void CreateBookRequest::set_allocated_book(::google::example::library::v1::Book* book) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete book_;
  }
  if (book) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      book = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, book, submessage_arena);
    }
    
  } else {
    
  }
  book_ = book;
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.CreateBookRequest.book)
}

// -------------------------------------------------------------------

// GetBookRequest

// string name = 1;
inline void GetBookRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBookRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.GetBookRequest.name)
  return name_.GetNoArena();
}
inline void GetBookRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.GetBookRequest.name)
}
#if LANG_CXX11
inline void GetBookRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.GetBookRequest.name)
}
#endif
inline void GetBookRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.GetBookRequest.name)
}
inline void GetBookRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.GetBookRequest.name)
}
inline ::std::string* GetBookRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.GetBookRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBookRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.GetBookRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBookRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.GetBookRequest.name)
}

// -------------------------------------------------------------------

// ListBooksRequest

// string name = 1;
inline void ListBooksRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBooksRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListBooksRequest.name)
  return name_.GetNoArena();
}
inline void ListBooksRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.ListBooksRequest.name)
}
#if LANG_CXX11
inline void ListBooksRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.ListBooksRequest.name)
}
#endif
inline void ListBooksRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.ListBooksRequest.name)
}
inline void ListBooksRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.ListBooksRequest.name)
}
inline ::std::string* ListBooksRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.ListBooksRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBooksRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.ListBooksRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBooksRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.ListBooksRequest.name)
}

// int32 page_size = 2;
inline void ListBooksRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListBooksRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListBooksRequest.page_size)
  return page_size_;
}
inline void ListBooksRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.example.library.v1.ListBooksRequest.page_size)
}

// string page_token = 3;
inline void ListBooksRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBooksRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListBooksRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListBooksRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.ListBooksRequest.page_token)
}
#if LANG_CXX11
inline void ListBooksRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.ListBooksRequest.page_token)
}
#endif
inline void ListBooksRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.ListBooksRequest.page_token)
}
inline void ListBooksRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.ListBooksRequest.page_token)
}
inline ::std::string* ListBooksRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.ListBooksRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBooksRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.ListBooksRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBooksRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.ListBooksRequest.page_token)
}

// -------------------------------------------------------------------

// ListBooksResponse

// repeated .google.example.library.v1.Book books = 1;
inline int ListBooksResponse::books_size() const {
  return books_.size();
}
inline void ListBooksResponse::clear_books() {
  books_.Clear();
}
inline const ::google::example::library::v1::Book& ListBooksResponse::books(int index) const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListBooksResponse.books)
  return books_.Get(index);
}
inline ::google::example::library::v1::Book* ListBooksResponse::mutable_books(int index) {
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.ListBooksResponse.books)
  return books_.Mutable(index);
}
inline ::google::example::library::v1::Book* ListBooksResponse::add_books() {
  // @@protoc_insertion_point(field_add:google.example.library.v1.ListBooksResponse.books)
  return books_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Book >*
ListBooksResponse::mutable_books() {
  // @@protoc_insertion_point(field_mutable_list:google.example.library.v1.ListBooksResponse.books)
  return &books_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::example::library::v1::Book >&
ListBooksResponse::books() const {
  // @@protoc_insertion_point(field_list:google.example.library.v1.ListBooksResponse.books)
  return books_;
}

// string next_page_token = 2;
inline void ListBooksResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBooksResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.ListBooksResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListBooksResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.ListBooksResponse.next_page_token)
}
#if LANG_CXX11
inline void ListBooksResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.ListBooksResponse.next_page_token)
}
#endif
inline void ListBooksResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.ListBooksResponse.next_page_token)
}
inline void ListBooksResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.ListBooksResponse.next_page_token)
}
inline ::std::string* ListBooksResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.ListBooksResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBooksResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.ListBooksResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBooksResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.ListBooksResponse.next_page_token)
}

// -------------------------------------------------------------------

// UpdateBookRequest

// string name = 1;
inline void UpdateBookRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateBookRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.UpdateBookRequest.name)
  return name_.GetNoArena();
}
inline void UpdateBookRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.UpdateBookRequest.name)
}
#if LANG_CXX11
inline void UpdateBookRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.UpdateBookRequest.name)
}
#endif
inline void UpdateBookRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.UpdateBookRequest.name)
}
inline void UpdateBookRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.UpdateBookRequest.name)
}
inline ::std::string* UpdateBookRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.UpdateBookRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateBookRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.UpdateBookRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateBookRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.UpdateBookRequest.name)
}

// .google.example.library.v1.Book book = 2;
inline bool UpdateBookRequest::has_book() const {
  return this != internal_default_instance() && book_ != NULL;
}
inline void UpdateBookRequest::clear_book() {
  if (GetArenaNoVirtual() == NULL && book_ != NULL) {
    delete book_;
  }
  book_ = NULL;
}
inline const ::google::example::library::v1::Book& UpdateBookRequest::book() const {
  const ::google::example::library::v1::Book* p = book_;
  // @@protoc_insertion_point(field_get:google.example.library.v1.UpdateBookRequest.book)
  return p != NULL ? *p : *reinterpret_cast<const ::google::example::library::v1::Book*>(
      &::google::example::library::v1::_Book_default_instance_);
}
inline ::google::example::library::v1::Book* UpdateBookRequest::release_book() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.UpdateBookRequest.book)
  
  ::google::example::library::v1::Book* temp = book_;
  book_ = NULL;
  return temp;
}
inline ::google::example::library::v1::Book* UpdateBookRequest::mutable_book() {
  
  if (book_ == NULL) {
    book_ = new ::google::example::library::v1::Book;
  }
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.UpdateBookRequest.book)
  return book_;
}
inline void UpdateBookRequest::set_allocated_book(::google::example::library::v1::Book* book) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete book_;
  }
  if (book) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      book = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, book, submessage_arena);
    }
    
  } else {
    
  }
  book_ = book;
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.UpdateBookRequest.book)
}

// -------------------------------------------------------------------

// DeleteBookRequest

// string name = 1;
inline void DeleteBookRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteBookRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.DeleteBookRequest.name)
  return name_.GetNoArena();
}
inline void DeleteBookRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.DeleteBookRequest.name)
}
#if LANG_CXX11
inline void DeleteBookRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.DeleteBookRequest.name)
}
#endif
inline void DeleteBookRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.DeleteBookRequest.name)
}
inline void DeleteBookRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.DeleteBookRequest.name)
}
inline ::std::string* DeleteBookRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.DeleteBookRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteBookRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.DeleteBookRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteBookRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.DeleteBookRequest.name)
}

// -------------------------------------------------------------------

// MoveBookRequest

// string name = 1;
inline void MoveBookRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MoveBookRequest::name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.MoveBookRequest.name)
  return name_.GetNoArena();
}
inline void MoveBookRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.MoveBookRequest.name)
}
#if LANG_CXX11
inline void MoveBookRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.MoveBookRequest.name)
}
#endif
inline void MoveBookRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.MoveBookRequest.name)
}
inline void MoveBookRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.MoveBookRequest.name)
}
inline ::std::string* MoveBookRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.MoveBookRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoveBookRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.MoveBookRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoveBookRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.MoveBookRequest.name)
}

// string other_shelf_name = 2;
inline void MoveBookRequest::clear_other_shelf_name() {
  other_shelf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MoveBookRequest::other_shelf_name() const {
  // @@protoc_insertion_point(field_get:google.example.library.v1.MoveBookRequest.other_shelf_name)
  return other_shelf_name_.GetNoArena();
}
inline void MoveBookRequest::set_other_shelf_name(const ::std::string& value) {
  
  other_shelf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.example.library.v1.MoveBookRequest.other_shelf_name)
}
#if LANG_CXX11
inline void MoveBookRequest::set_other_shelf_name(::std::string&& value) {
  
  other_shelf_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.example.library.v1.MoveBookRequest.other_shelf_name)
}
#endif
inline void MoveBookRequest::set_other_shelf_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  other_shelf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.example.library.v1.MoveBookRequest.other_shelf_name)
}
inline void MoveBookRequest::set_other_shelf_name(const char* value, size_t size) {
  
  other_shelf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.example.library.v1.MoveBookRequest.other_shelf_name)
}
inline ::std::string* MoveBookRequest::mutable_other_shelf_name() {
  
  // @@protoc_insertion_point(field_mutable:google.example.library.v1.MoveBookRequest.other_shelf_name)
  return other_shelf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoveBookRequest::release_other_shelf_name() {
  // @@protoc_insertion_point(field_release:google.example.library.v1.MoveBookRequest.other_shelf_name)
  
  return other_shelf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoveBookRequest::set_allocated_other_shelf_name(::std::string* other_shelf_name) {
  if (other_shelf_name != NULL) {
    
  } else {
    
  }
  other_shelf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other_shelf_name);
  // @@protoc_insertion_point(field_set_allocated:google.example.library.v1.MoveBookRequest.other_shelf_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace library
}  // namespace example
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fexample_2flibrary_2fv1_2flibrary_2eproto__INCLUDED
