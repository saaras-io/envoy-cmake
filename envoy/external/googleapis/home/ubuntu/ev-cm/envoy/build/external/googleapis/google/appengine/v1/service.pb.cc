// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/service.proto

#include "google/appengine/v1/service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace appengine {
namespace v1 {
class ServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service>
      _instance;
} _Service_default_instance_;
class TrafficSplit_AllocationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrafficSplit_AllocationsEntry_DoNotUse>
      _instance;
} _TrafficSplit_AllocationsEntry_DoNotUse_default_instance_;
class TrafficSplitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrafficSplit>
      _instance;
} _TrafficSplit_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace protobuf_google_2fappengine_2fv1_2fservice_2eproto {
void InitDefaultsServiceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fappengine_2fv1_2fservice_2eproto::InitDefaultsTrafficSplit();
  {
    void* ptr = &::google::appengine::v1::_Service_default_instance_;
    new (ptr) ::google::appengine::v1::Service();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::Service::InitAsDefaultInstance();
}

void InitDefaultsService() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceImpl);
}

void InitDefaultsTrafficSplit_AllocationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_TrafficSplit_AllocationsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::appengine::v1::TrafficSplit_AllocationsEntry_DoNotUse();
  }
  ::google::appengine::v1::TrafficSplit_AllocationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsTrafficSplit_AllocationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrafficSplit_AllocationsEntry_DoNotUseImpl);
}

void InitDefaultsTrafficSplitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fappengine_2fv1_2fservice_2eproto::InitDefaultsTrafficSplit_AllocationsEntry_DoNotUse();
  {
    void* ptr = &::google::appengine::v1::_TrafficSplit_default_instance_;
    new (ptr) ::google::appengine::v1::TrafficSplit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::TrafficSplit::InitAsDefaultInstance();
}

void InitDefaultsTrafficSplit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrafficSplitImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Service, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Service, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Service, split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::TrafficSplit_AllocationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::TrafficSplit_AllocationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::TrafficSplit_AllocationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::TrafficSplit_AllocationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::TrafficSplit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::TrafficSplit, shard_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::TrafficSplit, allocations_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::appengine::v1::Service)},
  { 8, 15, sizeof(::google::appengine::v1::TrafficSplit_AllocationsEntry_DoNotUse)},
  { 17, -1, sizeof(::google::appengine::v1::TrafficSplit)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_Service_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_TrafficSplit_AllocationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_TrafficSplit_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/appengine/v1/service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!google/appengine/v1/service.proto\022\023goo"
      "gle.appengine.v1\032\034google/api/annotations"
      ".proto\"U\n\007Service\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 "
      "\001(\t\0220\n\005split\030\003 \001(\0132!.google.appengine.v1"
      ".TrafficSplit\"\370\001\n\014TrafficSplit\022;\n\010shard_"
      "by\030\001 \001(\0162).google.appengine.v1.TrafficSp"
      "lit.ShardBy\022G\n\013allocations\030\002 \003(\01322.googl"
      "e.appengine.v1.TrafficSplit.AllocationsE"
      "ntry\0322\n\020AllocationsEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\001:\0028\001\".\n\007ShardBy\022\017\n\013UNSPECIFI"
      "ED\020\000\022\n\n\006COOKIE\020\001\022\006\n\002IP\020\002Bg\n\027com.google.a"
      "ppengine.v1B\014ServiceProtoP\001Z<google.gola"
      "ng.org/genproto/googleapis/appengine/v1;"
      "appengineb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 537);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/v1/service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fappengine_2fv1_2fservice_2eproto
namespace google {
namespace appengine {
namespace v1 {
const ::google::protobuf::EnumDescriptor* TrafficSplit_ShardBy_descriptor() {
  protobuf_google_2fappengine_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fappengine_2fv1_2fservice_2eproto::file_level_enum_descriptors[0];
}
bool TrafficSplit_ShardBy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrafficSplit_ShardBy TrafficSplit::UNSPECIFIED;
const TrafficSplit_ShardBy TrafficSplit::COOKIE;
const TrafficSplit_ShardBy TrafficSplit::IP;
const TrafficSplit_ShardBy TrafficSplit::ShardBy_MIN;
const TrafficSplit_ShardBy TrafficSplit::ShardBy_MAX;
const int TrafficSplit::ShardBy_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Service::InitAsDefaultInstance() {
  ::google::appengine::v1::_Service_default_instance_._instance.get_mutable()->split_ = const_cast< ::google::appengine::v1::TrafficSplit*>(
      ::google::appengine::v1::TrafficSplit::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service::kNameFieldNumber;
const int Service::kIdFieldNumber;
const int Service::kSplitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service::Service()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::InitDefaultsService();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Service)
}
Service::Service(const Service& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_split()) {
    split_ = new ::google::appengine::v1::TrafficSplit(*from.split_);
  } else {
    split_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Service)
}

void Service::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  split_ = NULL;
  _cached_size_ = 0;
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Service)
  SharedDtor();
}

void Service::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete split_;
}

void Service::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Service::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service& Service::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::InitDefaultsService();
  return *internal_default_instance();
}

Service* Service::New(::google::protobuf::Arena* arena) const {
  Service* n = new Service;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && split_ != NULL) {
    delete split_;
  }
  split_ = NULL;
  _internal_metadata_.Clear();
}

bool Service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Service)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Service.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Service.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.TrafficSplit split = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_split()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Service)
  return false;
#undef DO_
}

void Service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Service.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Service.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // .google.appengine.v1.TrafficSplit split = 3;
  if (this->has_split()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->split_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Service)
}

::google::protobuf::uint8* Service::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Service.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Service.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // .google.appengine.v1.TrafficSplit split = 3;
  if (this->has_split()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->split_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Service)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .google.appengine.v1.TrafficSplit split = 3;
  if (this->has_split()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->split_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Service::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Service* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Service)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Service)
    MergeFrom(*source);
  }
}

void Service::MergeFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_split()) {
    mutable_split()->::google::appengine::v1::TrafficSplit::MergeFrom(from.split());
  }
}

void Service::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::Swap(Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service::InternalSwap(Service* other) {
  using std::swap;
  name_.Swap(&other->name_);
  id_.Swap(&other->id_);
  swap(split_, other->split_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Service::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TrafficSplit_AllocationsEntry_DoNotUse::TrafficSplit_AllocationsEntry_DoNotUse() {}
TrafficSplit_AllocationsEntry_DoNotUse::TrafficSplit_AllocationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TrafficSplit_AllocationsEntry_DoNotUse::MergeFrom(const TrafficSplit_AllocationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TrafficSplit_AllocationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::file_level_metadata[1];
}
void TrafficSplit_AllocationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TrafficSplit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrafficSplit::kShardByFieldNumber;
const int TrafficSplit::kAllocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrafficSplit::TrafficSplit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::InitDefaultsTrafficSplit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.TrafficSplit)
}
TrafficSplit::TrafficSplit(const TrafficSplit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allocations_.MergeFrom(from.allocations_);
  shard_by_ = from.shard_by_;
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.TrafficSplit)
}

void TrafficSplit::SharedCtor() {
  shard_by_ = 0;
  _cached_size_ = 0;
}

TrafficSplit::~TrafficSplit() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.TrafficSplit)
  SharedDtor();
}

void TrafficSplit::SharedDtor() {
}

void TrafficSplit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrafficSplit::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrafficSplit& TrafficSplit::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::InitDefaultsTrafficSplit();
  return *internal_default_instance();
}

TrafficSplit* TrafficSplit::New(::google::protobuf::Arena* arena) const {
  TrafficSplit* n = new TrafficSplit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrafficSplit::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.TrafficSplit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allocations_.Clear();
  shard_by_ = 0;
  _internal_metadata_.Clear();
}

bool TrafficSplit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.TrafficSplit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.appengine.v1.TrafficSplit.ShardBy shard_by = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_shard_by(static_cast< ::google::appengine::v1::TrafficSplit_ShardBy >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, double> allocations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          TrafficSplit_AllocationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TrafficSplit_AllocationsEntry_DoNotUse,
              ::std::string, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::std::string, double > > parser(&allocations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.TrafficSplit.AllocationsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.TrafficSplit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.TrafficSplit)
  return false;
#undef DO_
}

void TrafficSplit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.TrafficSplit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.appengine.v1.TrafficSplit.ShardBy shard_by = 1;
  if (this->shard_by() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->shard_by(), output);
  }

  // map<string, double> allocations = 2;
  if (!this->allocations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.TrafficSplit.AllocationsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->allocations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->allocations().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->allocations().begin();
          it != this->allocations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TrafficSplit_AllocationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(allocations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TrafficSplit_AllocationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->allocations().begin();
          it != this->allocations().end(); ++it) {
        entry.reset(allocations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.TrafficSplit)
}

::google::protobuf::uint8* TrafficSplit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.TrafficSplit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.appengine.v1.TrafficSplit.ShardBy shard_by = 1;
  if (this->shard_by() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->shard_by(), target);
  }

  // map<string, double> allocations = 2;
  if (!this->allocations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.TrafficSplit.AllocationsEntry.key");
      }
    };

    if (deterministic &&
        this->allocations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->allocations().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->allocations().begin();
          it != this->allocations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TrafficSplit_AllocationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(allocations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TrafficSplit_AllocationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->allocations().begin();
          it != this->allocations().end(); ++it) {
        entry.reset(allocations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.TrafficSplit)
  return target;
}

size_t TrafficSplit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.TrafficSplit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, double> allocations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allocations_size());
  {
    ::google::protobuf::scoped_ptr<TrafficSplit_AllocationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->allocations().begin();
        it != this->allocations().end(); ++it) {
      entry.reset(allocations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.appengine.v1.TrafficSplit.ShardBy shard_by = 1;
  if (this->shard_by() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->shard_by());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrafficSplit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.TrafficSplit)
  GOOGLE_DCHECK_NE(&from, this);
  const TrafficSplit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrafficSplit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.TrafficSplit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.TrafficSplit)
    MergeFrom(*source);
  }
}

void TrafficSplit::MergeFrom(const TrafficSplit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.TrafficSplit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allocations_.MergeFrom(from.allocations_);
  if (from.shard_by() != 0) {
    set_shard_by(from.shard_by());
  }
}

void TrafficSplit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.TrafficSplit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrafficSplit::CopyFrom(const TrafficSplit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.TrafficSplit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrafficSplit::IsInitialized() const {
  return true;
}

void TrafficSplit::Swap(TrafficSplit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrafficSplit::InternalSwap(TrafficSplit* other) {
  using std::swap;
  allocations_.Swap(&other->allocations_);
  swap(shard_by_, other->shard_by_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrafficSplit::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
