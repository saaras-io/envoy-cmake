// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/version.proto

#ifndef PROTOBUF_google_2fappengine_2fv1_2fversion_2eproto__INCLUDED
#define PROTOBUF_google_2fappengine_2fv1_2fversion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/appengine/v1/app_yaml.pb.h"
#include "google/appengine/v1/deploy.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fappengine_2fv1_2fversion_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsVersion_BetaSettingsEntry_DoNotUseImpl();
void InitDefaultsVersion_BetaSettingsEntry_DoNotUse();
void InitDefaultsVersion_EnvVariablesEntry_DoNotUseImpl();
void InitDefaultsVersion_EnvVariablesEntry_DoNotUse();
void InitDefaultsVersionImpl();
void InitDefaultsVersion();
void InitDefaultsAutomaticScalingImpl();
void InitDefaultsAutomaticScaling();
void InitDefaultsBasicScalingImpl();
void InitDefaultsBasicScaling();
void InitDefaultsManualScalingImpl();
void InitDefaultsManualScaling();
void InitDefaultsCpuUtilizationImpl();
void InitDefaultsCpuUtilization();
void InitDefaultsRequestUtilizationImpl();
void InitDefaultsRequestUtilization();
void InitDefaultsDiskUtilizationImpl();
void InitDefaultsDiskUtilization();
void InitDefaultsNetworkUtilizationImpl();
void InitDefaultsNetworkUtilization();
void InitDefaultsNetworkImpl();
void InitDefaultsNetwork();
void InitDefaultsResourcesImpl();
void InitDefaultsResources();
inline void InitDefaults() {
  InitDefaultsVersion_BetaSettingsEntry_DoNotUse();
  InitDefaultsVersion_EnvVariablesEntry_DoNotUse();
  InitDefaultsVersion();
  InitDefaultsAutomaticScaling();
  InitDefaultsBasicScaling();
  InitDefaultsManualScaling();
  InitDefaultsCpuUtilization();
  InitDefaultsRequestUtilization();
  InitDefaultsDiskUtilization();
  InitDefaultsNetworkUtilization();
  InitDefaultsNetwork();
  InitDefaultsResources();
}
}  // namespace protobuf_google_2fappengine_2fv1_2fversion_2eproto
namespace google {
namespace appengine {
namespace v1 {
class AutomaticScaling;
class AutomaticScalingDefaultTypeInternal;
extern AutomaticScalingDefaultTypeInternal _AutomaticScaling_default_instance_;
class BasicScaling;
class BasicScalingDefaultTypeInternal;
extern BasicScalingDefaultTypeInternal _BasicScaling_default_instance_;
class CpuUtilization;
class CpuUtilizationDefaultTypeInternal;
extern CpuUtilizationDefaultTypeInternal _CpuUtilization_default_instance_;
class DiskUtilization;
class DiskUtilizationDefaultTypeInternal;
extern DiskUtilizationDefaultTypeInternal _DiskUtilization_default_instance_;
class ManualScaling;
class ManualScalingDefaultTypeInternal;
extern ManualScalingDefaultTypeInternal _ManualScaling_default_instance_;
class Network;
class NetworkDefaultTypeInternal;
extern NetworkDefaultTypeInternal _Network_default_instance_;
class NetworkUtilization;
class NetworkUtilizationDefaultTypeInternal;
extern NetworkUtilizationDefaultTypeInternal _NetworkUtilization_default_instance_;
class RequestUtilization;
class RequestUtilizationDefaultTypeInternal;
extern RequestUtilizationDefaultTypeInternal _RequestUtilization_default_instance_;
class Resources;
class ResourcesDefaultTypeInternal;
extern ResourcesDefaultTypeInternal _Resources_default_instance_;
class Version;
class VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
class Version_BetaSettingsEntry_DoNotUse;
class Version_BetaSettingsEntry_DoNotUseDefaultTypeInternal;
extern Version_BetaSettingsEntry_DoNotUseDefaultTypeInternal _Version_BetaSettingsEntry_DoNotUse_default_instance_;
class Version_EnvVariablesEntry_DoNotUse;
class Version_EnvVariablesEntry_DoNotUseDefaultTypeInternal;
extern Version_EnvVariablesEntry_DoNotUseDefaultTypeInternal _Version_EnvVariablesEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace google {
namespace appengine {
namespace v1 {

enum InboundServiceType {
  INBOUND_SERVICE_UNSPECIFIED = 0,
  INBOUND_SERVICE_MAIL = 1,
  INBOUND_SERVICE_MAIL_BOUNCE = 2,
  INBOUND_SERVICE_XMPP_ERROR = 3,
  INBOUND_SERVICE_XMPP_MESSAGE = 4,
  INBOUND_SERVICE_XMPP_SUBSCRIBE = 5,
  INBOUND_SERVICE_XMPP_PRESENCE = 6,
  INBOUND_SERVICE_CHANNEL_PRESENCE = 7,
  INBOUND_SERVICE_WARMUP = 9,
  InboundServiceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InboundServiceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InboundServiceType_IsValid(int value);
const InboundServiceType InboundServiceType_MIN = INBOUND_SERVICE_UNSPECIFIED;
const InboundServiceType InboundServiceType_MAX = INBOUND_SERVICE_WARMUP;
const int InboundServiceType_ARRAYSIZE = InboundServiceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InboundServiceType_descriptor();
inline const ::std::string& InboundServiceType_Name(InboundServiceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InboundServiceType_descriptor(), value);
}
inline bool InboundServiceType_Parse(
    const ::std::string& name, InboundServiceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InboundServiceType>(
    InboundServiceType_descriptor(), name, value);
}
enum ServingStatus {
  SERVING_STATUS_UNSPECIFIED = 0,
  SERVING = 1,
  STOPPED = 2,
  ServingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServingStatus_IsValid(int value);
const ServingStatus ServingStatus_MIN = SERVING_STATUS_UNSPECIFIED;
const ServingStatus ServingStatus_MAX = STOPPED;
const int ServingStatus_ARRAYSIZE = ServingStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServingStatus_descriptor();
inline const ::std::string& ServingStatus_Name(ServingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServingStatus_descriptor(), value);
}
inline bool ServingStatus_Parse(
    const ::std::string& name, ServingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServingStatus>(
    ServingStatus_descriptor(), name, value);
}
// ===================================================================

class Version_BetaSettingsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Version_BetaSettingsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Version_BetaSettingsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Version_BetaSettingsEntry_DoNotUse();
  Version_BetaSettingsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Version_BetaSettingsEntry_DoNotUse& other);
  static const Version_BetaSettingsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Version_BetaSettingsEntry_DoNotUse*>(&_Version_BetaSettingsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Version_EnvVariablesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Version_EnvVariablesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Version_EnvVariablesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Version_EnvVariablesEntry_DoNotUse();
  Version_EnvVariablesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Version_EnvVariablesEntry_DoNotUse& other);
  static const Version_EnvVariablesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Version_EnvVariablesEntry_DoNotUse*>(&_Version_EnvVariablesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Version : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.Version) */ {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Version(Version&& from) noexcept
    : Version() {
    *this = ::std::move(from);
  }

  inline Version& operator=(Version&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Version& default_instance();

  enum ScalingCase {
    kAutomaticScaling = 3,
    kBasicScaling = 4,
    kManualScaling = 5,
    SCALING_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version* internal_default_instance() {
    return reinterpret_cast<const Version*>(
               &_Version_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Version* other);
  friend void swap(Version& a, Version& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Version* New() const PROTOBUF_FINAL { return New(NULL); }

  Version* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Version* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .google.appengine.v1.InboundServiceType inbound_services = 6;
  int inbound_services_size() const;
  void clear_inbound_services();
  static const int kInboundServicesFieldNumber = 6;
  ::google::appengine::v1::InboundServiceType inbound_services(int index) const;
  void set_inbound_services(int index, ::google::appengine::v1::InboundServiceType value);
  void add_inbound_services(::google::appengine::v1::InboundServiceType value);
  const ::google::protobuf::RepeatedField<int>& inbound_services() const;
  ::google::protobuf::RepeatedField<int>* mutable_inbound_services();

  // map<string, string> beta_settings = 13;
  int beta_settings_size() const;
  void clear_beta_settings();
  static const int kBetaSettingsFieldNumber = 13;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      beta_settings() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_beta_settings();

  // repeated .google.appengine.v1.UrlMap handlers = 100;
  int handlers_size() const;
  void clear_handlers();
  static const int kHandlersFieldNumber = 100;
  const ::google::appengine::v1::UrlMap& handlers(int index) const;
  ::google::appengine::v1::UrlMap* mutable_handlers(int index);
  ::google::appengine::v1::UrlMap* add_handlers();
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlMap >*
      mutable_handlers();
  const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlMap >&
      handlers() const;

  // repeated .google.appengine.v1.ErrorHandler error_handlers = 101;
  int error_handlers_size() const;
  void clear_error_handlers();
  static const int kErrorHandlersFieldNumber = 101;
  const ::google::appengine::v1::ErrorHandler& error_handlers(int index) const;
  ::google::appengine::v1::ErrorHandler* mutable_error_handlers(int index);
  ::google::appengine::v1::ErrorHandler* add_error_handlers();
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::ErrorHandler >*
      mutable_error_handlers();
  const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::ErrorHandler >&
      error_handlers() const;

  // repeated .google.appengine.v1.Library libraries = 102;
  int libraries_size() const;
  void clear_libraries();
  static const int kLibrariesFieldNumber = 102;
  const ::google::appengine::v1::Library& libraries(int index) const;
  ::google::appengine::v1::Library* mutable_libraries(int index);
  ::google::appengine::v1::Library* add_libraries();
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Library >*
      mutable_libraries();
  const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Library >&
      libraries() const;

  // map<string, string> env_variables = 104;
  int env_variables_size() const;
  void clear_env_variables();
  static const int kEnvVariablesFieldNumber = 104;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      env_variables() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_env_variables();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string instance_class = 7;
  void clear_instance_class();
  static const int kInstanceClassFieldNumber = 7;
  const ::std::string& instance_class() const;
  void set_instance_class(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_class(::std::string&& value);
  #endif
  void set_instance_class(const char* value);
  void set_instance_class(const char* value, size_t size);
  ::std::string* mutable_instance_class();
  ::std::string* release_instance_class();
  void set_allocated_instance_class(::std::string* instance_class);

  // string runtime = 10;
  void clear_runtime();
  static const int kRuntimeFieldNumber = 10;
  const ::std::string& runtime() const;
  void set_runtime(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime(::std::string&& value);
  #endif
  void set_runtime(const char* value);
  void set_runtime(const char* value, size_t size);
  ::std::string* mutable_runtime();
  ::std::string* release_runtime();
  void set_allocated_runtime(::std::string* runtime);

  // string env = 14;
  void clear_env();
  static const int kEnvFieldNumber = 14;
  const ::std::string& env() const;
  void set_env(const ::std::string& value);
  #if LANG_CXX11
  void set_env(::std::string&& value);
  #endif
  void set_env(const char* value);
  void set_env(const char* value, size_t size);
  ::std::string* mutable_env();
  ::std::string* release_env();
  void set_allocated_env(::std::string* env);

  // string created_by = 16;
  void clear_created_by();
  static const int kCreatedByFieldNumber = 16;
  const ::std::string& created_by() const;
  void set_created_by(const ::std::string& value);
  #if LANG_CXX11
  void set_created_by(::std::string&& value);
  #endif
  void set_created_by(const char* value);
  void set_created_by(const char* value, size_t size);
  ::std::string* mutable_created_by();
  ::std::string* release_created_by();
  void set_allocated_created_by(::std::string* created_by);

  // string nobuild_files_regex = 107;
  void clear_nobuild_files_regex();
  static const int kNobuildFilesRegexFieldNumber = 107;
  const ::std::string& nobuild_files_regex() const;
  void set_nobuild_files_regex(const ::std::string& value);
  #if LANG_CXX11
  void set_nobuild_files_regex(::std::string&& value);
  #endif
  void set_nobuild_files_regex(const char* value);
  void set_nobuild_files_regex(const char* value, size_t size);
  ::std::string* mutable_nobuild_files_regex();
  ::std::string* release_nobuild_files_regex();
  void set_allocated_nobuild_files_regex(::std::string* nobuild_files_regex);

  // string version_url = 109;
  void clear_version_url();
  static const int kVersionUrlFieldNumber = 109;
  const ::std::string& version_url() const;
  void set_version_url(const ::std::string& value);
  #if LANG_CXX11
  void set_version_url(::std::string&& value);
  #endif
  void set_version_url(const char* value);
  void set_version_url(const char* value, size_t size);
  ::std::string* mutable_version_url();
  ::std::string* release_version_url();
  void set_allocated_version_url(::std::string* version_url);

  // .google.appengine.v1.Network network = 8;
  bool has_network() const;
  void clear_network();
  static const int kNetworkFieldNumber = 8;
  const ::google::appengine::v1::Network& network() const;
  ::google::appengine::v1::Network* release_network();
  ::google::appengine::v1::Network* mutable_network();
  void set_allocated_network(::google::appengine::v1::Network* network);

  // .google.appengine.v1.Resources resources = 9;
  bool has_resources() const;
  void clear_resources();
  static const int kResourcesFieldNumber = 9;
  const ::google::appengine::v1::Resources& resources() const;
  ::google::appengine::v1::Resources* release_resources();
  ::google::appengine::v1::Resources* mutable_resources();
  void set_allocated_resources(::google::appengine::v1::Resources* resources);

  // .google.protobuf.Timestamp create_time = 17;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 17;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.appengine.v1.ApiConfigHandler api_config = 103;
  bool has_api_config() const;
  void clear_api_config();
  static const int kApiConfigFieldNumber = 103;
  const ::google::appengine::v1::ApiConfigHandler& api_config() const;
  ::google::appengine::v1::ApiConfigHandler* release_api_config();
  ::google::appengine::v1::ApiConfigHandler* mutable_api_config();
  void set_allocated_api_config(::google::appengine::v1::ApiConfigHandler* api_config);

  // .google.protobuf.Duration default_expiration = 105;
  bool has_default_expiration() const;
  void clear_default_expiration();
  static const int kDefaultExpirationFieldNumber = 105;
  const ::google::protobuf::Duration& default_expiration() const;
  ::google::protobuf::Duration* release_default_expiration();
  ::google::protobuf::Duration* mutable_default_expiration();
  void set_allocated_default_expiration(::google::protobuf::Duration* default_expiration);

  // .google.appengine.v1.HealthCheck health_check = 106;
  bool has_health_check() const;
  void clear_health_check();
  static const int kHealthCheckFieldNumber = 106;
  const ::google::appengine::v1::HealthCheck& health_check() const;
  ::google::appengine::v1::HealthCheck* release_health_check();
  ::google::appengine::v1::HealthCheck* mutable_health_check();
  void set_allocated_health_check(::google::appengine::v1::HealthCheck* health_check);

  // .google.appengine.v1.Deployment deployment = 108;
  bool has_deployment() const;
  void clear_deployment();
  static const int kDeploymentFieldNumber = 108;
  const ::google::appengine::v1::Deployment& deployment() const;
  ::google::appengine::v1::Deployment* release_deployment();
  ::google::appengine::v1::Deployment* mutable_deployment();
  void set_allocated_deployment(::google::appengine::v1::Deployment* deployment);

  // bool threadsafe = 11;
  void clear_threadsafe();
  static const int kThreadsafeFieldNumber = 11;
  bool threadsafe() const;
  void set_threadsafe(bool value);

  // bool vm = 12;
  void clear_vm();
  static const int kVmFieldNumber = 12;
  bool vm() const;
  void set_vm(bool value);

  // .google.appengine.v1.ServingStatus serving_status = 15;
  void clear_serving_status();
  static const int kServingStatusFieldNumber = 15;
  ::google::appengine::v1::ServingStatus serving_status() const;
  void set_serving_status(::google::appengine::v1::ServingStatus value);

  // int64 disk_usage_bytes = 18;
  void clear_disk_usage_bytes();
  static const int kDiskUsageBytesFieldNumber = 18;
  ::google::protobuf::int64 disk_usage_bytes() const;
  void set_disk_usage_bytes(::google::protobuf::int64 value);

  // .google.appengine.v1.AutomaticScaling automatic_scaling = 3;
  bool has_automatic_scaling() const;
  void clear_automatic_scaling();
  static const int kAutomaticScalingFieldNumber = 3;
  const ::google::appengine::v1::AutomaticScaling& automatic_scaling() const;
  ::google::appengine::v1::AutomaticScaling* release_automatic_scaling();
  ::google::appengine::v1::AutomaticScaling* mutable_automatic_scaling();
  void set_allocated_automatic_scaling(::google::appengine::v1::AutomaticScaling* automatic_scaling);

  // .google.appengine.v1.BasicScaling basic_scaling = 4;
  bool has_basic_scaling() const;
  void clear_basic_scaling();
  static const int kBasicScalingFieldNumber = 4;
  const ::google::appengine::v1::BasicScaling& basic_scaling() const;
  ::google::appengine::v1::BasicScaling* release_basic_scaling();
  ::google::appengine::v1::BasicScaling* mutable_basic_scaling();
  void set_allocated_basic_scaling(::google::appengine::v1::BasicScaling* basic_scaling);

  // .google.appengine.v1.ManualScaling manual_scaling = 5;
  bool has_manual_scaling() const;
  void clear_manual_scaling();
  static const int kManualScalingFieldNumber = 5;
  const ::google::appengine::v1::ManualScaling& manual_scaling() const;
  ::google::appengine::v1::ManualScaling* release_manual_scaling();
  ::google::appengine::v1::ManualScaling* mutable_manual_scaling();
  void set_allocated_manual_scaling(::google::appengine::v1::ManualScaling* manual_scaling);

  ScalingCase scaling_case() const;
  // @@protoc_insertion_point(class_scope:google.appengine.v1.Version)
 private:
  void set_has_automatic_scaling();
  void set_has_basic_scaling();
  void set_has_manual_scaling();

  inline bool has_scaling() const;
  void clear_scaling();
  inline void clear_has_scaling();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> inbound_services_;
  mutable int _inbound_services_cached_byte_size_;
  ::google::protobuf::internal::MapField<
      Version_BetaSettingsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > beta_settings_;
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlMap > handlers_;
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::ErrorHandler > error_handlers_;
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Library > libraries_;
  ::google::protobuf::internal::MapField<
      Version_EnvVariablesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > env_variables_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr instance_class_;
  ::google::protobuf::internal::ArenaStringPtr runtime_;
  ::google::protobuf::internal::ArenaStringPtr env_;
  ::google::protobuf::internal::ArenaStringPtr created_by_;
  ::google::protobuf::internal::ArenaStringPtr nobuild_files_regex_;
  ::google::protobuf::internal::ArenaStringPtr version_url_;
  ::google::appengine::v1::Network* network_;
  ::google::appengine::v1::Resources* resources_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::appengine::v1::ApiConfigHandler* api_config_;
  ::google::protobuf::Duration* default_expiration_;
  ::google::appengine::v1::HealthCheck* health_check_;
  ::google::appengine::v1::Deployment* deployment_;
  bool threadsafe_;
  bool vm_;
  int serving_status_;
  ::google::protobuf::int64 disk_usage_bytes_;
  union ScalingUnion {
    ScalingUnion() {}
    ::google::appengine::v1::AutomaticScaling* automatic_scaling_;
    ::google::appengine::v1::BasicScaling* basic_scaling_;
    ::google::appengine::v1::ManualScaling* manual_scaling_;
  } scaling_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsVersionImpl();
};
// -------------------------------------------------------------------

class AutomaticScaling : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.AutomaticScaling) */ {
 public:
  AutomaticScaling();
  virtual ~AutomaticScaling();

  AutomaticScaling(const AutomaticScaling& from);

  inline AutomaticScaling& operator=(const AutomaticScaling& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutomaticScaling(AutomaticScaling&& from) noexcept
    : AutomaticScaling() {
    *this = ::std::move(from);
  }

  inline AutomaticScaling& operator=(AutomaticScaling&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutomaticScaling& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutomaticScaling* internal_default_instance() {
    return reinterpret_cast<const AutomaticScaling*>(
               &_AutomaticScaling_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AutomaticScaling* other);
  friend void swap(AutomaticScaling& a, AutomaticScaling& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutomaticScaling* New() const PROTOBUF_FINAL { return New(NULL); }

  AutomaticScaling* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AutomaticScaling& from);
  void MergeFrom(const AutomaticScaling& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AutomaticScaling* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration cool_down_period = 1;
  bool has_cool_down_period() const;
  void clear_cool_down_period();
  static const int kCoolDownPeriodFieldNumber = 1;
  const ::google::protobuf::Duration& cool_down_period() const;
  ::google::protobuf::Duration* release_cool_down_period();
  ::google::protobuf::Duration* mutable_cool_down_period();
  void set_allocated_cool_down_period(::google::protobuf::Duration* cool_down_period);

  // .google.appengine.v1.CpuUtilization cpu_utilization = 2;
  bool has_cpu_utilization() const;
  void clear_cpu_utilization();
  static const int kCpuUtilizationFieldNumber = 2;
  const ::google::appengine::v1::CpuUtilization& cpu_utilization() const;
  ::google::appengine::v1::CpuUtilization* release_cpu_utilization();
  ::google::appengine::v1::CpuUtilization* mutable_cpu_utilization();
  void set_allocated_cpu_utilization(::google::appengine::v1::CpuUtilization* cpu_utilization);

  // .google.protobuf.Duration max_pending_latency = 6;
  bool has_max_pending_latency() const;
  void clear_max_pending_latency();
  static const int kMaxPendingLatencyFieldNumber = 6;
  const ::google::protobuf::Duration& max_pending_latency() const;
  ::google::protobuf::Duration* release_max_pending_latency();
  ::google::protobuf::Duration* mutable_max_pending_latency();
  void set_allocated_max_pending_latency(::google::protobuf::Duration* max_pending_latency);

  // .google.protobuf.Duration min_pending_latency = 9;
  bool has_min_pending_latency() const;
  void clear_min_pending_latency();
  static const int kMinPendingLatencyFieldNumber = 9;
  const ::google::protobuf::Duration& min_pending_latency() const;
  ::google::protobuf::Duration* release_min_pending_latency();
  ::google::protobuf::Duration* mutable_min_pending_latency();
  void set_allocated_min_pending_latency(::google::protobuf::Duration* min_pending_latency);

  // .google.appengine.v1.RequestUtilization request_utilization = 10;
  bool has_request_utilization() const;
  void clear_request_utilization();
  static const int kRequestUtilizationFieldNumber = 10;
  const ::google::appengine::v1::RequestUtilization& request_utilization() const;
  ::google::appengine::v1::RequestUtilization* release_request_utilization();
  ::google::appengine::v1::RequestUtilization* mutable_request_utilization();
  void set_allocated_request_utilization(::google::appengine::v1::RequestUtilization* request_utilization);

  // .google.appengine.v1.DiskUtilization disk_utilization = 11;
  bool has_disk_utilization() const;
  void clear_disk_utilization();
  static const int kDiskUtilizationFieldNumber = 11;
  const ::google::appengine::v1::DiskUtilization& disk_utilization() const;
  ::google::appengine::v1::DiskUtilization* release_disk_utilization();
  ::google::appengine::v1::DiskUtilization* mutable_disk_utilization();
  void set_allocated_disk_utilization(::google::appengine::v1::DiskUtilization* disk_utilization);

  // .google.appengine.v1.NetworkUtilization network_utilization = 12;
  bool has_network_utilization() const;
  void clear_network_utilization();
  static const int kNetworkUtilizationFieldNumber = 12;
  const ::google::appengine::v1::NetworkUtilization& network_utilization() const;
  ::google::appengine::v1::NetworkUtilization* release_network_utilization();
  ::google::appengine::v1::NetworkUtilization* mutable_network_utilization();
  void set_allocated_network_utilization(::google::appengine::v1::NetworkUtilization* network_utilization);

  // int32 max_concurrent_requests = 3;
  void clear_max_concurrent_requests();
  static const int kMaxConcurrentRequestsFieldNumber = 3;
  ::google::protobuf::int32 max_concurrent_requests() const;
  void set_max_concurrent_requests(::google::protobuf::int32 value);

  // int32 max_idle_instances = 4;
  void clear_max_idle_instances();
  static const int kMaxIdleInstancesFieldNumber = 4;
  ::google::protobuf::int32 max_idle_instances() const;
  void set_max_idle_instances(::google::protobuf::int32 value);

  // int32 max_total_instances = 5;
  void clear_max_total_instances();
  static const int kMaxTotalInstancesFieldNumber = 5;
  ::google::protobuf::int32 max_total_instances() const;
  void set_max_total_instances(::google::protobuf::int32 value);

  // int32 min_idle_instances = 7;
  void clear_min_idle_instances();
  static const int kMinIdleInstancesFieldNumber = 7;
  ::google::protobuf::int32 min_idle_instances() const;
  void set_min_idle_instances(::google::protobuf::int32 value);

  // int32 min_total_instances = 8;
  void clear_min_total_instances();
  static const int kMinTotalInstancesFieldNumber = 8;
  ::google::protobuf::int32 min_total_instances() const;
  void set_min_total_instances(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.AutomaticScaling)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* cool_down_period_;
  ::google::appengine::v1::CpuUtilization* cpu_utilization_;
  ::google::protobuf::Duration* max_pending_latency_;
  ::google::protobuf::Duration* min_pending_latency_;
  ::google::appengine::v1::RequestUtilization* request_utilization_;
  ::google::appengine::v1::DiskUtilization* disk_utilization_;
  ::google::appengine::v1::NetworkUtilization* network_utilization_;
  ::google::protobuf::int32 max_concurrent_requests_;
  ::google::protobuf::int32 max_idle_instances_;
  ::google::protobuf::int32 max_total_instances_;
  ::google::protobuf::int32 min_idle_instances_;
  ::google::protobuf::int32 min_total_instances_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsAutomaticScalingImpl();
};
// -------------------------------------------------------------------

class BasicScaling : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.BasicScaling) */ {
 public:
  BasicScaling();
  virtual ~BasicScaling();

  BasicScaling(const BasicScaling& from);

  inline BasicScaling& operator=(const BasicScaling& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BasicScaling(BasicScaling&& from) noexcept
    : BasicScaling() {
    *this = ::std::move(from);
  }

  inline BasicScaling& operator=(BasicScaling&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicScaling& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BasicScaling* internal_default_instance() {
    return reinterpret_cast<const BasicScaling*>(
               &_BasicScaling_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(BasicScaling* other);
  friend void swap(BasicScaling& a, BasicScaling& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BasicScaling* New() const PROTOBUF_FINAL { return New(NULL); }

  BasicScaling* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BasicScaling& from);
  void MergeFrom(const BasicScaling& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BasicScaling* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration idle_timeout = 1;
  bool has_idle_timeout() const;
  void clear_idle_timeout();
  static const int kIdleTimeoutFieldNumber = 1;
  const ::google::protobuf::Duration& idle_timeout() const;
  ::google::protobuf::Duration* release_idle_timeout();
  ::google::protobuf::Duration* mutable_idle_timeout();
  void set_allocated_idle_timeout(::google::protobuf::Duration* idle_timeout);

  // int32 max_instances = 2;
  void clear_max_instances();
  static const int kMaxInstancesFieldNumber = 2;
  ::google::protobuf::int32 max_instances() const;
  void set_max_instances(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.BasicScaling)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* idle_timeout_;
  ::google::protobuf::int32 max_instances_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsBasicScalingImpl();
};
// -------------------------------------------------------------------

class ManualScaling : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ManualScaling) */ {
 public:
  ManualScaling();
  virtual ~ManualScaling();

  ManualScaling(const ManualScaling& from);

  inline ManualScaling& operator=(const ManualScaling& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ManualScaling(ManualScaling&& from) noexcept
    : ManualScaling() {
    *this = ::std::move(from);
  }

  inline ManualScaling& operator=(ManualScaling&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualScaling& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualScaling* internal_default_instance() {
    return reinterpret_cast<const ManualScaling*>(
               &_ManualScaling_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ManualScaling* other);
  friend void swap(ManualScaling& a, ManualScaling& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ManualScaling* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualScaling* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualScaling& from);
  void MergeFrom(const ManualScaling& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualScaling* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 instances = 1;
  void clear_instances();
  static const int kInstancesFieldNumber = 1;
  ::google::protobuf::int32 instances() const;
  void set_instances(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ManualScaling)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 instances_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsManualScalingImpl();
};
// -------------------------------------------------------------------

class CpuUtilization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.CpuUtilization) */ {
 public:
  CpuUtilization();
  virtual ~CpuUtilization();

  CpuUtilization(const CpuUtilization& from);

  inline CpuUtilization& operator=(const CpuUtilization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CpuUtilization(CpuUtilization&& from) noexcept
    : CpuUtilization() {
    *this = ::std::move(from);
  }

  inline CpuUtilization& operator=(CpuUtilization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CpuUtilization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CpuUtilization* internal_default_instance() {
    return reinterpret_cast<const CpuUtilization*>(
               &_CpuUtilization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CpuUtilization* other);
  friend void swap(CpuUtilization& a, CpuUtilization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CpuUtilization* New() const PROTOBUF_FINAL { return New(NULL); }

  CpuUtilization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CpuUtilization& from);
  void MergeFrom(const CpuUtilization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CpuUtilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration aggregation_window_length = 1;
  bool has_aggregation_window_length() const;
  void clear_aggregation_window_length();
  static const int kAggregationWindowLengthFieldNumber = 1;
  const ::google::protobuf::Duration& aggregation_window_length() const;
  ::google::protobuf::Duration* release_aggregation_window_length();
  ::google::protobuf::Duration* mutable_aggregation_window_length();
  void set_allocated_aggregation_window_length(::google::protobuf::Duration* aggregation_window_length);

  // double target_utilization = 2;
  void clear_target_utilization();
  static const int kTargetUtilizationFieldNumber = 2;
  double target_utilization() const;
  void set_target_utilization(double value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.CpuUtilization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* aggregation_window_length_;
  double target_utilization_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsCpuUtilizationImpl();
};
// -------------------------------------------------------------------

class RequestUtilization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.RequestUtilization) */ {
 public:
  RequestUtilization();
  virtual ~RequestUtilization();

  RequestUtilization(const RequestUtilization& from);

  inline RequestUtilization& operator=(const RequestUtilization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestUtilization(RequestUtilization&& from) noexcept
    : RequestUtilization() {
    *this = ::std::move(from);
  }

  inline RequestUtilization& operator=(RequestUtilization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestUtilization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestUtilization* internal_default_instance() {
    return reinterpret_cast<const RequestUtilization*>(
               &_RequestUtilization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(RequestUtilization* other);
  friend void swap(RequestUtilization& a, RequestUtilization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestUtilization* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestUtilization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestUtilization& from);
  void MergeFrom(const RequestUtilization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestUtilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 target_request_count_per_second = 1;
  void clear_target_request_count_per_second();
  static const int kTargetRequestCountPerSecondFieldNumber = 1;
  ::google::protobuf::int32 target_request_count_per_second() const;
  void set_target_request_count_per_second(::google::protobuf::int32 value);

  // int32 target_concurrent_requests = 2;
  void clear_target_concurrent_requests();
  static const int kTargetConcurrentRequestsFieldNumber = 2;
  ::google::protobuf::int32 target_concurrent_requests() const;
  void set_target_concurrent_requests(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.RequestUtilization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 target_request_count_per_second_;
  ::google::protobuf::int32 target_concurrent_requests_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsRequestUtilizationImpl();
};
// -------------------------------------------------------------------

class DiskUtilization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.DiskUtilization) */ {
 public:
  DiskUtilization();
  virtual ~DiskUtilization();

  DiskUtilization(const DiskUtilization& from);

  inline DiskUtilization& operator=(const DiskUtilization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiskUtilization(DiskUtilization&& from) noexcept
    : DiskUtilization() {
    *this = ::std::move(from);
  }

  inline DiskUtilization& operator=(DiskUtilization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DiskUtilization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiskUtilization* internal_default_instance() {
    return reinterpret_cast<const DiskUtilization*>(
               &_DiskUtilization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(DiskUtilization* other);
  friend void swap(DiskUtilization& a, DiskUtilization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiskUtilization* New() const PROTOBUF_FINAL { return New(NULL); }

  DiskUtilization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DiskUtilization& from);
  void MergeFrom(const DiskUtilization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DiskUtilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 target_write_bytes_per_second = 14;
  void clear_target_write_bytes_per_second();
  static const int kTargetWriteBytesPerSecondFieldNumber = 14;
  ::google::protobuf::int32 target_write_bytes_per_second() const;
  void set_target_write_bytes_per_second(::google::protobuf::int32 value);

  // int32 target_write_ops_per_second = 15;
  void clear_target_write_ops_per_second();
  static const int kTargetWriteOpsPerSecondFieldNumber = 15;
  ::google::protobuf::int32 target_write_ops_per_second() const;
  void set_target_write_ops_per_second(::google::protobuf::int32 value);

  // int32 target_read_bytes_per_second = 16;
  void clear_target_read_bytes_per_second();
  static const int kTargetReadBytesPerSecondFieldNumber = 16;
  ::google::protobuf::int32 target_read_bytes_per_second() const;
  void set_target_read_bytes_per_second(::google::protobuf::int32 value);

  // int32 target_read_ops_per_second = 17;
  void clear_target_read_ops_per_second();
  static const int kTargetReadOpsPerSecondFieldNumber = 17;
  ::google::protobuf::int32 target_read_ops_per_second() const;
  void set_target_read_ops_per_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.DiskUtilization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 target_write_bytes_per_second_;
  ::google::protobuf::int32 target_write_ops_per_second_;
  ::google::protobuf::int32 target_read_bytes_per_second_;
  ::google::protobuf::int32 target_read_ops_per_second_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsDiskUtilizationImpl();
};
// -------------------------------------------------------------------

class NetworkUtilization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.NetworkUtilization) */ {
 public:
  NetworkUtilization();
  virtual ~NetworkUtilization();

  NetworkUtilization(const NetworkUtilization& from);

  inline NetworkUtilization& operator=(const NetworkUtilization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetworkUtilization(NetworkUtilization&& from) noexcept
    : NetworkUtilization() {
    *this = ::std::move(from);
  }

  inline NetworkUtilization& operator=(NetworkUtilization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetworkUtilization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkUtilization* internal_default_instance() {
    return reinterpret_cast<const NetworkUtilization*>(
               &_NetworkUtilization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(NetworkUtilization* other);
  friend void swap(NetworkUtilization& a, NetworkUtilization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetworkUtilization* New() const PROTOBUF_FINAL { return New(NULL); }

  NetworkUtilization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetworkUtilization& from);
  void MergeFrom(const NetworkUtilization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetworkUtilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 target_sent_bytes_per_second = 1;
  void clear_target_sent_bytes_per_second();
  static const int kTargetSentBytesPerSecondFieldNumber = 1;
  ::google::protobuf::int32 target_sent_bytes_per_second() const;
  void set_target_sent_bytes_per_second(::google::protobuf::int32 value);

  // int32 target_sent_packets_per_second = 11;
  void clear_target_sent_packets_per_second();
  static const int kTargetSentPacketsPerSecondFieldNumber = 11;
  ::google::protobuf::int32 target_sent_packets_per_second() const;
  void set_target_sent_packets_per_second(::google::protobuf::int32 value);

  // int32 target_received_bytes_per_second = 12;
  void clear_target_received_bytes_per_second();
  static const int kTargetReceivedBytesPerSecondFieldNumber = 12;
  ::google::protobuf::int32 target_received_bytes_per_second() const;
  void set_target_received_bytes_per_second(::google::protobuf::int32 value);

  // int32 target_received_packets_per_second = 13;
  void clear_target_received_packets_per_second();
  static const int kTargetReceivedPacketsPerSecondFieldNumber = 13;
  ::google::protobuf::int32 target_received_packets_per_second() const;
  void set_target_received_packets_per_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.NetworkUtilization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 target_sent_bytes_per_second_;
  ::google::protobuf::int32 target_sent_packets_per_second_;
  ::google::protobuf::int32 target_received_bytes_per_second_;
  ::google::protobuf::int32 target_received_packets_per_second_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetworkUtilizationImpl();
};
// -------------------------------------------------------------------

class Network : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.Network) */ {
 public:
  Network();
  virtual ~Network();

  Network(const Network& from);

  inline Network& operator=(const Network& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Network(Network&& from) noexcept
    : Network() {
    *this = ::std::move(from);
  }

  inline Network& operator=(Network&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Network& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Network* internal_default_instance() {
    return reinterpret_cast<const Network*>(
               &_Network_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Network* other);
  friend void swap(Network& a, Network& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Network* New() const PROTOBUF_FINAL { return New(NULL); }

  Network* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Network& from);
  void MergeFrom(const Network& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Network* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string forwarded_ports = 1;
  int forwarded_ports_size() const;
  void clear_forwarded_ports();
  static const int kForwardedPortsFieldNumber = 1;
  const ::std::string& forwarded_ports(int index) const;
  ::std::string* mutable_forwarded_ports(int index);
  void set_forwarded_ports(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_forwarded_ports(int index, ::std::string&& value);
  #endif
  void set_forwarded_ports(int index, const char* value);
  void set_forwarded_ports(int index, const char* value, size_t size);
  ::std::string* add_forwarded_ports();
  void add_forwarded_ports(const ::std::string& value);
  #if LANG_CXX11
  void add_forwarded_ports(::std::string&& value);
  #endif
  void add_forwarded_ports(const char* value);
  void add_forwarded_ports(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& forwarded_ports() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_forwarded_ports();

  // string instance_tag = 2;
  void clear_instance_tag();
  static const int kInstanceTagFieldNumber = 2;
  const ::std::string& instance_tag() const;
  void set_instance_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_tag(::std::string&& value);
  #endif
  void set_instance_tag(const char* value);
  void set_instance_tag(const char* value, size_t size);
  ::std::string* mutable_instance_tag();
  ::std::string* release_instance_tag();
  void set_allocated_instance_tag(::std::string* instance_tag);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.Network)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> forwarded_ports_;
  ::google::protobuf::internal::ArenaStringPtr instance_tag_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetworkImpl();
};
// -------------------------------------------------------------------

class Resources : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.Resources) */ {
 public:
  Resources();
  virtual ~Resources();

  Resources(const Resources& from);

  inline Resources& operator=(const Resources& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Resources(Resources&& from) noexcept
    : Resources() {
    *this = ::std::move(from);
  }

  inline Resources& operator=(Resources&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Resources& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Resources* internal_default_instance() {
    return reinterpret_cast<const Resources*>(
               &_Resources_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Resources* other);
  friend void swap(Resources& a, Resources& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Resources* New() const PROTOBUF_FINAL { return New(NULL); }

  Resources* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Resources& from);
  void MergeFrom(const Resources& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Resources* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double cpu = 1;
  void clear_cpu();
  static const int kCpuFieldNumber = 1;
  double cpu() const;
  void set_cpu(double value);

  // double disk_gb = 2;
  void clear_disk_gb();
  static const int kDiskGbFieldNumber = 2;
  double disk_gb() const;
  void set_disk_gb(double value);

  // double memory_gb = 3;
  void clear_memory_gb();
  static const int kMemoryGbFieldNumber = 3;
  double memory_gb() const;
  void set_memory_gb(double value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.Resources)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double cpu_;
  double disk_gb_;
  double memory_gb_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsResourcesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Version

// string name = 1;
inline void Version::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.name)
  return name_.GetNoArena();
}
inline void Version::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.name)
}
#if LANG_CXX11
inline void Version::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.name)
}
#endif
inline void Version::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.name)
}
inline void Version::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.name)
}
inline ::std::string* Version::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.name)
}

// string id = 2;
inline void Version::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::id() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.id)
  return id_.GetNoArena();
}
inline void Version::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.id)
}
#if LANG_CXX11
inline void Version::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.id)
}
#endif
inline void Version::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.id)
}
inline void Version::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.id)
}
inline ::std::string* Version::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_id() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.id)
}

// .google.appengine.v1.AutomaticScaling automatic_scaling = 3;
inline bool Version::has_automatic_scaling() const {
  return scaling_case() == kAutomaticScaling;
}
inline void Version::set_has_automatic_scaling() {
  _oneof_case_[0] = kAutomaticScaling;
}
inline void Version::clear_automatic_scaling() {
  if (has_automatic_scaling()) {
    delete scaling_.automatic_scaling_;
    clear_has_scaling();
  }
}
inline ::google::appengine::v1::AutomaticScaling* Version::release_automatic_scaling() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.automatic_scaling)
  if (has_automatic_scaling()) {
    clear_has_scaling();
      ::google::appengine::v1::AutomaticScaling* temp = scaling_.automatic_scaling_;
    scaling_.automatic_scaling_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::AutomaticScaling& Version::automatic_scaling() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.automatic_scaling)
  return has_automatic_scaling()
      ? *scaling_.automatic_scaling_
      : *reinterpret_cast< ::google::appengine::v1::AutomaticScaling*>(&::google::appengine::v1::_AutomaticScaling_default_instance_);
}
inline ::google::appengine::v1::AutomaticScaling* Version::mutable_automatic_scaling() {
  if (!has_automatic_scaling()) {
    clear_scaling();
    set_has_automatic_scaling();
    scaling_.automatic_scaling_ = new ::google::appengine::v1::AutomaticScaling;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.automatic_scaling)
  return scaling_.automatic_scaling_;
}

// .google.appengine.v1.BasicScaling basic_scaling = 4;
inline bool Version::has_basic_scaling() const {
  return scaling_case() == kBasicScaling;
}
inline void Version::set_has_basic_scaling() {
  _oneof_case_[0] = kBasicScaling;
}
inline void Version::clear_basic_scaling() {
  if (has_basic_scaling()) {
    delete scaling_.basic_scaling_;
    clear_has_scaling();
  }
}
inline ::google::appengine::v1::BasicScaling* Version::release_basic_scaling() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.basic_scaling)
  if (has_basic_scaling()) {
    clear_has_scaling();
      ::google::appengine::v1::BasicScaling* temp = scaling_.basic_scaling_;
    scaling_.basic_scaling_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::BasicScaling& Version::basic_scaling() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.basic_scaling)
  return has_basic_scaling()
      ? *scaling_.basic_scaling_
      : *reinterpret_cast< ::google::appengine::v1::BasicScaling*>(&::google::appengine::v1::_BasicScaling_default_instance_);
}
inline ::google::appengine::v1::BasicScaling* Version::mutable_basic_scaling() {
  if (!has_basic_scaling()) {
    clear_scaling();
    set_has_basic_scaling();
    scaling_.basic_scaling_ = new ::google::appengine::v1::BasicScaling;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.basic_scaling)
  return scaling_.basic_scaling_;
}

// .google.appengine.v1.ManualScaling manual_scaling = 5;
inline bool Version::has_manual_scaling() const {
  return scaling_case() == kManualScaling;
}
inline void Version::set_has_manual_scaling() {
  _oneof_case_[0] = kManualScaling;
}
inline void Version::clear_manual_scaling() {
  if (has_manual_scaling()) {
    delete scaling_.manual_scaling_;
    clear_has_scaling();
  }
}
inline ::google::appengine::v1::ManualScaling* Version::release_manual_scaling() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.manual_scaling)
  if (has_manual_scaling()) {
    clear_has_scaling();
      ::google::appengine::v1::ManualScaling* temp = scaling_.manual_scaling_;
    scaling_.manual_scaling_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::ManualScaling& Version::manual_scaling() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.manual_scaling)
  return has_manual_scaling()
      ? *scaling_.manual_scaling_
      : *reinterpret_cast< ::google::appengine::v1::ManualScaling*>(&::google::appengine::v1::_ManualScaling_default_instance_);
}
inline ::google::appengine::v1::ManualScaling* Version::mutable_manual_scaling() {
  if (!has_manual_scaling()) {
    clear_scaling();
    set_has_manual_scaling();
    scaling_.manual_scaling_ = new ::google::appengine::v1::ManualScaling;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.manual_scaling)
  return scaling_.manual_scaling_;
}

// repeated .google.appengine.v1.InboundServiceType inbound_services = 6;
inline int Version::inbound_services_size() const {
  return inbound_services_.size();
}
inline void Version::clear_inbound_services() {
  inbound_services_.Clear();
}
inline ::google::appengine::v1::InboundServiceType Version::inbound_services(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.inbound_services)
  return static_cast< ::google::appengine::v1::InboundServiceType >(inbound_services_.Get(index));
}
inline void Version::set_inbound_services(int index, ::google::appengine::v1::InboundServiceType value) {
  inbound_services_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.inbound_services)
}
inline void Version::add_inbound_services(::google::appengine::v1::InboundServiceType value) {
  inbound_services_.Add(value);
  // @@protoc_insertion_point(field_add:google.appengine.v1.Version.inbound_services)
}
inline const ::google::protobuf::RepeatedField<int>&
Version::inbound_services() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.Version.inbound_services)
  return inbound_services_;
}
inline ::google::protobuf::RepeatedField<int>*
Version::mutable_inbound_services() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.Version.inbound_services)
  return &inbound_services_;
}

// string instance_class = 7;
inline void Version::clear_instance_class() {
  instance_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::instance_class() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.instance_class)
  return instance_class_.GetNoArena();
}
inline void Version::set_instance_class(const ::std::string& value) {
  
  instance_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.instance_class)
}
#if LANG_CXX11
inline void Version::set_instance_class(::std::string&& value) {
  
  instance_class_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.instance_class)
}
#endif
inline void Version::set_instance_class(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.instance_class)
}
inline void Version::set_instance_class(const char* value, size_t size) {
  
  instance_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.instance_class)
}
inline ::std::string* Version::mutable_instance_class() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.instance_class)
  return instance_class_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_instance_class() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.instance_class)
  
  return instance_class_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_instance_class(::std::string* instance_class) {
  if (instance_class != NULL) {
    
  } else {
    
  }
  instance_class_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_class);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.instance_class)
}

// .google.appengine.v1.Network network = 8;
inline bool Version::has_network() const {
  return this != internal_default_instance() && network_ != NULL;
}
inline void Version::clear_network() {
  if (GetArenaNoVirtual() == NULL && network_ != NULL) {
    delete network_;
  }
  network_ = NULL;
}
inline const ::google::appengine::v1::Network& Version::network() const {
  const ::google::appengine::v1::Network* p = network_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.network)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::Network*>(
      &::google::appengine::v1::_Network_default_instance_);
}
inline ::google::appengine::v1::Network* Version::release_network() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.network)
  
  ::google::appengine::v1::Network* temp = network_;
  network_ = NULL;
  return temp;
}
inline ::google::appengine::v1::Network* Version::mutable_network() {
  
  if (network_ == NULL) {
    network_ = new ::google::appengine::v1::Network;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.network)
  return network_;
}
inline void Version::set_allocated_network(::google::appengine::v1::Network* network) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete network_;
  }
  if (network) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      network = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, network, submessage_arena);
    }
    
  } else {
    
  }
  network_ = network;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.network)
}

// .google.appengine.v1.Resources resources = 9;
inline bool Version::has_resources() const {
  return this != internal_default_instance() && resources_ != NULL;
}
inline void Version::clear_resources() {
  if (GetArenaNoVirtual() == NULL && resources_ != NULL) {
    delete resources_;
  }
  resources_ = NULL;
}
inline const ::google::appengine::v1::Resources& Version::resources() const {
  const ::google::appengine::v1::Resources* p = resources_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.resources)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::Resources*>(
      &::google::appengine::v1::_Resources_default_instance_);
}
inline ::google::appengine::v1::Resources* Version::release_resources() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.resources)
  
  ::google::appengine::v1::Resources* temp = resources_;
  resources_ = NULL;
  return temp;
}
inline ::google::appengine::v1::Resources* Version::mutable_resources() {
  
  if (resources_ == NULL) {
    resources_ = new ::google::appengine::v1::Resources;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.resources)
  return resources_;
}
inline void Version::set_allocated_resources(::google::appengine::v1::Resources* resources) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resources_;
  }
  if (resources) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resources = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resources, submessage_arena);
    }
    
  } else {
    
  }
  resources_ = resources;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.resources)
}

// string runtime = 10;
inline void Version::clear_runtime() {
  runtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::runtime() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.runtime)
  return runtime_.GetNoArena();
}
inline void Version::set_runtime(const ::std::string& value) {
  
  runtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.runtime)
}
#if LANG_CXX11
inline void Version::set_runtime(::std::string&& value) {
  
  runtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.runtime)
}
#endif
inline void Version::set_runtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.runtime)
}
inline void Version::set_runtime(const char* value, size_t size) {
  
  runtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.runtime)
}
inline ::std::string* Version::mutable_runtime() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.runtime)
  return runtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_runtime() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.runtime)
  
  return runtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_runtime(::std::string* runtime) {
  if (runtime != NULL) {
    
  } else {
    
  }
  runtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.runtime)
}

// bool threadsafe = 11;
inline void Version::clear_threadsafe() {
  threadsafe_ = false;
}
inline bool Version::threadsafe() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.threadsafe)
  return threadsafe_;
}
inline void Version::set_threadsafe(bool value) {
  
  threadsafe_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.threadsafe)
}

// bool vm = 12;
inline void Version::clear_vm() {
  vm_ = false;
}
inline bool Version::vm() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.vm)
  return vm_;
}
inline void Version::set_vm(bool value) {
  
  vm_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.vm)
}

// map<string, string> beta_settings = 13;
inline int Version::beta_settings_size() const {
  return beta_settings_.size();
}
inline void Version::clear_beta_settings() {
  beta_settings_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Version::beta_settings() const {
  // @@protoc_insertion_point(field_map:google.appengine.v1.Version.beta_settings)
  return beta_settings_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Version::mutable_beta_settings() {
  // @@protoc_insertion_point(field_mutable_map:google.appengine.v1.Version.beta_settings)
  return beta_settings_.MutableMap();
}

// string env = 14;
inline void Version::clear_env() {
  env_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::env() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.env)
  return env_.GetNoArena();
}
inline void Version::set_env(const ::std::string& value) {
  
  env_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.env)
}
#if LANG_CXX11
inline void Version::set_env(::std::string&& value) {
  
  env_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.env)
}
#endif
inline void Version::set_env(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  env_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.env)
}
inline void Version::set_env(const char* value, size_t size) {
  
  env_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.env)
}
inline ::std::string* Version::mutable_env() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.env)
  return env_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_env() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.env)
  
  return env_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_env(::std::string* env) {
  if (env != NULL) {
    
  } else {
    
  }
  env_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), env);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.env)
}

// .google.appengine.v1.ServingStatus serving_status = 15;
inline void Version::clear_serving_status() {
  serving_status_ = 0;
}
inline ::google::appengine::v1::ServingStatus Version::serving_status() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.serving_status)
  return static_cast< ::google::appengine::v1::ServingStatus >(serving_status_);
}
inline void Version::set_serving_status(::google::appengine::v1::ServingStatus value) {
  
  serving_status_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.serving_status)
}

// string created_by = 16;
inline void Version::clear_created_by() {
  created_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::created_by() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.created_by)
  return created_by_.GetNoArena();
}
inline void Version::set_created_by(const ::std::string& value) {
  
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.created_by)
}
#if LANG_CXX11
inline void Version::set_created_by(::std::string&& value) {
  
  created_by_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.created_by)
}
#endif
inline void Version::set_created_by(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.created_by)
}
inline void Version::set_created_by(const char* value, size_t size) {
  
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.created_by)
}
inline ::std::string* Version::mutable_created_by() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.created_by)
  return created_by_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_created_by() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.created_by)
  
  return created_by_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_created_by(::std::string* created_by) {
  if (created_by != NULL) {
    
  } else {
    
  }
  created_by_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created_by);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.created_by)
}

// .google.protobuf.Timestamp create_time = 17;
inline bool Version::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Version::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Version::release_create_time() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Version::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.create_time)
  return create_time_;
}
inline void Version::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.create_time)
}

// int64 disk_usage_bytes = 18;
inline void Version::clear_disk_usage_bytes() {
  disk_usage_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Version::disk_usage_bytes() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.disk_usage_bytes)
  return disk_usage_bytes_;
}
inline void Version::set_disk_usage_bytes(::google::protobuf::int64 value) {
  
  disk_usage_bytes_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.disk_usage_bytes)
}

// repeated .google.appengine.v1.UrlMap handlers = 100;
inline int Version::handlers_size() const {
  return handlers_.size();
}
inline const ::google::appengine::v1::UrlMap& Version::handlers(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.handlers)
  return handlers_.Get(index);
}
inline ::google::appengine::v1::UrlMap* Version::mutable_handlers(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.handlers)
  return handlers_.Mutable(index);
}
inline ::google::appengine::v1::UrlMap* Version::add_handlers() {
  // @@protoc_insertion_point(field_add:google.appengine.v1.Version.handlers)
  return handlers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlMap >*
Version::mutable_handlers() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.Version.handlers)
  return &handlers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlMap >&
Version::handlers() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.Version.handlers)
  return handlers_;
}

// repeated .google.appengine.v1.ErrorHandler error_handlers = 101;
inline int Version::error_handlers_size() const {
  return error_handlers_.size();
}
inline const ::google::appengine::v1::ErrorHandler& Version::error_handlers(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.error_handlers)
  return error_handlers_.Get(index);
}
inline ::google::appengine::v1::ErrorHandler* Version::mutable_error_handlers(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.error_handlers)
  return error_handlers_.Mutable(index);
}
inline ::google::appengine::v1::ErrorHandler* Version::add_error_handlers() {
  // @@protoc_insertion_point(field_add:google.appengine.v1.Version.error_handlers)
  return error_handlers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::ErrorHandler >*
Version::mutable_error_handlers() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.Version.error_handlers)
  return &error_handlers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::ErrorHandler >&
Version::error_handlers() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.Version.error_handlers)
  return error_handlers_;
}

// repeated .google.appengine.v1.Library libraries = 102;
inline int Version::libraries_size() const {
  return libraries_.size();
}
inline const ::google::appengine::v1::Library& Version::libraries(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.libraries)
  return libraries_.Get(index);
}
inline ::google::appengine::v1::Library* Version::mutable_libraries(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.libraries)
  return libraries_.Mutable(index);
}
inline ::google::appengine::v1::Library* Version::add_libraries() {
  // @@protoc_insertion_point(field_add:google.appengine.v1.Version.libraries)
  return libraries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Library >*
Version::mutable_libraries() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.Version.libraries)
  return &libraries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Library >&
Version::libraries() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.Version.libraries)
  return libraries_;
}

// .google.appengine.v1.ApiConfigHandler api_config = 103;
inline bool Version::has_api_config() const {
  return this != internal_default_instance() && api_config_ != NULL;
}
inline const ::google::appengine::v1::ApiConfigHandler& Version::api_config() const {
  const ::google::appengine::v1::ApiConfigHandler* p = api_config_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.api_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::ApiConfigHandler*>(
      &::google::appengine::v1::_ApiConfigHandler_default_instance_);
}
inline ::google::appengine::v1::ApiConfigHandler* Version::release_api_config() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.api_config)
  
  ::google::appengine::v1::ApiConfigHandler* temp = api_config_;
  api_config_ = NULL;
  return temp;
}
inline ::google::appengine::v1::ApiConfigHandler* Version::mutable_api_config() {
  
  if (api_config_ == NULL) {
    api_config_ = new ::google::appengine::v1::ApiConfigHandler;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.api_config)
  return api_config_;
}
inline void Version::set_allocated_api_config(::google::appengine::v1::ApiConfigHandler* api_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(api_config_);
  }
  if (api_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      api_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, api_config, submessage_arena);
    }
    
  } else {
    
  }
  api_config_ = api_config;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.api_config)
}

// map<string, string> env_variables = 104;
inline int Version::env_variables_size() const {
  return env_variables_.size();
}
inline void Version::clear_env_variables() {
  env_variables_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Version::env_variables() const {
  // @@protoc_insertion_point(field_map:google.appengine.v1.Version.env_variables)
  return env_variables_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Version::mutable_env_variables() {
  // @@protoc_insertion_point(field_mutable_map:google.appengine.v1.Version.env_variables)
  return env_variables_.MutableMap();
}

// .google.protobuf.Duration default_expiration = 105;
inline bool Version::has_default_expiration() const {
  return this != internal_default_instance() && default_expiration_ != NULL;
}
inline const ::google::protobuf::Duration& Version::default_expiration() const {
  const ::google::protobuf::Duration* p = default_expiration_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.default_expiration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* Version::release_default_expiration() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.default_expiration)
  
  ::google::protobuf::Duration* temp = default_expiration_;
  default_expiration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* Version::mutable_default_expiration() {
  
  if (default_expiration_ == NULL) {
    default_expiration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.default_expiration)
  return default_expiration_;
}
inline void Version::set_allocated_default_expiration(::google::protobuf::Duration* default_expiration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(default_expiration_);
  }
  if (default_expiration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(default_expiration)->GetArena();
    if (message_arena != submessage_arena) {
      default_expiration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_expiration, submessage_arena);
    }
    
  } else {
    
  }
  default_expiration_ = default_expiration;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.default_expiration)
}

// .google.appengine.v1.HealthCheck health_check = 106;
inline bool Version::has_health_check() const {
  return this != internal_default_instance() && health_check_ != NULL;
}
inline const ::google::appengine::v1::HealthCheck& Version::health_check() const {
  const ::google::appengine::v1::HealthCheck* p = health_check_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.health_check)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::HealthCheck*>(
      &::google::appengine::v1::_HealthCheck_default_instance_);
}
inline ::google::appengine::v1::HealthCheck* Version::release_health_check() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.health_check)
  
  ::google::appengine::v1::HealthCheck* temp = health_check_;
  health_check_ = NULL;
  return temp;
}
inline ::google::appengine::v1::HealthCheck* Version::mutable_health_check() {
  
  if (health_check_ == NULL) {
    health_check_ = new ::google::appengine::v1::HealthCheck;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.health_check)
  return health_check_;
}
inline void Version::set_allocated_health_check(::google::appengine::v1::HealthCheck* health_check) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(health_check_);
  }
  if (health_check) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      health_check = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, health_check, submessage_arena);
    }
    
  } else {
    
  }
  health_check_ = health_check;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.health_check)
}

// string nobuild_files_regex = 107;
inline void Version::clear_nobuild_files_regex() {
  nobuild_files_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::nobuild_files_regex() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.nobuild_files_regex)
  return nobuild_files_regex_.GetNoArena();
}
inline void Version::set_nobuild_files_regex(const ::std::string& value) {
  
  nobuild_files_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.nobuild_files_regex)
}
#if LANG_CXX11
inline void Version::set_nobuild_files_regex(::std::string&& value) {
  
  nobuild_files_regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.nobuild_files_regex)
}
#endif
inline void Version::set_nobuild_files_regex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nobuild_files_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.nobuild_files_regex)
}
inline void Version::set_nobuild_files_regex(const char* value, size_t size) {
  
  nobuild_files_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.nobuild_files_regex)
}
inline ::std::string* Version::mutable_nobuild_files_regex() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.nobuild_files_regex)
  return nobuild_files_regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_nobuild_files_regex() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.nobuild_files_regex)
  
  return nobuild_files_regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_nobuild_files_regex(::std::string* nobuild_files_regex) {
  if (nobuild_files_regex != NULL) {
    
  } else {
    
  }
  nobuild_files_regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nobuild_files_regex);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.nobuild_files_regex)
}

// .google.appengine.v1.Deployment deployment = 108;
inline bool Version::has_deployment() const {
  return this != internal_default_instance() && deployment_ != NULL;
}
inline const ::google::appengine::v1::Deployment& Version::deployment() const {
  const ::google::appengine::v1::Deployment* p = deployment_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.deployment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::Deployment*>(
      &::google::appengine::v1::_Deployment_default_instance_);
}
inline ::google::appengine::v1::Deployment* Version::release_deployment() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.deployment)
  
  ::google::appengine::v1::Deployment* temp = deployment_;
  deployment_ = NULL;
  return temp;
}
inline ::google::appengine::v1::Deployment* Version::mutable_deployment() {
  
  if (deployment_ == NULL) {
    deployment_ = new ::google::appengine::v1::Deployment;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.deployment)
  return deployment_;
}
inline void Version::set_allocated_deployment(::google::appengine::v1::Deployment* deployment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(deployment_);
  }
  if (deployment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deployment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deployment, submessage_arena);
    }
    
  } else {
    
  }
  deployment_ = deployment;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.deployment)
}

// string version_url = 109;
inline void Version::clear_version_url() {
  version_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::version_url() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Version.version_url)
  return version_url_.GetNoArena();
}
inline void Version::set_version_url(const ::std::string& value) {
  
  version_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Version.version_url)
}
#if LANG_CXX11
inline void Version::set_version_url(::std::string&& value) {
  
  version_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Version.version_url)
}
#endif
inline void Version::set_version_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Version.version_url)
}
inline void Version::set_version_url(const char* value, size_t size) {
  
  version_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Version.version_url)
}
inline ::std::string* Version::mutable_version_url() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Version.version_url)
  return version_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_version_url() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Version.version_url)
  
  return version_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_version_url(::std::string* version_url) {
  if (version_url != NULL) {
    
  } else {
    
  }
  version_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_url);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.version_url)
}

inline bool Version::has_scaling() const {
  return scaling_case() != SCALING_NOT_SET;
}
inline void Version::clear_has_scaling() {
  _oneof_case_[0] = SCALING_NOT_SET;
}
inline Version::ScalingCase Version::scaling_case() const {
  return Version::ScalingCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AutomaticScaling

// .google.protobuf.Duration cool_down_period = 1;
inline bool AutomaticScaling::has_cool_down_period() const {
  return this != internal_default_instance() && cool_down_period_ != NULL;
}
inline const ::google::protobuf::Duration& AutomaticScaling::cool_down_period() const {
  const ::google::protobuf::Duration* p = cool_down_period_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.cool_down_period)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* AutomaticScaling::release_cool_down_period() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AutomaticScaling.cool_down_period)
  
  ::google::protobuf::Duration* temp = cool_down_period_;
  cool_down_period_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* AutomaticScaling::mutable_cool_down_period() {
  
  if (cool_down_period_ == NULL) {
    cool_down_period_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AutomaticScaling.cool_down_period)
  return cool_down_period_;
}
inline void AutomaticScaling::set_allocated_cool_down_period(::google::protobuf::Duration* cool_down_period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cool_down_period_);
  }
  if (cool_down_period) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(cool_down_period)->GetArena();
    if (message_arena != submessage_arena) {
      cool_down_period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cool_down_period, submessage_arena);
    }
    
  } else {
    
  }
  cool_down_period_ = cool_down_period;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.AutomaticScaling.cool_down_period)
}

// .google.appengine.v1.CpuUtilization cpu_utilization = 2;
inline bool AutomaticScaling::has_cpu_utilization() const {
  return this != internal_default_instance() && cpu_utilization_ != NULL;
}
inline void AutomaticScaling::clear_cpu_utilization() {
  if (GetArenaNoVirtual() == NULL && cpu_utilization_ != NULL) {
    delete cpu_utilization_;
  }
  cpu_utilization_ = NULL;
}
inline const ::google::appengine::v1::CpuUtilization& AutomaticScaling::cpu_utilization() const {
  const ::google::appengine::v1::CpuUtilization* p = cpu_utilization_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.cpu_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::CpuUtilization*>(
      &::google::appengine::v1::_CpuUtilization_default_instance_);
}
inline ::google::appengine::v1::CpuUtilization* AutomaticScaling::release_cpu_utilization() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AutomaticScaling.cpu_utilization)
  
  ::google::appengine::v1::CpuUtilization* temp = cpu_utilization_;
  cpu_utilization_ = NULL;
  return temp;
}
inline ::google::appengine::v1::CpuUtilization* AutomaticScaling::mutable_cpu_utilization() {
  
  if (cpu_utilization_ == NULL) {
    cpu_utilization_ = new ::google::appengine::v1::CpuUtilization;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AutomaticScaling.cpu_utilization)
  return cpu_utilization_;
}
inline void AutomaticScaling::set_allocated_cpu_utilization(::google::appengine::v1::CpuUtilization* cpu_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cpu_utilization_;
  }
  if (cpu_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_utilization, submessage_arena);
    }
    
  } else {
    
  }
  cpu_utilization_ = cpu_utilization;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.AutomaticScaling.cpu_utilization)
}

// int32 max_concurrent_requests = 3;
inline void AutomaticScaling::clear_max_concurrent_requests() {
  max_concurrent_requests_ = 0;
}
inline ::google::protobuf::int32 AutomaticScaling::max_concurrent_requests() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.max_concurrent_requests)
  return max_concurrent_requests_;
}
inline void AutomaticScaling::set_max_concurrent_requests(::google::protobuf::int32 value) {
  
  max_concurrent_requests_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.AutomaticScaling.max_concurrent_requests)
}

// int32 max_idle_instances = 4;
inline void AutomaticScaling::clear_max_idle_instances() {
  max_idle_instances_ = 0;
}
inline ::google::protobuf::int32 AutomaticScaling::max_idle_instances() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.max_idle_instances)
  return max_idle_instances_;
}
inline void AutomaticScaling::set_max_idle_instances(::google::protobuf::int32 value) {
  
  max_idle_instances_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.AutomaticScaling.max_idle_instances)
}

// int32 max_total_instances = 5;
inline void AutomaticScaling::clear_max_total_instances() {
  max_total_instances_ = 0;
}
inline ::google::protobuf::int32 AutomaticScaling::max_total_instances() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.max_total_instances)
  return max_total_instances_;
}
inline void AutomaticScaling::set_max_total_instances(::google::protobuf::int32 value) {
  
  max_total_instances_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.AutomaticScaling.max_total_instances)
}

// .google.protobuf.Duration max_pending_latency = 6;
inline bool AutomaticScaling::has_max_pending_latency() const {
  return this != internal_default_instance() && max_pending_latency_ != NULL;
}
inline const ::google::protobuf::Duration& AutomaticScaling::max_pending_latency() const {
  const ::google::protobuf::Duration* p = max_pending_latency_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.max_pending_latency)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* AutomaticScaling::release_max_pending_latency() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AutomaticScaling.max_pending_latency)
  
  ::google::protobuf::Duration* temp = max_pending_latency_;
  max_pending_latency_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* AutomaticScaling::mutable_max_pending_latency() {
  
  if (max_pending_latency_ == NULL) {
    max_pending_latency_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AutomaticScaling.max_pending_latency)
  return max_pending_latency_;
}
inline void AutomaticScaling::set_allocated_max_pending_latency(::google::protobuf::Duration* max_pending_latency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_pending_latency_);
  }
  if (max_pending_latency) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(max_pending_latency)->GetArena();
    if (message_arena != submessage_arena) {
      max_pending_latency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_pending_latency, submessage_arena);
    }
    
  } else {
    
  }
  max_pending_latency_ = max_pending_latency;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.AutomaticScaling.max_pending_latency)
}

// int32 min_idle_instances = 7;
inline void AutomaticScaling::clear_min_idle_instances() {
  min_idle_instances_ = 0;
}
inline ::google::protobuf::int32 AutomaticScaling::min_idle_instances() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.min_idle_instances)
  return min_idle_instances_;
}
inline void AutomaticScaling::set_min_idle_instances(::google::protobuf::int32 value) {
  
  min_idle_instances_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.AutomaticScaling.min_idle_instances)
}

// int32 min_total_instances = 8;
inline void AutomaticScaling::clear_min_total_instances() {
  min_total_instances_ = 0;
}
inline ::google::protobuf::int32 AutomaticScaling::min_total_instances() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.min_total_instances)
  return min_total_instances_;
}
inline void AutomaticScaling::set_min_total_instances(::google::protobuf::int32 value) {
  
  min_total_instances_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.AutomaticScaling.min_total_instances)
}

// .google.protobuf.Duration min_pending_latency = 9;
inline bool AutomaticScaling::has_min_pending_latency() const {
  return this != internal_default_instance() && min_pending_latency_ != NULL;
}
inline const ::google::protobuf::Duration& AutomaticScaling::min_pending_latency() const {
  const ::google::protobuf::Duration* p = min_pending_latency_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.min_pending_latency)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* AutomaticScaling::release_min_pending_latency() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AutomaticScaling.min_pending_latency)
  
  ::google::protobuf::Duration* temp = min_pending_latency_;
  min_pending_latency_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* AutomaticScaling::mutable_min_pending_latency() {
  
  if (min_pending_latency_ == NULL) {
    min_pending_latency_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AutomaticScaling.min_pending_latency)
  return min_pending_latency_;
}
inline void AutomaticScaling::set_allocated_min_pending_latency(::google::protobuf::Duration* min_pending_latency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_pending_latency_);
  }
  if (min_pending_latency) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(min_pending_latency)->GetArena();
    if (message_arena != submessage_arena) {
      min_pending_latency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_pending_latency, submessage_arena);
    }
    
  } else {
    
  }
  min_pending_latency_ = min_pending_latency;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.AutomaticScaling.min_pending_latency)
}

// .google.appengine.v1.RequestUtilization request_utilization = 10;
inline bool AutomaticScaling::has_request_utilization() const {
  return this != internal_default_instance() && request_utilization_ != NULL;
}
inline void AutomaticScaling::clear_request_utilization() {
  if (GetArenaNoVirtual() == NULL && request_utilization_ != NULL) {
    delete request_utilization_;
  }
  request_utilization_ = NULL;
}
inline const ::google::appengine::v1::RequestUtilization& AutomaticScaling::request_utilization() const {
  const ::google::appengine::v1::RequestUtilization* p = request_utilization_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.request_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::RequestUtilization*>(
      &::google::appengine::v1::_RequestUtilization_default_instance_);
}
inline ::google::appengine::v1::RequestUtilization* AutomaticScaling::release_request_utilization() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AutomaticScaling.request_utilization)
  
  ::google::appengine::v1::RequestUtilization* temp = request_utilization_;
  request_utilization_ = NULL;
  return temp;
}
inline ::google::appengine::v1::RequestUtilization* AutomaticScaling::mutable_request_utilization() {
  
  if (request_utilization_ == NULL) {
    request_utilization_ = new ::google::appengine::v1::RequestUtilization;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AutomaticScaling.request_utilization)
  return request_utilization_;
}
inline void AutomaticScaling::set_allocated_request_utilization(::google::appengine::v1::RequestUtilization* request_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_utilization_;
  }
  if (request_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_utilization, submessage_arena);
    }
    
  } else {
    
  }
  request_utilization_ = request_utilization;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.AutomaticScaling.request_utilization)
}

// .google.appengine.v1.DiskUtilization disk_utilization = 11;
inline bool AutomaticScaling::has_disk_utilization() const {
  return this != internal_default_instance() && disk_utilization_ != NULL;
}
inline void AutomaticScaling::clear_disk_utilization() {
  if (GetArenaNoVirtual() == NULL && disk_utilization_ != NULL) {
    delete disk_utilization_;
  }
  disk_utilization_ = NULL;
}
inline const ::google::appengine::v1::DiskUtilization& AutomaticScaling::disk_utilization() const {
  const ::google::appengine::v1::DiskUtilization* p = disk_utilization_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.disk_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::DiskUtilization*>(
      &::google::appengine::v1::_DiskUtilization_default_instance_);
}
inline ::google::appengine::v1::DiskUtilization* AutomaticScaling::release_disk_utilization() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AutomaticScaling.disk_utilization)
  
  ::google::appengine::v1::DiskUtilization* temp = disk_utilization_;
  disk_utilization_ = NULL;
  return temp;
}
inline ::google::appengine::v1::DiskUtilization* AutomaticScaling::mutable_disk_utilization() {
  
  if (disk_utilization_ == NULL) {
    disk_utilization_ = new ::google::appengine::v1::DiskUtilization;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AutomaticScaling.disk_utilization)
  return disk_utilization_;
}
inline void AutomaticScaling::set_allocated_disk_utilization(::google::appengine::v1::DiskUtilization* disk_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete disk_utilization_;
  }
  if (disk_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      disk_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, disk_utilization, submessage_arena);
    }
    
  } else {
    
  }
  disk_utilization_ = disk_utilization;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.AutomaticScaling.disk_utilization)
}

// .google.appengine.v1.NetworkUtilization network_utilization = 12;
inline bool AutomaticScaling::has_network_utilization() const {
  return this != internal_default_instance() && network_utilization_ != NULL;
}
inline void AutomaticScaling::clear_network_utilization() {
  if (GetArenaNoVirtual() == NULL && network_utilization_ != NULL) {
    delete network_utilization_;
  }
  network_utilization_ = NULL;
}
inline const ::google::appengine::v1::NetworkUtilization& AutomaticScaling::network_utilization() const {
  const ::google::appengine::v1::NetworkUtilization* p = network_utilization_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.AutomaticScaling.network_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::NetworkUtilization*>(
      &::google::appengine::v1::_NetworkUtilization_default_instance_);
}
inline ::google::appengine::v1::NetworkUtilization* AutomaticScaling::release_network_utilization() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.AutomaticScaling.network_utilization)
  
  ::google::appengine::v1::NetworkUtilization* temp = network_utilization_;
  network_utilization_ = NULL;
  return temp;
}
inline ::google::appengine::v1::NetworkUtilization* AutomaticScaling::mutable_network_utilization() {
  
  if (network_utilization_ == NULL) {
    network_utilization_ = new ::google::appengine::v1::NetworkUtilization;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.AutomaticScaling.network_utilization)
  return network_utilization_;
}
inline void AutomaticScaling::set_allocated_network_utilization(::google::appengine::v1::NetworkUtilization* network_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete network_utilization_;
  }
  if (network_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      network_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, network_utilization, submessage_arena);
    }
    
  } else {
    
  }
  network_utilization_ = network_utilization;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.AutomaticScaling.network_utilization)
}

// -------------------------------------------------------------------

// BasicScaling

// .google.protobuf.Duration idle_timeout = 1;
inline bool BasicScaling::has_idle_timeout() const {
  return this != internal_default_instance() && idle_timeout_ != NULL;
}
inline const ::google::protobuf::Duration& BasicScaling::idle_timeout() const {
  const ::google::protobuf::Duration* p = idle_timeout_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.BasicScaling.idle_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* BasicScaling::release_idle_timeout() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.BasicScaling.idle_timeout)
  
  ::google::protobuf::Duration* temp = idle_timeout_;
  idle_timeout_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* BasicScaling::mutable_idle_timeout() {
  
  if (idle_timeout_ == NULL) {
    idle_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.BasicScaling.idle_timeout)
  return idle_timeout_;
}
inline void BasicScaling::set_allocated_idle_timeout(::google::protobuf::Duration* idle_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(idle_timeout_);
  }
  if (idle_timeout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(idle_timeout)->GetArena();
    if (message_arena != submessage_arena) {
      idle_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, idle_timeout, submessage_arena);
    }
    
  } else {
    
  }
  idle_timeout_ = idle_timeout;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.BasicScaling.idle_timeout)
}

// int32 max_instances = 2;
inline void BasicScaling::clear_max_instances() {
  max_instances_ = 0;
}
inline ::google::protobuf::int32 BasicScaling::max_instances() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.BasicScaling.max_instances)
  return max_instances_;
}
inline void BasicScaling::set_max_instances(::google::protobuf::int32 value) {
  
  max_instances_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.BasicScaling.max_instances)
}

// -------------------------------------------------------------------

// ManualScaling

// int32 instances = 1;
inline void ManualScaling::clear_instances() {
  instances_ = 0;
}
inline ::google::protobuf::int32 ManualScaling::instances() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ManualScaling.instances)
  return instances_;
}
inline void ManualScaling::set_instances(::google::protobuf::int32 value) {
  
  instances_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ManualScaling.instances)
}

// -------------------------------------------------------------------

// CpuUtilization

// .google.protobuf.Duration aggregation_window_length = 1;
inline bool CpuUtilization::has_aggregation_window_length() const {
  return this != internal_default_instance() && aggregation_window_length_ != NULL;
}
inline const ::google::protobuf::Duration& CpuUtilization::aggregation_window_length() const {
  const ::google::protobuf::Duration* p = aggregation_window_length_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.CpuUtilization.aggregation_window_length)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* CpuUtilization::release_aggregation_window_length() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.CpuUtilization.aggregation_window_length)
  
  ::google::protobuf::Duration* temp = aggregation_window_length_;
  aggregation_window_length_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* CpuUtilization::mutable_aggregation_window_length() {
  
  if (aggregation_window_length_ == NULL) {
    aggregation_window_length_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.CpuUtilization.aggregation_window_length)
  return aggregation_window_length_;
}
inline void CpuUtilization::set_allocated_aggregation_window_length(::google::protobuf::Duration* aggregation_window_length) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(aggregation_window_length_);
  }
  if (aggregation_window_length) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(aggregation_window_length)->GetArena();
    if (message_arena != submessage_arena) {
      aggregation_window_length = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aggregation_window_length, submessage_arena);
    }
    
  } else {
    
  }
  aggregation_window_length_ = aggregation_window_length;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.CpuUtilization.aggregation_window_length)
}

// double target_utilization = 2;
inline void CpuUtilization::clear_target_utilization() {
  target_utilization_ = 0;
}
inline double CpuUtilization::target_utilization() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.CpuUtilization.target_utilization)
  return target_utilization_;
}
inline void CpuUtilization::set_target_utilization(double value) {
  
  target_utilization_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.CpuUtilization.target_utilization)
}

// -------------------------------------------------------------------

// RequestUtilization

// int32 target_request_count_per_second = 1;
inline void RequestUtilization::clear_target_request_count_per_second() {
  target_request_count_per_second_ = 0;
}
inline ::google::protobuf::int32 RequestUtilization::target_request_count_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.RequestUtilization.target_request_count_per_second)
  return target_request_count_per_second_;
}
inline void RequestUtilization::set_target_request_count_per_second(::google::protobuf::int32 value) {
  
  target_request_count_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.RequestUtilization.target_request_count_per_second)
}

// int32 target_concurrent_requests = 2;
inline void RequestUtilization::clear_target_concurrent_requests() {
  target_concurrent_requests_ = 0;
}
inline ::google::protobuf::int32 RequestUtilization::target_concurrent_requests() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.RequestUtilization.target_concurrent_requests)
  return target_concurrent_requests_;
}
inline void RequestUtilization::set_target_concurrent_requests(::google::protobuf::int32 value) {
  
  target_concurrent_requests_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.RequestUtilization.target_concurrent_requests)
}

// -------------------------------------------------------------------

// DiskUtilization

// int32 target_write_bytes_per_second = 14;
inline void DiskUtilization::clear_target_write_bytes_per_second() {
  target_write_bytes_per_second_ = 0;
}
inline ::google::protobuf::int32 DiskUtilization::target_write_bytes_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DiskUtilization.target_write_bytes_per_second)
  return target_write_bytes_per_second_;
}
inline void DiskUtilization::set_target_write_bytes_per_second(::google::protobuf::int32 value) {
  
  target_write_bytes_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.DiskUtilization.target_write_bytes_per_second)
}

// int32 target_write_ops_per_second = 15;
inline void DiskUtilization::clear_target_write_ops_per_second() {
  target_write_ops_per_second_ = 0;
}
inline ::google::protobuf::int32 DiskUtilization::target_write_ops_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DiskUtilization.target_write_ops_per_second)
  return target_write_ops_per_second_;
}
inline void DiskUtilization::set_target_write_ops_per_second(::google::protobuf::int32 value) {
  
  target_write_ops_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.DiskUtilization.target_write_ops_per_second)
}

// int32 target_read_bytes_per_second = 16;
inline void DiskUtilization::clear_target_read_bytes_per_second() {
  target_read_bytes_per_second_ = 0;
}
inline ::google::protobuf::int32 DiskUtilization::target_read_bytes_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DiskUtilization.target_read_bytes_per_second)
  return target_read_bytes_per_second_;
}
inline void DiskUtilization::set_target_read_bytes_per_second(::google::protobuf::int32 value) {
  
  target_read_bytes_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.DiskUtilization.target_read_bytes_per_second)
}

// int32 target_read_ops_per_second = 17;
inline void DiskUtilization::clear_target_read_ops_per_second() {
  target_read_ops_per_second_ = 0;
}
inline ::google::protobuf::int32 DiskUtilization::target_read_ops_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DiskUtilization.target_read_ops_per_second)
  return target_read_ops_per_second_;
}
inline void DiskUtilization::set_target_read_ops_per_second(::google::protobuf::int32 value) {
  
  target_read_ops_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.DiskUtilization.target_read_ops_per_second)
}

// -------------------------------------------------------------------

// NetworkUtilization

// int32 target_sent_bytes_per_second = 1;
inline void NetworkUtilization::clear_target_sent_bytes_per_second() {
  target_sent_bytes_per_second_ = 0;
}
inline ::google::protobuf::int32 NetworkUtilization::target_sent_bytes_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.NetworkUtilization.target_sent_bytes_per_second)
  return target_sent_bytes_per_second_;
}
inline void NetworkUtilization::set_target_sent_bytes_per_second(::google::protobuf::int32 value) {
  
  target_sent_bytes_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.NetworkUtilization.target_sent_bytes_per_second)
}

// int32 target_sent_packets_per_second = 11;
inline void NetworkUtilization::clear_target_sent_packets_per_second() {
  target_sent_packets_per_second_ = 0;
}
inline ::google::protobuf::int32 NetworkUtilization::target_sent_packets_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.NetworkUtilization.target_sent_packets_per_second)
  return target_sent_packets_per_second_;
}
inline void NetworkUtilization::set_target_sent_packets_per_second(::google::protobuf::int32 value) {
  
  target_sent_packets_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.NetworkUtilization.target_sent_packets_per_second)
}

// int32 target_received_bytes_per_second = 12;
inline void NetworkUtilization::clear_target_received_bytes_per_second() {
  target_received_bytes_per_second_ = 0;
}
inline ::google::protobuf::int32 NetworkUtilization::target_received_bytes_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.NetworkUtilization.target_received_bytes_per_second)
  return target_received_bytes_per_second_;
}
inline void NetworkUtilization::set_target_received_bytes_per_second(::google::protobuf::int32 value) {
  
  target_received_bytes_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.NetworkUtilization.target_received_bytes_per_second)
}

// int32 target_received_packets_per_second = 13;
inline void NetworkUtilization::clear_target_received_packets_per_second() {
  target_received_packets_per_second_ = 0;
}
inline ::google::protobuf::int32 NetworkUtilization::target_received_packets_per_second() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.NetworkUtilization.target_received_packets_per_second)
  return target_received_packets_per_second_;
}
inline void NetworkUtilization::set_target_received_packets_per_second(::google::protobuf::int32 value) {
  
  target_received_packets_per_second_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.NetworkUtilization.target_received_packets_per_second)
}

// -------------------------------------------------------------------

// Network

// repeated string forwarded_ports = 1;
inline int Network::forwarded_ports_size() const {
  return forwarded_ports_.size();
}
inline void Network::clear_forwarded_ports() {
  forwarded_ports_.Clear();
}
inline const ::std::string& Network::forwarded_ports(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Network.forwarded_ports)
  return forwarded_ports_.Get(index);
}
inline ::std::string* Network::mutable_forwarded_ports(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Network.forwarded_ports)
  return forwarded_ports_.Mutable(index);
}
inline void Network::set_forwarded_ports(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.appengine.v1.Network.forwarded_ports)
  forwarded_ports_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Network::set_forwarded_ports(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.appengine.v1.Network.forwarded_ports)
  forwarded_ports_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Network::set_forwarded_ports(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  forwarded_ports_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Network.forwarded_ports)
}
inline void Network::set_forwarded_ports(int index, const char* value, size_t size) {
  forwarded_ports_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Network.forwarded_ports)
}
inline ::std::string* Network::add_forwarded_ports() {
  // @@protoc_insertion_point(field_add_mutable:google.appengine.v1.Network.forwarded_ports)
  return forwarded_ports_.Add();
}
inline void Network::add_forwarded_ports(const ::std::string& value) {
  forwarded_ports_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.appengine.v1.Network.forwarded_ports)
}
#if LANG_CXX11
inline void Network::add_forwarded_ports(::std::string&& value) {
  forwarded_ports_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.appengine.v1.Network.forwarded_ports)
}
#endif
inline void Network::add_forwarded_ports(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  forwarded_ports_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.appengine.v1.Network.forwarded_ports)
}
inline void Network::add_forwarded_ports(const char* value, size_t size) {
  forwarded_ports_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.appengine.v1.Network.forwarded_ports)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Network::forwarded_ports() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.Network.forwarded_ports)
  return forwarded_ports_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Network::mutable_forwarded_ports() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.Network.forwarded_ports)
  return &forwarded_ports_;
}

// string instance_tag = 2;
inline void Network::clear_instance_tag() {
  instance_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Network::instance_tag() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Network.instance_tag)
  return instance_tag_.GetNoArena();
}
inline void Network::set_instance_tag(const ::std::string& value) {
  
  instance_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Network.instance_tag)
}
#if LANG_CXX11
inline void Network::set_instance_tag(::std::string&& value) {
  
  instance_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Network.instance_tag)
}
#endif
inline void Network::set_instance_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Network.instance_tag)
}
inline void Network::set_instance_tag(const char* value, size_t size) {
  
  instance_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Network.instance_tag)
}
inline ::std::string* Network::mutable_instance_tag() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Network.instance_tag)
  return instance_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Network::release_instance_tag() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Network.instance_tag)
  
  return instance_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Network::set_allocated_instance_tag(::std::string* instance_tag) {
  if (instance_tag != NULL) {
    
  } else {
    
  }
  instance_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_tag);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Network.instance_tag)
}

// string name = 3;
inline void Network::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Network::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Network.name)
  return name_.GetNoArena();
}
inline void Network::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Network.name)
}
#if LANG_CXX11
inline void Network::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Network.name)
}
#endif
inline void Network::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Network.name)
}
inline void Network::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Network.name)
}
inline ::std::string* Network::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Network.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Network::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Network.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Network::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Network.name)
}

// -------------------------------------------------------------------

// Resources

// double cpu = 1;
inline void Resources::clear_cpu() {
  cpu_ = 0;
}
inline double Resources::cpu() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Resources.cpu)
  return cpu_;
}
inline void Resources::set_cpu(double value) {
  
  cpu_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Resources.cpu)
}

// double disk_gb = 2;
inline void Resources::clear_disk_gb() {
  disk_gb_ = 0;
}
inline double Resources::disk_gb() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Resources.disk_gb)
  return disk_gb_;
}
inline void Resources::set_disk_gb(double value) {
  
  disk_gb_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Resources.disk_gb)
}

// double memory_gb = 3;
inline void Resources::clear_memory_gb() {
  memory_gb_ = 0;
}
inline double Resources::memory_gb() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Resources.memory_gb)
  return memory_gb_;
}
inline void Resources::set_memory_gb(double value) {
  
  memory_gb_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Resources.memory_gb)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::appengine::v1::InboundServiceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::InboundServiceType>() {
  return ::google::appengine::v1::InboundServiceType_descriptor();
}
template <> struct is_proto_enum< ::google::appengine::v1::ServingStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::ServingStatus>() {
  return ::google::appengine::v1::ServingStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fappengine_2fv1_2fversion_2eproto__INCLUDED
