// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1/entity.proto

#include "google/datastore/v1/entity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace datastore {
namespace v1 {
class PartitionIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PartitionId>
      _instance;
} _PartitionId_default_instance_;
class Key_PathElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Key_PathElement>
      _instance;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
} _Key_PathElement_default_instance_;
class KeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Key>
      _instance;
} _Key_default_instance_;
class ArrayValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArrayValue>
      _instance;
} _ArrayValue_default_instance_;
class ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value>
      _instance;
  int null_value_;
  bool boolean_value_;
  ::google::protobuf::int64 integer_value_;
  double double_value_;
  const ::google::protobuf::Timestamp* timestamp_value_;
  const ::google::datastore::v1::Key* key_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::internal::ArenaStringPtr blob_value_;
  const ::google::type::LatLng* geo_point_value_;
  const ::google::datastore::v1::Entity* entity_value_;
  const ::google::datastore::v1::ArrayValue* array_value_;
} _Value_default_instance_;
class Entity_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entity_PropertiesEntry_DoNotUse>
      _instance;
} _Entity_PropertiesEntry_DoNotUse_default_instance_;
class EntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entity>
      _instance;
} _Entity_default_instance_;
}  // namespace v1
}  // namespace datastore
}  // namespace google
namespace protobuf_google_2fdatastore_2fv1_2fentity_2eproto {
void InitDefaultsPartitionIdImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_PartitionId_default_instance_;
    new (ptr) ::google::datastore::v1::PartitionId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::PartitionId::InitAsDefaultInstance();
}

void InitDefaultsPartitionId() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPartitionIdImpl);
}

void InitDefaultsKey_PathElementImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::datastore::v1::_Key_PathElement_default_instance_;
    new (ptr) ::google::datastore::v1::Key_PathElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::Key_PathElement::InitAsDefaultInstance();
}

void InitDefaultsKey_PathElement() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKey_PathElementImpl);
}

void InitDefaultsKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsPartitionId();
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey_PathElement();
  {
    void* ptr = &::google::datastore::v1::_Key_default_instance_;
    new (ptr) ::google::datastore::v1::Key();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::Key::InitAsDefaultInstance();
}

void InitDefaultsKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyImpl);
}

void InitDefaultsArrayValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2ftype_2flatlng_2eproto::InitDefaultsLatLng();
  {
    void* ptr = &::google::datastore::v1::_ArrayValue_default_instance_;
    new (ptr) ::google::datastore::v1::ArrayValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::datastore::v1::_Value_default_instance_;
    new (ptr) ::google::datastore::v1::Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::datastore::v1::_Entity_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::datastore::v1::Entity_PropertiesEntry_DoNotUse();
  }
  {
    void* ptr = &::google::datastore::v1::_Entity_default_instance_;
    new (ptr) ::google::datastore::v1::Entity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::datastore::v1::ArrayValue::InitAsDefaultInstance();
  ::google::datastore::v1::Value::InitAsDefaultInstance();
  ::google::datastore::v1::Entity_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
  ::google::datastore::v1::Entity::InitAsDefaultInstance();
}

void InitDefaultsArrayValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArrayValueImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::PartitionId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::PartitionId, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::PartitionId, namespace_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Key_PathElement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Key_PathElement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Key_PathElement, kind_),
  offsetof(::google::datastore::v1::Key_PathElementDefaultTypeInternal, id_),
  offsetof(::google::datastore::v1::Key_PathElementDefaultTypeInternal, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Key_PathElement, id_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Key, partition_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Key, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::ArrayValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::ArrayValue, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, null_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, boolean_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, integer_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, double_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, timestamp_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, key_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, string_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, blob_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, geo_point_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, entity_value_),
  offsetof(::google::datastore::v1::ValueDefaultTypeInternal, array_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Value, meaning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Value, exclude_from_indexes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Value, value_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Entity_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Entity_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Entity_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Entity_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Entity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Entity, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::datastore::v1::Entity, properties_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::datastore::v1::PartitionId)},
  { 7, -1, sizeof(::google::datastore::v1::Key_PathElement)},
  { 16, -1, sizeof(::google::datastore::v1::Key)},
  { 23, -1, sizeof(::google::datastore::v1::ArrayValue)},
  { 29, -1, sizeof(::google::datastore::v1::Value)},
  { 48, 55, sizeof(::google::datastore::v1::Entity_PropertiesEntry_DoNotUse)},
  { 57, -1, sizeof(::google::datastore::v1::Entity)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_PartitionId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_Key_PathElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_Key_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_ArrayValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_Entity_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::datastore::v1::_Entity_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/datastore/v1/entity.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n google/datastore/v1/entity.proto\022\023goog"
      "le.datastore.v1\032\034google/api/annotations."
      "proto\032\034google/protobuf/struct.proto\032\037goo"
      "gle/protobuf/timestamp.proto\032\030google/typ"
      "e/latlng.proto\"7\n\013PartitionId\022\022\n\nproject"
      "_id\030\002 \001(\t\022\024\n\014namespace_id\030\004 \001(\t\"\267\001\n\003Key\022"
      "6\n\014partition_id\030\001 \001(\0132 .google.datastore"
      ".v1.PartitionId\0222\n\004path\030\002 \003(\0132$.google.d"
      "atastore.v1.Key.PathElement\032D\n\013PathEleme"
      "nt\022\014\n\004kind\030\001 \001(\t\022\014\n\002id\030\002 \001(\003H\000\022\016\n\004name\030\003"
      " \001(\tH\000B\t\n\007id_type\"8\n\nArrayValue\022*\n\006value"
      "s\030\001 \003(\0132\032.google.datastore.v1.Value\"\361\003\n\005"
      "Value\0220\n\nnull_value\030\013 \001(\0162\032.google.proto"
      "buf.NullValueH\000\022\027\n\rboolean_value\030\001 \001(\010H\000"
      "\022\027\n\rinteger_value\030\002 \001(\003H\000\022\026\n\014double_valu"
      "e\030\003 \001(\001H\000\0225\n\017timestamp_value\030\n \001(\0132\032.goo"
      "gle.protobuf.TimestampH\000\022-\n\tkey_value\030\005 "
      "\001(\0132\030.google.datastore.v1.KeyH\000\022\026\n\014strin"
      "g_value\030\021 \001(\tH\000\022\024\n\nblob_value\030\022 \001(\014H\000\022.\n"
      "\017geo_point_value\030\010 \001(\0132\023.google.type.Lat"
      "LngH\000\0223\n\014entity_value\030\006 \001(\0132\033.google.dat"
      "astore.v1.EntityH\000\0226\n\013array_value\030\t \001(\0132"
      "\037.google.datastore.v1.ArrayValueH\000\022\017\n\007me"
      "aning\030\016 \001(\005\022\034\n\024exclude_from_indexes\030\023 \001("
      "\010B\014\n\nvalue_type\"\277\001\n\006Entity\022%\n\003key\030\001 \001(\0132"
      "\030.google.datastore.v1.Key\022\?\n\nproperties\030"
      "\003 \003(\0132+.google.datastore.v1.Entity.Prope"
      "rtiesEntry\032M\n\017PropertiesEntry\022\013\n\003key\030\001 \001"
      "(\t\022)\n\005value\030\002 \001(\0132\032.google.datastore.v1."
      "Value:\0028\001B\202\001\n\027com.google.datastore.v1B\013E"
      "ntityProtoP\001Z<google.golang.org/genproto"
      "/googleapis/datastore/v1;datastore\252\002\031Goo"
      "gle.Cloud.Datastore.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1310);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/datastore/v1/entity.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2flatlng_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdatastore_2fv1_2fentity_2eproto
namespace google {
namespace datastore {
namespace v1 {

// ===================================================================

void PartitionId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionId::kProjectIdFieldNumber;
const int PartitionId::kNamespaceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionId::PartitionId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsPartitionId();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.PartitionId)
}
PartitionId::PartitionId(const PartitionId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  namespace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_id().size() > 0) {
    namespace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.PartitionId)
}

void PartitionId::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PartitionId::~PartitionId() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.PartitionId)
  SharedDtor();
}

void PartitionId::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PartitionId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartitionId::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PartitionId& PartitionId::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsPartitionId();
  return *internal_default_instance();
}

PartitionId* PartitionId::New(::google::protobuf::Arena* arena) const {
  PartitionId* n = new PartitionId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartitionId::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.PartitionId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PartitionId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.PartitionId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.PartitionId.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string namespace_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_id().data(), static_cast<int>(this->namespace_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.PartitionId.namespace_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.PartitionId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.PartitionId)
  return false;
#undef DO_
}

void PartitionId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.PartitionId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_id(), output);
  }

  // string namespace_id = 4;
  if (this->namespace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_id().data(), static_cast<int>(this->namespace_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.namespace_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->namespace_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.PartitionId)
}

::google::protobuf::uint8* PartitionId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.PartitionId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_id(), target);
  }

  // string namespace_id = 4;
  if (this->namespace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_id().data(), static_cast<int>(this->namespace_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.namespace_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->namespace_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.PartitionId)
  return target;
}

size_t PartitionId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.PartitionId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 2;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string namespace_id = 4;
  if (this->namespace_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartitionId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.PartitionId)
  GOOGLE_DCHECK_NE(&from, this);
  const PartitionId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartitionId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.PartitionId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.PartitionId)
    MergeFrom(*source);
  }
}

void PartitionId::MergeFrom(const PartitionId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.PartitionId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.namespace_id().size() > 0) {

    namespace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace_id_);
  }
}

void PartitionId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.PartitionId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionId::CopyFrom(const PartitionId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.PartitionId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionId::IsInitialized() const {
  return true;
}

void PartitionId::Swap(PartitionId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionId::InternalSwap(PartitionId* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  namespace_id_.Swap(&other->namespace_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartitionId::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Key_PathElement::InitAsDefaultInstance() {
  ::google::datastore::v1::_Key_PathElement_default_instance_.id_ = GOOGLE_LONGLONG(0);
  ::google::datastore::v1::_Key_PathElement_default_instance_.name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Key_PathElement::kKindFieldNumber;
const int Key_PathElement::kIdFieldNumber;
const int Key_PathElement::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Key_PathElement::Key_PathElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey_PathElement();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Key.PathElement)
}
Key_PathElement::Key_PathElement(const Key_PathElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kind().size() > 0) {
    kind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kind_);
  }
  clear_has_id_type();
  switch (from.id_type_case()) {
    case kId: {
      set_id(from.id());
      break;
    }
    case kName: {
      set_name(from.name());
      break;
    }
    case ID_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Key.PathElement)
}

void Key_PathElement::SharedCtor() {
  kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id_type();
  _cached_size_ = 0;
}

Key_PathElement::~Key_PathElement() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Key.PathElement)
  SharedDtor();
}

void Key_PathElement::SharedDtor() {
  kind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_id_type()) {
    clear_id_type();
  }
}

void Key_PathElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Key_PathElement::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Key_PathElement& Key_PathElement::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey_PathElement();
  return *internal_default_instance();
}

Key_PathElement* Key_PathElement::New(::google::protobuf::Arena* arena) const {
  Key_PathElement* n = new Key_PathElement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Key_PathElement::clear_id_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Key.PathElement)
  switch (id_type_case()) {
    case kId: {
      // No need to clear
      break;
    }
    case kName: {
      id_type_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ID_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_TYPE_NOT_SET;
}


void Key_PathElement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Key.PathElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_id_type();
  _internal_metadata_.Clear();
}

bool Key_PathElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Key.PathElement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kind()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kind().data(), static_cast<int>(this->kind().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Key.PathElement.kind"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_id_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_type_.id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Key.PathElement.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Key.PathElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Key.PathElement)
  return false;
#undef DO_
}

void Key_PathElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Key.PathElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kind = 1;
  if (this->kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kind().data(), static_cast<int>(this->kind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.kind");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kind(), output);
  }

  // int64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Key.PathElement)
}

::google::protobuf::uint8* Key_PathElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Key.PathElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kind = 1;
  if (this->kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kind().data(), static_cast<int>(this->kind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.kind");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kind(), target);
  }

  // int64 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Key.PathElement)
  return target;
}

size_t Key_PathElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Key.PathElement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string kind = 1;
  if (this->kind().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kind());
  }

  switch (id_type_case()) {
    // int64 id = 2;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
      break;
    }
    // string name = 3;
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
      break;
    }
    case ID_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Key_PathElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Key.PathElement)
  GOOGLE_DCHECK_NE(&from, this);
  const Key_PathElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Key_PathElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Key.PathElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Key.PathElement)
    MergeFrom(*source);
  }
}

void Key_PathElement::MergeFrom(const Key_PathElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Key.PathElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind().size() > 0) {

    kind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kind_);
  }
  switch (from.id_type_case()) {
    case kId: {
      set_id(from.id());
      break;
    }
    case kName: {
      set_name(from.name());
      break;
    }
    case ID_TYPE_NOT_SET: {
      break;
    }
  }
}

void Key_PathElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Key.PathElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Key_PathElement::CopyFrom(const Key_PathElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Key.PathElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Key_PathElement::IsInitialized() const {
  return true;
}

void Key_PathElement::Swap(Key_PathElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Key_PathElement::InternalSwap(Key_PathElement* other) {
  using std::swap;
  kind_.Swap(&other->kind_);
  swap(id_type_, other->id_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Key_PathElement::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Key::InitAsDefaultInstance() {
  ::google::datastore::v1::_Key_default_instance_._instance.get_mutable()->partition_id_ = const_cast< ::google::datastore::v1::PartitionId*>(
      ::google::datastore::v1::PartitionId::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Key::kPartitionIdFieldNumber;
const int Key::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Key::Key()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Key)
}
Key::Key(const Key& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_partition_id()) {
    partition_id_ = new ::google::datastore::v1::PartitionId(*from.partition_id_);
  } else {
    partition_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Key)
}

void Key::SharedCtor() {
  partition_id_ = NULL;
  _cached_size_ = 0;
}

Key::~Key() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Key)
  SharedDtor();
}

void Key::SharedDtor() {
  if (this != internal_default_instance()) delete partition_id_;
}

void Key::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Key::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Key& Key::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsKey();
  return *internal_default_instance();
}

Key* Key::New(::google::protobuf::Arena* arena) const {
  Key* n = new Key;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Key::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  if (GetArenaNoVirtual() == NULL && partition_id_ != NULL) {
    delete partition_id_;
  }
  partition_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Key)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.PartitionId partition_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Key.PathElement path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Key)
  return false;
#undef DO_
}

void Key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PartitionId partition_id = 1;
  if (this->has_partition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->partition_id_, output);
  }

  // repeated .google.datastore.v1.Key.PathElement path = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->path(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Key)
}

::google::protobuf::uint8* Key::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PartitionId partition_id = 1;
  if (this->has_partition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->partition_id_, deterministic, target);
  }

  // repeated .google.datastore.v1.Key.PathElement path = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->path(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Key)
  return target;
}

size_t Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Key)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.Key.PathElement path = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path(static_cast<int>(i)));
    }
  }

  // .google.datastore.v1.PartitionId partition_id = 1;
  if (this->has_partition_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->partition_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Key::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Key)
  GOOGLE_DCHECK_NE(&from, this);
  const Key* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Key>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Key)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Key)
    MergeFrom(*source);
  }
}

void Key::MergeFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Key)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  if (from.has_partition_id()) {
    mutable_partition_id()->::google::datastore::v1::PartitionId::MergeFrom(from.partition_id());
  }
}

void Key::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Key::CopyFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Key::IsInitialized() const {
  return true;
}

void Key::Swap(Key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Key::InternalSwap(Key* other) {
  using std::swap;
  path_.InternalSwap(&other->path_);
  swap(partition_id_, other->partition_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Key::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArrayValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArrayValue::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArrayValue::ArrayValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsArrayValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.ArrayValue)
}
ArrayValue::ArrayValue(const ArrayValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.ArrayValue)
}

void ArrayValue::SharedCtor() {
  _cached_size_ = 0;
}

ArrayValue::~ArrayValue() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.ArrayValue)
  SharedDtor();
}

void ArrayValue::SharedDtor() {
}

void ArrayValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArrayValue::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArrayValue& ArrayValue::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsArrayValue();
  return *internal_default_instance();
}

ArrayValue* ArrayValue::New(::google::protobuf::Arena* arena) const {
  ArrayValue* n = new ArrayValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArrayValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.ArrayValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool ArrayValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.ArrayValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Value values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.ArrayValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.ArrayValue)
  return false;
#undef DO_
}

void ArrayValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.ArrayValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Value values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.ArrayValue)
}

::google::protobuf::uint8* ArrayValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.ArrayValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Value values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.ArrayValue)
  return target;
}

size_t ArrayValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.ArrayValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.datastore.v1.Value values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArrayValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.ArrayValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArrayValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.ArrayValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.ArrayValue)
    MergeFrom(*source);
  }
}

void ArrayValue::MergeFrom(const ArrayValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.ArrayValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void ArrayValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.ArrayValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayValue::CopyFrom(const ArrayValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.ArrayValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayValue::IsInitialized() const {
  return true;
}

void ArrayValue::Swap(ArrayValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArrayValue::InternalSwap(ArrayValue* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArrayValue::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value::InitAsDefaultInstance() {
  ::google::datastore::v1::_Value_default_instance_.null_value_ = 0;
  ::google::datastore::v1::_Value_default_instance_.boolean_value_ = false;
  ::google::datastore::v1::_Value_default_instance_.integer_value_ = GOOGLE_LONGLONG(0);
  ::google::datastore::v1::_Value_default_instance_.double_value_ = 0;
  ::google::datastore::v1::_Value_default_instance_.timestamp_value_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::datastore::v1::_Value_default_instance_.key_value_ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
  ::google::datastore::v1::_Value_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::datastore::v1::_Value_default_instance_.blob_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::datastore::v1::_Value_default_instance_.geo_point_value_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
  ::google::datastore::v1::_Value_default_instance_.entity_value_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  ::google::datastore::v1::_Value_default_instance_.array_value_ = const_cast< ::google::datastore::v1::ArrayValue*>(
      ::google::datastore::v1::ArrayValue::internal_default_instance());
}
void Value::set_allocated_timestamp_value(::google::protobuf::Timestamp* timestamp_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_type();
  if (timestamp_value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_value)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_value, submessage_arena);
    }
    set_has_timestamp_value();
    value_type_.timestamp_value_ = timestamp_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.timestamp_value)
}
void Value::clear_timestamp_value() {
  if (has_timestamp_value()) {
    delete value_type_.timestamp_value_;
    clear_has_value_type();
  }
}
void Value::set_allocated_key_value(::google::datastore::v1::Key* key_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_type();
  if (key_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_value, submessage_arena);
    }
    set_has_key_value();
    value_type_.key_value_ = key_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.key_value)
}
void Value::set_allocated_geo_point_value(::google::type::LatLng* geo_point_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_type();
  if (geo_point_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      geo_point_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, geo_point_value, submessage_arena);
    }
    set_has_geo_point_value();
    value_type_.geo_point_value_ = geo_point_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.geo_point_value)
}
void Value::clear_geo_point_value() {
  if (has_geo_point_value()) {
    delete value_type_.geo_point_value_;
    clear_has_value_type();
  }
}
void Value::set_allocated_entity_value(::google::datastore::v1::Entity* entity_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_type();
  if (entity_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entity_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity_value, submessage_arena);
    }
    set_has_entity_value();
    value_type_.entity_value_ = entity_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.entity_value)
}
void Value::set_allocated_array_value(::google::datastore::v1::ArrayValue* array_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_type();
  if (array_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      array_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, array_value, submessage_arena);
    }
    set_has_array_value();
    value_type_.array_value_ = array_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.array_value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kNullValueFieldNumber;
const int Value::kBooleanValueFieldNumber;
const int Value::kIntegerValueFieldNumber;
const int Value::kDoubleValueFieldNumber;
const int Value::kTimestampValueFieldNumber;
const int Value::kKeyValueFieldNumber;
const int Value::kStringValueFieldNumber;
const int Value::kBlobValueFieldNumber;
const int Value::kGeoPointValueFieldNumber;
const int Value::kEntityValueFieldNumber;
const int Value::kArrayValueFieldNumber;
const int Value::kMeaningFieldNumber;
const int Value::kExcludeFromIndexesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsArrayValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Value)
}
Value::Value(const Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&meaning_, &from.meaning_,
    static_cast<size_t>(reinterpret_cast<char*>(&exclude_from_indexes_) -
    reinterpret_cast<char*>(&meaning_)) + sizeof(exclude_from_indexes_));
  clear_has_value_type();
  switch (from.value_type_case()) {
    case kNullValue: {
      set_null_value(from.null_value());
      break;
    }
    case kBooleanValue: {
      set_boolean_value(from.boolean_value());
      break;
    }
    case kIntegerValue: {
      set_integer_value(from.integer_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kTimestampValue: {
      mutable_timestamp_value()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_value());
      break;
    }
    case kKeyValue: {
      mutable_key_value()->::google::datastore::v1::Key::MergeFrom(from.key_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBlobValue: {
      set_blob_value(from.blob_value());
      break;
    }
    case kGeoPointValue: {
      mutable_geo_point_value()->::google::type::LatLng::MergeFrom(from.geo_point_value());
      break;
    }
    case kEntityValue: {
      mutable_entity_value()->::google::datastore::v1::Entity::MergeFrom(from.entity_value());
      break;
    }
    case kArrayValue: {
      mutable_array_value()->::google::datastore::v1::ArrayValue::MergeFrom(from.array_value());
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Value)
}

void Value::SharedCtor() {
  ::memset(&meaning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exclude_from_indexes_) -
      reinterpret_cast<char*>(&meaning_)) + sizeof(exclude_from_indexes_));
  clear_has_value_type();
  _cached_size_ = 0;
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  if (has_value_type()) {
    clear_value_type();
  }
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value& Value::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsArrayValue();
  return *internal_default_instance();
}

Value* Value::New(::google::protobuf::Arena* arena) const {
  Value* n = new Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value::clear_value_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Value)
  switch (value_type_case()) {
    case kNullValue: {
      // No need to clear
      break;
    }
    case kBooleanValue: {
      // No need to clear
      break;
    }
    case kIntegerValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kTimestampValue: {
      delete value_type_.timestamp_value_;
      break;
    }
    case kKeyValue: {
      delete value_type_.key_value_;
      break;
    }
    case kStringValue: {
      value_type_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBlobValue: {
      value_type_.blob_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kGeoPointValue: {
      delete value_type_.geo_point_value_;
      break;
    }
    case kEntityValue: {
      delete value_type_.entity_value_;
      break;
    }
    case kArrayValue: {
      delete value_type_.array_value_;
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_TYPE_NOT_SET;
}


void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&meaning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exclude_from_indexes_) -
      reinterpret_cast<char*>(&meaning_)) + sizeof(exclude_from_indexes_));
  clear_value_type();
  _internal_metadata_.Clear();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool boolean_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_type_.boolean_value_)));
          set_has_boolean_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 integer_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_type_.integer_value_)));
          set_has_integer_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          clear_value_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_type_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Key key_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Entity entity_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.type.LatLng geo_point_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geo_point_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.ArrayValue array_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_array_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.NullValue null_value = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_null_value(static_cast< ::google::protobuf::NullValue >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 meaning = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &meaning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Value.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes blob_value = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool exclude_from_indexes = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exclude_from_indexes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool boolean_value = 1;
  if (has_boolean_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->boolean_value(), output);
  }

  // int64 integer_value = 2;
  if (has_integer_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->integer_value(), output);
  }

  // double double_value = 3;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  // .google.datastore.v1.Key key_value = 5;
  if (has_key_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *value_type_.key_value_, output);
  }

  // .google.datastore.v1.Entity entity_value = 6;
  if (has_entity_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *value_type_.entity_value_, output);
  }

  // .google.type.LatLng geo_point_value = 8;
  if (has_geo_point_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *value_type_.geo_point_value_, output);
  }

  // .google.datastore.v1.ArrayValue array_value = 9;
  if (has_array_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *value_type_.array_value_, output);
  }

  // .google.protobuf.Timestamp timestamp_value = 10;
  if (has_timestamp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *value_type_.timestamp_value_, output);
  }

  // .google.protobuf.NullValue null_value = 11;
  if (has_null_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->null_value(), output);
  }

  // int32 meaning = 14;
  if (this->meaning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->meaning(), output);
  }

  // string string_value = 17;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Value.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->string_value(), output);
  }

  // bytes blob_value = 18;
  if (has_blob_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->blob_value(), output);
  }

  // bool exclude_from_indexes = 19;
  if (this->exclude_from_indexes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->exclude_from_indexes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool boolean_value = 1;
  if (has_boolean_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->boolean_value(), target);
  }

  // int64 integer_value = 2;
  if (has_integer_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->integer_value(), target);
  }

  // double double_value = 3;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  // .google.datastore.v1.Key key_value = 5;
  if (has_key_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *value_type_.key_value_, deterministic, target);
  }

  // .google.datastore.v1.Entity entity_value = 6;
  if (has_entity_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *value_type_.entity_value_, deterministic, target);
  }

  // .google.type.LatLng geo_point_value = 8;
  if (has_geo_point_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *value_type_.geo_point_value_, deterministic, target);
  }

  // .google.datastore.v1.ArrayValue array_value = 9;
  if (has_array_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *value_type_.array_value_, deterministic, target);
  }

  // .google.protobuf.Timestamp timestamp_value = 10;
  if (has_timestamp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *value_type_.timestamp_value_, deterministic, target);
  }

  // .google.protobuf.NullValue null_value = 11;
  if (has_null_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->null_value(), target);
  }

  // int32 meaning = 14;
  if (this->meaning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->meaning(), target);
  }

  // string string_value = 17;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Value.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->string_value(), target);
  }

  // bytes blob_value = 18;
  if (has_blob_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->blob_value(), target);
  }

  // bool exclude_from_indexes = 19;
  if (this->exclude_from_indexes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->exclude_from_indexes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 meaning = 14;
  if (this->meaning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->meaning());
  }

  // bool exclude_from_indexes = 19;
  if (this->exclude_from_indexes() != 0) {
    total_size += 2 + 1;
  }

  switch (value_type_case()) {
    // .google.protobuf.NullValue null_value = 11;
    case kNullValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->null_value());
      break;
    }
    // bool boolean_value = 1;
    case kBooleanValue: {
      total_size += 1 + 1;
      break;
    }
    // int64 integer_value = 2;
    case kIntegerValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->integer_value());
      break;
    }
    // double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // .google.protobuf.Timestamp timestamp_value = 10;
    case kTimestampValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_type_.timestamp_value_);
      break;
    }
    // .google.datastore.v1.Key key_value = 5;
    case kKeyValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_type_.key_value_);
      break;
    }
    // string string_value = 17;
    case kStringValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // bytes blob_value = 18;
    case kBlobValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->blob_value());
      break;
    }
    // .google.type.LatLng geo_point_value = 8;
    case kGeoPointValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_type_.geo_point_value_);
      break;
    }
    // .google.datastore.v1.Entity entity_value = 6;
    case kEntityValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_type_.entity_value_);
      break;
    }
    // .google.datastore.v1.ArrayValue array_value = 9;
    case kArrayValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_type_.array_value_);
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.meaning() != 0) {
    set_meaning(from.meaning());
  }
  if (from.exclude_from_indexes() != 0) {
    set_exclude_from_indexes(from.exclude_from_indexes());
  }
  switch (from.value_type_case()) {
    case kNullValue: {
      set_null_value(from.null_value());
      break;
    }
    case kBooleanValue: {
      set_boolean_value(from.boolean_value());
      break;
    }
    case kIntegerValue: {
      set_integer_value(from.integer_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kTimestampValue: {
      mutable_timestamp_value()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_value());
      break;
    }
    case kKeyValue: {
      mutable_key_value()->::google::datastore::v1::Key::MergeFrom(from.key_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBlobValue: {
      set_blob_value(from.blob_value());
      break;
    }
    case kGeoPointValue: {
      mutable_geo_point_value()->::google::type::LatLng::MergeFrom(from.geo_point_value());
      break;
    }
    case kEntityValue: {
      mutable_entity_value()->::google::datastore::v1::Entity::MergeFrom(from.entity_value());
      break;
    }
    case kArrayValue: {
      mutable_array_value()->::google::datastore::v1::ArrayValue::MergeFrom(from.array_value());
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  using std::swap;
  swap(meaning_, other->meaning_);
  swap(exclude_from_indexes_, other->exclude_from_indexes_);
  swap(value_type_, other->value_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Entity_PropertiesEntry_DoNotUse::Entity_PropertiesEntry_DoNotUse() {}
Entity_PropertiesEntry_DoNotUse::Entity_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Entity_PropertiesEntry_DoNotUse::MergeFrom(const Entity_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Entity_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[5];
}
void Entity_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Entity::InitAsDefaultInstance() {
  ::google::datastore::v1::_Entity_default_instance_._instance.get_mutable()->key_ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kKeyFieldNumber;
const int Entity::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsArrayValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Entity)
}
Entity::Entity(const Entity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  if (from.has_key()) {
    key_ = new ::google::datastore::v1::Key(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Entity)
}

void Entity::SharedCtor() {
  key_ = NULL;
  _cached_size_ = 0;
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void Entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entity& Entity::default_instance() {
  ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaultsArrayValue();
  return *internal_default_instance();
}

Entity* Entity::New(::google::protobuf::Arena* arena) const {
  Entity* n = new Entity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.Key key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.datastore.v1.Value> properties = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          Entity_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Entity_PropertiesEntry_DoNotUse,
              ::std::string, ::google::datastore::v1::Value,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Entity.PropertiesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Key key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // map<string, .google.datastore.v1.Value> properties = 3;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.v1.Entity.PropertiesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Entity)
}

::google::protobuf::uint8* Entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Key key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // map<string, .google.datastore.v1.Value> properties = 3;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.v1.Entity.PropertiesEntry.key");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Entity)
  return target;
}

size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Entity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.datastore.v1.Value> properties = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<Entity_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.datastore.v1.Key key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  const Entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Entity)
    MergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.has_key()) {
    mutable_key()->::google::datastore::v1::Key::MergeFrom(from.key());
  }
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entity::IsInitialized() const {
  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  using std::swap;
  properties_.Swap(&other->properties_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fentity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace datastore
}  // namespace google

// @@protoc_insertion_point(global_scope)
