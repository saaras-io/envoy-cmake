// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/videointelligence/v1beta2/video_intelligence.proto

#ifndef PROTOBUF_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAnnotateVideoRequestImpl();
void InitDefaultsAnnotateVideoRequest();
void InitDefaultsVideoContextImpl();
void InitDefaultsVideoContext();
void InitDefaultsLabelDetectionConfigImpl();
void InitDefaultsLabelDetectionConfig();
void InitDefaultsShotChangeDetectionConfigImpl();
void InitDefaultsShotChangeDetectionConfig();
void InitDefaultsExplicitContentDetectionConfigImpl();
void InitDefaultsExplicitContentDetectionConfig();
void InitDefaultsFaceDetectionConfigImpl();
void InitDefaultsFaceDetectionConfig();
void InitDefaultsVideoSegmentImpl();
void InitDefaultsVideoSegment();
void InitDefaultsLabelSegmentImpl();
void InitDefaultsLabelSegment();
void InitDefaultsLabelFrameImpl();
void InitDefaultsLabelFrame();
void InitDefaultsEntityImpl();
void InitDefaultsEntity();
void InitDefaultsLabelAnnotationImpl();
void InitDefaultsLabelAnnotation();
void InitDefaultsExplicitContentFrameImpl();
void InitDefaultsExplicitContentFrame();
void InitDefaultsExplicitContentAnnotationImpl();
void InitDefaultsExplicitContentAnnotation();
void InitDefaultsNormalizedBoundingBoxImpl();
void InitDefaultsNormalizedBoundingBox();
void InitDefaultsFaceSegmentImpl();
void InitDefaultsFaceSegment();
void InitDefaultsFaceFrameImpl();
void InitDefaultsFaceFrame();
void InitDefaultsFaceAnnotationImpl();
void InitDefaultsFaceAnnotation();
void InitDefaultsVideoAnnotationResultsImpl();
void InitDefaultsVideoAnnotationResults();
void InitDefaultsAnnotateVideoResponseImpl();
void InitDefaultsAnnotateVideoResponse();
void InitDefaultsVideoAnnotationProgressImpl();
void InitDefaultsVideoAnnotationProgress();
void InitDefaultsAnnotateVideoProgressImpl();
void InitDefaultsAnnotateVideoProgress();
inline void InitDefaults() {
  InitDefaultsAnnotateVideoRequest();
  InitDefaultsVideoContext();
  InitDefaultsLabelDetectionConfig();
  InitDefaultsShotChangeDetectionConfig();
  InitDefaultsExplicitContentDetectionConfig();
  InitDefaultsFaceDetectionConfig();
  InitDefaultsVideoSegment();
  InitDefaultsLabelSegment();
  InitDefaultsLabelFrame();
  InitDefaultsEntity();
  InitDefaultsLabelAnnotation();
  InitDefaultsExplicitContentFrame();
  InitDefaultsExplicitContentAnnotation();
  InitDefaultsNormalizedBoundingBox();
  InitDefaultsFaceSegment();
  InitDefaultsFaceFrame();
  InitDefaultsFaceAnnotation();
  InitDefaultsVideoAnnotationResults();
  InitDefaultsAnnotateVideoResponse();
  InitDefaultsVideoAnnotationProgress();
  InitDefaultsAnnotateVideoProgress();
}
}  // namespace protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto
namespace google {
namespace cloud {
namespace videointelligence {
namespace v1beta2 {
class AnnotateVideoProgress;
class AnnotateVideoProgressDefaultTypeInternal;
extern AnnotateVideoProgressDefaultTypeInternal _AnnotateVideoProgress_default_instance_;
class AnnotateVideoRequest;
class AnnotateVideoRequestDefaultTypeInternal;
extern AnnotateVideoRequestDefaultTypeInternal _AnnotateVideoRequest_default_instance_;
class AnnotateVideoResponse;
class AnnotateVideoResponseDefaultTypeInternal;
extern AnnotateVideoResponseDefaultTypeInternal _AnnotateVideoResponse_default_instance_;
class Entity;
class EntityDefaultTypeInternal;
extern EntityDefaultTypeInternal _Entity_default_instance_;
class ExplicitContentAnnotation;
class ExplicitContentAnnotationDefaultTypeInternal;
extern ExplicitContentAnnotationDefaultTypeInternal _ExplicitContentAnnotation_default_instance_;
class ExplicitContentDetectionConfig;
class ExplicitContentDetectionConfigDefaultTypeInternal;
extern ExplicitContentDetectionConfigDefaultTypeInternal _ExplicitContentDetectionConfig_default_instance_;
class ExplicitContentFrame;
class ExplicitContentFrameDefaultTypeInternal;
extern ExplicitContentFrameDefaultTypeInternal _ExplicitContentFrame_default_instance_;
class FaceAnnotation;
class FaceAnnotationDefaultTypeInternal;
extern FaceAnnotationDefaultTypeInternal _FaceAnnotation_default_instance_;
class FaceDetectionConfig;
class FaceDetectionConfigDefaultTypeInternal;
extern FaceDetectionConfigDefaultTypeInternal _FaceDetectionConfig_default_instance_;
class FaceFrame;
class FaceFrameDefaultTypeInternal;
extern FaceFrameDefaultTypeInternal _FaceFrame_default_instance_;
class FaceSegment;
class FaceSegmentDefaultTypeInternal;
extern FaceSegmentDefaultTypeInternal _FaceSegment_default_instance_;
class LabelAnnotation;
class LabelAnnotationDefaultTypeInternal;
extern LabelAnnotationDefaultTypeInternal _LabelAnnotation_default_instance_;
class LabelDetectionConfig;
class LabelDetectionConfigDefaultTypeInternal;
extern LabelDetectionConfigDefaultTypeInternal _LabelDetectionConfig_default_instance_;
class LabelFrame;
class LabelFrameDefaultTypeInternal;
extern LabelFrameDefaultTypeInternal _LabelFrame_default_instance_;
class LabelSegment;
class LabelSegmentDefaultTypeInternal;
extern LabelSegmentDefaultTypeInternal _LabelSegment_default_instance_;
class NormalizedBoundingBox;
class NormalizedBoundingBoxDefaultTypeInternal;
extern NormalizedBoundingBoxDefaultTypeInternal _NormalizedBoundingBox_default_instance_;
class ShotChangeDetectionConfig;
class ShotChangeDetectionConfigDefaultTypeInternal;
extern ShotChangeDetectionConfigDefaultTypeInternal _ShotChangeDetectionConfig_default_instance_;
class VideoAnnotationProgress;
class VideoAnnotationProgressDefaultTypeInternal;
extern VideoAnnotationProgressDefaultTypeInternal _VideoAnnotationProgress_default_instance_;
class VideoAnnotationResults;
class VideoAnnotationResultsDefaultTypeInternal;
extern VideoAnnotationResultsDefaultTypeInternal _VideoAnnotationResults_default_instance_;
class VideoContext;
class VideoContextDefaultTypeInternal;
extern VideoContextDefaultTypeInternal _VideoContext_default_instance_;
class VideoSegment;
class VideoSegmentDefaultTypeInternal;
extern VideoSegmentDefaultTypeInternal _VideoSegment_default_instance_;
}  // namespace v1beta2
}  // namespace videointelligence
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace videointelligence {
namespace v1beta2 {

enum Feature {
  FEATURE_UNSPECIFIED = 0,
  LABEL_DETECTION = 1,
  SHOT_CHANGE_DETECTION = 2,
  EXPLICIT_CONTENT_DETECTION = 3,
  FACE_DETECTION = 4,
  Feature_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Feature_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Feature_IsValid(int value);
const Feature Feature_MIN = FEATURE_UNSPECIFIED;
const Feature Feature_MAX = FACE_DETECTION;
const int Feature_ARRAYSIZE = Feature_MAX + 1;

const ::google::protobuf::EnumDescriptor* Feature_descriptor();
inline const ::std::string& Feature_Name(Feature value) {
  return ::google::protobuf::internal::NameOfEnum(
    Feature_descriptor(), value);
}
inline bool Feature_Parse(
    const ::std::string& name, Feature* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Feature>(
    Feature_descriptor(), name, value);
}
enum LabelDetectionMode {
  LABEL_DETECTION_MODE_UNSPECIFIED = 0,
  SHOT_MODE = 1,
  FRAME_MODE = 2,
  SHOT_AND_FRAME_MODE = 3,
  LabelDetectionMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LabelDetectionMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LabelDetectionMode_IsValid(int value);
const LabelDetectionMode LabelDetectionMode_MIN = LABEL_DETECTION_MODE_UNSPECIFIED;
const LabelDetectionMode LabelDetectionMode_MAX = SHOT_AND_FRAME_MODE;
const int LabelDetectionMode_ARRAYSIZE = LabelDetectionMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* LabelDetectionMode_descriptor();
inline const ::std::string& LabelDetectionMode_Name(LabelDetectionMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    LabelDetectionMode_descriptor(), value);
}
inline bool LabelDetectionMode_Parse(
    const ::std::string& name, LabelDetectionMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LabelDetectionMode>(
    LabelDetectionMode_descriptor(), name, value);
}
enum Likelihood {
  LIKELIHOOD_UNSPECIFIED = 0,
  VERY_UNLIKELY = 1,
  UNLIKELY = 2,
  POSSIBLE = 3,
  LIKELY = 4,
  VERY_LIKELY = 5,
  Likelihood_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Likelihood_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Likelihood_IsValid(int value);
const Likelihood Likelihood_MIN = LIKELIHOOD_UNSPECIFIED;
const Likelihood Likelihood_MAX = VERY_LIKELY;
const int Likelihood_ARRAYSIZE = Likelihood_MAX + 1;

const ::google::protobuf::EnumDescriptor* Likelihood_descriptor();
inline const ::std::string& Likelihood_Name(Likelihood value) {
  return ::google::protobuf::internal::NameOfEnum(
    Likelihood_descriptor(), value);
}
inline bool Likelihood_Parse(
    const ::std::string& name, Likelihood* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Likelihood>(
    Likelihood_descriptor(), name, value);
}
// ===================================================================

class AnnotateVideoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest) */ {
 public:
  AnnotateVideoRequest();
  virtual ~AnnotateVideoRequest();

  AnnotateVideoRequest(const AnnotateVideoRequest& from);

  inline AnnotateVideoRequest& operator=(const AnnotateVideoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnotateVideoRequest(AnnotateVideoRequest&& from) noexcept
    : AnnotateVideoRequest() {
    *this = ::std::move(from);
  }

  inline AnnotateVideoRequest& operator=(AnnotateVideoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateVideoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnnotateVideoRequest* internal_default_instance() {
    return reinterpret_cast<const AnnotateVideoRequest*>(
               &_AnnotateVideoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AnnotateVideoRequest* other);
  friend void swap(AnnotateVideoRequest& a, AnnotateVideoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnotateVideoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotateVideoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotateVideoRequest& from);
  void MergeFrom(const AnnotateVideoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotateVideoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.Feature features = 2;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 2;
  ::google::cloud::videointelligence::v1beta2::Feature features(int index) const;
  void set_features(int index, ::google::cloud::videointelligence::v1beta2::Feature value);
  void add_features(::google::cloud::videointelligence::v1beta2::Feature value);
  const ::google::protobuf::RepeatedField<int>& features() const;
  ::google::protobuf::RepeatedField<int>* mutable_features();

  // string input_uri = 1;
  void clear_input_uri();
  static const int kInputUriFieldNumber = 1;
  const ::std::string& input_uri() const;
  void set_input_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_input_uri(::std::string&& value);
  #endif
  void set_input_uri(const char* value);
  void set_input_uri(const char* value, size_t size);
  ::std::string* mutable_input_uri();
  ::std::string* release_input_uri();
  void set_allocated_input_uri(::std::string* input_uri);

  // string output_uri = 4;
  void clear_output_uri();
  static const int kOutputUriFieldNumber = 4;
  const ::std::string& output_uri() const;
  void set_output_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_output_uri(::std::string&& value);
  #endif
  void set_output_uri(const char* value);
  void set_output_uri(const char* value, size_t size);
  ::std::string* mutable_output_uri();
  ::std::string* release_output_uri();
  void set_allocated_output_uri(::std::string* output_uri);

  // string location_id = 5;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 5;
  const ::std::string& location_id() const;
  void set_location_id(const ::std::string& value);
  #if LANG_CXX11
  void set_location_id(::std::string&& value);
  #endif
  void set_location_id(const char* value);
  void set_location_id(const char* value, size_t size);
  ::std::string* mutable_location_id();
  ::std::string* release_location_id();
  void set_allocated_location_id(::std::string* location_id);

  // bytes input_content = 6;
  void clear_input_content();
  static const int kInputContentFieldNumber = 6;
  const ::std::string& input_content() const;
  void set_input_content(const ::std::string& value);
  #if LANG_CXX11
  void set_input_content(::std::string&& value);
  #endif
  void set_input_content(const char* value);
  void set_input_content(const void* value, size_t size);
  ::std::string* mutable_input_content();
  ::std::string* release_input_content();
  void set_allocated_input_content(::std::string* input_content);

  // .google.cloud.videointelligence.v1beta2.VideoContext video_context = 3;
  bool has_video_context() const;
  void clear_video_context();
  static const int kVideoContextFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta2::VideoContext& video_context() const;
  ::google::cloud::videointelligence::v1beta2::VideoContext* release_video_context();
  ::google::cloud::videointelligence::v1beta2::VideoContext* mutable_video_context();
  void set_allocated_video_context(::google::cloud::videointelligence::v1beta2::VideoContext* video_context);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> features_;
  mutable int _features_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr input_uri_;
  ::google::protobuf::internal::ArenaStringPtr output_uri_;
  ::google::protobuf::internal::ArenaStringPtr location_id_;
  ::google::protobuf::internal::ArenaStringPtr input_content_;
  ::google::cloud::videointelligence::v1beta2::VideoContext* video_context_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoRequestImpl();
};
// -------------------------------------------------------------------

class VideoContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.VideoContext) */ {
 public:
  VideoContext();
  virtual ~VideoContext();

  VideoContext(const VideoContext& from);

  inline VideoContext& operator=(const VideoContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoContext(VideoContext&& from) noexcept
    : VideoContext() {
    *this = ::std::move(from);
  }

  inline VideoContext& operator=(VideoContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoContext* internal_default_instance() {
    return reinterpret_cast<const VideoContext*>(
               &_VideoContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VideoContext* other);
  friend void swap(VideoContext& a, VideoContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoContext* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoContext& from);
  void MergeFrom(const VideoContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.VideoSegment segments = 1;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::VideoSegment& segments(int index) const;
  ::google::cloud::videointelligence::v1beta2::VideoSegment* mutable_segments(int index);
  ::google::cloud::videointelligence::v1beta2::VideoSegment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >&
      segments() const;

  // .google.cloud.videointelligence.v1beta2.LabelDetectionConfig label_detection_config = 2;
  bool has_label_detection_config() const;
  void clear_label_detection_config();
  static const int kLabelDetectionConfigFieldNumber = 2;
  const ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig& label_detection_config() const;
  ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* release_label_detection_config();
  ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* mutable_label_detection_config();
  void set_allocated_label_detection_config(::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* label_detection_config);

  // .google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig shot_change_detection_config = 3;
  bool has_shot_change_detection_config() const;
  void clear_shot_change_detection_config();
  static const int kShotChangeDetectionConfigFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig& shot_change_detection_config() const;
  ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* release_shot_change_detection_config();
  ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* mutable_shot_change_detection_config();
  void set_allocated_shot_change_detection_config(::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* shot_change_detection_config);

  // .google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig explicit_content_detection_config = 4;
  bool has_explicit_content_detection_config() const;
  void clear_explicit_content_detection_config();
  static const int kExplicitContentDetectionConfigFieldNumber = 4;
  const ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig& explicit_content_detection_config() const;
  ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* release_explicit_content_detection_config();
  ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* mutable_explicit_content_detection_config();
  void set_allocated_explicit_content_detection_config(::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* explicit_content_detection_config);

  // .google.cloud.videointelligence.v1beta2.FaceDetectionConfig face_detection_config = 5;
  bool has_face_detection_config() const;
  void clear_face_detection_config();
  static const int kFaceDetectionConfigFieldNumber = 5;
  const ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig& face_detection_config() const;
  ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* release_face_detection_config();
  ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* mutable_face_detection_config();
  void set_allocated_face_detection_config(::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* face_detection_config);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.VideoContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment > segments_;
  ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* label_detection_config_;
  ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* shot_change_detection_config_;
  ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* explicit_content_detection_config_;
  ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* face_detection_config_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsVideoContextImpl();
};
// -------------------------------------------------------------------

class LabelDetectionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.LabelDetectionConfig) */ {
 public:
  LabelDetectionConfig();
  virtual ~LabelDetectionConfig();

  LabelDetectionConfig(const LabelDetectionConfig& from);

  inline LabelDetectionConfig& operator=(const LabelDetectionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelDetectionConfig(LabelDetectionConfig&& from) noexcept
    : LabelDetectionConfig() {
    *this = ::std::move(from);
  }

  inline LabelDetectionConfig& operator=(LabelDetectionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabelDetectionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelDetectionConfig* internal_default_instance() {
    return reinterpret_cast<const LabelDetectionConfig*>(
               &_LabelDetectionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LabelDetectionConfig* other);
  friend void swap(LabelDetectionConfig& a, LabelDetectionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelDetectionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  LabelDetectionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LabelDetectionConfig& from);
  void MergeFrom(const LabelDetectionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LabelDetectionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string model = 3;
  void clear_model();
  static const int kModelFieldNumber = 3;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  #if LANG_CXX11
  void set_model(::std::string&& value);
  #endif
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // .google.cloud.videointelligence.v1beta2.LabelDetectionMode label_detection_mode = 1;
  void clear_label_detection_mode();
  static const int kLabelDetectionModeFieldNumber = 1;
  ::google::cloud::videointelligence::v1beta2::LabelDetectionMode label_detection_mode() const;
  void set_label_detection_mode(::google::cloud::videointelligence::v1beta2::LabelDetectionMode value);

  // bool stationary_camera = 2;
  void clear_stationary_camera();
  static const int kStationaryCameraFieldNumber = 2;
  bool stationary_camera() const;
  void set_stationary_camera(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.LabelDetectionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  int label_detection_mode_;
  bool stationary_camera_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsLabelDetectionConfigImpl();
};
// -------------------------------------------------------------------

class ShotChangeDetectionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig) */ {
 public:
  ShotChangeDetectionConfig();
  virtual ~ShotChangeDetectionConfig();

  ShotChangeDetectionConfig(const ShotChangeDetectionConfig& from);

  inline ShotChangeDetectionConfig& operator=(const ShotChangeDetectionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShotChangeDetectionConfig(ShotChangeDetectionConfig&& from) noexcept
    : ShotChangeDetectionConfig() {
    *this = ::std::move(from);
  }

  inline ShotChangeDetectionConfig& operator=(ShotChangeDetectionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShotChangeDetectionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShotChangeDetectionConfig* internal_default_instance() {
    return reinterpret_cast<const ShotChangeDetectionConfig*>(
               &_ShotChangeDetectionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ShotChangeDetectionConfig* other);
  friend void swap(ShotChangeDetectionConfig& a, ShotChangeDetectionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShotChangeDetectionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ShotChangeDetectionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShotChangeDetectionConfig& from);
  void MergeFrom(const ShotChangeDetectionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShotChangeDetectionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string model = 1;
  void clear_model();
  static const int kModelFieldNumber = 1;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  #if LANG_CXX11
  void set_model(::std::string&& value);
  #endif
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsShotChangeDetectionConfigImpl();
};
// -------------------------------------------------------------------

class ExplicitContentDetectionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig) */ {
 public:
  ExplicitContentDetectionConfig();
  virtual ~ExplicitContentDetectionConfig();

  ExplicitContentDetectionConfig(const ExplicitContentDetectionConfig& from);

  inline ExplicitContentDetectionConfig& operator=(const ExplicitContentDetectionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplicitContentDetectionConfig(ExplicitContentDetectionConfig&& from) noexcept
    : ExplicitContentDetectionConfig() {
    *this = ::std::move(from);
  }

  inline ExplicitContentDetectionConfig& operator=(ExplicitContentDetectionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplicitContentDetectionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplicitContentDetectionConfig* internal_default_instance() {
    return reinterpret_cast<const ExplicitContentDetectionConfig*>(
               &_ExplicitContentDetectionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ExplicitContentDetectionConfig* other);
  friend void swap(ExplicitContentDetectionConfig& a, ExplicitContentDetectionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplicitContentDetectionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ExplicitContentDetectionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExplicitContentDetectionConfig& from);
  void MergeFrom(const ExplicitContentDetectionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExplicitContentDetectionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string model = 1;
  void clear_model();
  static const int kModelFieldNumber = 1;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  #if LANG_CXX11
  void set_model(::std::string&& value);
  #endif
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsExplicitContentDetectionConfigImpl();
};
// -------------------------------------------------------------------

class FaceDetectionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.FaceDetectionConfig) */ {
 public:
  FaceDetectionConfig();
  virtual ~FaceDetectionConfig();

  FaceDetectionConfig(const FaceDetectionConfig& from);

  inline FaceDetectionConfig& operator=(const FaceDetectionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceDetectionConfig(FaceDetectionConfig&& from) noexcept
    : FaceDetectionConfig() {
    *this = ::std::move(from);
  }

  inline FaceDetectionConfig& operator=(FaceDetectionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceDetectionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceDetectionConfig* internal_default_instance() {
    return reinterpret_cast<const FaceDetectionConfig*>(
               &_FaceDetectionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(FaceDetectionConfig* other);
  friend void swap(FaceDetectionConfig& a, FaceDetectionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceDetectionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceDetectionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceDetectionConfig& from);
  void MergeFrom(const FaceDetectionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceDetectionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string model = 1;
  void clear_model();
  static const int kModelFieldNumber = 1;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  #if LANG_CXX11
  void set_model(::std::string&& value);
  #endif
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // bool include_bounding_boxes = 2;
  void clear_include_bounding_boxes();
  static const int kIncludeBoundingBoxesFieldNumber = 2;
  bool include_bounding_boxes() const;
  void set_include_bounding_boxes(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.FaceDetectionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  bool include_bounding_boxes_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsFaceDetectionConfigImpl();
};
// -------------------------------------------------------------------

class VideoSegment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.VideoSegment) */ {
 public:
  VideoSegment();
  virtual ~VideoSegment();

  VideoSegment(const VideoSegment& from);

  inline VideoSegment& operator=(const VideoSegment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoSegment(VideoSegment&& from) noexcept
    : VideoSegment() {
    *this = ::std::move(from);
  }

  inline VideoSegment& operator=(VideoSegment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoSegment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoSegment* internal_default_instance() {
    return reinterpret_cast<const VideoSegment*>(
               &_VideoSegment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(VideoSegment* other);
  friend void swap(VideoSegment& a, VideoSegment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoSegment* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoSegment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoSegment& from);
  void MergeFrom(const VideoSegment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoSegment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration start_time_offset = 1;
  bool has_start_time_offset() const;
  void clear_start_time_offset();
  static const int kStartTimeOffsetFieldNumber = 1;
  const ::google::protobuf::Duration& start_time_offset() const;
  ::google::protobuf::Duration* release_start_time_offset();
  ::google::protobuf::Duration* mutable_start_time_offset();
  void set_allocated_start_time_offset(::google::protobuf::Duration* start_time_offset);

  // .google.protobuf.Duration end_time_offset = 2;
  bool has_end_time_offset() const;
  void clear_end_time_offset();
  static const int kEndTimeOffsetFieldNumber = 2;
  const ::google::protobuf::Duration& end_time_offset() const;
  ::google::protobuf::Duration* release_end_time_offset();
  ::google::protobuf::Duration* mutable_end_time_offset();
  void set_allocated_end_time_offset(::google::protobuf::Duration* end_time_offset);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.VideoSegment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* start_time_offset_;
  ::google::protobuf::Duration* end_time_offset_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegmentImpl();
};
// -------------------------------------------------------------------

class LabelSegment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.LabelSegment) */ {
 public:
  LabelSegment();
  virtual ~LabelSegment();

  LabelSegment(const LabelSegment& from);

  inline LabelSegment& operator=(const LabelSegment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelSegment(LabelSegment&& from) noexcept
    : LabelSegment() {
    *this = ::std::move(from);
  }

  inline LabelSegment& operator=(LabelSegment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabelSegment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelSegment* internal_default_instance() {
    return reinterpret_cast<const LabelSegment*>(
               &_LabelSegment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(LabelSegment* other);
  friend void swap(LabelSegment& a, LabelSegment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelSegment* New() const PROTOBUF_FINAL { return New(NULL); }

  LabelSegment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LabelSegment& from);
  void MergeFrom(const LabelSegment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LabelSegment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.videointelligence.v1beta2.VideoSegment segment = 1;
  bool has_segment() const;
  void clear_segment();
  static const int kSegmentFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::VideoSegment& segment() const;
  ::google::cloud::videointelligence::v1beta2::VideoSegment* release_segment();
  ::google::cloud::videointelligence::v1beta2::VideoSegment* mutable_segment();
  void set_allocated_segment(::google::cloud::videointelligence::v1beta2::VideoSegment* segment);

  // float confidence = 2;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 2;
  float confidence() const;
  void set_confidence(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.LabelSegment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::videointelligence::v1beta2::VideoSegment* segment_;
  float confidence_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsLabelSegmentImpl();
};
// -------------------------------------------------------------------

class LabelFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.LabelFrame) */ {
 public:
  LabelFrame();
  virtual ~LabelFrame();

  LabelFrame(const LabelFrame& from);

  inline LabelFrame& operator=(const LabelFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelFrame(LabelFrame&& from) noexcept
    : LabelFrame() {
    *this = ::std::move(from);
  }

  inline LabelFrame& operator=(LabelFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabelFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelFrame* internal_default_instance() {
    return reinterpret_cast<const LabelFrame*>(
               &_LabelFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(LabelFrame* other);
  friend void swap(LabelFrame& a, LabelFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  LabelFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LabelFrame& from);
  void MergeFrom(const LabelFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LabelFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration time_offset = 1;
  bool has_time_offset() const;
  void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 1;
  const ::google::protobuf::Duration& time_offset() const;
  ::google::protobuf::Duration* release_time_offset();
  ::google::protobuf::Duration* mutable_time_offset();
  void set_allocated_time_offset(::google::protobuf::Duration* time_offset);

  // float confidence = 2;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 2;
  float confidence() const;
  void set_confidence(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.LabelFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* time_offset_;
  float confidence_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsLabelFrameImpl();
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.Entity) */ {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Entity(Entity&& from) noexcept
    : Entity() {
    *this = ::std::move(from);
  }

  inline Entity& operator=(Entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Entity* internal_default_instance() {
    return reinterpret_cast<const Entity*>(
               &_Entity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Entity* other);
  friend void swap(Entity& a, Entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Entity* New() const PROTOBUF_FINAL { return New(NULL); }

  Entity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  const ::std::string& entity_id() const;
  void set_entity_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_id(::std::string&& value);
  #endif
  void set_entity_id(const char* value);
  void set_entity_id(const char* value, size_t size);
  ::std::string* mutable_entity_id();
  ::std::string* release_entity_id();
  void set_allocated_entity_id(::std::string* entity_id);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string language_code = 3;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 3;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.Entity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr entity_id_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsEntityImpl();
};
// -------------------------------------------------------------------

class LabelAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.LabelAnnotation) */ {
 public:
  LabelAnnotation();
  virtual ~LabelAnnotation();

  LabelAnnotation(const LabelAnnotation& from);

  inline LabelAnnotation& operator=(const LabelAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelAnnotation(LabelAnnotation&& from) noexcept
    : LabelAnnotation() {
    *this = ::std::move(from);
  }

  inline LabelAnnotation& operator=(LabelAnnotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabelAnnotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelAnnotation* internal_default_instance() {
    return reinterpret_cast<const LabelAnnotation*>(
               &_LabelAnnotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LabelAnnotation* other);
  friend void swap(LabelAnnotation& a, LabelAnnotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  LabelAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LabelAnnotation& from);
  void MergeFrom(const LabelAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LabelAnnotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.Entity category_entities = 2;
  int category_entities_size() const;
  void clear_category_entities();
  static const int kCategoryEntitiesFieldNumber = 2;
  const ::google::cloud::videointelligence::v1beta2::Entity& category_entities(int index) const;
  ::google::cloud::videointelligence::v1beta2::Entity* mutable_category_entities(int index);
  ::google::cloud::videointelligence::v1beta2::Entity* add_category_entities();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::Entity >*
      mutable_category_entities();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::Entity >&
      category_entities() const;

  // repeated .google.cloud.videointelligence.v1beta2.LabelSegment segments = 3;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta2::LabelSegment& segments(int index) const;
  ::google::cloud::videointelligence::v1beta2::LabelSegment* mutable_segments(int index);
  ::google::cloud::videointelligence::v1beta2::LabelSegment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelSegment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelSegment >&
      segments() const;

  // repeated .google.cloud.videointelligence.v1beta2.LabelFrame frames = 4;
  int frames_size() const;
  void clear_frames();
  static const int kFramesFieldNumber = 4;
  const ::google::cloud::videointelligence::v1beta2::LabelFrame& frames(int index) const;
  ::google::cloud::videointelligence::v1beta2::LabelFrame* mutable_frames(int index);
  ::google::cloud::videointelligence::v1beta2::LabelFrame* add_frames();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelFrame >*
      mutable_frames();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelFrame >&
      frames() const;

  // .google.cloud.videointelligence.v1beta2.Entity entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::Entity& entity() const;
  ::google::cloud::videointelligence::v1beta2::Entity* release_entity();
  ::google::cloud::videointelligence::v1beta2::Entity* mutable_entity();
  void set_allocated_entity(::google::cloud::videointelligence::v1beta2::Entity* entity);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.LabelAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::Entity > category_entities_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelSegment > segments_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelFrame > frames_;
  ::google::cloud::videointelligence::v1beta2::Entity* entity_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsLabelAnnotationImpl();
};
// -------------------------------------------------------------------

class ExplicitContentFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.ExplicitContentFrame) */ {
 public:
  ExplicitContentFrame();
  virtual ~ExplicitContentFrame();

  ExplicitContentFrame(const ExplicitContentFrame& from);

  inline ExplicitContentFrame& operator=(const ExplicitContentFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplicitContentFrame(ExplicitContentFrame&& from) noexcept
    : ExplicitContentFrame() {
    *this = ::std::move(from);
  }

  inline ExplicitContentFrame& operator=(ExplicitContentFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplicitContentFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplicitContentFrame* internal_default_instance() {
    return reinterpret_cast<const ExplicitContentFrame*>(
               &_ExplicitContentFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ExplicitContentFrame* other);
  friend void swap(ExplicitContentFrame& a, ExplicitContentFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplicitContentFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  ExplicitContentFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExplicitContentFrame& from);
  void MergeFrom(const ExplicitContentFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExplicitContentFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration time_offset = 1;
  bool has_time_offset() const;
  void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 1;
  const ::google::protobuf::Duration& time_offset() const;
  ::google::protobuf::Duration* release_time_offset();
  ::google::protobuf::Duration* mutable_time_offset();
  void set_allocated_time_offset(::google::protobuf::Duration* time_offset);

  // .google.cloud.videointelligence.v1beta2.Likelihood pornography_likelihood = 2;
  void clear_pornography_likelihood();
  static const int kPornographyLikelihoodFieldNumber = 2;
  ::google::cloud::videointelligence::v1beta2::Likelihood pornography_likelihood() const;
  void set_pornography_likelihood(::google::cloud::videointelligence::v1beta2::Likelihood value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.ExplicitContentFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* time_offset_;
  int pornography_likelihood_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsExplicitContentFrameImpl();
};
// -------------------------------------------------------------------

class ExplicitContentAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation) */ {
 public:
  ExplicitContentAnnotation();
  virtual ~ExplicitContentAnnotation();

  ExplicitContentAnnotation(const ExplicitContentAnnotation& from);

  inline ExplicitContentAnnotation& operator=(const ExplicitContentAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplicitContentAnnotation(ExplicitContentAnnotation&& from) noexcept
    : ExplicitContentAnnotation() {
    *this = ::std::move(from);
  }

  inline ExplicitContentAnnotation& operator=(ExplicitContentAnnotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplicitContentAnnotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplicitContentAnnotation* internal_default_instance() {
    return reinterpret_cast<const ExplicitContentAnnotation*>(
               &_ExplicitContentAnnotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ExplicitContentAnnotation* other);
  friend void swap(ExplicitContentAnnotation& a, ExplicitContentAnnotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplicitContentAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  ExplicitContentAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExplicitContentAnnotation& from);
  void MergeFrom(const ExplicitContentAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExplicitContentAnnotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.ExplicitContentFrame frames = 1;
  int frames_size() const;
  void clear_frames();
  static const int kFramesFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame& frames(int index) const;
  ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame* mutable_frames(int index);
  ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame* add_frames();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame >*
      mutable_frames();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame >&
      frames() const;

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame > frames_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsExplicitContentAnnotationImpl();
};
// -------------------------------------------------------------------

class NormalizedBoundingBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox) */ {
 public:
  NormalizedBoundingBox();
  virtual ~NormalizedBoundingBox();

  NormalizedBoundingBox(const NormalizedBoundingBox& from);

  inline NormalizedBoundingBox& operator=(const NormalizedBoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NormalizedBoundingBox(NormalizedBoundingBox&& from) noexcept
    : NormalizedBoundingBox() {
    *this = ::std::move(from);
  }

  inline NormalizedBoundingBox& operator=(NormalizedBoundingBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalizedBoundingBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NormalizedBoundingBox* internal_default_instance() {
    return reinterpret_cast<const NormalizedBoundingBox*>(
               &_NormalizedBoundingBox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(NormalizedBoundingBox* other);
  friend void swap(NormalizedBoundingBox& a, NormalizedBoundingBox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NormalizedBoundingBox* New() const PROTOBUF_FINAL { return New(NULL); }

  NormalizedBoundingBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NormalizedBoundingBox& from);
  void MergeFrom(const NormalizedBoundingBox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NormalizedBoundingBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float left = 1;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  float left() const;
  void set_left(float value);

  // float top = 2;
  void clear_top();
  static const int kTopFieldNumber = 2;
  float top() const;
  void set_top(float value);

  // float right = 3;
  void clear_right();
  static const int kRightFieldNumber = 3;
  float right() const;
  void set_right(float value);

  // float bottom = 4;
  void clear_bottom();
  static const int kBottomFieldNumber = 4;
  float bottom() const;
  void set_bottom(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float left_;
  float top_;
  float right_;
  float bottom_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsNormalizedBoundingBoxImpl();
};
// -------------------------------------------------------------------

class FaceSegment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.FaceSegment) */ {
 public:
  FaceSegment();
  virtual ~FaceSegment();

  FaceSegment(const FaceSegment& from);

  inline FaceSegment& operator=(const FaceSegment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceSegment(FaceSegment&& from) noexcept
    : FaceSegment() {
    *this = ::std::move(from);
  }

  inline FaceSegment& operator=(FaceSegment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceSegment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceSegment* internal_default_instance() {
    return reinterpret_cast<const FaceSegment*>(
               &_FaceSegment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(FaceSegment* other);
  friend void swap(FaceSegment& a, FaceSegment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceSegment* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceSegment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceSegment& from);
  void MergeFrom(const FaceSegment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceSegment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.videointelligence.v1beta2.VideoSegment segment = 1;
  bool has_segment() const;
  void clear_segment();
  static const int kSegmentFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::VideoSegment& segment() const;
  ::google::cloud::videointelligence::v1beta2::VideoSegment* release_segment();
  ::google::cloud::videointelligence::v1beta2::VideoSegment* mutable_segment();
  void set_allocated_segment(::google::cloud::videointelligence::v1beta2::VideoSegment* segment);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.FaceSegment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::videointelligence::v1beta2::VideoSegment* segment_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsFaceSegmentImpl();
};
// -------------------------------------------------------------------

class FaceFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.FaceFrame) */ {
 public:
  FaceFrame();
  virtual ~FaceFrame();

  FaceFrame(const FaceFrame& from);

  inline FaceFrame& operator=(const FaceFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceFrame(FaceFrame&& from) noexcept
    : FaceFrame() {
    *this = ::std::move(from);
  }

  inline FaceFrame& operator=(FaceFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceFrame* internal_default_instance() {
    return reinterpret_cast<const FaceFrame*>(
               &_FaceFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(FaceFrame* other);
  friend void swap(FaceFrame& a, FaceFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceFrame& from);
  void MergeFrom(const FaceFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.NormalizedBoundingBox normalized_bounding_boxes = 1;
  int normalized_bounding_boxes_size() const;
  void clear_normalized_bounding_boxes();
  static const int kNormalizedBoundingBoxesFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox& normalized_bounding_boxes(int index) const;
  ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox* mutable_normalized_bounding_boxes(int index);
  ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox* add_normalized_bounding_boxes();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox >*
      mutable_normalized_bounding_boxes();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox >&
      normalized_bounding_boxes() const;

  // .google.protobuf.Duration time_offset = 2;
  bool has_time_offset() const;
  void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 2;
  const ::google::protobuf::Duration& time_offset() const;
  ::google::protobuf::Duration* release_time_offset();
  ::google::protobuf::Duration* mutable_time_offset();
  void set_allocated_time_offset(::google::protobuf::Duration* time_offset);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.FaceFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox > normalized_bounding_boxes_;
  ::google::protobuf::Duration* time_offset_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsFaceFrameImpl();
};
// -------------------------------------------------------------------

class FaceAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.FaceAnnotation) */ {
 public:
  FaceAnnotation();
  virtual ~FaceAnnotation();

  FaceAnnotation(const FaceAnnotation& from);

  inline FaceAnnotation& operator=(const FaceAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceAnnotation(FaceAnnotation&& from) noexcept
    : FaceAnnotation() {
    *this = ::std::move(from);
  }

  inline FaceAnnotation& operator=(FaceAnnotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceAnnotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceAnnotation* internal_default_instance() {
    return reinterpret_cast<const FaceAnnotation*>(
               &_FaceAnnotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(FaceAnnotation* other);
  friend void swap(FaceAnnotation& a, FaceAnnotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceAnnotation& from);
  void MergeFrom(const FaceAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceAnnotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.FaceSegment segments = 2;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 2;
  const ::google::cloud::videointelligence::v1beta2::FaceSegment& segments(int index) const;
  ::google::cloud::videointelligence::v1beta2::FaceSegment* mutable_segments(int index);
  ::google::cloud::videointelligence::v1beta2::FaceSegment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceSegment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceSegment >&
      segments() const;

  // repeated .google.cloud.videointelligence.v1beta2.FaceFrame frames = 3;
  int frames_size() const;
  void clear_frames();
  static const int kFramesFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta2::FaceFrame& frames(int index) const;
  ::google::cloud::videointelligence::v1beta2::FaceFrame* mutable_frames(int index);
  ::google::cloud::videointelligence::v1beta2::FaceFrame* add_frames();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceFrame >*
      mutable_frames();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceFrame >&
      frames() const;

  // bytes thumbnail = 1;
  void clear_thumbnail();
  static const int kThumbnailFieldNumber = 1;
  const ::std::string& thumbnail() const;
  void set_thumbnail(const ::std::string& value);
  #if LANG_CXX11
  void set_thumbnail(::std::string&& value);
  #endif
  void set_thumbnail(const char* value);
  void set_thumbnail(const void* value, size_t size);
  ::std::string* mutable_thumbnail();
  ::std::string* release_thumbnail();
  void set_allocated_thumbnail(::std::string* thumbnail);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.FaceAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceSegment > segments_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceFrame > frames_;
  ::google::protobuf::internal::ArenaStringPtr thumbnail_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsFaceAnnotationImpl();
};
// -------------------------------------------------------------------

class VideoAnnotationResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.VideoAnnotationResults) */ {
 public:
  VideoAnnotationResults();
  virtual ~VideoAnnotationResults();

  VideoAnnotationResults(const VideoAnnotationResults& from);

  inline VideoAnnotationResults& operator=(const VideoAnnotationResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoAnnotationResults(VideoAnnotationResults&& from) noexcept
    : VideoAnnotationResults() {
    *this = ::std::move(from);
  }

  inline VideoAnnotationResults& operator=(VideoAnnotationResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoAnnotationResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoAnnotationResults* internal_default_instance() {
    return reinterpret_cast<const VideoAnnotationResults*>(
               &_VideoAnnotationResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(VideoAnnotationResults* other);
  friend void swap(VideoAnnotationResults& a, VideoAnnotationResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoAnnotationResults* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoAnnotationResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoAnnotationResults& from);
  void MergeFrom(const VideoAnnotationResults& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoAnnotationResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.LabelAnnotation segment_label_annotations = 2;
  int segment_label_annotations_size() const;
  void clear_segment_label_annotations();
  static const int kSegmentLabelAnnotationsFieldNumber = 2;
  const ::google::cloud::videointelligence::v1beta2::LabelAnnotation& segment_label_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta2::LabelAnnotation* mutable_segment_label_annotations(int index);
  ::google::cloud::videointelligence::v1beta2::LabelAnnotation* add_segment_label_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >*
      mutable_segment_label_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >&
      segment_label_annotations() const;

  // repeated .google.cloud.videointelligence.v1beta2.LabelAnnotation shot_label_annotations = 3;
  int shot_label_annotations_size() const;
  void clear_shot_label_annotations();
  static const int kShotLabelAnnotationsFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta2::LabelAnnotation& shot_label_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta2::LabelAnnotation* mutable_shot_label_annotations(int index);
  ::google::cloud::videointelligence::v1beta2::LabelAnnotation* add_shot_label_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >*
      mutable_shot_label_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >&
      shot_label_annotations() const;

  // repeated .google.cloud.videointelligence.v1beta2.LabelAnnotation frame_label_annotations = 4;
  int frame_label_annotations_size() const;
  void clear_frame_label_annotations();
  static const int kFrameLabelAnnotationsFieldNumber = 4;
  const ::google::cloud::videointelligence::v1beta2::LabelAnnotation& frame_label_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta2::LabelAnnotation* mutable_frame_label_annotations(int index);
  ::google::cloud::videointelligence::v1beta2::LabelAnnotation* add_frame_label_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >*
      mutable_frame_label_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >&
      frame_label_annotations() const;

  // repeated .google.cloud.videointelligence.v1beta2.FaceAnnotation face_annotations = 5;
  int face_annotations_size() const;
  void clear_face_annotations();
  static const int kFaceAnnotationsFieldNumber = 5;
  const ::google::cloud::videointelligence::v1beta2::FaceAnnotation& face_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta2::FaceAnnotation* mutable_face_annotations(int index);
  ::google::cloud::videointelligence::v1beta2::FaceAnnotation* add_face_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceAnnotation >*
      mutable_face_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceAnnotation >&
      face_annotations() const;

  // repeated .google.cloud.videointelligence.v1beta2.VideoSegment shot_annotations = 6;
  int shot_annotations_size() const;
  void clear_shot_annotations();
  static const int kShotAnnotationsFieldNumber = 6;
  const ::google::cloud::videointelligence::v1beta2::VideoSegment& shot_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta2::VideoSegment* mutable_shot_annotations(int index);
  ::google::cloud::videointelligence::v1beta2::VideoSegment* add_shot_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >*
      mutable_shot_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >&
      shot_annotations() const;

  // string input_uri = 1;
  void clear_input_uri();
  static const int kInputUriFieldNumber = 1;
  const ::std::string& input_uri() const;
  void set_input_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_input_uri(::std::string&& value);
  #endif
  void set_input_uri(const char* value);
  void set_input_uri(const char* value, size_t size);
  ::std::string* mutable_input_uri();
  ::std::string* release_input_uri();
  void set_allocated_input_uri(::std::string* input_uri);

  // .google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation explicit_annotation = 7;
  bool has_explicit_annotation() const;
  void clear_explicit_annotation();
  static const int kExplicitAnnotationFieldNumber = 7;
  const ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation& explicit_annotation() const;
  ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* release_explicit_annotation();
  ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* mutable_explicit_annotation();
  void set_allocated_explicit_annotation(::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* explicit_annotation);

  // .google.rpc.Status error = 9;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 9;
  const ::google::rpc::Status& error() const;
  ::google::rpc::Status* release_error();
  ::google::rpc::Status* mutable_error();
  void set_allocated_error(::google::rpc::Status* error);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.VideoAnnotationResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation > segment_label_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation > shot_label_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation > frame_label_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceAnnotation > face_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment > shot_annotations_;
  ::google::protobuf::internal::ArenaStringPtr input_uri_;
  ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* explicit_annotation_;
  ::google::rpc::Status* error_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationResultsImpl();
};
// -------------------------------------------------------------------

class AnnotateVideoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.AnnotateVideoResponse) */ {
 public:
  AnnotateVideoResponse();
  virtual ~AnnotateVideoResponse();

  AnnotateVideoResponse(const AnnotateVideoResponse& from);

  inline AnnotateVideoResponse& operator=(const AnnotateVideoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnotateVideoResponse(AnnotateVideoResponse&& from) noexcept
    : AnnotateVideoResponse() {
    *this = ::std::move(from);
  }

  inline AnnotateVideoResponse& operator=(AnnotateVideoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateVideoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnnotateVideoResponse* internal_default_instance() {
    return reinterpret_cast<const AnnotateVideoResponse*>(
               &_AnnotateVideoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(AnnotateVideoResponse* other);
  friend void swap(AnnotateVideoResponse& a, AnnotateVideoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnotateVideoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotateVideoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotateVideoResponse& from);
  void MergeFrom(const AnnotateVideoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotateVideoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.VideoAnnotationResults annotation_results = 1;
  int annotation_results_size() const;
  void clear_annotation_results();
  static const int kAnnotationResultsFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults& annotation_results(int index) const;
  ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults* mutable_annotation_results(int index);
  ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults* add_annotation_results();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults >*
      mutable_annotation_results();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults >&
      annotation_results() const;

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.AnnotateVideoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults > annotation_results_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoResponseImpl();
};
// -------------------------------------------------------------------

class VideoAnnotationProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress) */ {
 public:
  VideoAnnotationProgress();
  virtual ~VideoAnnotationProgress();

  VideoAnnotationProgress(const VideoAnnotationProgress& from);

  inline VideoAnnotationProgress& operator=(const VideoAnnotationProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoAnnotationProgress(VideoAnnotationProgress&& from) noexcept
    : VideoAnnotationProgress() {
    *this = ::std::move(from);
  }

  inline VideoAnnotationProgress& operator=(VideoAnnotationProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoAnnotationProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoAnnotationProgress* internal_default_instance() {
    return reinterpret_cast<const VideoAnnotationProgress*>(
               &_VideoAnnotationProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(VideoAnnotationProgress* other);
  friend void swap(VideoAnnotationProgress& a, VideoAnnotationProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoAnnotationProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoAnnotationProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoAnnotationProgress& from);
  void MergeFrom(const VideoAnnotationProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoAnnotationProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string input_uri = 1;
  void clear_input_uri();
  static const int kInputUriFieldNumber = 1;
  const ::std::string& input_uri() const;
  void set_input_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_input_uri(::std::string&& value);
  #endif
  void set_input_uri(const char* value);
  void set_input_uri(const char* value, size_t size);
  ::std::string* mutable_input_uri();
  ::std::string* release_input_uri();
  void set_allocated_input_uri(::std::string* input_uri);

  // .google.protobuf.Timestamp start_time = 3;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp update_time = 4;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // int32 progress_percent = 2;
  void clear_progress_percent();
  static const int kProgressPercentFieldNumber = 2;
  ::google::protobuf::int32 progress_percent() const;
  void set_progress_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_uri_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* update_time_;
  ::google::protobuf::int32 progress_percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationProgressImpl();
};
// -------------------------------------------------------------------

class AnnotateVideoProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta2.AnnotateVideoProgress) */ {
 public:
  AnnotateVideoProgress();
  virtual ~AnnotateVideoProgress();

  AnnotateVideoProgress(const AnnotateVideoProgress& from);

  inline AnnotateVideoProgress& operator=(const AnnotateVideoProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnotateVideoProgress(AnnotateVideoProgress&& from) noexcept
    : AnnotateVideoProgress() {
    *this = ::std::move(from);
  }

  inline AnnotateVideoProgress& operator=(AnnotateVideoProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateVideoProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnnotateVideoProgress* internal_default_instance() {
    return reinterpret_cast<const AnnotateVideoProgress*>(
               &_AnnotateVideoProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(AnnotateVideoProgress* other);
  friend void swap(AnnotateVideoProgress& a, AnnotateVideoProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnotateVideoProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotateVideoProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotateVideoProgress& from);
  void MergeFrom(const AnnotateVideoProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotateVideoProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta2.VideoAnnotationProgress annotation_progress = 1;
  int annotation_progress_size() const;
  void clear_annotation_progress();
  static const int kAnnotationProgressFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress& annotation_progress(int index) const;
  ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress* mutable_annotation_progress(int index);
  ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress* add_annotation_progress();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress >*
      mutable_annotation_progress();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress >&
      annotation_progress() const;

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta2.AnnotateVideoProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress > annotation_progress_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoProgressImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AnnotateVideoRequest

// string input_uri = 1;
inline void AnnotateVideoRequest::clear_input_uri() {
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::input_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
  return input_uri_.GetNoArena();
}
inline void AnnotateVideoRequest::set_input_uri(const ::std::string& value) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_input_uri(::std::string&& value) {
  
  input_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
}
#endif
inline void AnnotateVideoRequest::set_input_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
}
inline void AnnotateVideoRequest::set_input_uri(const char* value, size_t size) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
}
inline ::std::string* AnnotateVideoRequest::mutable_input_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
  return input_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_input_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
  
  return input_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_input_uri(::std::string* input_uri) {
  if (input_uri != NULL) {
    
  } else {
    
  }
  input_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_uri)
}

// bytes input_content = 6;
inline void AnnotateVideoRequest::clear_input_content() {
  input_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::input_content() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
  return input_content_.GetNoArena();
}
inline void AnnotateVideoRequest::set_input_content(const ::std::string& value) {
  
  input_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_input_content(::std::string&& value) {
  
  input_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
}
#endif
inline void AnnotateVideoRequest::set_input_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
}
inline void AnnotateVideoRequest::set_input_content(const void* value, size_t size) {
  
  input_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
}
inline ::std::string* AnnotateVideoRequest::mutable_input_content() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
  return input_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_input_content() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
  
  return input_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_input_content(::std::string* input_content) {
  if (input_content != NULL) {
    
  } else {
    
  }
  input_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_content);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.input_content)
}

// repeated .google.cloud.videointelligence.v1beta2.Feature features = 2;
inline int AnnotateVideoRequest::features_size() const {
  return features_.size();
}
inline void AnnotateVideoRequest::clear_features() {
  features_.Clear();
}
inline ::google::cloud::videointelligence::v1beta2::Feature AnnotateVideoRequest::features(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.features)
  return static_cast< ::google::cloud::videointelligence::v1beta2::Feature >(features_.Get(index));
}
inline void AnnotateVideoRequest::set_features(int index, ::google::cloud::videointelligence::v1beta2::Feature value) {
  features_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.features)
}
inline void AnnotateVideoRequest::add_features(::google::cloud::videointelligence::v1beta2::Feature value) {
  features_.Add(value);
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.features)
}
inline const ::google::protobuf::RepeatedField<int>&
AnnotateVideoRequest::features() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.features)
  return features_;
}
inline ::google::protobuf::RepeatedField<int>*
AnnotateVideoRequest::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.features)
  return &features_;
}

// .google.cloud.videointelligence.v1beta2.VideoContext video_context = 3;
inline bool AnnotateVideoRequest::has_video_context() const {
  return this != internal_default_instance() && video_context_ != NULL;
}
inline void AnnotateVideoRequest::clear_video_context() {
  if (GetArenaNoVirtual() == NULL && video_context_ != NULL) {
    delete video_context_;
  }
  video_context_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::VideoContext& AnnotateVideoRequest::video_context() const {
  const ::google::cloud::videointelligence::v1beta2::VideoContext* p = video_context_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.video_context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::VideoContext*>(
      &::google::cloud::videointelligence::v1beta2::_VideoContext_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::VideoContext* AnnotateVideoRequest::release_video_context() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.video_context)
  
  ::google::cloud::videointelligence::v1beta2::VideoContext* temp = video_context_;
  video_context_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::VideoContext* AnnotateVideoRequest::mutable_video_context() {
  
  if (video_context_ == NULL) {
    video_context_ = new ::google::cloud::videointelligence::v1beta2::VideoContext;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.video_context)
  return video_context_;
}
inline void AnnotateVideoRequest::set_allocated_video_context(::google::cloud::videointelligence::v1beta2::VideoContext* video_context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete video_context_;
  }
  if (video_context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      video_context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, video_context, submessage_arena);
    }
    
  } else {
    
  }
  video_context_ = video_context;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.video_context)
}

// string output_uri = 4;
inline void AnnotateVideoRequest::clear_output_uri() {
  output_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::output_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
  return output_uri_.GetNoArena();
}
inline void AnnotateVideoRequest::set_output_uri(const ::std::string& value) {
  
  output_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_output_uri(::std::string&& value) {
  
  output_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
}
#endif
inline void AnnotateVideoRequest::set_output_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
}
inline void AnnotateVideoRequest::set_output_uri(const char* value, size_t size) {
  
  output_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
}
inline ::std::string* AnnotateVideoRequest::mutable_output_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
  return output_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_output_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
  
  return output_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_output_uri(::std::string* output_uri) {
  if (output_uri != NULL) {
    
  } else {
    
  }
  output_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.output_uri)
}

// string location_id = 5;
inline void AnnotateVideoRequest::clear_location_id() {
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::location_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
  return location_id_.GetNoArena();
}
inline void AnnotateVideoRequest::set_location_id(const ::std::string& value) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_location_id(::std::string&& value) {
  
  location_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
}
#endif
inline void AnnotateVideoRequest::set_location_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
}
inline void AnnotateVideoRequest::set_location_id(const char* value, size_t size) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
}
inline ::std::string* AnnotateVideoRequest::mutable_location_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
  return location_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_location_id() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
  
  return location_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_location_id(::std::string* location_id) {
  if (location_id != NULL) {
    
  } else {
    
  }
  location_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.AnnotateVideoRequest.location_id)
}

// -------------------------------------------------------------------

// VideoContext

// repeated .google.cloud.videointelligence.v1beta2.VideoSegment segments = 1;
inline int VideoContext::segments_size() const {
  return segments_.size();
}
inline void VideoContext::clear_segments() {
  segments_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::VideoSegment& VideoContext::segments(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoContext.segments)
  return segments_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* VideoContext::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoContext.segments)
  return segments_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* VideoContext::add_segments() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.VideoContext.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >*
VideoContext::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.VideoContext.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >&
VideoContext::segments() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.VideoContext.segments)
  return segments_;
}

// .google.cloud.videointelligence.v1beta2.LabelDetectionConfig label_detection_config = 2;
inline bool VideoContext::has_label_detection_config() const {
  return this != internal_default_instance() && label_detection_config_ != NULL;
}
inline void VideoContext::clear_label_detection_config() {
  if (GetArenaNoVirtual() == NULL && label_detection_config_ != NULL) {
    delete label_detection_config_;
  }
  label_detection_config_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig& VideoContext::label_detection_config() const {
  const ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* p = label_detection_config_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoContext.label_detection_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig*>(
      &::google::cloud::videointelligence::v1beta2::_LabelDetectionConfig_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* VideoContext::release_label_detection_config() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoContext.label_detection_config)
  
  ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* temp = label_detection_config_;
  label_detection_config_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* VideoContext::mutable_label_detection_config() {
  
  if (label_detection_config_ == NULL) {
    label_detection_config_ = new ::google::cloud::videointelligence::v1beta2::LabelDetectionConfig;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoContext.label_detection_config)
  return label_detection_config_;
}
inline void VideoContext::set_allocated_label_detection_config(::google::cloud::videointelligence::v1beta2::LabelDetectionConfig* label_detection_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete label_detection_config_;
  }
  if (label_detection_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      label_detection_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, label_detection_config, submessage_arena);
    }
    
  } else {
    
  }
  label_detection_config_ = label_detection_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoContext.label_detection_config)
}

// .google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig shot_change_detection_config = 3;
inline bool VideoContext::has_shot_change_detection_config() const {
  return this != internal_default_instance() && shot_change_detection_config_ != NULL;
}
inline void VideoContext::clear_shot_change_detection_config() {
  if (GetArenaNoVirtual() == NULL && shot_change_detection_config_ != NULL) {
    delete shot_change_detection_config_;
  }
  shot_change_detection_config_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig& VideoContext::shot_change_detection_config() const {
  const ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* p = shot_change_detection_config_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoContext.shot_change_detection_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig*>(
      &::google::cloud::videointelligence::v1beta2::_ShotChangeDetectionConfig_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* VideoContext::release_shot_change_detection_config() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoContext.shot_change_detection_config)
  
  ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* temp = shot_change_detection_config_;
  shot_change_detection_config_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* VideoContext::mutable_shot_change_detection_config() {
  
  if (shot_change_detection_config_ == NULL) {
    shot_change_detection_config_ = new ::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoContext.shot_change_detection_config)
  return shot_change_detection_config_;
}
inline void VideoContext::set_allocated_shot_change_detection_config(::google::cloud::videointelligence::v1beta2::ShotChangeDetectionConfig* shot_change_detection_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shot_change_detection_config_;
  }
  if (shot_change_detection_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      shot_change_detection_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shot_change_detection_config, submessage_arena);
    }
    
  } else {
    
  }
  shot_change_detection_config_ = shot_change_detection_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoContext.shot_change_detection_config)
}

// .google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig explicit_content_detection_config = 4;
inline bool VideoContext::has_explicit_content_detection_config() const {
  return this != internal_default_instance() && explicit_content_detection_config_ != NULL;
}
inline void VideoContext::clear_explicit_content_detection_config() {
  if (GetArenaNoVirtual() == NULL && explicit_content_detection_config_ != NULL) {
    delete explicit_content_detection_config_;
  }
  explicit_content_detection_config_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig& VideoContext::explicit_content_detection_config() const {
  const ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* p = explicit_content_detection_config_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoContext.explicit_content_detection_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig*>(
      &::google::cloud::videointelligence::v1beta2::_ExplicitContentDetectionConfig_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* VideoContext::release_explicit_content_detection_config() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoContext.explicit_content_detection_config)
  
  ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* temp = explicit_content_detection_config_;
  explicit_content_detection_config_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* VideoContext::mutable_explicit_content_detection_config() {
  
  if (explicit_content_detection_config_ == NULL) {
    explicit_content_detection_config_ = new ::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoContext.explicit_content_detection_config)
  return explicit_content_detection_config_;
}
inline void VideoContext::set_allocated_explicit_content_detection_config(::google::cloud::videointelligence::v1beta2::ExplicitContentDetectionConfig* explicit_content_detection_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete explicit_content_detection_config_;
  }
  if (explicit_content_detection_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      explicit_content_detection_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, explicit_content_detection_config, submessage_arena);
    }
    
  } else {
    
  }
  explicit_content_detection_config_ = explicit_content_detection_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoContext.explicit_content_detection_config)
}

// .google.cloud.videointelligence.v1beta2.FaceDetectionConfig face_detection_config = 5;
inline bool VideoContext::has_face_detection_config() const {
  return this != internal_default_instance() && face_detection_config_ != NULL;
}
inline void VideoContext::clear_face_detection_config() {
  if (GetArenaNoVirtual() == NULL && face_detection_config_ != NULL) {
    delete face_detection_config_;
  }
  face_detection_config_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig& VideoContext::face_detection_config() const {
  const ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* p = face_detection_config_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoContext.face_detection_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig*>(
      &::google::cloud::videointelligence::v1beta2::_FaceDetectionConfig_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* VideoContext::release_face_detection_config() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoContext.face_detection_config)
  
  ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* temp = face_detection_config_;
  face_detection_config_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* VideoContext::mutable_face_detection_config() {
  
  if (face_detection_config_ == NULL) {
    face_detection_config_ = new ::google::cloud::videointelligence::v1beta2::FaceDetectionConfig;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoContext.face_detection_config)
  return face_detection_config_;
}
inline void VideoContext::set_allocated_face_detection_config(::google::cloud::videointelligence::v1beta2::FaceDetectionConfig* face_detection_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete face_detection_config_;
  }
  if (face_detection_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      face_detection_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, face_detection_config, submessage_arena);
    }
    
  } else {
    
  }
  face_detection_config_ = face_detection_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoContext.face_detection_config)
}

// -------------------------------------------------------------------

// LabelDetectionConfig

// .google.cloud.videointelligence.v1beta2.LabelDetectionMode label_detection_mode = 1;
inline void LabelDetectionConfig::clear_label_detection_mode() {
  label_detection_mode_ = 0;
}
inline ::google::cloud::videointelligence::v1beta2::LabelDetectionMode LabelDetectionConfig::label_detection_mode() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.label_detection_mode)
  return static_cast< ::google::cloud::videointelligence::v1beta2::LabelDetectionMode >(label_detection_mode_);
}
inline void LabelDetectionConfig::set_label_detection_mode(::google::cloud::videointelligence::v1beta2::LabelDetectionMode value) {
  
  label_detection_mode_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.label_detection_mode)
}

// bool stationary_camera = 2;
inline void LabelDetectionConfig::clear_stationary_camera() {
  stationary_camera_ = false;
}
inline bool LabelDetectionConfig::stationary_camera() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.stationary_camera)
  return stationary_camera_;
}
inline void LabelDetectionConfig::set_stationary_camera(bool value) {
  
  stationary_camera_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.stationary_camera)
}

// string model = 3;
inline void LabelDetectionConfig::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LabelDetectionConfig::model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
  return model_.GetNoArena();
}
inline void LabelDetectionConfig::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
}
#if LANG_CXX11
inline void LabelDetectionConfig::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
}
#endif
inline void LabelDetectionConfig::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
}
inline void LabelDetectionConfig::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
}
inline ::std::string* LabelDetectionConfig::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LabelDetectionConfig::release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LabelDetectionConfig::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.LabelDetectionConfig.model)
}

// -------------------------------------------------------------------

// ShotChangeDetectionConfig

// string model = 1;
inline void ShotChangeDetectionConfig::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShotChangeDetectionConfig::model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
  return model_.GetNoArena();
}
inline void ShotChangeDetectionConfig::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
}
#if LANG_CXX11
inline void ShotChangeDetectionConfig::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
}
#endif
inline void ShotChangeDetectionConfig::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
}
inline void ShotChangeDetectionConfig::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
}
inline ::std::string* ShotChangeDetectionConfig::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShotChangeDetectionConfig::release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShotChangeDetectionConfig::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.ShotChangeDetectionConfig.model)
}

// -------------------------------------------------------------------

// ExplicitContentDetectionConfig

// string model = 1;
inline void ExplicitContentDetectionConfig::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExplicitContentDetectionConfig::model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
  return model_.GetNoArena();
}
inline void ExplicitContentDetectionConfig::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
}
#if LANG_CXX11
inline void ExplicitContentDetectionConfig::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
}
#endif
inline void ExplicitContentDetectionConfig::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
}
inline void ExplicitContentDetectionConfig::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
}
inline ::std::string* ExplicitContentDetectionConfig::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplicitContentDetectionConfig::release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplicitContentDetectionConfig::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.ExplicitContentDetectionConfig.model)
}

// -------------------------------------------------------------------

// FaceDetectionConfig

// string model = 1;
inline void FaceDetectionConfig::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FaceDetectionConfig::model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
  return model_.GetNoArena();
}
inline void FaceDetectionConfig::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
}
#if LANG_CXX11
inline void FaceDetectionConfig::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
}
#endif
inline void FaceDetectionConfig::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
}
inline void FaceDetectionConfig::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
}
inline ::std::string* FaceDetectionConfig::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaceDetectionConfig::release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaceDetectionConfig::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.model)
}

// bool include_bounding_boxes = 2;
inline void FaceDetectionConfig::clear_include_bounding_boxes() {
  include_bounding_boxes_ = false;
}
inline bool FaceDetectionConfig::include_bounding_boxes() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.include_bounding_boxes)
  return include_bounding_boxes_;
}
inline void FaceDetectionConfig::set_include_bounding_boxes(bool value) {
  
  include_bounding_boxes_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.FaceDetectionConfig.include_bounding_boxes)
}

// -------------------------------------------------------------------

// VideoSegment

// .google.protobuf.Duration start_time_offset = 1;
inline bool VideoSegment::has_start_time_offset() const {
  return this != internal_default_instance() && start_time_offset_ != NULL;
}
inline const ::google::protobuf::Duration& VideoSegment::start_time_offset() const {
  const ::google::protobuf::Duration* p = start_time_offset_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoSegment.start_time_offset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* VideoSegment::release_start_time_offset() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoSegment.start_time_offset)
  
  ::google::protobuf::Duration* temp = start_time_offset_;
  start_time_offset_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* VideoSegment::mutable_start_time_offset() {
  
  if (start_time_offset_ == NULL) {
    start_time_offset_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoSegment.start_time_offset)
  return start_time_offset_;
}
inline void VideoSegment::set_allocated_start_time_offset(::google::protobuf::Duration* start_time_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_offset_);
  }
  if (start_time_offset) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_offset)->GetArena();
    if (message_arena != submessage_arena) {
      start_time_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time_offset, submessage_arena);
    }
    
  } else {
    
  }
  start_time_offset_ = start_time_offset;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoSegment.start_time_offset)
}

// .google.protobuf.Duration end_time_offset = 2;
inline bool VideoSegment::has_end_time_offset() const {
  return this != internal_default_instance() && end_time_offset_ != NULL;
}
inline const ::google::protobuf::Duration& VideoSegment::end_time_offset() const {
  const ::google::protobuf::Duration* p = end_time_offset_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoSegment.end_time_offset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* VideoSegment::release_end_time_offset() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoSegment.end_time_offset)
  
  ::google::protobuf::Duration* temp = end_time_offset_;
  end_time_offset_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* VideoSegment::mutable_end_time_offset() {
  
  if (end_time_offset_ == NULL) {
    end_time_offset_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoSegment.end_time_offset)
  return end_time_offset_;
}
inline void VideoSegment::set_allocated_end_time_offset(::google::protobuf::Duration* end_time_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_offset_);
  }
  if (end_time_offset) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_offset)->GetArena();
    if (message_arena != submessage_arena) {
      end_time_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time_offset, submessage_arena);
    }
    
  } else {
    
  }
  end_time_offset_ = end_time_offset;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoSegment.end_time_offset)
}

// -------------------------------------------------------------------

// LabelSegment

// .google.cloud.videointelligence.v1beta2.VideoSegment segment = 1;
inline bool LabelSegment::has_segment() const {
  return this != internal_default_instance() && segment_ != NULL;
}
inline void LabelSegment::clear_segment() {
  if (GetArenaNoVirtual() == NULL && segment_ != NULL) {
    delete segment_;
  }
  segment_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::VideoSegment& LabelSegment::segment() const {
  const ::google::cloud::videointelligence::v1beta2::VideoSegment* p = segment_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelSegment.segment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::VideoSegment*>(
      &::google::cloud::videointelligence::v1beta2::_VideoSegment_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* LabelSegment::release_segment() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.LabelSegment.segment)
  
  ::google::cloud::videointelligence::v1beta2::VideoSegment* temp = segment_;
  segment_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* LabelSegment::mutable_segment() {
  
  if (segment_ == NULL) {
    segment_ = new ::google::cloud::videointelligence::v1beta2::VideoSegment;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.LabelSegment.segment)
  return segment_;
}
inline void LabelSegment::set_allocated_segment(::google::cloud::videointelligence::v1beta2::VideoSegment* segment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete segment_;
  }
  if (segment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      segment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, segment, submessage_arena);
    }
    
  } else {
    
  }
  segment_ = segment;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.LabelSegment.segment)
}

// float confidence = 2;
inline void LabelSegment::clear_confidence() {
  confidence_ = 0;
}
inline float LabelSegment::confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelSegment.confidence)
  return confidence_;
}
inline void LabelSegment::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.LabelSegment.confidence)
}

// -------------------------------------------------------------------

// LabelFrame

// .google.protobuf.Duration time_offset = 1;
inline bool LabelFrame::has_time_offset() const {
  return this != internal_default_instance() && time_offset_ != NULL;
}
inline const ::google::protobuf::Duration& LabelFrame::time_offset() const {
  const ::google::protobuf::Duration* p = time_offset_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelFrame.time_offset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* LabelFrame::release_time_offset() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.LabelFrame.time_offset)
  
  ::google::protobuf::Duration* temp = time_offset_;
  time_offset_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* LabelFrame::mutable_time_offset() {
  
  if (time_offset_ == NULL) {
    time_offset_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.LabelFrame.time_offset)
  return time_offset_;
}
inline void LabelFrame::set_allocated_time_offset(::google::protobuf::Duration* time_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_offset_);
  }
  if (time_offset) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(time_offset)->GetArena();
    if (message_arena != submessage_arena) {
      time_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_offset, submessage_arena);
    }
    
  } else {
    
  }
  time_offset_ = time_offset;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.LabelFrame.time_offset)
}

// float confidence = 2;
inline void LabelFrame::clear_confidence() {
  confidence_ = 0;
}
inline float LabelFrame::confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelFrame.confidence)
  return confidence_;
}
inline void LabelFrame::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.LabelFrame.confidence)
}

// -------------------------------------------------------------------

// Entity

// string entity_id = 1;
inline void Entity::clear_entity_id() {
  entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entity::entity_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.Entity.entity_id)
  return entity_id_.GetNoArena();
}
inline void Entity::set_entity_id(const ::std::string& value) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.Entity.entity_id)
}
#if LANG_CXX11
inline void Entity::set_entity_id(::std::string&& value) {
  
  entity_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.Entity.entity_id)
}
#endif
inline void Entity::set_entity_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.Entity.entity_id)
}
inline void Entity::set_entity_id(const char* value, size_t size) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.Entity.entity_id)
}
inline ::std::string* Entity::mutable_entity_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.Entity.entity_id)
  return entity_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_entity_id() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.Entity.entity_id)
  
  return entity_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_entity_id(::std::string* entity_id) {
  if (entity_id != NULL) {
    
  } else {
    
  }
  entity_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.Entity.entity_id)
}

// string description = 2;
inline void Entity::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entity::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.Entity.description)
  return description_.GetNoArena();
}
inline void Entity::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.Entity.description)
}
#if LANG_CXX11
inline void Entity::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.Entity.description)
}
#endif
inline void Entity::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.Entity.description)
}
inline void Entity::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.Entity.description)
}
inline ::std::string* Entity::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.Entity.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.Entity.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.Entity.description)
}

// string language_code = 3;
inline void Entity::clear_language_code() {
  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entity::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.Entity.language_code)
  return language_code_.GetNoArena();
}
inline void Entity::set_language_code(const ::std::string& value) {
  
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.Entity.language_code)
}
#if LANG_CXX11
inline void Entity::set_language_code(::std::string&& value) {
  
  language_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.Entity.language_code)
}
#endif
inline void Entity::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.Entity.language_code)
}
inline void Entity::set_language_code(const char* value, size_t size) {
  
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.Entity.language_code)
}
inline ::std::string* Entity::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.Entity.language_code)
  return language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.Entity.language_code)
  
  return language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.Entity.language_code)
}

// -------------------------------------------------------------------

// LabelAnnotation

// .google.cloud.videointelligence.v1beta2.Entity entity = 1;
inline bool LabelAnnotation::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline void LabelAnnotation::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::Entity& LabelAnnotation::entity() const {
  const ::google::cloud::videointelligence::v1beta2::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelAnnotation.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::Entity*>(
      &::google::cloud::videointelligence::v1beta2::_Entity_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::Entity* LabelAnnotation::release_entity() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.LabelAnnotation.entity)
  
  ::google::cloud::videointelligence::v1beta2::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::Entity* LabelAnnotation::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::google::cloud::videointelligence::v1beta2::Entity;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.LabelAnnotation.entity)
  return entity_;
}
inline void LabelAnnotation::set_allocated_entity(::google::cloud::videointelligence::v1beta2::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete entity_;
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.LabelAnnotation.entity)
}

// repeated .google.cloud.videointelligence.v1beta2.Entity category_entities = 2;
inline int LabelAnnotation::category_entities_size() const {
  return category_entities_.size();
}
inline void LabelAnnotation::clear_category_entities() {
  category_entities_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::Entity& LabelAnnotation::category_entities(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelAnnotation.category_entities)
  return category_entities_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::Entity* LabelAnnotation::mutable_category_entities(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.LabelAnnotation.category_entities)
  return category_entities_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::Entity* LabelAnnotation::add_category_entities() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.LabelAnnotation.category_entities)
  return category_entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::Entity >*
LabelAnnotation::mutable_category_entities() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.LabelAnnotation.category_entities)
  return &category_entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::Entity >&
LabelAnnotation::category_entities() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.LabelAnnotation.category_entities)
  return category_entities_;
}

// repeated .google.cloud.videointelligence.v1beta2.LabelSegment segments = 3;
inline int LabelAnnotation::segments_size() const {
  return segments_.size();
}
inline void LabelAnnotation::clear_segments() {
  segments_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::LabelSegment& LabelAnnotation::segments(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelAnnotation.segments)
  return segments_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelSegment* LabelAnnotation::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.LabelAnnotation.segments)
  return segments_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelSegment* LabelAnnotation::add_segments() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.LabelAnnotation.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelSegment >*
LabelAnnotation::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.LabelAnnotation.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelSegment >&
LabelAnnotation::segments() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.LabelAnnotation.segments)
  return segments_;
}

// repeated .google.cloud.videointelligence.v1beta2.LabelFrame frames = 4;
inline int LabelAnnotation::frames_size() const {
  return frames_.size();
}
inline void LabelAnnotation::clear_frames() {
  frames_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::LabelFrame& LabelAnnotation::frames(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.LabelAnnotation.frames)
  return frames_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelFrame* LabelAnnotation::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.LabelAnnotation.frames)
  return frames_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelFrame* LabelAnnotation::add_frames() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.LabelAnnotation.frames)
  return frames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelFrame >*
LabelAnnotation::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.LabelAnnotation.frames)
  return &frames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelFrame >&
LabelAnnotation::frames() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.LabelAnnotation.frames)
  return frames_;
}

// -------------------------------------------------------------------

// ExplicitContentFrame

// .google.protobuf.Duration time_offset = 1;
inline bool ExplicitContentFrame::has_time_offset() const {
  return this != internal_default_instance() && time_offset_ != NULL;
}
inline const ::google::protobuf::Duration& ExplicitContentFrame::time_offset() const {
  const ::google::protobuf::Duration* p = time_offset_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.ExplicitContentFrame.time_offset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ExplicitContentFrame::release_time_offset() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.ExplicitContentFrame.time_offset)
  
  ::google::protobuf::Duration* temp = time_offset_;
  time_offset_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ExplicitContentFrame::mutable_time_offset() {
  
  if (time_offset_ == NULL) {
    time_offset_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.ExplicitContentFrame.time_offset)
  return time_offset_;
}
inline void ExplicitContentFrame::set_allocated_time_offset(::google::protobuf::Duration* time_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_offset_);
  }
  if (time_offset) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(time_offset)->GetArena();
    if (message_arena != submessage_arena) {
      time_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_offset, submessage_arena);
    }
    
  } else {
    
  }
  time_offset_ = time_offset;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.ExplicitContentFrame.time_offset)
}

// .google.cloud.videointelligence.v1beta2.Likelihood pornography_likelihood = 2;
inline void ExplicitContentFrame::clear_pornography_likelihood() {
  pornography_likelihood_ = 0;
}
inline ::google::cloud::videointelligence::v1beta2::Likelihood ExplicitContentFrame::pornography_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.ExplicitContentFrame.pornography_likelihood)
  return static_cast< ::google::cloud::videointelligence::v1beta2::Likelihood >(pornography_likelihood_);
}
inline void ExplicitContentFrame::set_pornography_likelihood(::google::cloud::videointelligence::v1beta2::Likelihood value) {
  
  pornography_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.ExplicitContentFrame.pornography_likelihood)
}

// -------------------------------------------------------------------

// ExplicitContentAnnotation

// repeated .google.cloud.videointelligence.v1beta2.ExplicitContentFrame frames = 1;
inline int ExplicitContentAnnotation::frames_size() const {
  return frames_.size();
}
inline void ExplicitContentAnnotation::clear_frames() {
  frames_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame& ExplicitContentAnnotation::frames(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation.frames)
  return frames_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame* ExplicitContentAnnotation::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation.frames)
  return frames_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame* ExplicitContentAnnotation::add_frames() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation.frames)
  return frames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame >*
ExplicitContentAnnotation::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation.frames)
  return &frames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::ExplicitContentFrame >&
ExplicitContentAnnotation::frames() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation.frames)
  return frames_;
}

// -------------------------------------------------------------------

// NormalizedBoundingBox

// float left = 1;
inline void NormalizedBoundingBox::clear_left() {
  left_ = 0;
}
inline float NormalizedBoundingBox::left() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.left)
  return left_;
}
inline void NormalizedBoundingBox::set_left(float value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.left)
}

// float top = 2;
inline void NormalizedBoundingBox::clear_top() {
  top_ = 0;
}
inline float NormalizedBoundingBox::top() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.top)
  return top_;
}
inline void NormalizedBoundingBox::set_top(float value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.top)
}

// float right = 3;
inline void NormalizedBoundingBox::clear_right() {
  right_ = 0;
}
inline float NormalizedBoundingBox::right() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.right)
  return right_;
}
inline void NormalizedBoundingBox::set_right(float value) {
  
  right_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.right)
}

// float bottom = 4;
inline void NormalizedBoundingBox::clear_bottom() {
  bottom_ = 0;
}
inline float NormalizedBoundingBox::bottom() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.bottom)
  return bottom_;
}
inline void NormalizedBoundingBox::set_bottom(float value) {
  
  bottom_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.NormalizedBoundingBox.bottom)
}

// -------------------------------------------------------------------

// FaceSegment

// .google.cloud.videointelligence.v1beta2.VideoSegment segment = 1;
inline bool FaceSegment::has_segment() const {
  return this != internal_default_instance() && segment_ != NULL;
}
inline void FaceSegment::clear_segment() {
  if (GetArenaNoVirtual() == NULL && segment_ != NULL) {
    delete segment_;
  }
  segment_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::VideoSegment& FaceSegment::segment() const {
  const ::google::cloud::videointelligence::v1beta2::VideoSegment* p = segment_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceSegment.segment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::VideoSegment*>(
      &::google::cloud::videointelligence::v1beta2::_VideoSegment_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* FaceSegment::release_segment() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.FaceSegment.segment)
  
  ::google::cloud::videointelligence::v1beta2::VideoSegment* temp = segment_;
  segment_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* FaceSegment::mutable_segment() {
  
  if (segment_ == NULL) {
    segment_ = new ::google::cloud::videointelligence::v1beta2::VideoSegment;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.FaceSegment.segment)
  return segment_;
}
inline void FaceSegment::set_allocated_segment(::google::cloud::videointelligence::v1beta2::VideoSegment* segment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete segment_;
  }
  if (segment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      segment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, segment, submessage_arena);
    }
    
  } else {
    
  }
  segment_ = segment;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.FaceSegment.segment)
}

// -------------------------------------------------------------------

// FaceFrame

// repeated .google.cloud.videointelligence.v1beta2.NormalizedBoundingBox normalized_bounding_boxes = 1;
inline int FaceFrame::normalized_bounding_boxes_size() const {
  return normalized_bounding_boxes_.size();
}
inline void FaceFrame::clear_normalized_bounding_boxes() {
  normalized_bounding_boxes_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox& FaceFrame::normalized_bounding_boxes(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceFrame.normalized_bounding_boxes)
  return normalized_bounding_boxes_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox* FaceFrame::mutable_normalized_bounding_boxes(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.FaceFrame.normalized_bounding_boxes)
  return normalized_bounding_boxes_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox* FaceFrame::add_normalized_bounding_boxes() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.FaceFrame.normalized_bounding_boxes)
  return normalized_bounding_boxes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox >*
FaceFrame::mutable_normalized_bounding_boxes() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.FaceFrame.normalized_bounding_boxes)
  return &normalized_bounding_boxes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::NormalizedBoundingBox >&
FaceFrame::normalized_bounding_boxes() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.FaceFrame.normalized_bounding_boxes)
  return normalized_bounding_boxes_;
}

// .google.protobuf.Duration time_offset = 2;
inline bool FaceFrame::has_time_offset() const {
  return this != internal_default_instance() && time_offset_ != NULL;
}
inline const ::google::protobuf::Duration& FaceFrame::time_offset() const {
  const ::google::protobuf::Duration* p = time_offset_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceFrame.time_offset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* FaceFrame::release_time_offset() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.FaceFrame.time_offset)
  
  ::google::protobuf::Duration* temp = time_offset_;
  time_offset_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* FaceFrame::mutable_time_offset() {
  
  if (time_offset_ == NULL) {
    time_offset_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.FaceFrame.time_offset)
  return time_offset_;
}
inline void FaceFrame::set_allocated_time_offset(::google::protobuf::Duration* time_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_offset_);
  }
  if (time_offset) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(time_offset)->GetArena();
    if (message_arena != submessage_arena) {
      time_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_offset, submessage_arena);
    }
    
  } else {
    
  }
  time_offset_ = time_offset;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.FaceFrame.time_offset)
}

// -------------------------------------------------------------------

// FaceAnnotation

// bytes thumbnail = 1;
inline void FaceAnnotation::clear_thumbnail() {
  thumbnail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FaceAnnotation::thumbnail() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
  return thumbnail_.GetNoArena();
}
inline void FaceAnnotation::set_thumbnail(const ::std::string& value) {
  
  thumbnail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
}
#if LANG_CXX11
inline void FaceAnnotation::set_thumbnail(::std::string&& value) {
  
  thumbnail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
}
#endif
inline void FaceAnnotation::set_thumbnail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  thumbnail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
}
inline void FaceAnnotation::set_thumbnail(const void* value, size_t size) {
  
  thumbnail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
}
inline ::std::string* FaceAnnotation::mutable_thumbnail() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
  return thumbnail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaceAnnotation::release_thumbnail() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
  
  return thumbnail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaceAnnotation::set_allocated_thumbnail(::std::string* thumbnail) {
  if (thumbnail != NULL) {
    
  } else {
    
  }
  thumbnail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbnail);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.FaceAnnotation.thumbnail)
}

// repeated .google.cloud.videointelligence.v1beta2.FaceSegment segments = 2;
inline int FaceAnnotation::segments_size() const {
  return segments_.size();
}
inline void FaceAnnotation::clear_segments() {
  segments_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::FaceSegment& FaceAnnotation::segments(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceAnnotation.segments)
  return segments_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::FaceSegment* FaceAnnotation::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.FaceAnnotation.segments)
  return segments_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::FaceSegment* FaceAnnotation::add_segments() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.FaceAnnotation.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceSegment >*
FaceAnnotation::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.FaceAnnotation.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceSegment >&
FaceAnnotation::segments() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.FaceAnnotation.segments)
  return segments_;
}

// repeated .google.cloud.videointelligence.v1beta2.FaceFrame frames = 3;
inline int FaceAnnotation::frames_size() const {
  return frames_.size();
}
inline void FaceAnnotation::clear_frames() {
  frames_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::FaceFrame& FaceAnnotation::frames(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.FaceAnnotation.frames)
  return frames_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::FaceFrame* FaceAnnotation::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.FaceAnnotation.frames)
  return frames_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::FaceFrame* FaceAnnotation::add_frames() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.FaceAnnotation.frames)
  return frames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceFrame >*
FaceAnnotation::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.FaceAnnotation.frames)
  return &frames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceFrame >&
FaceAnnotation::frames() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.FaceAnnotation.frames)
  return frames_;
}

// -------------------------------------------------------------------

// VideoAnnotationResults

// string input_uri = 1;
inline void VideoAnnotationResults::clear_input_uri() {
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoAnnotationResults::input_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
  return input_uri_.GetNoArena();
}
inline void VideoAnnotationResults::set_input_uri(const ::std::string& value) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
}
#if LANG_CXX11
inline void VideoAnnotationResults::set_input_uri(::std::string&& value) {
  
  input_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
}
#endif
inline void VideoAnnotationResults::set_input_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
}
inline void VideoAnnotationResults::set_input_uri(const char* value, size_t size) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
}
inline ::std::string* VideoAnnotationResults::mutable_input_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
  return input_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoAnnotationResults::release_input_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
  
  return input_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoAnnotationResults::set_allocated_input_uri(::std::string* input_uri) {
  if (input_uri != NULL) {
    
  } else {
    
  }
  input_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.input_uri)
}

// repeated .google.cloud.videointelligence.v1beta2.LabelAnnotation segment_label_annotations = 2;
inline int VideoAnnotationResults::segment_label_annotations_size() const {
  return segment_label_annotations_.size();
}
inline void VideoAnnotationResults::clear_segment_label_annotations() {
  segment_label_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::LabelAnnotation& VideoAnnotationResults::segment_label_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.segment_label_annotations)
  return segment_label_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelAnnotation* VideoAnnotationResults::mutable_segment_label_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.segment_label_annotations)
  return segment_label_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelAnnotation* VideoAnnotationResults::add_segment_label_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.segment_label_annotations)
  return segment_label_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >*
VideoAnnotationResults::mutable_segment_label_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.segment_label_annotations)
  return &segment_label_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >&
VideoAnnotationResults::segment_label_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.segment_label_annotations)
  return segment_label_annotations_;
}

// repeated .google.cloud.videointelligence.v1beta2.LabelAnnotation shot_label_annotations = 3;
inline int VideoAnnotationResults::shot_label_annotations_size() const {
  return shot_label_annotations_.size();
}
inline void VideoAnnotationResults::clear_shot_label_annotations() {
  shot_label_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::LabelAnnotation& VideoAnnotationResults::shot_label_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_label_annotations)
  return shot_label_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelAnnotation* VideoAnnotationResults::mutable_shot_label_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_label_annotations)
  return shot_label_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelAnnotation* VideoAnnotationResults::add_shot_label_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_label_annotations)
  return shot_label_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >*
VideoAnnotationResults::mutable_shot_label_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_label_annotations)
  return &shot_label_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >&
VideoAnnotationResults::shot_label_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_label_annotations)
  return shot_label_annotations_;
}

// repeated .google.cloud.videointelligence.v1beta2.LabelAnnotation frame_label_annotations = 4;
inline int VideoAnnotationResults::frame_label_annotations_size() const {
  return frame_label_annotations_.size();
}
inline void VideoAnnotationResults::clear_frame_label_annotations() {
  frame_label_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::LabelAnnotation& VideoAnnotationResults::frame_label_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.frame_label_annotations)
  return frame_label_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelAnnotation* VideoAnnotationResults::mutable_frame_label_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.frame_label_annotations)
  return frame_label_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::LabelAnnotation* VideoAnnotationResults::add_frame_label_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.frame_label_annotations)
  return frame_label_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >*
VideoAnnotationResults::mutable_frame_label_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.frame_label_annotations)
  return &frame_label_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::LabelAnnotation >&
VideoAnnotationResults::frame_label_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.frame_label_annotations)
  return frame_label_annotations_;
}

// repeated .google.cloud.videointelligence.v1beta2.FaceAnnotation face_annotations = 5;
inline int VideoAnnotationResults::face_annotations_size() const {
  return face_annotations_.size();
}
inline void VideoAnnotationResults::clear_face_annotations() {
  face_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::FaceAnnotation& VideoAnnotationResults::face_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.face_annotations)
  return face_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::FaceAnnotation* VideoAnnotationResults::mutable_face_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.face_annotations)
  return face_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::FaceAnnotation* VideoAnnotationResults::add_face_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.face_annotations)
  return face_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceAnnotation >*
VideoAnnotationResults::mutable_face_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.face_annotations)
  return &face_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::FaceAnnotation >&
VideoAnnotationResults::face_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.face_annotations)
  return face_annotations_;
}

// repeated .google.cloud.videointelligence.v1beta2.VideoSegment shot_annotations = 6;
inline int VideoAnnotationResults::shot_annotations_size() const {
  return shot_annotations_.size();
}
inline void VideoAnnotationResults::clear_shot_annotations() {
  shot_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::VideoSegment& VideoAnnotationResults::shot_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_annotations)
  return shot_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* VideoAnnotationResults::mutable_shot_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_annotations)
  return shot_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoSegment* VideoAnnotationResults::add_shot_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_annotations)
  return shot_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >*
VideoAnnotationResults::mutable_shot_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_annotations)
  return &shot_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoSegment >&
VideoAnnotationResults::shot_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.shot_annotations)
  return shot_annotations_;
}

// .google.cloud.videointelligence.v1beta2.ExplicitContentAnnotation explicit_annotation = 7;
inline bool VideoAnnotationResults::has_explicit_annotation() const {
  return this != internal_default_instance() && explicit_annotation_ != NULL;
}
inline void VideoAnnotationResults::clear_explicit_annotation() {
  if (GetArenaNoVirtual() == NULL && explicit_annotation_ != NULL) {
    delete explicit_annotation_;
  }
  explicit_annotation_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation& VideoAnnotationResults::explicit_annotation() const {
  const ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* p = explicit_annotation_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.explicit_annotation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation*>(
      &::google::cloud::videointelligence::v1beta2::_ExplicitContentAnnotation_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* VideoAnnotationResults::release_explicit_annotation() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.explicit_annotation)
  
  ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* temp = explicit_annotation_;
  explicit_annotation_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* VideoAnnotationResults::mutable_explicit_annotation() {
  
  if (explicit_annotation_ == NULL) {
    explicit_annotation_ = new ::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.explicit_annotation)
  return explicit_annotation_;
}
inline void VideoAnnotationResults::set_allocated_explicit_annotation(::google::cloud::videointelligence::v1beta2::ExplicitContentAnnotation* explicit_annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete explicit_annotation_;
  }
  if (explicit_annotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      explicit_annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, explicit_annotation, submessage_arena);
    }
    
  } else {
    
  }
  explicit_annotation_ = explicit_annotation;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.explicit_annotation)
}

// .google.rpc.Status error = 9;
inline bool VideoAnnotationResults::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::google::rpc::Status& VideoAnnotationResults::error() const {
  const ::google::rpc::Status* p = error_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.error)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* VideoAnnotationResults::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.error)
  
  ::google::rpc::Status* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::google::rpc::Status* VideoAnnotationResults::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.error)
  return error_;
}
inline void VideoAnnotationResults::set_allocated_error(::google::rpc::Status* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoAnnotationResults.error)
}

// -------------------------------------------------------------------

// AnnotateVideoResponse

// repeated .google.cloud.videointelligence.v1beta2.VideoAnnotationResults annotation_results = 1;
inline int AnnotateVideoResponse::annotation_results_size() const {
  return annotation_results_.size();
}
inline void AnnotateVideoResponse::clear_annotation_results() {
  annotation_results_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults& AnnotateVideoResponse::annotation_results(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoResponse.annotation_results)
  return annotation_results_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults* AnnotateVideoResponse::mutable_annotation_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.AnnotateVideoResponse.annotation_results)
  return annotation_results_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults* AnnotateVideoResponse::add_annotation_results() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.AnnotateVideoResponse.annotation_results)
  return annotation_results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults >*
AnnotateVideoResponse::mutable_annotation_results() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.AnnotateVideoResponse.annotation_results)
  return &annotation_results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationResults >&
AnnotateVideoResponse::annotation_results() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.AnnotateVideoResponse.annotation_results)
  return annotation_results_;
}

// -------------------------------------------------------------------

// VideoAnnotationProgress

// string input_uri = 1;
inline void VideoAnnotationProgress::clear_input_uri() {
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoAnnotationProgress::input_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
  return input_uri_.GetNoArena();
}
inline void VideoAnnotationProgress::set_input_uri(const ::std::string& value) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
}
#if LANG_CXX11
inline void VideoAnnotationProgress::set_input_uri(::std::string&& value) {
  
  input_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
}
#endif
inline void VideoAnnotationProgress::set_input_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
}
inline void VideoAnnotationProgress::set_input_uri(const char* value, size_t size) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
}
inline ::std::string* VideoAnnotationProgress::mutable_input_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
  return input_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoAnnotationProgress::release_input_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
  
  return input_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoAnnotationProgress::set_allocated_input_uri(::std::string* input_uri) {
  if (input_uri != NULL) {
    
  } else {
    
  }
  input_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.input_uri)
}

// int32 progress_percent = 2;
inline void VideoAnnotationProgress::clear_progress_percent() {
  progress_percent_ = 0;
}
inline ::google::protobuf::int32 VideoAnnotationProgress::progress_percent() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.progress_percent)
  return progress_percent_;
}
inline void VideoAnnotationProgress::set_progress_percent(::google::protobuf::int32 value) {
  
  progress_percent_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.progress_percent)
}

// .google.protobuf.Timestamp start_time = 3;
inline bool VideoAnnotationProgress::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& VideoAnnotationProgress::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::release_start_time() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.start_time)
  return start_time_;
}
inline void VideoAnnotationProgress::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.start_time)
}

// .google.protobuf.Timestamp update_time = 4;
inline bool VideoAnnotationProgress::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& VideoAnnotationProgress::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.update_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::release_update_time() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::mutable_update_time() {
  
  if (update_time_ == NULL) {
    update_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.update_time)
  return update_time_;
}
inline void VideoAnnotationProgress::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta2.VideoAnnotationProgress.update_time)
}

// -------------------------------------------------------------------

// AnnotateVideoProgress

// repeated .google.cloud.videointelligence.v1beta2.VideoAnnotationProgress annotation_progress = 1;
inline int AnnotateVideoProgress::annotation_progress_size() const {
  return annotation_progress_.size();
}
inline void AnnotateVideoProgress::clear_annotation_progress() {
  annotation_progress_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress& AnnotateVideoProgress::annotation_progress(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta2.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress* AnnotateVideoProgress::mutable_annotation_progress(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta2.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress* AnnotateVideoProgress::add_annotation_progress() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta2.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress >*
AnnotateVideoProgress::mutable_annotation_progress() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta2.AnnotateVideoProgress.annotation_progress)
  return &annotation_progress_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta2::VideoAnnotationProgress >&
AnnotateVideoProgress::annotation_progress() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta2.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta2
}  // namespace videointelligence
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::videointelligence::v1beta2::Feature> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::videointelligence::v1beta2::Feature>() {
  return ::google::cloud::videointelligence::v1beta2::Feature_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::videointelligence::v1beta2::LabelDetectionMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::videointelligence::v1beta2::LabelDetectionMode>() {
  return ::google::cloud::videointelligence::v1beta2::LabelDetectionMode_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::videointelligence::v1beta2::Likelihood> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::videointelligence::v1beta2::Likelihood>() {
  return ::google::cloud::videointelligence::v1beta2::Likelihood_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fvideointelligence_2fv1beta2_2fvideo_5fintelligence_2eproto__INCLUDED
