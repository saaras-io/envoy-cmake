// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/metric_service.proto

#ifndef PROTOBUF_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto__INCLUDED
#define PROTOBUF_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/metric.pb.h"
#include "google/api/monitored_resource.pb.h"
#include "google/monitoring/v3/common.pb.h"
#include "google/monitoring/v3/metric.pb.h"
#include <google/protobuf/empty.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsListMonitoredResourceDescriptorsRequestImpl();
void InitDefaultsListMonitoredResourceDescriptorsRequest();
void InitDefaultsListMonitoredResourceDescriptorsResponseImpl();
void InitDefaultsListMonitoredResourceDescriptorsResponse();
void InitDefaultsGetMonitoredResourceDescriptorRequestImpl();
void InitDefaultsGetMonitoredResourceDescriptorRequest();
void InitDefaultsListMetricDescriptorsRequestImpl();
void InitDefaultsListMetricDescriptorsRequest();
void InitDefaultsListMetricDescriptorsResponseImpl();
void InitDefaultsListMetricDescriptorsResponse();
void InitDefaultsGetMetricDescriptorRequestImpl();
void InitDefaultsGetMetricDescriptorRequest();
void InitDefaultsCreateMetricDescriptorRequestImpl();
void InitDefaultsCreateMetricDescriptorRequest();
void InitDefaultsDeleteMetricDescriptorRequestImpl();
void InitDefaultsDeleteMetricDescriptorRequest();
void InitDefaultsListTimeSeriesRequestImpl();
void InitDefaultsListTimeSeriesRequest();
void InitDefaultsListTimeSeriesResponseImpl();
void InitDefaultsListTimeSeriesResponse();
void InitDefaultsCreateTimeSeriesRequestImpl();
void InitDefaultsCreateTimeSeriesRequest();
void InitDefaultsCreateTimeSeriesErrorImpl();
void InitDefaultsCreateTimeSeriesError();
inline void InitDefaults() {
  InitDefaultsListMonitoredResourceDescriptorsRequest();
  InitDefaultsListMonitoredResourceDescriptorsResponse();
  InitDefaultsGetMonitoredResourceDescriptorRequest();
  InitDefaultsListMetricDescriptorsRequest();
  InitDefaultsListMetricDescriptorsResponse();
  InitDefaultsGetMetricDescriptorRequest();
  InitDefaultsCreateMetricDescriptorRequest();
  InitDefaultsDeleteMetricDescriptorRequest();
  InitDefaultsListTimeSeriesRequest();
  InitDefaultsListTimeSeriesResponse();
  InitDefaultsCreateTimeSeriesRequest();
  InitDefaultsCreateTimeSeriesError();
}
}  // namespace protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class CreateMetricDescriptorRequest;
class CreateMetricDescriptorRequestDefaultTypeInternal;
extern CreateMetricDescriptorRequestDefaultTypeInternal _CreateMetricDescriptorRequest_default_instance_;
class CreateTimeSeriesError;
class CreateTimeSeriesErrorDefaultTypeInternal;
extern CreateTimeSeriesErrorDefaultTypeInternal _CreateTimeSeriesError_default_instance_;
class CreateTimeSeriesRequest;
class CreateTimeSeriesRequestDefaultTypeInternal;
extern CreateTimeSeriesRequestDefaultTypeInternal _CreateTimeSeriesRequest_default_instance_;
class DeleteMetricDescriptorRequest;
class DeleteMetricDescriptorRequestDefaultTypeInternal;
extern DeleteMetricDescriptorRequestDefaultTypeInternal _DeleteMetricDescriptorRequest_default_instance_;
class GetMetricDescriptorRequest;
class GetMetricDescriptorRequestDefaultTypeInternal;
extern GetMetricDescriptorRequestDefaultTypeInternal _GetMetricDescriptorRequest_default_instance_;
class GetMonitoredResourceDescriptorRequest;
class GetMonitoredResourceDescriptorRequestDefaultTypeInternal;
extern GetMonitoredResourceDescriptorRequestDefaultTypeInternal _GetMonitoredResourceDescriptorRequest_default_instance_;
class ListMetricDescriptorsRequest;
class ListMetricDescriptorsRequestDefaultTypeInternal;
extern ListMetricDescriptorsRequestDefaultTypeInternal _ListMetricDescriptorsRequest_default_instance_;
class ListMetricDescriptorsResponse;
class ListMetricDescriptorsResponseDefaultTypeInternal;
extern ListMetricDescriptorsResponseDefaultTypeInternal _ListMetricDescriptorsResponse_default_instance_;
class ListMonitoredResourceDescriptorsRequest;
class ListMonitoredResourceDescriptorsRequestDefaultTypeInternal;
extern ListMonitoredResourceDescriptorsRequestDefaultTypeInternal _ListMonitoredResourceDescriptorsRequest_default_instance_;
class ListMonitoredResourceDescriptorsResponse;
class ListMonitoredResourceDescriptorsResponseDefaultTypeInternal;
extern ListMonitoredResourceDescriptorsResponseDefaultTypeInternal _ListMonitoredResourceDescriptorsResponse_default_instance_;
class ListTimeSeriesRequest;
class ListTimeSeriesRequestDefaultTypeInternal;
extern ListTimeSeriesRequestDefaultTypeInternal _ListTimeSeriesRequest_default_instance_;
class ListTimeSeriesResponse;
class ListTimeSeriesResponseDefaultTypeInternal;
extern ListTimeSeriesResponseDefaultTypeInternal _ListTimeSeriesResponse_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace monitoring {
namespace v3 {

enum ListTimeSeriesRequest_TimeSeriesView {
  ListTimeSeriesRequest_TimeSeriesView_FULL = 0,
  ListTimeSeriesRequest_TimeSeriesView_HEADERS = 1,
  ListTimeSeriesRequest_TimeSeriesView_ListTimeSeriesRequest_TimeSeriesView_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListTimeSeriesRequest_TimeSeriesView_ListTimeSeriesRequest_TimeSeriesView_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListTimeSeriesRequest_TimeSeriesView_IsValid(int value);
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest_TimeSeriesView_TimeSeriesView_MIN = ListTimeSeriesRequest_TimeSeriesView_FULL;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest_TimeSeriesView_TimeSeriesView_MAX = ListTimeSeriesRequest_TimeSeriesView_HEADERS;
const int ListTimeSeriesRequest_TimeSeriesView_TimeSeriesView_ARRAYSIZE = ListTimeSeriesRequest_TimeSeriesView_TimeSeriesView_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListTimeSeriesRequest_TimeSeriesView_descriptor();
inline const ::std::string& ListTimeSeriesRequest_TimeSeriesView_Name(ListTimeSeriesRequest_TimeSeriesView value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListTimeSeriesRequest_TimeSeriesView_descriptor(), value);
}
inline bool ListTimeSeriesRequest_TimeSeriesView_Parse(
    const ::std::string& name, ListTimeSeriesRequest_TimeSeriesView* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListTimeSeriesRequest_TimeSeriesView>(
    ListTimeSeriesRequest_TimeSeriesView_descriptor(), name, value);
}
// ===================================================================

class ListMonitoredResourceDescriptorsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest) */ {
 public:
  ListMonitoredResourceDescriptorsRequest();
  virtual ~ListMonitoredResourceDescriptorsRequest();

  ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from);

  inline ListMonitoredResourceDescriptorsRequest& operator=(const ListMonitoredResourceDescriptorsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListMonitoredResourceDescriptorsRequest(ListMonitoredResourceDescriptorsRequest&& from) noexcept
    : ListMonitoredResourceDescriptorsRequest() {
    *this = ::std::move(from);
  }

  inline ListMonitoredResourceDescriptorsRequest& operator=(ListMonitoredResourceDescriptorsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListMonitoredResourceDescriptorsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListMonitoredResourceDescriptorsRequest* internal_default_instance() {
    return reinterpret_cast<const ListMonitoredResourceDescriptorsRequest*>(
               &_ListMonitoredResourceDescriptorsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ListMonitoredResourceDescriptorsRequest* other);
  friend void swap(ListMonitoredResourceDescriptorsRequest& a, ListMonitoredResourceDescriptorsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListMonitoredResourceDescriptorsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListMonitoredResourceDescriptorsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListMonitoredResourceDescriptorsRequest& from);
  void MergeFrom(const ListMonitoredResourceDescriptorsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListMonitoredResourceDescriptorsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMonitoredResourceDescriptorsRequestImpl();
};
// -------------------------------------------------------------------

class ListMonitoredResourceDescriptorsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse) */ {
 public:
  ListMonitoredResourceDescriptorsResponse();
  virtual ~ListMonitoredResourceDescriptorsResponse();

  ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from);

  inline ListMonitoredResourceDescriptorsResponse& operator=(const ListMonitoredResourceDescriptorsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListMonitoredResourceDescriptorsResponse(ListMonitoredResourceDescriptorsResponse&& from) noexcept
    : ListMonitoredResourceDescriptorsResponse() {
    *this = ::std::move(from);
  }

  inline ListMonitoredResourceDescriptorsResponse& operator=(ListMonitoredResourceDescriptorsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListMonitoredResourceDescriptorsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListMonitoredResourceDescriptorsResponse* internal_default_instance() {
    return reinterpret_cast<const ListMonitoredResourceDescriptorsResponse*>(
               &_ListMonitoredResourceDescriptorsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ListMonitoredResourceDescriptorsResponse* other);
  friend void swap(ListMonitoredResourceDescriptorsResponse& a, ListMonitoredResourceDescriptorsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListMonitoredResourceDescriptorsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListMonitoredResourceDescriptorsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListMonitoredResourceDescriptorsResponse& from);
  void MergeFrom(const ListMonitoredResourceDescriptorsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListMonitoredResourceDescriptorsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  int resource_descriptors_size() const;
  void clear_resource_descriptors();
  static const int kResourceDescriptorsFieldNumber = 1;
  const ::google::api::MonitoredResourceDescriptor& resource_descriptors(int index) const;
  ::google::api::MonitoredResourceDescriptor* mutable_resource_descriptors(int index);
  ::google::api::MonitoredResourceDescriptor* add_resource_descriptors();
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
      mutable_resource_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
      resource_descriptors() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor > resource_descriptors_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMonitoredResourceDescriptorsResponseImpl();
};
// -------------------------------------------------------------------

class GetMonitoredResourceDescriptorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.GetMonitoredResourceDescriptorRequest) */ {
 public:
  GetMonitoredResourceDescriptorRequest();
  virtual ~GetMonitoredResourceDescriptorRequest();

  GetMonitoredResourceDescriptorRequest(const GetMonitoredResourceDescriptorRequest& from);

  inline GetMonitoredResourceDescriptorRequest& operator=(const GetMonitoredResourceDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMonitoredResourceDescriptorRequest(GetMonitoredResourceDescriptorRequest&& from) noexcept
    : GetMonitoredResourceDescriptorRequest() {
    *this = ::std::move(from);
  }

  inline GetMonitoredResourceDescriptorRequest& operator=(GetMonitoredResourceDescriptorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMonitoredResourceDescriptorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMonitoredResourceDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetMonitoredResourceDescriptorRequest*>(
               &_GetMonitoredResourceDescriptorRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetMonitoredResourceDescriptorRequest* other);
  friend void swap(GetMonitoredResourceDescriptorRequest& a, GetMonitoredResourceDescriptorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMonitoredResourceDescriptorRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMonitoredResourceDescriptorRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMonitoredResourceDescriptorRequest& from);
  void MergeFrom(const GetMonitoredResourceDescriptorRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMonitoredResourceDescriptorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsGetMonitoredResourceDescriptorRequestImpl();
};
// -------------------------------------------------------------------

class ListMetricDescriptorsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListMetricDescriptorsRequest) */ {
 public:
  ListMetricDescriptorsRequest();
  virtual ~ListMetricDescriptorsRequest();

  ListMetricDescriptorsRequest(const ListMetricDescriptorsRequest& from);

  inline ListMetricDescriptorsRequest& operator=(const ListMetricDescriptorsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListMetricDescriptorsRequest(ListMetricDescriptorsRequest&& from) noexcept
    : ListMetricDescriptorsRequest() {
    *this = ::std::move(from);
  }

  inline ListMetricDescriptorsRequest& operator=(ListMetricDescriptorsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListMetricDescriptorsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListMetricDescriptorsRequest* internal_default_instance() {
    return reinterpret_cast<const ListMetricDescriptorsRequest*>(
               &_ListMetricDescriptorsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListMetricDescriptorsRequest* other);
  friend void swap(ListMetricDescriptorsRequest& a, ListMetricDescriptorsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListMetricDescriptorsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListMetricDescriptorsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListMetricDescriptorsRequest& from);
  void MergeFrom(const ListMetricDescriptorsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListMetricDescriptorsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListMetricDescriptorsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMetricDescriptorsRequestImpl();
};
// -------------------------------------------------------------------

class ListMetricDescriptorsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListMetricDescriptorsResponse) */ {
 public:
  ListMetricDescriptorsResponse();
  virtual ~ListMetricDescriptorsResponse();

  ListMetricDescriptorsResponse(const ListMetricDescriptorsResponse& from);

  inline ListMetricDescriptorsResponse& operator=(const ListMetricDescriptorsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListMetricDescriptorsResponse(ListMetricDescriptorsResponse&& from) noexcept
    : ListMetricDescriptorsResponse() {
    *this = ::std::move(from);
  }

  inline ListMetricDescriptorsResponse& operator=(ListMetricDescriptorsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListMetricDescriptorsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListMetricDescriptorsResponse* internal_default_instance() {
    return reinterpret_cast<const ListMetricDescriptorsResponse*>(
               &_ListMetricDescriptorsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListMetricDescriptorsResponse* other);
  friend void swap(ListMetricDescriptorsResponse& a, ListMetricDescriptorsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListMetricDescriptorsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListMetricDescriptorsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListMetricDescriptorsResponse& from);
  void MergeFrom(const ListMetricDescriptorsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListMetricDescriptorsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  int metric_descriptors_size() const;
  void clear_metric_descriptors();
  static const int kMetricDescriptorsFieldNumber = 1;
  const ::google::api::MetricDescriptor& metric_descriptors(int index) const;
  ::google::api::MetricDescriptor* mutable_metric_descriptors(int index);
  ::google::api::MetricDescriptor* add_metric_descriptors();
  ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >*
      mutable_metric_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >&
      metric_descriptors() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListMetricDescriptorsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor > metric_descriptors_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMetricDescriptorsResponseImpl();
};
// -------------------------------------------------------------------

class GetMetricDescriptorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.GetMetricDescriptorRequest) */ {
 public:
  GetMetricDescriptorRequest();
  virtual ~GetMetricDescriptorRequest();

  GetMetricDescriptorRequest(const GetMetricDescriptorRequest& from);

  inline GetMetricDescriptorRequest& operator=(const GetMetricDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMetricDescriptorRequest(GetMetricDescriptorRequest&& from) noexcept
    : GetMetricDescriptorRequest() {
    *this = ::std::move(from);
  }

  inline GetMetricDescriptorRequest& operator=(GetMetricDescriptorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMetricDescriptorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMetricDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetMetricDescriptorRequest*>(
               &_GetMetricDescriptorRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetMetricDescriptorRequest* other);
  friend void swap(GetMetricDescriptorRequest& a, GetMetricDescriptorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMetricDescriptorRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMetricDescriptorRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMetricDescriptorRequest& from);
  void MergeFrom(const GetMetricDescriptorRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMetricDescriptorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.GetMetricDescriptorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsGetMetricDescriptorRequestImpl();
};
// -------------------------------------------------------------------

class CreateMetricDescriptorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.CreateMetricDescriptorRequest) */ {
 public:
  CreateMetricDescriptorRequest();
  virtual ~CreateMetricDescriptorRequest();

  CreateMetricDescriptorRequest(const CreateMetricDescriptorRequest& from);

  inline CreateMetricDescriptorRequest& operator=(const CreateMetricDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMetricDescriptorRequest(CreateMetricDescriptorRequest&& from) noexcept
    : CreateMetricDescriptorRequest() {
    *this = ::std::move(from);
  }

  inline CreateMetricDescriptorRequest& operator=(CreateMetricDescriptorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMetricDescriptorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateMetricDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const CreateMetricDescriptorRequest*>(
               &_CreateMetricDescriptorRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CreateMetricDescriptorRequest* other);
  friend void swap(CreateMetricDescriptorRequest& a, CreateMetricDescriptorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMetricDescriptorRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateMetricDescriptorRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateMetricDescriptorRequest& from);
  void MergeFrom(const CreateMetricDescriptorRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateMetricDescriptorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.api.MetricDescriptor metric_descriptor = 2;
  bool has_metric_descriptor() const;
  void clear_metric_descriptor();
  static const int kMetricDescriptorFieldNumber = 2;
  const ::google::api::MetricDescriptor& metric_descriptor() const;
  ::google::api::MetricDescriptor* release_metric_descriptor();
  ::google::api::MetricDescriptor* mutable_metric_descriptor();
  void set_allocated_metric_descriptor(::google::api::MetricDescriptor* metric_descriptor);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.CreateMetricDescriptorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::api::MetricDescriptor* metric_descriptor_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateMetricDescriptorRequestImpl();
};
// -------------------------------------------------------------------

class DeleteMetricDescriptorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.DeleteMetricDescriptorRequest) */ {
 public:
  DeleteMetricDescriptorRequest();
  virtual ~DeleteMetricDescriptorRequest();

  DeleteMetricDescriptorRequest(const DeleteMetricDescriptorRequest& from);

  inline DeleteMetricDescriptorRequest& operator=(const DeleteMetricDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteMetricDescriptorRequest(DeleteMetricDescriptorRequest&& from) noexcept
    : DeleteMetricDescriptorRequest() {
    *this = ::std::move(from);
  }

  inline DeleteMetricDescriptorRequest& operator=(DeleteMetricDescriptorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteMetricDescriptorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteMetricDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteMetricDescriptorRequest*>(
               &_DeleteMetricDescriptorRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DeleteMetricDescriptorRequest* other);
  friend void swap(DeleteMetricDescriptorRequest& a, DeleteMetricDescriptorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteMetricDescriptorRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteMetricDescriptorRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteMetricDescriptorRequest& from);
  void MergeFrom(const DeleteMetricDescriptorRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteMetricDescriptorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.DeleteMetricDescriptorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsDeleteMetricDescriptorRequestImpl();
};
// -------------------------------------------------------------------

class ListTimeSeriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListTimeSeriesRequest) */ {
 public:
  ListTimeSeriesRequest();
  virtual ~ListTimeSeriesRequest();

  ListTimeSeriesRequest(const ListTimeSeriesRequest& from);

  inline ListTimeSeriesRequest& operator=(const ListTimeSeriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListTimeSeriesRequest(ListTimeSeriesRequest&& from) noexcept
    : ListTimeSeriesRequest() {
    *this = ::std::move(from);
  }

  inline ListTimeSeriesRequest& operator=(ListTimeSeriesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTimeSeriesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListTimeSeriesRequest* internal_default_instance() {
    return reinterpret_cast<const ListTimeSeriesRequest*>(
               &_ListTimeSeriesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ListTimeSeriesRequest* other);
  friend void swap(ListTimeSeriesRequest& a, ListTimeSeriesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListTimeSeriesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListTimeSeriesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListTimeSeriesRequest& from);
  void MergeFrom(const ListTimeSeriesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListTimeSeriesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ListTimeSeriesRequest_TimeSeriesView TimeSeriesView;
  static const TimeSeriesView FULL =
    ListTimeSeriesRequest_TimeSeriesView_FULL;
  static const TimeSeriesView HEADERS =
    ListTimeSeriesRequest_TimeSeriesView_HEADERS;
  static inline bool TimeSeriesView_IsValid(int value) {
    return ListTimeSeriesRequest_TimeSeriesView_IsValid(value);
  }
  static const TimeSeriesView TimeSeriesView_MIN =
    ListTimeSeriesRequest_TimeSeriesView_TimeSeriesView_MIN;
  static const TimeSeriesView TimeSeriesView_MAX =
    ListTimeSeriesRequest_TimeSeriesView_TimeSeriesView_MAX;
  static const int TimeSeriesView_ARRAYSIZE =
    ListTimeSeriesRequest_TimeSeriesView_TimeSeriesView_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TimeSeriesView_descriptor() {
    return ListTimeSeriesRequest_TimeSeriesView_descriptor();
  }
  static inline const ::std::string& TimeSeriesView_Name(TimeSeriesView value) {
    return ListTimeSeriesRequest_TimeSeriesView_Name(value);
  }
  static inline bool TimeSeriesView_Parse(const ::std::string& name,
      TimeSeriesView* value) {
    return ListTimeSeriesRequest_TimeSeriesView_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string order_by = 6;
  void clear_order_by();
  static const int kOrderByFieldNumber = 6;
  const ::std::string& order_by() const;
  void set_order_by(const ::std::string& value);
  #if LANG_CXX11
  void set_order_by(::std::string&& value);
  #endif
  void set_order_by(const char* value);
  void set_order_by(const char* value, size_t size);
  ::std::string* mutable_order_by();
  ::std::string* release_order_by();
  void set_allocated_order_by(::std::string* order_by);

  // string page_token = 9;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 9;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string name = 10;
  void clear_name();
  static const int kNameFieldNumber = 10;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.monitoring.v3.TimeInterval interval = 4;
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 4;
  const ::google::monitoring::v3::TimeInterval& interval() const;
  ::google::monitoring::v3::TimeInterval* release_interval();
  ::google::monitoring::v3::TimeInterval* mutable_interval();
  void set_allocated_interval(::google::monitoring::v3::TimeInterval* interval);

  // .google.monitoring.v3.Aggregation aggregation = 5;
  bool has_aggregation() const;
  void clear_aggregation();
  static const int kAggregationFieldNumber = 5;
  const ::google::monitoring::v3::Aggregation& aggregation() const;
  ::google::monitoring::v3::Aggregation* release_aggregation();
  ::google::monitoring::v3::Aggregation* mutable_aggregation();
  void set_allocated_aggregation(::google::monitoring::v3::Aggregation* aggregation);

  // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  void clear_view();
  static const int kViewFieldNumber = 7;
  ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView view() const;
  void set_view(::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView value);

  // int32 page_size = 8;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 8;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListTimeSeriesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr order_by_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::monitoring::v3::TimeInterval* interval_;
  ::google::monitoring::v3::Aggregation* aggregation_;
  int view_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListTimeSeriesRequestImpl();
};
// -------------------------------------------------------------------

class ListTimeSeriesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.ListTimeSeriesResponse) */ {
 public:
  ListTimeSeriesResponse();
  virtual ~ListTimeSeriesResponse();

  ListTimeSeriesResponse(const ListTimeSeriesResponse& from);

  inline ListTimeSeriesResponse& operator=(const ListTimeSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListTimeSeriesResponse(ListTimeSeriesResponse&& from) noexcept
    : ListTimeSeriesResponse() {
    *this = ::std::move(from);
  }

  inline ListTimeSeriesResponse& operator=(ListTimeSeriesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTimeSeriesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListTimeSeriesResponse* internal_default_instance() {
    return reinterpret_cast<const ListTimeSeriesResponse*>(
               &_ListTimeSeriesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ListTimeSeriesResponse* other);
  friend void swap(ListTimeSeriesResponse& a, ListTimeSeriesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListTimeSeriesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListTimeSeriesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListTimeSeriesResponse& from);
  void MergeFrom(const ListTimeSeriesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListTimeSeriesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  int time_series_size() const;
  void clear_time_series();
  static const int kTimeSeriesFieldNumber = 1;
  const ::google::monitoring::v3::TimeSeries& time_series(int index) const;
  ::google::monitoring::v3::TimeSeries* mutable_time_series(int index);
  ::google::monitoring::v3::TimeSeries* add_time_series();
  ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >*
      mutable_time_series();
  const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >&
      time_series() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.ListTimeSeriesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries > time_series_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListTimeSeriesResponseImpl();
};
// -------------------------------------------------------------------

class CreateTimeSeriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.CreateTimeSeriesRequest) */ {
 public:
  CreateTimeSeriesRequest();
  virtual ~CreateTimeSeriesRequest();

  CreateTimeSeriesRequest(const CreateTimeSeriesRequest& from);

  inline CreateTimeSeriesRequest& operator=(const CreateTimeSeriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateTimeSeriesRequest(CreateTimeSeriesRequest&& from) noexcept
    : CreateTimeSeriesRequest() {
    *this = ::std::move(from);
  }

  inline CreateTimeSeriesRequest& operator=(CreateTimeSeriesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTimeSeriesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateTimeSeriesRequest* internal_default_instance() {
    return reinterpret_cast<const CreateTimeSeriesRequest*>(
               &_CreateTimeSeriesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CreateTimeSeriesRequest* other);
  friend void swap(CreateTimeSeriesRequest& a, CreateTimeSeriesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateTimeSeriesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateTimeSeriesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateTimeSeriesRequest& from);
  void MergeFrom(const CreateTimeSeriesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateTimeSeriesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  int time_series_size() const;
  void clear_time_series();
  static const int kTimeSeriesFieldNumber = 2;
  const ::google::monitoring::v3::TimeSeries& time_series(int index) const;
  ::google::monitoring::v3::TimeSeries* mutable_time_series(int index);
  ::google::monitoring::v3::TimeSeries* add_time_series();
  ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >*
      mutable_time_series();
  const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >&
      time_series() const;

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.CreateTimeSeriesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries > time_series_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateTimeSeriesRequestImpl();
};
// -------------------------------------------------------------------

class CreateTimeSeriesError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.monitoring.v3.CreateTimeSeriesError) */ {
 public:
  CreateTimeSeriesError();
  virtual ~CreateTimeSeriesError();

  CreateTimeSeriesError(const CreateTimeSeriesError& from);

  inline CreateTimeSeriesError& operator=(const CreateTimeSeriesError& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateTimeSeriesError(CreateTimeSeriesError&& from) noexcept
    : CreateTimeSeriesError() {
    *this = ::std::move(from);
  }

  inline CreateTimeSeriesError& operator=(CreateTimeSeriesError&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTimeSeriesError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateTimeSeriesError* internal_default_instance() {
    return reinterpret_cast<const CreateTimeSeriesError*>(
               &_CreateTimeSeriesError_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CreateTimeSeriesError* other);
  friend void swap(CreateTimeSeriesError& a, CreateTimeSeriesError& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateTimeSeriesError* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateTimeSeriesError* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateTimeSeriesError& from);
  void MergeFrom(const CreateTimeSeriesError& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateTimeSeriesError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.monitoring.v3.TimeSeries time_series = 1;
  bool has_time_series() const;
  void clear_time_series();
  static const int kTimeSeriesFieldNumber = 1;
  const ::google::monitoring::v3::TimeSeries& time_series() const;
  ::google::monitoring::v3::TimeSeries* release_time_series();
  ::google::monitoring::v3::TimeSeries* mutable_time_series();
  void set_allocated_time_series(::google::monitoring::v3::TimeSeries* time_series);

  // .google.rpc.Status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* release_status();
  ::google::rpc::Status* mutable_status();
  void set_allocated_status(::google::rpc::Status* status);

  // @@protoc_insertion_point(class_scope:google.monitoring.v3.CreateTimeSeriesError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::monitoring::v3::TimeSeries* time_series_;
  ::google::rpc::Status* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::TableStruct;
  friend void ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateTimeSeriesErrorImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListMonitoredResourceDescriptorsRequest

// string name = 5;
inline void ListMonitoredResourceDescriptorsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMonitoredResourceDescriptorsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
  return name_.GetNoArena();
}
inline void ListMonitoredResourceDescriptorsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}
#if LANG_CXX11
inline void ListMonitoredResourceDescriptorsRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}
#endif
inline void ListMonitoredResourceDescriptorsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}
inline void ListMonitoredResourceDescriptorsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMonitoredResourceDescriptorsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}

// string filter = 2;
inline void ListMonitoredResourceDescriptorsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMonitoredResourceDescriptorsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListMonitoredResourceDescriptorsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}
#if LANG_CXX11
inline void ListMonitoredResourceDescriptorsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}
#endif
inline void ListMonitoredResourceDescriptorsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}
inline void ListMonitoredResourceDescriptorsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMonitoredResourceDescriptorsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}

// int32 page_size = 3;
inline void ListMonitoredResourceDescriptorsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListMonitoredResourceDescriptorsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_size)
  return page_size_;
}
inline void ListMonitoredResourceDescriptorsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_size)
}

// string page_token = 4;
inline void ListMonitoredResourceDescriptorsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMonitoredResourceDescriptorsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListMonitoredResourceDescriptorsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}
#if LANG_CXX11
inline void ListMonitoredResourceDescriptorsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}
#endif
inline void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}
inline void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMonitoredResourceDescriptorsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}

// -------------------------------------------------------------------

// ListMonitoredResourceDescriptorsResponse

// repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
inline int ListMonitoredResourceDescriptorsResponse::resource_descriptors_size() const {
  return resource_descriptors_.size();
}
inline const ::google::api::MonitoredResourceDescriptor& ListMonitoredResourceDescriptorsResponse::resource_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Get(index);
}
inline ::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Mutable(index);
}
inline ::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::add_resource_descriptors() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return &resource_descriptors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
ListMonitoredResourceDescriptorsResponse::resource_descriptors() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_;
}

// string next_page_token = 2;
inline void ListMonitoredResourceDescriptorsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMonitoredResourceDescriptorsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListMonitoredResourceDescriptorsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
#endif
inline void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
inline void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
inline ::std::string* ListMonitoredResourceDescriptorsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMonitoredResourceDescriptorsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMonitoredResourceDescriptorsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetMonitoredResourceDescriptorRequest

// string name = 3;
inline void GetMonitoredResourceDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMonitoredResourceDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
  return name_.GetNoArena();
}
inline void GetMonitoredResourceDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}
#if LANG_CXX11
inline void GetMonitoredResourceDescriptorRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}
#endif
inline void GetMonitoredResourceDescriptorRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}
inline void GetMonitoredResourceDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}
inline ::std::string* GetMonitoredResourceDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMonitoredResourceDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMonitoredResourceDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}

// -------------------------------------------------------------------

// ListMetricDescriptorsRequest

// string name = 5;
inline void ListMetricDescriptorsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMetricDescriptorsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.name)
  return name_.GetNoArena();
}
inline void ListMetricDescriptorsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}
#if LANG_CXX11
inline void ListMetricDescriptorsRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}
#endif
inline void ListMetricDescriptorsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}
inline void ListMetricDescriptorsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}
inline ::std::string* ListMetricDescriptorsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMetricDescriptorsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMetricDescriptorsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}

// string filter = 2;
inline void ListMetricDescriptorsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMetricDescriptorsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListMetricDescriptorsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}
#if LANG_CXX11
inline void ListMetricDescriptorsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}
#endif
inline void ListMetricDescriptorsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}
inline void ListMetricDescriptorsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}
inline ::std::string* ListMetricDescriptorsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMetricDescriptorsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMetricDescriptorsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}

// int32 page_size = 3;
inline void ListMetricDescriptorsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListMetricDescriptorsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.page_size)
  return page_size_;
}
inline void ListMetricDescriptorsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.page_size)
}

// string page_token = 4;
inline void ListMetricDescriptorsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMetricDescriptorsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListMetricDescriptorsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}
#if LANG_CXX11
inline void ListMetricDescriptorsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}
#endif
inline void ListMetricDescriptorsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}
inline void ListMetricDescriptorsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}
inline ::std::string* ListMetricDescriptorsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMetricDescriptorsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMetricDescriptorsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}

// -------------------------------------------------------------------

// ListMetricDescriptorsResponse

// repeated .google.api.MetricDescriptor metric_descriptors = 1;
inline int ListMetricDescriptorsResponse::metric_descriptors_size() const {
  return metric_descriptors_.size();
}
inline const ::google::api::MetricDescriptor& ListMetricDescriptorsResponse::metric_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_.Get(index);
}
inline ::google::api::MetricDescriptor* ListMetricDescriptorsResponse::mutable_metric_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_.Mutable(index);
}
inline ::google::api::MetricDescriptor* ListMetricDescriptorsResponse::add_metric_descriptors() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >*
ListMetricDescriptorsResponse::mutable_metric_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return &metric_descriptors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >&
ListMetricDescriptorsResponse::metric_descriptors() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_;
}

// string next_page_token = 2;
inline void ListMetricDescriptorsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListMetricDescriptorsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListMetricDescriptorsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListMetricDescriptorsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}
#endif
inline void ListMetricDescriptorsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}
inline void ListMetricDescriptorsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}
inline ::std::string* ListMetricDescriptorsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListMetricDescriptorsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListMetricDescriptorsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetMetricDescriptorRequest

// string name = 3;
inline void GetMetricDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMetricDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.GetMetricDescriptorRequest.name)
  return name_.GetNoArena();
}
inline void GetMetricDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.GetMetricDescriptorRequest.name)
}
#if LANG_CXX11
inline void GetMetricDescriptorRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.GetMetricDescriptorRequest.name)
}
#endif
inline void GetMetricDescriptorRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.GetMetricDescriptorRequest.name)
}
inline void GetMetricDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.GetMetricDescriptorRequest.name)
}
inline ::std::string* GetMetricDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.GetMetricDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMetricDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.GetMetricDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMetricDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.GetMetricDescriptorRequest.name)
}

// -------------------------------------------------------------------

// CreateMetricDescriptorRequest

// string name = 3;
inline void CreateMetricDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateMetricDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateMetricDescriptorRequest.name)
  return name_.GetNoArena();
}
inline void CreateMetricDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}
#if LANG_CXX11
inline void CreateMetricDescriptorRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}
#endif
inline void CreateMetricDescriptorRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}
inline void CreateMetricDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}
inline ::std::string* CreateMetricDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateMetricDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateMetricDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateMetricDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateMetricDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}

// .google.api.MetricDescriptor metric_descriptor = 2;
inline bool CreateMetricDescriptorRequest::has_metric_descriptor() const {
  return this != internal_default_instance() && metric_descriptor_ != NULL;
}
inline const ::google::api::MetricDescriptor& CreateMetricDescriptorRequest::metric_descriptor() const {
  const ::google::api::MetricDescriptor* p = metric_descriptor_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::MetricDescriptor*>(
      &::google::api::_MetricDescriptor_default_instance_);
}
inline ::google::api::MetricDescriptor* CreateMetricDescriptorRequest::release_metric_descriptor() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
  
  ::google::api::MetricDescriptor* temp = metric_descriptor_;
  metric_descriptor_ = NULL;
  return temp;
}
inline ::google::api::MetricDescriptor* CreateMetricDescriptorRequest::mutable_metric_descriptor() {
  
  if (metric_descriptor_ == NULL) {
    metric_descriptor_ = new ::google::api::MetricDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
  return metric_descriptor_;
}
inline void CreateMetricDescriptorRequest::set_allocated_metric_descriptor(::google::api::MetricDescriptor* metric_descriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metric_descriptor_);
  }
  if (metric_descriptor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metric_descriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metric_descriptor, submessage_arena);
    }
    
  } else {
    
  }
  metric_descriptor_ = metric_descriptor;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
}

// -------------------------------------------------------------------

// DeleteMetricDescriptorRequest

// string name = 3;
inline void DeleteMetricDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteMetricDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
  return name_.GetNoArena();
}
inline void DeleteMetricDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}
#if LANG_CXX11
inline void DeleteMetricDescriptorRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}
#endif
inline void DeleteMetricDescriptorRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}
inline void DeleteMetricDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}
inline ::std::string* DeleteMetricDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteMetricDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteMetricDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}

// -------------------------------------------------------------------

// ListTimeSeriesRequest

// string name = 10;
inline void ListTimeSeriesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTimeSeriesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.name)
  return name_.GetNoArena();
}
inline void ListTimeSeriesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.name)
}
#if LANG_CXX11
inline void ListTimeSeriesRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListTimeSeriesRequest.name)
}
#endif
inline void ListTimeSeriesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.name)
}
inline void ListTimeSeriesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.name)
}
inline ::std::string* ListTimeSeriesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTimeSeriesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTimeSeriesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.name)
}

// string filter = 2;
inline void ListTimeSeriesRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTimeSeriesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.filter)
  return filter_.GetNoArena();
}
inline void ListTimeSeriesRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.filter)
}
#if LANG_CXX11
inline void ListTimeSeriesRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListTimeSeriesRequest.filter)
}
#endif
inline void ListTimeSeriesRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.filter)
}
inline void ListTimeSeriesRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.filter)
}
inline ::std::string* ListTimeSeriesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTimeSeriesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTimeSeriesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.filter)
}

// .google.monitoring.v3.TimeInterval interval = 4;
inline bool ListTimeSeriesRequest::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::google::monitoring::v3::TimeInterval& ListTimeSeriesRequest::interval() const {
  const ::google::monitoring::v3::TimeInterval* p = interval_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::google::monitoring::v3::TimeInterval*>(
      &::google::monitoring::v3::_TimeInterval_default_instance_);
}
inline ::google::monitoring::v3::TimeInterval* ListTimeSeriesRequest::release_interval() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.interval)
  
  ::google::monitoring::v3::TimeInterval* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::google::monitoring::v3::TimeInterval* ListTimeSeriesRequest::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::monitoring::v3::TimeInterval;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.interval)
  return interval_;
}
inline void ListTimeSeriesRequest::set_allocated_interval(::google::monitoring::v3::TimeInterval* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.interval)
}

// .google.monitoring.v3.Aggregation aggregation = 5;
inline bool ListTimeSeriesRequest::has_aggregation() const {
  return this != internal_default_instance() && aggregation_ != NULL;
}
inline const ::google::monitoring::v3::Aggregation& ListTimeSeriesRequest::aggregation() const {
  const ::google::monitoring::v3::Aggregation* p = aggregation_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::monitoring::v3::Aggregation*>(
      &::google::monitoring::v3::_Aggregation_default_instance_);
}
inline ::google::monitoring::v3::Aggregation* ListTimeSeriesRequest::release_aggregation() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
  
  ::google::monitoring::v3::Aggregation* temp = aggregation_;
  aggregation_ = NULL;
  return temp;
}
inline ::google::monitoring::v3::Aggregation* ListTimeSeriesRequest::mutable_aggregation() {
  
  if (aggregation_ == NULL) {
    aggregation_ = new ::google::monitoring::v3::Aggregation;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
  return aggregation_;
}
inline void ListTimeSeriesRequest::set_allocated_aggregation(::google::monitoring::v3::Aggregation* aggregation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(aggregation_);
  }
  if (aggregation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aggregation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aggregation, submessage_arena);
    }
    
  } else {
    
  }
  aggregation_ = aggregation;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
}

// string order_by = 6;
inline void ListTimeSeriesRequest::clear_order_by() {
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTimeSeriesRequest::order_by() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.order_by)
  return order_by_.GetNoArena();
}
inline void ListTimeSeriesRequest::set_order_by(const ::std::string& value) {
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}
#if LANG_CXX11
inline void ListTimeSeriesRequest::set_order_by(::std::string&& value) {
  
  order_by_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}
#endif
inline void ListTimeSeriesRequest::set_order_by(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}
inline void ListTimeSeriesRequest::set_order_by(const char* value, size_t size) {
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}
inline ::std::string* ListTimeSeriesRequest::mutable_order_by() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.order_by)
  return order_by_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTimeSeriesRequest::release_order_by() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.order_by)
  
  return order_by_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTimeSeriesRequest::set_allocated_order_by(::std::string* order_by) {
  if (order_by != NULL) {
    
  } else {
    
  }
  order_by_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_by);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}

// .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
inline void ListTimeSeriesRequest::clear_view() {
  view_ = 0;
}
inline ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::view() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.view)
  return static_cast< ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView >(view_);
}
inline void ListTimeSeriesRequest::set_view(::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.view)
}

// int32 page_size = 8;
inline void ListTimeSeriesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListTimeSeriesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.page_size)
  return page_size_;
}
inline void ListTimeSeriesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.page_size)
}

// string page_token = 9;
inline void ListTimeSeriesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTimeSeriesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListTimeSeriesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}
#if LANG_CXX11
inline void ListTimeSeriesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}
#endif
inline void ListTimeSeriesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}
inline void ListTimeSeriesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}
inline ::std::string* ListTimeSeriesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTimeSeriesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTimeSeriesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}

// -------------------------------------------------------------------

// ListTimeSeriesResponse

// repeated .google.monitoring.v3.TimeSeries time_series = 1;
inline int ListTimeSeriesResponse::time_series_size() const {
  return time_series_.size();
}
inline const ::google::monitoring::v3::TimeSeries& ListTimeSeriesResponse::time_series(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_.Get(index);
}
inline ::google::monitoring::v3::TimeSeries* ListTimeSeriesResponse::mutable_time_series(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_.Mutable(index);
}
inline ::google::monitoring::v3::TimeSeries* ListTimeSeriesResponse::add_time_series() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >*
ListTimeSeriesResponse::mutable_time_series() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return &time_series_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >&
ListTimeSeriesResponse::time_series() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_;
}

// string next_page_token = 2;
inline void ListTimeSeriesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTimeSeriesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListTimeSeriesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListTimeSeriesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}
#endif
inline void ListTimeSeriesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}
inline void ListTimeSeriesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}
inline ::std::string* ListTimeSeriesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTimeSeriesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTimeSeriesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}

// -------------------------------------------------------------------

// CreateTimeSeriesRequest

// string name = 3;
inline void CreateTimeSeriesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateTimeSeriesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesRequest.name)
  return name_.GetNoArena();
}
inline void CreateTimeSeriesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateTimeSeriesRequest.name)
}
#if LANG_CXX11
inline void CreateTimeSeriesRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.v3.CreateTimeSeriesRequest.name)
}
#endif
inline void CreateTimeSeriesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.CreateTimeSeriesRequest.name)
}
inline void CreateTimeSeriesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.CreateTimeSeriesRequest.name)
}
inline ::std::string* CreateTimeSeriesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTimeSeriesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateTimeSeriesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTimeSeriesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateTimeSeriesRequest.name)
}

// repeated .google.monitoring.v3.TimeSeries time_series = 2;
inline int CreateTimeSeriesRequest::time_series_size() const {
  return time_series_.size();
}
inline const ::google::monitoring::v3::TimeSeries& CreateTimeSeriesRequest::time_series(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_.Get(index);
}
inline ::google::monitoring::v3::TimeSeries* CreateTimeSeriesRequest::mutable_time_series(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_.Mutable(index);
}
inline ::google::monitoring::v3::TimeSeries* CreateTimeSeriesRequest::add_time_series() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >*
CreateTimeSeriesRequest::mutable_time_series() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return &time_series_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >&
CreateTimeSeriesRequest::time_series() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_;
}

// -------------------------------------------------------------------

// CreateTimeSeriesError

// .google.monitoring.v3.TimeSeries time_series = 1;
inline bool CreateTimeSeriesError::has_time_series() const {
  return this != internal_default_instance() && time_series_ != NULL;
}
inline const ::google::monitoring::v3::TimeSeries& CreateTimeSeriesError::time_series() const {
  const ::google::monitoring::v3::TimeSeries* p = time_series_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesError.time_series)
  return p != NULL ? *p : *reinterpret_cast<const ::google::monitoring::v3::TimeSeries*>(
      &::google::monitoring::v3::_TimeSeries_default_instance_);
}
inline ::google::monitoring::v3::TimeSeries* CreateTimeSeriesError::release_time_series() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateTimeSeriesError.time_series)
  
  ::google::monitoring::v3::TimeSeries* temp = time_series_;
  time_series_ = NULL;
  return temp;
}
inline ::google::monitoring::v3::TimeSeries* CreateTimeSeriesError::mutable_time_series() {
  
  if (time_series_ == NULL) {
    time_series_ = new ::google::monitoring::v3::TimeSeries;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesError.time_series)
  return time_series_;
}
inline void CreateTimeSeriesError::set_allocated_time_series(::google::monitoring::v3::TimeSeries* time_series) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_series_);
  }
  if (time_series) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_series = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_series, submessage_arena);
    }
    
  } else {
    
  }
  time_series_ = time_series;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateTimeSeriesError.time_series)
}

// .google.rpc.Status status = 2;
inline bool CreateTimeSeriesError::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::rpc::Status& CreateTimeSeriesError::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesError.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* CreateTimeSeriesError::release_status() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateTimeSeriesError.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* CreateTimeSeriesError::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesError.status)
  return status_;
}
inline void CreateTimeSeriesError::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateTimeSeriesError.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v3
}  // namespace monitoring
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView>() {
  return ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto__INCLUDED
