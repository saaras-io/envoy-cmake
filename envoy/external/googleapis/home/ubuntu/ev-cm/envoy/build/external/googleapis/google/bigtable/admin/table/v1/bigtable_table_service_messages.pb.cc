// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/table/v1/bigtable_table_service_messages.proto

#include "google/bigtable/admin/table/v1/bigtable_table_service_messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace bigtable {
namespace admin {
namespace table {
namespace v1 {
class CreateTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest>
      _instance;
} _CreateTableRequest_default_instance_;
class ListTablesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTablesRequest>
      _instance;
} _ListTablesRequest_default_instance_;
class ListTablesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTablesResponse>
      _instance;
} _ListTablesResponse_default_instance_;
class GetTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableRequest>
      _instance;
} _GetTableRequest_default_instance_;
class DeleteTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTableRequest>
      _instance;
} _DeleteTableRequest_default_instance_;
class RenameTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RenameTableRequest>
      _instance;
} _RenameTableRequest_default_instance_;
class CreateColumnFamilyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateColumnFamilyRequest>
      _instance;
} _CreateColumnFamilyRequest_default_instance_;
class DeleteColumnFamilyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteColumnFamilyRequest>
      _instance;
} _DeleteColumnFamilyRequest_default_instance_;
class BulkDeleteRowsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkDeleteRowsRequest>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr row_key_prefix_;
  bool delete_all_data_from_table_;
} _BulkDeleteRowsRequest_default_instance_;
}  // namespace v1
}  // namespace table
}  // namespace admin
}  // namespace bigtable
}  // namespace google
namespace protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto {
void InitDefaultsCreateTableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fdata_2eproto::InitDefaultsTable();
  {
    void* ptr = &::google::bigtable::admin::table::v1::_CreateTableRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::CreateTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::CreateTableRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateTableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateTableRequestImpl);
}

void InitDefaultsListTablesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::table::v1::_ListTablesRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::ListTablesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::ListTablesRequest::InitAsDefaultInstance();
}

void InitDefaultsListTablesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListTablesRequestImpl);
}

void InitDefaultsListTablesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fdata_2eproto::InitDefaultsTable();
  {
    void* ptr = &::google::bigtable::admin::table::v1::_ListTablesResponse_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::ListTablesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::ListTablesResponse::InitAsDefaultInstance();
}

void InitDefaultsListTablesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListTablesResponseImpl);
}

void InitDefaultsGetTableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::table::v1::_GetTableRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::GetTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::GetTableRequest::InitAsDefaultInstance();
}

void InitDefaultsGetTableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetTableRequestImpl);
}

void InitDefaultsDeleteTableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::table::v1::_DeleteTableRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::DeleteTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::DeleteTableRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteTableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteTableRequestImpl);
}

void InitDefaultsRenameTableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::table::v1::_RenameTableRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::RenameTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::RenameTableRequest::InitAsDefaultInstance();
}

void InitDefaultsRenameTableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRenameTableRequestImpl);
}

void InitDefaultsCreateColumnFamilyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fdata_2eproto::InitDefaultsColumnFamily();
  {
    void* ptr = &::google::bigtable::admin::table::v1::_CreateColumnFamilyRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::CreateColumnFamilyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::CreateColumnFamilyRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateColumnFamilyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateColumnFamilyRequestImpl);
}

void InitDefaultsDeleteColumnFamilyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::table::v1::_DeleteColumnFamilyRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteColumnFamilyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteColumnFamilyRequestImpl);
}

void InitDefaultsBulkDeleteRowsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::table::v1::_BulkDeleteRowsRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::table::v1::BulkDeleteRowsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::table::v1::BulkDeleteRowsRequest::InitAsDefaultInstance();
}

void InitDefaultsBulkDeleteRowsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBulkDeleteRowsRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateTableRequest, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateTableRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateTableRequest, initial_split_keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::ListTablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::ListTablesRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::ListTablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::ListTablesResponse, tables_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::GetTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::GetTableRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::DeleteTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::DeleteTableRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::RenameTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::RenameTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::RenameTableRequest, new_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateColumnFamilyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateColumnFamilyRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateColumnFamilyRequest, column_family_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::CreateColumnFamilyRequest, column_family_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::BulkDeleteRowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::BulkDeleteRowsRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::BulkDeleteRowsRequest, table_name_),
  offsetof(::google::bigtable::admin::table::v1::BulkDeleteRowsRequestDefaultTypeInternal, row_key_prefix_),
  offsetof(::google::bigtable::admin::table::v1::BulkDeleteRowsRequestDefaultTypeInternal, delete_all_data_from_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::table::v1::BulkDeleteRowsRequest, target_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::bigtable::admin::table::v1::CreateTableRequest)},
  { 9, -1, sizeof(::google::bigtable::admin::table::v1::ListTablesRequest)},
  { 15, -1, sizeof(::google::bigtable::admin::table::v1::ListTablesResponse)},
  { 21, -1, sizeof(::google::bigtable::admin::table::v1::GetTableRequest)},
  { 27, -1, sizeof(::google::bigtable::admin::table::v1::DeleteTableRequest)},
  { 33, -1, sizeof(::google::bigtable::admin::table::v1::RenameTableRequest)},
  { 40, -1, sizeof(::google::bigtable::admin::table::v1::CreateColumnFamilyRequest)},
  { 48, -1, sizeof(::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest)},
  { 54, -1, sizeof(::google::bigtable::admin::table::v1::BulkDeleteRowsRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_CreateTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_ListTablesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_ListTablesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_GetTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_DeleteTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_RenameTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_CreateColumnFamilyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_DeleteColumnFamilyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::table::v1::_BulkDeleteRowsRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/bigtable/admin/table/v1/bigtable_table_service_messages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nDgoogle/bigtable/admin/table/v1/bigtabl"
      "e_table_service_messages.proto\022\036google.b"
      "igtable.admin.table.v1\0328google/bigtable/"
      "admin/table/v1/bigtable_table_data.proto"
      "\"\206\001\n\022CreateTableRequest\022\014\n\004name\030\001 \001(\t\022\020\n"
      "\010table_id\030\002 \001(\t\0224\n\005table\030\003 \001(\0132%.google."
      "bigtable.admin.table.v1.Table\022\032\n\022initial"
      "_split_keys\030\004 \003(\t\"!\n\021ListTablesRequest\022\014"
      "\n\004name\030\001 \001(\t\"K\n\022ListTablesResponse\0225\n\006ta"
      "bles\030\001 \003(\0132%.google.bigtable.admin.table"
      ".v1.Table\"\037\n\017GetTableRequest\022\014\n\004name\030\001 \001"
      "(\t\"\"\n\022DeleteTableRequest\022\014\n\004name\030\001 \001(\t\"2"
      "\n\022RenameTableRequest\022\014\n\004name\030\001 \001(\t\022\016\n\006ne"
      "w_id\030\002 \001(\t\"\210\001\n\031CreateColumnFamilyRequest"
      "\022\014\n\004name\030\001 \001(\t\022\030\n\020column_family_id\030\002 \001(\t"
      "\022C\n\rcolumn_family\030\003 \001(\0132,.google.bigtabl"
      "e.admin.table.v1.ColumnFamily\")\n\031DeleteC"
      "olumnFamilyRequest\022\014\n\004name\030\001 \001(\t\"u\n\025Bulk"
      "DeleteRowsRequest\022\022\n\ntable_name\030\001 \001(\t\022\030\n"
      "\016row_key_prefix\030\002 \001(\014H\000\022$\n\032delete_all_da"
      "ta_from_table\030\003 \001(\010H\000B\010\n\006targetB\216\001\n\"com."
      "google.bigtable.admin.table.v1B!Bigtable"
      "TableServiceMessagesProtoP\001ZCgoogle.gola"
      "ng.org/genproto/googleapis/bigtable/admi"
      "n/table/v1;tableb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 984);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/admin/table/v1/bigtable_table_service_messages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fdata_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto
namespace google {
namespace bigtable {
namespace admin {
namespace table {
namespace v1 {

// ===================================================================

void CreateTableRequest::InitAsDefaultInstance() {
  ::google::bigtable::admin::table::v1::_CreateTableRequest_default_instance_._instance.get_mutable()->table_ = const_cast< ::google::bigtable::admin::table::v1::Table*>(
      ::google::bigtable::admin::table::v1::Table::internal_default_instance());
}
void CreateTableRequest::clear_table() {
  if (GetArenaNoVirtual() == NULL && table_ != NULL) {
    delete table_;
  }
  table_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest::kNameFieldNumber;
const int CreateTableRequest::kTableIdFieldNumber;
const int CreateTableRequest::kTableFieldNumber;
const int CreateTableRequest::kInitialSplitKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest::CreateTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsCreateTableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.CreateTableRequest)
}
CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      initial_split_keys_(from.initial_split_keys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  table_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_id().size() > 0) {
    table_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_id_);
  }
  if (from.has_table()) {
    table_ = new ::google::bigtable::admin::table::v1::Table(*from.table_);
  } else {
    table_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.CreateTableRequest)
}

void CreateTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_ = NULL;
  _cached_size_ = 0;
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.CreateTableRequest)
  SharedDtor();
}

void CreateTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_;
}

void CreateTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTableRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableRequest& CreateTableRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsCreateTableRequest();
  return *internal_default_instance();
}

CreateTableRequest* CreateTableRequest::New(::google::protobuf::Arena* arena) const {
  CreateTableRequest* n = new CreateTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initial_split_keys_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && table_ != NULL) {
    delete table_;
  }
  table_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.CreateTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.CreateTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_id().data(), static_cast<int>(this->table_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.CreateTableRequest.table_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.table.v1.Table table = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string initial_split_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_initial_split_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->initial_split_keys(this->initial_split_keys_size() - 1).data(),
            static_cast<int>(this->initial_split_keys(this->initial_split_keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.CreateTableRequest.initial_split_keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.CreateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.CreateTableRequest)
  return false;
#undef DO_
}

void CreateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string table_id = 2;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), static_cast<int>(this->table_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateTableRequest.table_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table_id(), output);
  }

  // .google.bigtable.admin.table.v1.Table table = 3;
  if (this->has_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->table_, output);
  }

  // repeated string initial_split_keys = 4;
  for (int i = 0, n = this->initial_split_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_split_keys(i).data(), static_cast<int>(this->initial_split_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateTableRequest.initial_split_keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->initial_split_keys(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.CreateTableRequest)
}

::google::protobuf::uint8* CreateTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string table_id = 2;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), static_cast<int>(this->table_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateTableRequest.table_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table_id(), target);
  }

  // .google.bigtable.admin.table.v1.Table table = 3;
  if (this->has_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->table_, deterministic, target);
  }

  // repeated string initial_split_keys = 4;
  for (int i = 0, n = this->initial_split_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_split_keys(i).data(), static_cast<int>(this->initial_split_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateTableRequest.initial_split_keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->initial_split_keys(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.CreateTableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string initial_split_keys = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->initial_split_keys_size());
  for (int i = 0, n = this->initial_split_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->initial_split_keys(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string table_id = 2;
  if (this->table_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_id());
  }

  // .google.bigtable.admin.table.v1.Table table = 3;
  if (this->has_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->table_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.CreateTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.CreateTableRequest)
    MergeFrom(*source);
  }
}

void CreateTableRequest::MergeFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initial_split_keys_.MergeFrom(from.initial_split_keys_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.table_id().size() > 0) {

    table_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_id_);
  }
  if (from.has_table()) {
    mutable_table()->::google::bigtable::admin::table::v1::Table::MergeFrom(from.table());
  }
}

void CreateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  return true;
}

void CreateTableRequest::Swap(CreateTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  using std::swap;
  initial_split_keys_.InternalSwap(&other->initial_split_keys_);
  name_.Swap(&other->name_);
  table_id_.Swap(&other->table_id_);
  swap(table_, other->table_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTablesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTablesRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTablesRequest::ListTablesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsListTablesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.ListTablesRequest)
}
ListTablesRequest::ListTablesRequest(const ListTablesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.ListTablesRequest)
}

void ListTablesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTablesRequest::~ListTablesRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.ListTablesRequest)
  SharedDtor();
}

void ListTablesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTablesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTablesRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTablesRequest& ListTablesRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsListTablesRequest();
  return *internal_default_instance();
}

ListTablesRequest* ListTablesRequest::New(::google::protobuf::Arena* arena) const {
  ListTablesRequest* n = new ListTablesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.ListTablesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTablesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.ListTablesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.ListTablesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.ListTablesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.ListTablesRequest)
  return false;
#undef DO_
}

void ListTablesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.ListTablesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.ListTablesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.ListTablesRequest)
}

::google::protobuf::uint8* ListTablesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.ListTablesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.ListTablesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.ListTablesRequest)
  return target;
}

size_t ListTablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.ListTablesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTablesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.ListTablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTablesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTablesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.ListTablesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.ListTablesRequest)
    MergeFrom(*source);
  }
}

void ListTablesRequest::MergeFrom(const ListTablesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.ListTablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ListTablesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.ListTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTablesRequest::CopyFrom(const ListTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.ListTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTablesRequest::IsInitialized() const {
  return true;
}

void ListTablesRequest::Swap(ListTablesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTablesRequest::InternalSwap(ListTablesRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTablesRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTablesResponse::InitAsDefaultInstance() {
}
void ListTablesResponse::clear_tables() {
  tables_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTablesResponse::kTablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTablesResponse::ListTablesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsListTablesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.ListTablesResponse)
}
ListTablesResponse::ListTablesResponse(const ListTablesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tables_(from.tables_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.ListTablesResponse)
}

void ListTablesResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListTablesResponse::~ListTablesResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.ListTablesResponse)
  SharedDtor();
}

void ListTablesResponse::SharedDtor() {
}

void ListTablesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTablesResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTablesResponse& ListTablesResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsListTablesResponse();
  return *internal_default_instance();
}

ListTablesResponse* ListTablesResponse::New(::google::protobuf::Arena* arena) const {
  ListTablesResponse* n = new ListTablesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.ListTablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  _internal_metadata_.Clear();
}

bool ListTablesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.ListTablesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.admin.table.v1.Table tables = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.ListTablesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.ListTablesResponse)
  return false;
#undef DO_
}

void ListTablesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.ListTablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.table.v1.Table tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.ListTablesResponse)
}

::google::protobuf::uint8* ListTablesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.ListTablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.table.v1.Table tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tables(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.ListTablesResponse)
  return target;
}

size_t ListTablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.ListTablesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.admin.table.v1.Table tables = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tables(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTablesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.ListTablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTablesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTablesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.ListTablesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.ListTablesResponse)
    MergeFrom(*source);
  }
}

void ListTablesResponse::MergeFrom(const ListTablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.ListTablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
}

void ListTablesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.ListTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTablesResponse::CopyFrom(const ListTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.ListTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTablesResponse::IsInitialized() const {
  return true;
}

void ListTablesResponse::Swap(ListTablesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTablesResponse::InternalSwap(ListTablesResponse* other) {
  using std::swap;
  tables_.InternalSwap(&other->tables_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTablesResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableRequest::GetTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsGetTableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.GetTableRequest)
}
GetTableRequest::GetTableRequest(const GetTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.GetTableRequest)
}

void GetTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetTableRequest::~GetTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.GetTableRequest)
  SharedDtor();
}

void GetTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTableRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableRequest& GetTableRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsGetTableRequest();
  return *internal_default_instance();
}

GetTableRequest* GetTableRequest::New(::google::protobuf::Arena* arena) const {
  GetTableRequest* n = new GetTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.GetTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.GetTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.GetTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.GetTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.GetTableRequest)
  return false;
#undef DO_
}

void GetTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.GetTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.GetTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.GetTableRequest)
}

::google::protobuf::uint8* GetTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.GetTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.GetTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.GetTableRequest)
  return target;
}

size_t GetTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.GetTableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.GetTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.GetTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.GetTableRequest)
    MergeFrom(*source);
  }
}

void GetTableRequest::MergeFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.GetTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.GetTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableRequest::CopyFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.GetTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableRequest::IsInitialized() const {
  return true;
}

void GetTableRequest::Swap(GetTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableRequest::InternalSwap(GetTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTableRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTableRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTableRequest::DeleteTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsDeleteTableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.DeleteTableRequest)
}
DeleteTableRequest::DeleteTableRequest(const DeleteTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.DeleteTableRequest)
}

void DeleteTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteTableRequest::~DeleteTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.DeleteTableRequest)
  SharedDtor();
}

void DeleteTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteTableRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteTableRequest& DeleteTableRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsDeleteTableRequest();
  return *internal_default_instance();
}

DeleteTableRequest* DeleteTableRequest::New(::google::protobuf::Arena* arena) const {
  DeleteTableRequest* n = new DeleteTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.DeleteTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.DeleteTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.DeleteTableRequest)
  return false;
#undef DO_
}

void DeleteTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.DeleteTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.DeleteTableRequest)
}

::google::protobuf::uint8* DeleteTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.DeleteTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.DeleteTableRequest)
  return target;
}

size_t DeleteTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.DeleteTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.DeleteTableRequest)
    MergeFrom(*source);
  }
}

void DeleteTableRequest::MergeFrom(const DeleteTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTableRequest::CopyFrom(const DeleteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.DeleteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTableRequest::IsInitialized() const {
  return true;
}

void DeleteTableRequest::Swap(DeleteTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTableRequest::InternalSwap(DeleteTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteTableRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RenameTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameTableRequest::kNameFieldNumber;
const int RenameTableRequest::kNewIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameTableRequest::RenameTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsRenameTableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.RenameTableRequest)
}
RenameTableRequest::RenameTableRequest(const RenameTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  new_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_id().size() > 0) {
    new_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.RenameTableRequest)
}

void RenameTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RenameTableRequest::~RenameTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.RenameTableRequest)
  SharedDtor();
}

void RenameTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RenameTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameTableRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RenameTableRequest& RenameTableRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsRenameTableRequest();
  return *internal_default_instance();
}

RenameTableRequest* RenameTableRequest::New(::google::protobuf::Arena* arena) const {
  RenameTableRequest* n = new RenameTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenameTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.RenameTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RenameTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.RenameTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.RenameTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_id().data(), static_cast<int>(this->new_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.RenameTableRequest.new_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.RenameTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.RenameTableRequest)
  return false;
#undef DO_
}

void RenameTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.RenameTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.RenameTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string new_id = 2;
  if (this->new_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_id().data(), static_cast<int>(this->new_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.RenameTableRequest.new_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->new_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.RenameTableRequest)
}

::google::protobuf::uint8* RenameTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.RenameTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.RenameTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string new_id = 2;
  if (this->new_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_id().data(), static_cast<int>(this->new_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.RenameTableRequest.new_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.RenameTableRequest)
  return target;
}

size_t RenameTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.RenameTableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string new_id = 2;
  if (this->new_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.RenameTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.RenameTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.RenameTableRequest)
    MergeFrom(*source);
  }
}

void RenameTableRequest::MergeFrom(const RenameTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.RenameTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.new_id().size() > 0) {

    new_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_id_);
  }
}

void RenameTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.RenameTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameTableRequest::CopyFrom(const RenameTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.RenameTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameTableRequest::IsInitialized() const {
  return true;
}

void RenameTableRequest::Swap(RenameTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameTableRequest::InternalSwap(RenameTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  new_id_.Swap(&other->new_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenameTableRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateColumnFamilyRequest::InitAsDefaultInstance() {
  ::google::bigtable::admin::table::v1::_CreateColumnFamilyRequest_default_instance_._instance.get_mutable()->column_family_ = const_cast< ::google::bigtable::admin::table::v1::ColumnFamily*>(
      ::google::bigtable::admin::table::v1::ColumnFamily::internal_default_instance());
}
void CreateColumnFamilyRequest::clear_column_family() {
  if (GetArenaNoVirtual() == NULL && column_family_ != NULL) {
    delete column_family_;
  }
  column_family_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateColumnFamilyRequest::kNameFieldNumber;
const int CreateColumnFamilyRequest::kColumnFamilyIdFieldNumber;
const int CreateColumnFamilyRequest::kColumnFamilyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateColumnFamilyRequest::CreateColumnFamilyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsCreateColumnFamilyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
}
CreateColumnFamilyRequest::CreateColumnFamilyRequest(const CreateColumnFamilyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  column_family_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.column_family_id().size() > 0) {
    column_family_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_family_id_);
  }
  if (from.has_column_family()) {
    column_family_ = new ::google::bigtable::admin::table::v1::ColumnFamily(*from.column_family_);
  } else {
    column_family_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
}

void CreateColumnFamilyRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_family_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_family_ = NULL;
  _cached_size_ = 0;
}

CreateColumnFamilyRequest::~CreateColumnFamilyRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  SharedDtor();
}

void CreateColumnFamilyRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_family_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete column_family_;
}

void CreateColumnFamilyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateColumnFamilyRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateColumnFamilyRequest& CreateColumnFamilyRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsCreateColumnFamilyRequest();
  return *internal_default_instance();
}

CreateColumnFamilyRequest* CreateColumnFamilyRequest::New(::google::protobuf::Arena* arena) const {
  CreateColumnFamilyRequest* n = new CreateColumnFamilyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateColumnFamilyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_family_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && column_family_ != NULL) {
    delete column_family_;
  }
  column_family_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateColumnFamilyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.CreateColumnFamilyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string column_family_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_column_family_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->column_family_id().data(), static_cast<int>(this->column_family_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.CreateColumnFamilyRequest.column_family_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.table.v1.ColumnFamily column_family = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_family()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  return false;
#undef DO_
}

void CreateColumnFamilyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateColumnFamilyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string column_family_id = 2;
  if (this->column_family_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->column_family_id().data(), static_cast<int>(this->column_family_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateColumnFamilyRequest.column_family_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->column_family_id(), output);
  }

  // .google.bigtable.admin.table.v1.ColumnFamily column_family = 3;
  if (this->has_column_family()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->column_family_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
}

::google::protobuf::uint8* CreateColumnFamilyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateColumnFamilyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string column_family_id = 2;
  if (this->column_family_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->column_family_id().data(), static_cast<int>(this->column_family_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.CreateColumnFamilyRequest.column_family_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->column_family_id(), target);
  }

  // .google.bigtable.admin.table.v1.ColumnFamily column_family = 3;
  if (this->has_column_family()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->column_family_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  return target;
}

size_t CreateColumnFamilyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string column_family_id = 2;
  if (this->column_family_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->column_family_id());
  }

  // .google.bigtable.admin.table.v1.ColumnFamily column_family = 3;
  if (this->has_column_family()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->column_family_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateColumnFamilyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateColumnFamilyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateColumnFamilyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
    MergeFrom(*source);
  }
}

void CreateColumnFamilyRequest::MergeFrom(const CreateColumnFamilyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.column_family_id().size() > 0) {

    column_family_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_family_id_);
  }
  if (from.has_column_family()) {
    mutable_column_family()->::google::bigtable::admin::table::v1::ColumnFamily::MergeFrom(from.column_family());
  }
}

void CreateColumnFamilyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateColumnFamilyRequest::CopyFrom(const CreateColumnFamilyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.CreateColumnFamilyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateColumnFamilyRequest::IsInitialized() const {
  return true;
}

void CreateColumnFamilyRequest::Swap(CreateColumnFamilyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateColumnFamilyRequest::InternalSwap(CreateColumnFamilyRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  column_family_id_.Swap(&other->column_family_id_);
  swap(column_family_, other->column_family_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateColumnFamilyRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteColumnFamilyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteColumnFamilyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteColumnFamilyRequest::DeleteColumnFamilyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsDeleteColumnFamilyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
}
DeleteColumnFamilyRequest::DeleteColumnFamilyRequest(const DeleteColumnFamilyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
}

void DeleteColumnFamilyRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteColumnFamilyRequest::~DeleteColumnFamilyRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  SharedDtor();
}

void DeleteColumnFamilyRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteColumnFamilyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteColumnFamilyRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteColumnFamilyRequest& DeleteColumnFamilyRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsDeleteColumnFamilyRequest();
  return *internal_default_instance();
}

DeleteColumnFamilyRequest* DeleteColumnFamilyRequest::New(::google::protobuf::Arena* arena) const {
  DeleteColumnFamilyRequest* n = new DeleteColumnFamilyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteColumnFamilyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteColumnFamilyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.DeleteColumnFamilyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  return false;
#undef DO_
}

void DeleteColumnFamilyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.DeleteColumnFamilyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
}

::google::protobuf::uint8* DeleteColumnFamilyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.DeleteColumnFamilyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  return target;
}

size_t DeleteColumnFamilyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteColumnFamilyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteColumnFamilyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteColumnFamilyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
    MergeFrom(*source);
  }
}

void DeleteColumnFamilyRequest::MergeFrom(const DeleteColumnFamilyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteColumnFamilyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteColumnFamilyRequest::CopyFrom(const DeleteColumnFamilyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.DeleteColumnFamilyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteColumnFamilyRequest::IsInitialized() const {
  return true;
}

void DeleteColumnFamilyRequest::Swap(DeleteColumnFamilyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteColumnFamilyRequest::InternalSwap(DeleteColumnFamilyRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteColumnFamilyRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulkDeleteRowsRequest::InitAsDefaultInstance() {
  ::google::bigtable::admin::table::v1::_BulkDeleteRowsRequest_default_instance_.row_key_prefix_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::admin::table::v1::_BulkDeleteRowsRequest_default_instance_.delete_all_data_from_table_ = false;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkDeleteRowsRequest::kTableNameFieldNumber;
const int BulkDeleteRowsRequest::kRowKeyPrefixFieldNumber;
const int BulkDeleteRowsRequest::kDeleteAllDataFromTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkDeleteRowsRequest::BulkDeleteRowsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsBulkDeleteRowsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
}
BulkDeleteRowsRequest::BulkDeleteRowsRequest(const BulkDeleteRowsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  clear_has_target();
  switch (from.target_case()) {
    case kRowKeyPrefix: {
      set_row_key_prefix(from.row_key_prefix());
      break;
    }
    case kDeleteAllDataFromTable: {
      set_delete_all_data_from_table(from.delete_all_data_from_table());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
}

void BulkDeleteRowsRequest::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
  _cached_size_ = 0;
}

BulkDeleteRowsRequest::~BulkDeleteRowsRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  SharedDtor();
}

void BulkDeleteRowsRequest::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_target()) {
    clear_target();
  }
}

void BulkDeleteRowsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BulkDeleteRowsRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulkDeleteRowsRequest& BulkDeleteRowsRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::InitDefaultsBulkDeleteRowsRequest();
  return *internal_default_instance();
}

BulkDeleteRowsRequest* BulkDeleteRowsRequest::New(::google::protobuf::Arena* arena) const {
  BulkDeleteRowsRequest* n = new BulkDeleteRowsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BulkDeleteRowsRequest::clear_target() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  switch (target_case()) {
    case kRowKeyPrefix: {
      target_.row_key_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDeleteAllDataFromTable: {
      // No need to clear
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_NOT_SET;
}


void BulkDeleteRowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_target();
  _internal_metadata_.Clear();
}

bool BulkDeleteRowsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.table.v1.BulkDeleteRowsRequest.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes row_key_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool delete_all_data_from_table = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &target_.delete_all_data_from_table_)));
          set_has_delete_all_data_from_table();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  return false;
#undef DO_
}

void BulkDeleteRowsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.BulkDeleteRowsRequest.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // bytes row_key_prefix = 2;
  if (has_row_key_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->row_key_prefix(), output);
  }

  // bool delete_all_data_from_table = 3;
  if (has_delete_all_data_from_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->delete_all_data_from_table(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
}

::google::protobuf::uint8* BulkDeleteRowsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.table.v1.BulkDeleteRowsRequest.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // bytes row_key_prefix = 2;
  if (has_row_key_prefix()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->row_key_prefix(), target);
  }

  // bool delete_all_data_from_table = 3;
  if (has_delete_all_data_from_table()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->delete_all_data_from_table(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  return target;
}

size_t BulkDeleteRowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  switch (target_case()) {
    // bytes row_key_prefix = 2;
    case kRowKeyPrefix: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->row_key_prefix());
      break;
    }
    // bool delete_all_data_from_table = 3;
    case kDeleteAllDataFromTable: {
      total_size += 1 + 1;
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BulkDeleteRowsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkDeleteRowsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulkDeleteRowsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
    MergeFrom(*source);
  }
}

void BulkDeleteRowsRequest::MergeFrom(const BulkDeleteRowsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  switch (from.target_case()) {
    case kRowKeyPrefix: {
      set_row_key_prefix(from.row_key_prefix());
      break;
    }
    case kDeleteAllDataFromTable: {
      set_delete_all_data_from_table(from.delete_all_data_from_table());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
}

void BulkDeleteRowsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkDeleteRowsRequest::CopyFrom(const BulkDeleteRowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.table.v1.BulkDeleteRowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkDeleteRowsRequest::IsInitialized() const {
  return true;
}

void BulkDeleteRowsRequest::Swap(BulkDeleteRowsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkDeleteRowsRequest::InternalSwap(BulkDeleteRowsRequest* other) {
  using std::swap;
  table_name_.Swap(&other->table_name_);
  swap(target_, other->target_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BulkDeleteRowsRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2ftable_2fv1_2fbigtable_5ftable_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace table
}  // namespace admin
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)
