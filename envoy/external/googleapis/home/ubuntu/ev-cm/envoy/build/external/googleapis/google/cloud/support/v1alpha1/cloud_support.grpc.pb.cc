// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/support/v1alpha1/cloud_support.proto

#include "google/cloud/support/v1alpha1/cloud_support.pb.h"
#include "google/cloud/support/v1alpha1/cloud_support.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace support {
namespace v1alpha1 {

static const char* CloudSupport_method_names[] = {
  "/google.cloud.support.v1alpha1.CloudSupport/GetSupportAccount",
  "/google.cloud.support.v1alpha1.CloudSupport/ListSupportAccounts",
  "/google.cloud.support.v1alpha1.CloudSupport/GetCase",
  "/google.cloud.support.v1alpha1.CloudSupport/ListCases",
  "/google.cloud.support.v1alpha1.CloudSupport/ListComments",
  "/google.cloud.support.v1alpha1.CloudSupport/CreateCase",
  "/google.cloud.support.v1alpha1.CloudSupport/UpdateCase",
  "/google.cloud.support.v1alpha1.CloudSupport/CreateComment",
  "/google.cloud.support.v1alpha1.CloudSupport/GetIssueTaxonomy",
};

std::unique_ptr< CloudSupport::Stub> CloudSupport::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< CloudSupport::Stub> stub(new CloudSupport::Stub(channel));
  return stub;
}

CloudSupport::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_GetSupportAccount_(CloudSupport_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSupportAccounts_(CloudSupport_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCase_(CloudSupport_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListCases_(CloudSupport_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListComments_(CloudSupport_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateCase_(CloudSupport_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateCase_(CloudSupport_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateComment_(CloudSupport_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIssueTaxonomy_(CloudSupport_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status CloudSupport::Stub::GetSupportAccount(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetSupportAccountRequest& request, ::google::cloud::support::common::SupportAccount* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetSupportAccount_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::SupportAccount>* CloudSupport::Stub::AsyncGetSupportAccountRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetSupportAccountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::SupportAccount>::Create(channel_.get(), cq, rpcmethod_GetSupportAccount_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::SupportAccount>* CloudSupport::Stub::PrepareAsyncGetSupportAccountRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetSupportAccountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::SupportAccount>::Create(channel_.get(), cq, rpcmethod_GetSupportAccount_, context, request, false);
}

::grpc::Status CloudSupport::Stub::ListSupportAccounts(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListSupportAccountsRequest& request, ::google::cloud::support::v1alpha1::ListSupportAccountsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListSupportAccounts_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::v1alpha1::ListSupportAccountsResponse>* CloudSupport::Stub::AsyncListSupportAccountsRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListSupportAccountsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::v1alpha1::ListSupportAccountsResponse>::Create(channel_.get(), cq, rpcmethod_ListSupportAccounts_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::v1alpha1::ListSupportAccountsResponse>* CloudSupport::Stub::PrepareAsyncListSupportAccountsRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListSupportAccountsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::v1alpha1::ListSupportAccountsResponse>::Create(channel_.get(), cq, rpcmethod_ListSupportAccounts_, context, request, false);
}

::grpc::Status CloudSupport::Stub::GetCase(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetCaseRequest& request, ::google::cloud::support::common::Case* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetCase_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Case>* CloudSupport::Stub::AsyncGetCaseRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetCaseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Case>::Create(channel_.get(), cq, rpcmethod_GetCase_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Case>* CloudSupport::Stub::PrepareAsyncGetCaseRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetCaseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Case>::Create(channel_.get(), cq, rpcmethod_GetCase_, context, request, false);
}

::grpc::Status CloudSupport::Stub::ListCases(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListCasesRequest& request, ::google::cloud::support::v1alpha1::ListCasesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListCases_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::v1alpha1::ListCasesResponse>* CloudSupport::Stub::AsyncListCasesRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListCasesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::v1alpha1::ListCasesResponse>::Create(channel_.get(), cq, rpcmethod_ListCases_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::v1alpha1::ListCasesResponse>* CloudSupport::Stub::PrepareAsyncListCasesRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListCasesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::v1alpha1::ListCasesResponse>::Create(channel_.get(), cq, rpcmethod_ListCases_, context, request, false);
}

::grpc::Status CloudSupport::Stub::ListComments(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListCommentsRequest& request, ::google::cloud::support::v1alpha1::ListCommentsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListComments_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::v1alpha1::ListCommentsResponse>* CloudSupport::Stub::AsyncListCommentsRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListCommentsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::v1alpha1::ListCommentsResponse>::Create(channel_.get(), cq, rpcmethod_ListComments_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::v1alpha1::ListCommentsResponse>* CloudSupport::Stub::PrepareAsyncListCommentsRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::ListCommentsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::v1alpha1::ListCommentsResponse>::Create(channel_.get(), cq, rpcmethod_ListComments_, context, request, false);
}

::grpc::Status CloudSupport::Stub::CreateCase(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::CreateCaseRequest& request, ::google::cloud::support::common::Case* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateCase_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Case>* CloudSupport::Stub::AsyncCreateCaseRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::CreateCaseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Case>::Create(channel_.get(), cq, rpcmethod_CreateCase_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Case>* CloudSupport::Stub::PrepareAsyncCreateCaseRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::CreateCaseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Case>::Create(channel_.get(), cq, rpcmethod_CreateCase_, context, request, false);
}

::grpc::Status CloudSupport::Stub::UpdateCase(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::UpdateCaseRequest& request, ::google::cloud::support::common::Case* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateCase_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Case>* CloudSupport::Stub::AsyncUpdateCaseRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::UpdateCaseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Case>::Create(channel_.get(), cq, rpcmethod_UpdateCase_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Case>* CloudSupport::Stub::PrepareAsyncUpdateCaseRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::UpdateCaseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Case>::Create(channel_.get(), cq, rpcmethod_UpdateCase_, context, request, false);
}

::grpc::Status CloudSupport::Stub::CreateComment(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::CreateCommentRequest& request, ::google::cloud::support::common::Comment* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateComment_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Comment>* CloudSupport::Stub::AsyncCreateCommentRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::CreateCommentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Comment>::Create(channel_.get(), cq, rpcmethod_CreateComment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::Comment>* CloudSupport::Stub::PrepareAsyncCreateCommentRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::CreateCommentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::Comment>::Create(channel_.get(), cq, rpcmethod_CreateComment_, context, request, false);
}

::grpc::Status CloudSupport::Stub::GetIssueTaxonomy(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetIssueTaxonomyRequest& request, ::google::cloud::support::common::IssueTaxonomy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetIssueTaxonomy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::IssueTaxonomy>* CloudSupport::Stub::AsyncGetIssueTaxonomyRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetIssueTaxonomyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::IssueTaxonomy>::Create(channel_.get(), cq, rpcmethod_GetIssueTaxonomy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::support::common::IssueTaxonomy>* CloudSupport::Stub::PrepareAsyncGetIssueTaxonomyRaw(::grpc::ClientContext* context, const ::google::cloud::support::v1alpha1::GetIssueTaxonomyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::support::common::IssueTaxonomy>::Create(channel_.get(), cq, rpcmethod_GetIssueTaxonomy_, context, request, false);
}

CloudSupport::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::GetSupportAccountRequest, ::google::cloud::support::common::SupportAccount>(
          std::mem_fn(&CloudSupport::Service::GetSupportAccount), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::ListSupportAccountsRequest, ::google::cloud::support::v1alpha1::ListSupportAccountsResponse>(
          std::mem_fn(&CloudSupport::Service::ListSupportAccounts), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::GetCaseRequest, ::google::cloud::support::common::Case>(
          std::mem_fn(&CloudSupport::Service::GetCase), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::ListCasesRequest, ::google::cloud::support::v1alpha1::ListCasesResponse>(
          std::mem_fn(&CloudSupport::Service::ListCases), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::ListCommentsRequest, ::google::cloud::support::v1alpha1::ListCommentsResponse>(
          std::mem_fn(&CloudSupport::Service::ListComments), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::CreateCaseRequest, ::google::cloud::support::common::Case>(
          std::mem_fn(&CloudSupport::Service::CreateCase), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::UpdateCaseRequest, ::google::cloud::support::common::Case>(
          std::mem_fn(&CloudSupport::Service::UpdateCase), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::CreateCommentRequest, ::google::cloud::support::common::Comment>(
          std::mem_fn(&CloudSupport::Service::CreateComment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudSupport_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudSupport::Service, ::google::cloud::support::v1alpha1::GetIssueTaxonomyRequest, ::google::cloud::support::common::IssueTaxonomy>(
          std::mem_fn(&CloudSupport::Service::GetIssueTaxonomy), this)));
}

CloudSupport::Service::~Service() {
}

::grpc::Status CloudSupport::Service::GetSupportAccount(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::GetSupportAccountRequest* request, ::google::cloud::support::common::SupportAccount* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::ListSupportAccounts(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::ListSupportAccountsRequest* request, ::google::cloud::support::v1alpha1::ListSupportAccountsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::GetCase(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::GetCaseRequest* request, ::google::cloud::support::common::Case* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::ListCases(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::ListCasesRequest* request, ::google::cloud::support::v1alpha1::ListCasesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::ListComments(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::ListCommentsRequest* request, ::google::cloud::support::v1alpha1::ListCommentsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::CreateCase(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::CreateCaseRequest* request, ::google::cloud::support::common::Case* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::UpdateCase(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::UpdateCaseRequest* request, ::google::cloud::support::common::Case* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::CreateComment(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::CreateCommentRequest* request, ::google::cloud::support::common::Comment* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudSupport::Service::GetIssueTaxonomy(::grpc::ServerContext* context, const ::google::cloud::support::v1alpha1::GetIssueTaxonomyRequest* request, ::google::cloud::support::common::IssueTaxonomy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace support
}  // namespace v1alpha1

