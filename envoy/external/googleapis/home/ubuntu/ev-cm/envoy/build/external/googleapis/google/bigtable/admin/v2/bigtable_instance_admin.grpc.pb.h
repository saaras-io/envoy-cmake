// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto
// Original file comments:
// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto__INCLUDED
#define GRPC_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto__INCLUDED

#include "google/bigtable/admin/v2/bigtable_instance_admin.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

// Service for creating, configuring, and deleting Cloud Bigtable Instances and
// Clusters. Provides access to the Instance and Cluster schemas only, not the
// tables' metadata or data stored in those tables.
class BigtableInstanceAdmin final {
 public:
  static constexpr char const* service_full_name() {
    return "google.bigtable.admin.v2.BigtableInstanceAdmin";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create an instance within a project.
    virtual ::grpc::Status CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncCreateInstanceRaw(context, request, cq));
    }
    // Gets information about an instance.
    virtual ::grpc::Status GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::google::bigtable::admin::v2::Instance* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> AsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(AsyncGetInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> PrepareAsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncGetInstanceRaw(context, request, cq));
    }
    // Lists information about instances in a project.
    virtual ::grpc::Status ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::google::bigtable::admin::v2::ListInstancesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>> AsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>>(AsyncListInstancesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>> PrepareAsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>>(PrepareAsyncListInstancesRaw(context, request, cq));
    }
    // Updates an instance within a project.
    virtual ::grpc::Status UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::google::bigtable::admin::v2::Instance* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> AsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(AsyncUpdateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> PrepareAsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncUpdateInstanceRaw(context, request, cq));
    }
    // Delete an instance from a project.
    virtual ::grpc::Status DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteInstanceRaw(context, request, cq));
    }
    // Creates a cluster within an instance.
    virtual ::grpc::Status CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncCreateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncCreateClusterRaw(context, request, cq));
    }
    // Gets information about a cluster.
    virtual ::grpc::Status GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::google::bigtable::admin::v2::Cluster* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>> AsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>>(AsyncGetClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>> PrepareAsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>>(PrepareAsyncGetClusterRaw(context, request, cq));
    }
    // Lists information about clusters in an instance.
    virtual ::grpc::Status ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::google::bigtable::admin::v2::ListClustersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>> AsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>>(AsyncListClustersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>> PrepareAsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>>(PrepareAsyncListClustersRaw(context, request, cq));
    }
    // Updates a cluster within an instance.
    virtual ::grpc::Status UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncUpdateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncUpdateClusterRaw(context, request, cq));
    }
    // Deletes a cluster from an instance.
    virtual ::grpc::Status DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteClusterRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* AsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* PrepareAsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>* AsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>* PrepareAsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* AsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* PrepareAsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>* AsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>* PrepareAsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>* AsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>* PrepareAsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncCreateInstanceRaw(context, request, cq));
    }
    ::grpc::Status GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::google::bigtable::admin::v2::Instance* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> AsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(AsyncGetInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> PrepareAsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncGetInstanceRaw(context, request, cq));
    }
    ::grpc::Status ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::google::bigtable::admin::v2::ListInstancesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>> AsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>>(AsyncListInstancesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>> PrepareAsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>>(PrepareAsyncListInstancesRaw(context, request, cq));
    }
    ::grpc::Status UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::google::bigtable::admin::v2::Instance* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> AsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(AsyncUpdateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> PrepareAsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncUpdateInstanceRaw(context, request, cq));
    }
    ::grpc::Status DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteInstanceRaw(context, request, cq));
    }
    ::grpc::Status CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncCreateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncCreateClusterRaw(context, request, cq));
    }
    ::grpc::Status GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::google::bigtable::admin::v2::Cluster* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>> AsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>>(AsyncGetClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>> PrepareAsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>>(PrepareAsyncGetClusterRaw(context, request, cq));
    }
    ::grpc::Status ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::google::bigtable::admin::v2::ListClustersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>> AsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>>(AsyncListClustersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>> PrepareAsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>>(PrepareAsyncListClustersRaw(context, request, cq));
    }
    ::grpc::Status UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncUpdateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncUpdateClusterRaw(context, request, cq));
    }
    ::grpc::Status DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteClusterRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* AsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* PrepareAsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>* AsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>* PrepareAsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* AsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* PrepareAsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>* AsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>* PrepareAsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>* AsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>* PrepareAsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInstances_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_ListClusters_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteCluster_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create an instance within a project.
    virtual ::grpc::Status CreateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response);
    // Gets information about an instance.
    virtual ::grpc::Status GetInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response);
    // Lists information about instances in a project.
    virtual ::grpc::Status ListInstances(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response);
    // Updates an instance within a project.
    virtual ::grpc::Status UpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response);
    // Delete an instance from a project.
    virtual ::grpc::Status DeleteInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response);
    // Creates a cluster within an instance.
    virtual ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response);
    // Gets information about a cluster.
    virtual ::grpc::Status GetCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response);
    // Lists information about clusters in an instance.
    virtual ::grpc::Status ListClusters(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response);
    // Updates a cluster within an instance.
    virtual ::grpc::Status UpdateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response);
    // Deletes a cluster from an instance.
    virtual ::grpc::Status DeleteCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateInstance() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetInstance() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::GetInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::Instance>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListInstances() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInstances(::grpc::ServerContext* context, ::google::bigtable::admin::v2::ListInstancesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::ListInstancesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::Instance* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::Instance>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateCluster() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::CreateClusterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCluster() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::GetClusterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::Cluster>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListClusters() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListClusters(::grpc::ServerContext* context, ::google::bigtable::admin::v2::ListClustersRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::ListClustersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::Cluster* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateInstance<WithAsyncMethod_GetInstance<WithAsyncMethod_ListInstances<WithAsyncMethod_UpdateInstance<WithAsyncMethod_DeleteInstance<WithAsyncMethod_CreateCluster<WithAsyncMethod_GetCluster<WithAsyncMethod_ListClusters<WithAsyncMethod_UpdateCluster<WithAsyncMethod_DeleteCluster<Service > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateInstance() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetInstance() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListInstances() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateCluster() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCluster() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListClusters() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateInstance() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::CreateInstanceRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_CreateInstance<BaseClass>::StreamedCreateInstance, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::CreateInstanceRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetInstance() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::GetInstanceRequest, ::google::bigtable::admin::v2::Instance>(std::bind(&WithStreamedUnaryMethod_GetInstance<BaseClass>::StreamedGetInstance, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::GetInstanceRequest,::google::bigtable::admin::v2::Instance>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListInstances() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::ListInstancesRequest, ::google::bigtable::admin::v2::ListInstancesResponse>(std::bind(&WithStreamedUnaryMethod_ListInstances<BaseClass>::StreamedListInstances, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInstances(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::ListInstancesRequest,::google::bigtable::admin::v2::ListInstancesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::Instance, ::google::bigtable::admin::v2::Instance>(std::bind(&WithStreamedUnaryMethod_UpdateInstance<BaseClass>::StreamedUpdateInstance, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::Instance,::google::bigtable::admin::v2::Instance>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::DeleteInstanceRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteInstance<BaseClass>::StreamedDeleteInstance, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::DeleteInstanceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateCluster() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::CreateClusterRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_CreateCluster<BaseClass>::StreamedCreateCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::CreateClusterRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCluster() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::GetClusterRequest, ::google::bigtable::admin::v2::Cluster>(std::bind(&WithStreamedUnaryMethod_GetCluster<BaseClass>::StreamedGetCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::GetClusterRequest,::google::bigtable::admin::v2::Cluster>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListClusters() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::ListClustersRequest, ::google::bigtable::admin::v2::ListClustersResponse>(std::bind(&WithStreamedUnaryMethod_ListClusters<BaseClass>::StreamedListClusters, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListClusters(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::ListClustersRequest,::google::bigtable::admin::v2::ListClustersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::Cluster, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_UpdateCluster<BaseClass>::StreamedUpdateCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::Cluster,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::google::bigtable::admin::v2::DeleteClusterRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteCluster<BaseClass>::StreamedDeleteCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::DeleteClusterRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateInstance<WithStreamedUnaryMethod_GetInstance<WithStreamedUnaryMethod_ListInstances<WithStreamedUnaryMethod_UpdateInstance<WithStreamedUnaryMethod_DeleteInstance<WithStreamedUnaryMethod_CreateCluster<WithStreamedUnaryMethod_GetCluster<WithStreamedUnaryMethod_ListClusters<WithStreamedUnaryMethod_UpdateCluster<WithStreamedUnaryMethod_DeleteCluster<Service > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateInstance<WithStreamedUnaryMethod_GetInstance<WithStreamedUnaryMethod_ListInstances<WithStreamedUnaryMethod_UpdateInstance<WithStreamedUnaryMethod_DeleteInstance<WithStreamedUnaryMethod_CreateCluster<WithStreamedUnaryMethod_GetCluster<WithStreamedUnaryMethod_ListClusters<WithStreamedUnaryMethod_UpdateCluster<WithStreamedUnaryMethod_DeleteCluster<Service > > > > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google


#endif  // GRPC_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto__INCLUDED
