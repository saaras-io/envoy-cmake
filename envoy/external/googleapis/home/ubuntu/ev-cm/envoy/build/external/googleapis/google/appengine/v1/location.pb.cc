// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/location.proto

#include "google/appengine/v1/location.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace appengine {
namespace v1 {
class LocationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationMetadata>
      _instance;
} _LocationMetadata_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace protobuf_google_2fappengine_2fv1_2flocation_2eproto {
void InitDefaultsLocationMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_LocationMetadata_default_instance_;
    new (ptr) ::google::appengine::v1::LocationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::LocationMetadata::InitAsDefaultInstance();
}

void InitDefaultsLocationMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocationMetadataImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::LocationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::LocationMetadata, standard_environment_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::LocationMetadata, flexible_environment_available_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::appengine::v1::LocationMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_LocationMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/appengine/v1/location.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"google/appengine/v1/location.proto\022\023go"
      "ogle.appengine.v1\032\034google/api/annotation"
      "s.proto\032\030google/type/latlng.proto\"b\n\020Loc"
      "ationMetadata\022&\n\036standard_environment_av"
      "ailable\030\002 \001(\010\022&\n\036flexible_environment_av"
      "ailable\030\004 \001(\010Bh\n\027com.google.appengine.v1"
      "B\rLocationProtoP\001Z<google.golang.org/gen"
      "proto/googleapis/appengine/v1;appengineb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/v1/location.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2flatlng_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fappengine_2fv1_2flocation_2eproto
namespace google {
namespace appengine {
namespace v1 {

// ===================================================================

void LocationMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationMetadata::kStandardEnvironmentAvailableFieldNumber;
const int LocationMetadata::kFlexibleEnvironmentAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationMetadata::LocationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2flocation_2eproto::InitDefaultsLocationMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.LocationMetadata)
}
LocationMetadata::LocationMetadata(const LocationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&standard_environment_available_, &from.standard_environment_available_,
    static_cast<size_t>(reinterpret_cast<char*>(&flexible_environment_available_) -
    reinterpret_cast<char*>(&standard_environment_available_)) + sizeof(flexible_environment_available_));
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.LocationMetadata)
}

void LocationMetadata::SharedCtor() {
  ::memset(&standard_environment_available_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flexible_environment_available_) -
      reinterpret_cast<char*>(&standard_environment_available_)) + sizeof(flexible_environment_available_));
  _cached_size_ = 0;
}

LocationMetadata::~LocationMetadata() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.LocationMetadata)
  SharedDtor();
}

void LocationMetadata::SharedDtor() {
}

void LocationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocationMetadata::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2flocation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2flocation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocationMetadata& LocationMetadata::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2flocation_2eproto::InitDefaultsLocationMetadata();
  return *internal_default_instance();
}

LocationMetadata* LocationMetadata::New(::google::protobuf::Arena* arena) const {
  LocationMetadata* n = new LocationMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.LocationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&standard_environment_available_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flexible_environment_available_) -
      reinterpret_cast<char*>(&standard_environment_available_)) + sizeof(flexible_environment_available_));
  _internal_metadata_.Clear();
}

bool LocationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.LocationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool standard_environment_available = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &standard_environment_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool flexible_environment_available = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flexible_environment_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.LocationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.LocationMetadata)
  return false;
#undef DO_
}

void LocationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.LocationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool standard_environment_available = 2;
  if (this->standard_environment_available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->standard_environment_available(), output);
  }

  // bool flexible_environment_available = 4;
  if (this->flexible_environment_available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->flexible_environment_available(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.LocationMetadata)
}

::google::protobuf::uint8* LocationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.LocationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool standard_environment_available = 2;
  if (this->standard_environment_available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->standard_environment_available(), target);
  }

  // bool flexible_environment_available = 4;
  if (this->flexible_environment_available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->flexible_environment_available(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.LocationMetadata)
  return target;
}

size_t LocationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.LocationMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool standard_environment_available = 2;
  if (this->standard_environment_available() != 0) {
    total_size += 1 + 1;
  }

  // bool flexible_environment_available = 4;
  if (this->flexible_environment_available() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.LocationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.LocationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.LocationMetadata)
    MergeFrom(*source);
  }
}

void LocationMetadata::MergeFrom(const LocationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.LocationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.standard_environment_available() != 0) {
    set_standard_environment_available(from.standard_environment_available());
  }
  if (from.flexible_environment_available() != 0) {
    set_flexible_environment_available(from.flexible_environment_available());
  }
}

void LocationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.LocationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationMetadata::CopyFrom(const LocationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.LocationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationMetadata::IsInitialized() const {
  return true;
}

void LocationMetadata::Swap(LocationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationMetadata::InternalSwap(LocationMetadata* other) {
  using std::swap;
  swap(standard_environment_available_, other->standard_environment_available_);
  swap(flexible_environment_available_, other->flexible_environment_available_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocationMetadata::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2flocation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2flocation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
