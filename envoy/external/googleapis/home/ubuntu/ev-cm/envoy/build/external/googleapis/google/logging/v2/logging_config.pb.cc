// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging_config.proto

#include "google/logging/v2/logging_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace logging {
namespace v2 {
class LogSinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogSink>
      _instance;
} _LogSink_default_instance_;
class ListSinksRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSinksRequest>
      _instance;
} _ListSinksRequest_default_instance_;
class ListSinksResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSinksResponse>
      _instance;
} _ListSinksResponse_default_instance_;
class GetSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSinkRequest>
      _instance;
} _GetSinkRequest_default_instance_;
class CreateSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSinkRequest>
      _instance;
} _CreateSinkRequest_default_instance_;
class UpdateSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateSinkRequest>
      _instance;
} _UpdateSinkRequest_default_instance_;
class DeleteSinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSinkRequest>
      _instance;
} _DeleteSinkRequest_default_instance_;
class LogExclusionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogExclusion>
      _instance;
} _LogExclusion_default_instance_;
class ListExclusionsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListExclusionsRequest>
      _instance;
} _ListExclusionsRequest_default_instance_;
class ListExclusionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListExclusionsResponse>
      _instance;
} _ListExclusionsResponse_default_instance_;
class GetExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetExclusionRequest>
      _instance;
} _GetExclusionRequest_default_instance_;
class CreateExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateExclusionRequest>
      _instance;
} _CreateExclusionRequest_default_instance_;
class UpdateExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateExclusionRequest>
      _instance;
} _UpdateExclusionRequest_default_instance_;
class DeleteExclusionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteExclusionRequest>
      _instance;
} _DeleteExclusionRequest_default_instance_;
}  // namespace v2
}  // namespace logging
}  // namespace google
namespace protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto {
void InitDefaultsLogSinkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::logging::v2::_LogSink_default_instance_;
    new (ptr) ::google::logging::v2::LogSink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogSink::InitAsDefaultInstance();
}

void InitDefaultsLogSink() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogSinkImpl);
}

void InitDefaultsListSinksRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_ListSinksRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListSinksRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListSinksRequest::InitAsDefaultInstance();
}

void InitDefaultsListSinksRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListSinksRequestImpl);
}

void InitDefaultsListSinksResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogSink();
  {
    void* ptr = &::google::logging::v2::_ListSinksResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListSinksResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListSinksResponse::InitAsDefaultInstance();
}

void InitDefaultsListSinksResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListSinksResponseImpl);
}

void InitDefaultsGetSinkRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_GetSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetSinkRequest::InitAsDefaultInstance();
}

void InitDefaultsGetSinkRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetSinkRequestImpl);
}

void InitDefaultsCreateSinkRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogSink();
  {
    void* ptr = &::google::logging::v2::_CreateSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateSinkRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateSinkRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateSinkRequestImpl);
}

void InitDefaultsUpdateSinkRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogSink();
  {
    void* ptr = &::google::logging::v2::_UpdateSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateSinkRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateSinkRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateSinkRequestImpl);
}

void InitDefaultsDeleteSinkRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_DeleteSinkRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteSinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteSinkRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteSinkRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteSinkRequestImpl);
}

void InitDefaultsLogExclusionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_LogExclusion_default_instance_;
    new (ptr) ::google::logging::v2::LogExclusion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogExclusion::InitAsDefaultInstance();
}

void InitDefaultsLogExclusion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogExclusionImpl);
}

void InitDefaultsListExclusionsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_ListExclusionsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListExclusionsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListExclusionsRequest::InitAsDefaultInstance();
}

void InitDefaultsListExclusionsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListExclusionsRequestImpl);
}

void InitDefaultsListExclusionsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogExclusion();
  {
    void* ptr = &::google::logging::v2::_ListExclusionsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListExclusionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListExclusionsResponse::InitAsDefaultInstance();
}

void InitDefaultsListExclusionsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListExclusionsResponseImpl);
}

void InitDefaultsGetExclusionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_GetExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetExclusionRequest::InitAsDefaultInstance();
}

void InitDefaultsGetExclusionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetExclusionRequestImpl);
}

void InitDefaultsCreateExclusionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogExclusion();
  {
    void* ptr = &::google::logging::v2::_CreateExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateExclusionRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateExclusionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateExclusionRequestImpl);
}

void InitDefaultsUpdateExclusionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogExclusion();
  protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::InitDefaultsFieldMask();
  {
    void* ptr = &::google::logging::v2::_UpdateExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateExclusionRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateExclusionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateExclusionRequestImpl);
}

void InitDefaultsDeleteExclusionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::logging::v2::_DeleteExclusionRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteExclusionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteExclusionRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteExclusionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteExclusionRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, output_version_format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, writer_identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, include_children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogSink, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListSinksRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListSinksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListSinksResponse, sinks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListSinksResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::GetSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::GetSinkRequest, sink_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateSinkRequest, unique_writer_identity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, sink_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateSinkRequest, unique_writer_identity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::DeleteSinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::DeleteSinkRequest, sink_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogExclusion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogExclusion, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogExclusion, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogExclusion, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::LogExclusion, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListExclusionsRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListExclusionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListExclusionsResponse, exclusions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::ListExclusionsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::GetExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::GetExclusionRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateExclusionRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::CreateExclusionRequest, exclusion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, exclusion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::UpdateExclusionRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::DeleteExclusionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::logging::v2::DeleteExclusionRequest, name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::logging::v2::LogSink)},
  { 13, -1, sizeof(::google::logging::v2::ListSinksRequest)},
  { 21, -1, sizeof(::google::logging::v2::ListSinksResponse)},
  { 28, -1, sizeof(::google::logging::v2::GetSinkRequest)},
  { 34, -1, sizeof(::google::logging::v2::CreateSinkRequest)},
  { 42, -1, sizeof(::google::logging::v2::UpdateSinkRequest)},
  { 50, -1, sizeof(::google::logging::v2::DeleteSinkRequest)},
  { 56, -1, sizeof(::google::logging::v2::LogExclusion)},
  { 65, -1, sizeof(::google::logging::v2::ListExclusionsRequest)},
  { 73, -1, sizeof(::google::logging::v2::ListExclusionsResponse)},
  { 80, -1, sizeof(::google::logging::v2::GetExclusionRequest)},
  { 86, -1, sizeof(::google::logging::v2::CreateExclusionRequest)},
  { 93, -1, sizeof(::google::logging::v2::UpdateExclusionRequest)},
  { 101, -1, sizeof(::google::logging::v2::DeleteExclusionRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogSink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListSinksRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListSinksResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CreateSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteSinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_LogExclusion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListExclusionsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_ListExclusionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_GetExclusionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_CreateExclusionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_UpdateExclusionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::logging::v2::_DeleteExclusionRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/logging/v2/logging_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&google/logging/v2/logging_config.proto"
      "\022\021google.logging.v2\032\034google/api/annotati"
      "ons.proto\032\033google/protobuf/empty.proto\032 "
      "google/protobuf/field_mask.proto\032\037google"
      "/protobuf/timestamp.proto\"\327\002\n\007LogSink\022\014\n"
      "\004name\030\001 \001(\t\022\023\n\013destination\030\003 \001(\t\022\016\n\006filt"
      "er\030\005 \001(\t\022G\n\025output_version_format\030\006 \001(\0162"
      "(.google.logging.v2.LogSink.VersionForma"
      "t\022\027\n\017writer_identity\030\010 \001(\t\022\030\n\020include_ch"
      "ildren\030\t \001(\010\022.\n\nstart_time\030\n \001(\0132\032.googl"
      "e.protobuf.Timestamp\022,\n\010end_time\030\013 \001(\0132\032"
      ".google.protobuf.Timestamp\"\?\n\rVersionFor"
      "mat\022\036\n\032VERSION_FORMAT_UNSPECIFIED\020\000\022\006\n\002V"
      "2\020\001\022\006\n\002V1\020\002\"I\n\020ListSinksRequest\022\016\n\006paren"
      "t\030\001 \001(\t\022\022\n\npage_token\030\002 \001(\t\022\021\n\tpage_size"
      "\030\003 \001(\005\"W\n\021ListSinksResponse\022)\n\005sinks\030\001 \003"
      "(\0132\032.google.logging.v2.LogSink\022\027\n\017next_p"
      "age_token\030\002 \001(\t\"#\n\016GetSinkRequest\022\021\n\tsin"
      "k_name\030\001 \001(\t\"m\n\021CreateSinkRequest\022\016\n\006par"
      "ent\030\001 \001(\t\022(\n\004sink\030\002 \001(\0132\032.google.logging"
      ".v2.LogSink\022\036\n\026unique_writer_identity\030\003 "
      "\001(\010\"p\n\021UpdateSinkRequest\022\021\n\tsink_name\030\001 "
      "\001(\t\022(\n\004sink\030\002 \001(\0132\032.google.logging.v2.Lo"
      "gSink\022\036\n\026unique_writer_identity\030\003 \001(\010\"&\n"
      "\021DeleteSinkRequest\022\021\n\tsink_name\030\001 \001(\t\"S\n"
      "\014LogExclusion\022\014\n\004name\030\001 \001(\t\022\023\n\013descripti"
      "on\030\002 \001(\t\022\016\n\006filter\030\003 \001(\t\022\020\n\010disabled\030\004 \001"
      "(\010\"N\n\025ListExclusionsRequest\022\016\n\006parent\030\001 "
      "\001(\t\022\022\n\npage_token\030\002 \001(\t\022\021\n\tpage_size\030\003 \001"
      "(\005\"f\n\026ListExclusionsResponse\0223\n\nexclusio"
      "ns\030\001 \003(\0132\037.google.logging.v2.LogExclusio"
      "n\022\027\n\017next_page_token\030\002 \001(\t\"#\n\023GetExclusi"
      "onRequest\022\014\n\004name\030\001 \001(\t\"\\\n\026CreateExclusi"
      "onRequest\022\016\n\006parent\030\001 \001(\t\0222\n\texclusion\030\002"
      " \001(\0132\037.google.logging.v2.LogExclusion\"\213\001"
      "\n\026UpdateExclusionRequest\022\014\n\004name\030\001 \001(\t\0222"
      "\n\texclusion\030\002 \001(\0132\037.google.logging.v2.Lo"
      "gExclusion\022/\n\013update_mask\030\003 \001(\0132\032.google"
      ".protobuf.FieldMask\"&\n\026DeleteExclusionRe"
      "quest\022\014\n\004name\030\001 \001(\t2\311\n\n\017ConfigServiceV2\022"
      "}\n\tListSinks\022#.google.logging.v2.ListSin"
      "ksRequest\032$.google.logging.v2.ListSinksR"
      "esponse\"%\202\323\344\223\002\037\022\035/v2/{parent=projects/*}"
      "/sinks\022t\n\007GetSink\022!.google.logging.v2.Ge"
      "tSinkRequest\032\032.google.logging.v2.LogSink"
      "\"*\202\323\344\223\002$\022\"/v2/{sink_name=projects/*/sink"
      "s/*}\022{\n\nCreateSink\022$.google.logging.v2.C"
      "reateSinkRequest\032\032.google.logging.v2.Log"
      "Sink\"+\202\323\344\223\002%\"\035/v2/{parent=projects/*}/si"
      "nks:\004sink\022\200\001\n\nUpdateSink\022$.google.loggin"
      "g.v2.UpdateSinkRequest\032\032.google.logging."
      "v2.LogSink\"0\202\323\344\223\002*\032\"/v2/{sink_name=proje"
      "cts/*/sinks/*}:\004sink\022v\n\nDeleteSink\022$.goo"
      "gle.logging.v2.DeleteSinkRequest\032\026.googl"
      "e.protobuf.Empty\"*\202\323\344\223\002$*\"/v2/{sink_name"
      "=projects/*/sinks/*}\022\221\001\n\016ListExclusions\022"
      "(.google.logging.v2.ListExclusionsReques"
      "t\032).google.logging.v2.ListExclusionsResp"
      "onse\"*\202\323\344\223\002$\022\"/v2/{parent=projects/*}/ex"
      "clusions\022\203\001\n\014GetExclusion\022&.google.loggi"
      "ng.v2.GetExclusionRequest\032\037.google.loggi"
      "ng.v2.LogExclusion\"*\202\323\344\223\002$\022\"/v2/{name=pr"
      "ojects/*/exclusions/*}\022\224\001\n\017CreateExclusi"
      "on\022).google.logging.v2.CreateExclusionRe"
      "quest\032\037.google.logging.v2.LogExclusion\"5"
      "\202\323\344\223\002/\"\"/v2/{parent=projects/*}/exclusio"
      "ns:\texclusion\022\224\001\n\017UpdateExclusion\022).goog"
      "le.logging.v2.UpdateExclusionRequest\032\037.g"
      "oogle.logging.v2.LogExclusion\"5\202\323\344\223\002/2\"/"
      "v2/{name=projects/*/exclusions/*}:\texclu"
      "sion\022\200\001\n\017DeleteExclusion\022).google.loggin"
      "g.v2.DeleteExclusionRequest\032\026.google.pro"
      "tobuf.Empty\"*\202\323\344\223\002$*\"/v2/{name=projects/"
      "*/exclusions/*}B\204\001\n\025com.google.logging.v"
      "2B\022LoggingConfigProtoP\001Z8google.golang.o"
      "rg/genproto/googleapis/logging/v2;loggin"
      "g\370\001\001\252\002\027Google.Cloud.Logging.V2b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3078);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/logging/v2/logging_config.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto
namespace google {
namespace logging {
namespace v2 {
const ::google::protobuf::EnumDescriptor* LogSink_VersionFormat_descriptor() {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool LogSink_VersionFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogSink_VersionFormat LogSink::VERSION_FORMAT_UNSPECIFIED;
const LogSink_VersionFormat LogSink::V2;
const LogSink_VersionFormat LogSink::V1;
const LogSink_VersionFormat LogSink::VersionFormat_MIN;
const LogSink_VersionFormat LogSink::VersionFormat_MAX;
const int LogSink::VersionFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LogSink::InitAsDefaultInstance() {
  ::google::logging::v2::_LogSink_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::logging::v2::_LogSink_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void LogSink::_slow_mutable_start_time() {
  start_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void LogSink::unsafe_arena_set_allocated_start_time(
    ::google::protobuf::Timestamp* start_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogSink.start_time)
}
void LogSink::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void LogSink::_slow_mutable_end_time() {
  end_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void LogSink::unsafe_arena_set_allocated_end_time(
    ::google::protobuf::Timestamp* end_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete end_time_;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogSink.end_time)
}
void LogSink::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogSink::kNameFieldNumber;
const int LogSink::kDestinationFieldNumber;
const int LogSink::kFilterFieldNumber;
const int LogSink::kOutputVersionFormatFieldNumber;
const int LogSink::kWriterIdentityFieldNumber;
const int LogSink::kIncludeChildrenFieldNumber;
const int LogSink::kStartTimeFieldNumber;
const int LogSink::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogSink::LogSink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogSink();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogSink)
}
LogSink::LogSink(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogSink();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogSink)
}
LogSink::LogSink(const LogSink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination().size() > 0) {
    destination_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination(),
      GetArenaNoVirtual());
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  writer_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.writer_identity().size() > 0) {
    writer_identity_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writer_identity(),
      GetArenaNoVirtual());
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  ::memcpy(&output_version_format_, &from.output_version_format_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_children_) -
    reinterpret_cast<char*>(&output_version_format_)) + sizeof(include_children_));
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogSink)
}

void LogSink::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_children_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(include_children_));
  _cached_size_ = 0;
}

LogSink::~LogSink() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogSink)
  SharedDtor();
}

void LogSink::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void LogSink::ArenaDtor(void* object) {
  LogSink* _this = reinterpret_cast< LogSink* >(object);
  (void)_this;
}
void LogSink::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogSink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogSink::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogSink& LogSink::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogSink();
  return *internal_default_instance();
}

LogSink* LogSink::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<LogSink>(arena);
}

void LogSink::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  destination_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  writer_identity_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  ::memset(&output_version_format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_children_) -
      reinterpret_cast<char*>(&output_version_format_)) + sizeof(include_children_));
  _internal_metadata_.Clear();
}

bool LogSink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogSink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination().data(), static_cast<int>(this->destination().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.destination"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogSink.VersionFormat output_version_format = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_output_version_format(static_cast< ::google::logging::v2::LogSink_VersionFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string writer_identity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_writer_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->writer_identity().data(), static_cast<int>(this->writer_identity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogSink.writer_identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool include_children = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_children_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogSink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogSink)
  return false;
#undef DO_
}

void LogSink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string destination = 3;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->destination(), output);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filter(), output);
  }

  // .google.logging.v2.LogSink.VersionFormat output_version_format = 6;
  if (this->output_version_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->output_version_format(), output);
  }

  // string writer_identity = 8;
  if (this->writer_identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_identity().data(), static_cast<int>(this->writer_identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.writer_identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->writer_identity(), output);
  }

  // bool include_children = 9;
  if (this->include_children() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->include_children(), output);
  }

  // .google.protobuf.Timestamp start_time = 10;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 11;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->end_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogSink)
}

::google::protobuf::uint8* LogSink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string destination = 3;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destination(), target);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filter(), target);
  }

  // .google.logging.v2.LogSink.VersionFormat output_version_format = 6;
  if (this->output_version_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->output_version_format(), target);
  }

  // string writer_identity = 8;
  if (this->writer_identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_identity().data(), static_cast<int>(this->writer_identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogSink.writer_identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->writer_identity(), target);
  }

  // bool include_children = 9;
  if (this->include_children() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->include_children(), target);
  }

  // .google.protobuf.Timestamp start_time = 10;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 11;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->end_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogSink)
  return target;
}

size_t LogSink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogSink)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string destination = 3;
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination());
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string writer_identity = 8;
  if (this->writer_identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->writer_identity());
  }

  // .google.protobuf.Timestamp start_time = 10;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp end_time = 11;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_time_);
  }

  // .google.logging.v2.LogSink.VersionFormat output_version_format = 6;
  if (this->output_version_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->output_version_format());
  }

  // bool include_children = 9;
  if (this->include_children() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogSink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogSink)
  GOOGLE_DCHECK_NE(&from, this);
  const LogSink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogSink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogSink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogSink)
    MergeFrom(*source);
  }
}

void LogSink::MergeFrom(const LogSink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogSink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.destination().size() > 0) {
    set_destination(from.destination());
  }
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.writer_identity().size() > 0) {
    set_writer_identity(from.writer_identity());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.output_version_format() != 0) {
    set_output_version_format(from.output_version_format());
  }
  if (from.include_children() != 0) {
    set_include_children(from.include_children());
  }
}

void LogSink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogSink::CopyFrom(const LogSink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogSink::IsInitialized() const {
  return true;
}

void LogSink::Swap(LogSink* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogSink* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogSink::UnsafeArenaSwap(LogSink* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogSink::InternalSwap(LogSink* other) {
  using std::swap;
  name_.Swap(&other->name_);
  destination_.Swap(&other->destination_);
  filter_.Swap(&other->filter_);
  writer_identity_.Swap(&other->writer_identity_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(output_version_format_, other->output_version_format_);
  swap(include_children_, other->include_children_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogSink::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSinksRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSinksRequest::kParentFieldNumber;
const int ListSinksRequest::kPageTokenFieldNumber;
const int ListSinksRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSinksRequest::ListSinksRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListSinksRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListSinksRequest)
}
ListSinksRequest::ListSinksRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListSinksRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListSinksRequest)
}
ListSinksRequest::ListSinksRequest(const ListSinksRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListSinksRequest)
}

void ListSinksRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListSinksRequest::~ListSinksRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListSinksRequest)
  SharedDtor();
}

void ListSinksRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSinksRequest::ArenaDtor(void* object) {
  ListSinksRequest* _this = reinterpret_cast< ListSinksRequest* >(object);
  (void)_this;
}
void ListSinksRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListSinksRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListSinksRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSinksRequest& ListSinksRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListSinksRequest();
  return *internal_default_instance();
}

ListSinksRequest* ListSinksRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListSinksRequest>(arena);
}

void ListSinksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListSinksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListSinksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListSinksRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListSinksRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListSinksRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListSinksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListSinksRequest)
  return false;
#undef DO_
}

void ListSinksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListSinksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListSinksRequest)
}

::google::protobuf::uint8* ListSinksRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListSinksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListSinksRequest)
  return target;
}

size_t ListSinksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListSinksRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListSinksRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListSinksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSinksRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSinksRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListSinksRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListSinksRequest)
    MergeFrom(*source);
  }
}

void ListSinksRequest::MergeFrom(const ListSinksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListSinksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListSinksRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListSinksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSinksRequest::CopyFrom(const ListSinksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListSinksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSinksRequest::IsInitialized() const {
  return true;
}

void ListSinksRequest::Swap(ListSinksRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListSinksRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListSinksRequest::UnsafeArenaSwap(ListSinksRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListSinksRequest::InternalSwap(ListSinksRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListSinksRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSinksResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSinksResponse::kSinksFieldNumber;
const int ListSinksResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSinksResponse::ListSinksResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListSinksResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListSinksResponse)
}
ListSinksResponse::ListSinksResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  sinks_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListSinksResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListSinksResponse)
}
ListSinksResponse::ListSinksResponse(const ListSinksResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sinks_(from.sinks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListSinksResponse)
}

void ListSinksResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListSinksResponse::~ListSinksResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListSinksResponse)
  SharedDtor();
}

void ListSinksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSinksResponse::ArenaDtor(void* object) {
  ListSinksResponse* _this = reinterpret_cast< ListSinksResponse* >(object);
  (void)_this;
}
void ListSinksResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListSinksResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListSinksResponse::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSinksResponse& ListSinksResponse::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListSinksResponse();
  return *internal_default_instance();
}

ListSinksResponse* ListSinksResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListSinksResponse>(arena);
}

void ListSinksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListSinksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sinks_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ListSinksResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListSinksResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogSink sinks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sinks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListSinksResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListSinksResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListSinksResponse)
  return false;
#undef DO_
}

void ListSinksResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListSinksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogSink sinks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sinks(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListSinksResponse)
}

::google::protobuf::uint8* ListSinksResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListSinksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogSink sinks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sinks(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListSinksResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListSinksResponse)
  return target;
}

size_t ListSinksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListSinksResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.logging.v2.LogSink sinks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sinks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sinks(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListSinksResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListSinksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSinksResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSinksResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListSinksResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListSinksResponse)
    MergeFrom(*source);
  }
}

void ListSinksResponse::MergeFrom(const ListSinksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListSinksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sinks_.MergeFrom(from.sinks_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListSinksResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListSinksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSinksResponse::CopyFrom(const ListSinksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListSinksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSinksResponse::IsInitialized() const {
  return true;
}

void ListSinksResponse::Swap(ListSinksResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListSinksResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListSinksResponse::UnsafeArenaSwap(ListSinksResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListSinksResponse::InternalSwap(ListSinksResponse* other) {
  using std::swap;
  sinks_.InternalSwap(&other->sinks_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListSinksResponse::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSinkRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSinkRequest::kSinkNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSinkRequest::GetSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsGetSinkRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetSinkRequest)
}
GetSinkRequest::GetSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsGetSinkRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetSinkRequest)
}
GetSinkRequest::GetSinkRequest(const GetSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sink_name().size() > 0) {
    sink_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sink_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetSinkRequest)
}

void GetSinkRequest::SharedCtor() {
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetSinkRequest::~GetSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetSinkRequest)
  SharedDtor();
}

void GetSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  sink_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSinkRequest::ArenaDtor(void* object) {
  GetSinkRequest* _this = reinterpret_cast< GetSinkRequest* >(object);
  (void)_this;
}
void GetSinkRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetSinkRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSinkRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSinkRequest& GetSinkRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsGetSinkRequest();
  return *internal_default_instance();
}

GetSinkRequest* GetSinkRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetSinkRequest>(arena);
}

void GetSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sink_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetSinkRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sink_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sink_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sink_name().data(), static_cast<int>(this->sink_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetSinkRequest.sink_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetSinkRequest)
  return false;
#undef DO_
}

void GetSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetSinkRequest.sink_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sink_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetSinkRequest)
}

::google::protobuf::uint8* GetSinkRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetSinkRequest.sink_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sink_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetSinkRequest)
  return target;
}

size_t GetSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetSinkRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sink_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSinkRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSinkRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetSinkRequest)
    MergeFrom(*source);
  }
}

void GetSinkRequest::MergeFrom(const GetSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sink_name().size() > 0) {
    set_sink_name(from.sink_name());
  }
}

void GetSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSinkRequest::CopyFrom(const GetSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSinkRequest::IsInitialized() const {
  return true;
}

void GetSinkRequest::Swap(GetSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetSinkRequest::UnsafeArenaSwap(GetSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetSinkRequest::InternalSwap(GetSinkRequest* other) {
  using std::swap;
  sink_name_.Swap(&other->sink_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSinkRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateSinkRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateSinkRequest_default_instance_._instance.get_mutable()->sink_ = const_cast< ::google::logging::v2::LogSink*>(
      ::google::logging::v2::LogSink::internal_default_instance());
}
void CreateSinkRequest::_slow_mutable_sink() {
  sink_ = ::google::protobuf::Arena::CreateMessage< ::google::logging::v2::LogSink >(
      GetArenaNoVirtual());
}
void CreateSinkRequest::unsafe_arena_set_allocated_sink(
    ::google::logging::v2::LogSink* sink) {
  if (GetArenaNoVirtual() == NULL) {
    delete sink_;
  }
  sink_ = sink;
  if (sink) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateSinkRequest.sink)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateSinkRequest::kParentFieldNumber;
const int CreateSinkRequest::kSinkFieldNumber;
const int CreateSinkRequest::kUniqueWriterIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateSinkRequest::CreateSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsCreateSinkRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateSinkRequest)
}
CreateSinkRequest::CreateSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsCreateSinkRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateSinkRequest)
}
CreateSinkRequest::CreateSinkRequest(const CreateSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  if (from.has_sink()) {
    sink_ = new ::google::logging::v2::LogSink(*from.sink_);
  } else {
    sink_ = NULL;
  }
  unique_writer_identity_ = from.unique_writer_identity_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateSinkRequest)
}

void CreateSinkRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sink_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_writer_identity_) -
      reinterpret_cast<char*>(&sink_)) + sizeof(unique_writer_identity_));
  _cached_size_ = 0;
}

CreateSinkRequest::~CreateSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateSinkRequest)
  SharedDtor();
}

void CreateSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sink_;
}

void CreateSinkRequest::ArenaDtor(void* object) {
  CreateSinkRequest* _this = reinterpret_cast< CreateSinkRequest* >(object);
  (void)_this;
}
void CreateSinkRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreateSinkRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateSinkRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateSinkRequest& CreateSinkRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsCreateSinkRequest();
  return *internal_default_instance();
}

CreateSinkRequest* CreateSinkRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CreateSinkRequest>(arena);
}

void CreateSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && sink_ != NULL) {
    delete sink_;
  }
  sink_ = NULL;
  unique_writer_identity_ = false;
  _internal_metadata_.Clear();
}

bool CreateSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateSinkRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateSinkRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogSink sink = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unique_writer_identity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unique_writer_identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateSinkRequest)
  return false;
#undef DO_
}

void CreateSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateSinkRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.logging.v2.LogSink sink = 2;
  if (this->has_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sink_, output);
  }

  // bool unique_writer_identity = 3;
  if (this->unique_writer_identity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->unique_writer_identity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateSinkRequest)
}

::google::protobuf::uint8* CreateSinkRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateSinkRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.logging.v2.LogSink sink = 2;
  if (this->has_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->sink_, deterministic, target);
  }

  // bool unique_writer_identity = 3;
  if (this->unique_writer_identity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->unique_writer_identity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateSinkRequest)
  return target;
}

size_t CreateSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateSinkRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.logging.v2.LogSink sink = 2;
  if (this->has_sink()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sink_);
  }

  // bool unique_writer_identity = 3;
  if (this->unique_writer_identity() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSinkRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateSinkRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateSinkRequest)
    MergeFrom(*source);
  }
}

void CreateSinkRequest::MergeFrom(const CreateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.has_sink()) {
    mutable_sink()->::google::logging::v2::LogSink::MergeFrom(from.sink());
  }
  if (from.unique_writer_identity() != 0) {
    set_unique_writer_identity(from.unique_writer_identity());
  }
}

void CreateSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSinkRequest::CopyFrom(const CreateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSinkRequest::IsInitialized() const {
  return true;
}

void CreateSinkRequest::Swap(CreateSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateSinkRequest::UnsafeArenaSwap(CreateSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateSinkRequest::InternalSwap(CreateSinkRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  swap(sink_, other->sink_);
  swap(unique_writer_identity_, other->unique_writer_identity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateSinkRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateSinkRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateSinkRequest_default_instance_._instance.get_mutable()->sink_ = const_cast< ::google::logging::v2::LogSink*>(
      ::google::logging::v2::LogSink::internal_default_instance());
}
void UpdateSinkRequest::_slow_mutable_sink() {
  sink_ = ::google::protobuf::Arena::CreateMessage< ::google::logging::v2::LogSink >(
      GetArenaNoVirtual());
}
void UpdateSinkRequest::unsafe_arena_set_allocated_sink(
    ::google::logging::v2::LogSink* sink) {
  if (GetArenaNoVirtual() == NULL) {
    delete sink_;
  }
  sink_ = sink;
  if (sink) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateSinkRequest.sink)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSinkRequest::kSinkNameFieldNumber;
const int UpdateSinkRequest::kSinkFieldNumber;
const int UpdateSinkRequest::kUniqueWriterIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSinkRequest::UpdateSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsUpdateSinkRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateSinkRequest)
}
UpdateSinkRequest::UpdateSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsUpdateSinkRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateSinkRequest)
}
UpdateSinkRequest::UpdateSinkRequest(const UpdateSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sink_name().size() > 0) {
    sink_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sink_name(),
      GetArenaNoVirtual());
  }
  if (from.has_sink()) {
    sink_ = new ::google::logging::v2::LogSink(*from.sink_);
  } else {
    sink_ = NULL;
  }
  unique_writer_identity_ = from.unique_writer_identity_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateSinkRequest)
}

void UpdateSinkRequest::SharedCtor() {
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sink_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_writer_identity_) -
      reinterpret_cast<char*>(&sink_)) + sizeof(unique_writer_identity_));
  _cached_size_ = 0;
}

UpdateSinkRequest::~UpdateSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateSinkRequest)
  SharedDtor();
}

void UpdateSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  sink_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sink_;
}

void UpdateSinkRequest::ArenaDtor(void* object) {
  UpdateSinkRequest* _this = reinterpret_cast< UpdateSinkRequest* >(object);
  (void)_this;
}
void UpdateSinkRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UpdateSinkRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSinkRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateSinkRequest& UpdateSinkRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsUpdateSinkRequest();
  return *internal_default_instance();
}

UpdateSinkRequest* UpdateSinkRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UpdateSinkRequest>(arena);
}

void UpdateSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sink_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && sink_ != NULL) {
    delete sink_;
  }
  sink_ = NULL;
  unique_writer_identity_ = false;
  _internal_metadata_.Clear();
}

bool UpdateSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateSinkRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sink_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sink_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sink_name().data(), static_cast<int>(this->sink_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateSinkRequest.sink_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogSink sink = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unique_writer_identity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unique_writer_identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateSinkRequest)
  return false;
#undef DO_
}

void UpdateSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateSinkRequest.sink_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sink_name(), output);
  }

  // .google.logging.v2.LogSink sink = 2;
  if (this->has_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sink_, output);
  }

  // bool unique_writer_identity = 3;
  if (this->unique_writer_identity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->unique_writer_identity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateSinkRequest)
}

::google::protobuf::uint8* UpdateSinkRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateSinkRequest.sink_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sink_name(), target);
  }

  // .google.logging.v2.LogSink sink = 2;
  if (this->has_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->sink_, deterministic, target);
  }

  // bool unique_writer_identity = 3;
  if (this->unique_writer_identity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->unique_writer_identity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateSinkRequest)
  return target;
}

size_t UpdateSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateSinkRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sink_name());
  }

  // .google.logging.v2.LogSink sink = 2;
  if (this->has_sink()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sink_);
  }

  // bool unique_writer_identity = 3;
  if (this->unique_writer_identity() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSinkRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSinkRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateSinkRequest)
    MergeFrom(*source);
  }
}

void UpdateSinkRequest::MergeFrom(const UpdateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sink_name().size() > 0) {
    set_sink_name(from.sink_name());
  }
  if (from.has_sink()) {
    mutable_sink()->::google::logging::v2::LogSink::MergeFrom(from.sink());
  }
  if (from.unique_writer_identity() != 0) {
    set_unique_writer_identity(from.unique_writer_identity());
  }
}

void UpdateSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSinkRequest::CopyFrom(const UpdateSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSinkRequest::IsInitialized() const {
  return true;
}

void UpdateSinkRequest::Swap(UpdateSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateSinkRequest::UnsafeArenaSwap(UpdateSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateSinkRequest::InternalSwap(UpdateSinkRequest* other) {
  using std::swap;
  sink_name_.Swap(&other->sink_name_);
  swap(sink_, other->sink_);
  swap(unique_writer_identity_, other->unique_writer_identity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSinkRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSinkRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSinkRequest::kSinkNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSinkRequest::DeleteSinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsDeleteSinkRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteSinkRequest)
}
DeleteSinkRequest::DeleteSinkRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsDeleteSinkRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteSinkRequest)
}
DeleteSinkRequest::DeleteSinkRequest(const DeleteSinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sink_name().size() > 0) {
    sink_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sink_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteSinkRequest)
}

void DeleteSinkRequest::SharedCtor() {
  sink_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteSinkRequest::~DeleteSinkRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteSinkRequest)
  SharedDtor();
}

void DeleteSinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  sink_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteSinkRequest::ArenaDtor(void* object) {
  DeleteSinkRequest* _this = reinterpret_cast< DeleteSinkRequest* >(object);
  (void)_this;
}
void DeleteSinkRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteSinkRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSinkRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSinkRequest& DeleteSinkRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsDeleteSinkRequest();
  return *internal_default_instance();
}

DeleteSinkRequest* DeleteSinkRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeleteSinkRequest>(arena);
}

void DeleteSinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sink_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DeleteSinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteSinkRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sink_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sink_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sink_name().data(), static_cast<int>(this->sink_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteSinkRequest.sink_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteSinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteSinkRequest)
  return false;
#undef DO_
}

void DeleteSinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteSinkRequest.sink_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sink_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteSinkRequest)
}

::google::protobuf::uint8* DeleteSinkRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteSinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sink_name().data(), static_cast<int>(this->sink_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteSinkRequest.sink_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sink_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteSinkRequest)
  return target;
}

size_t DeleteSinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteSinkRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sink_name = 1;
  if (this->sink_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sink_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSinkRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSinkRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteSinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteSinkRequest)
    MergeFrom(*source);
  }
}

void DeleteSinkRequest::MergeFrom(const DeleteSinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteSinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sink_name().size() > 0) {
    set_sink_name(from.sink_name());
  }
}

void DeleteSinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSinkRequest::CopyFrom(const DeleteSinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteSinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSinkRequest::IsInitialized() const {
  return true;
}

void DeleteSinkRequest::Swap(DeleteSinkRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteSinkRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteSinkRequest::UnsafeArenaSwap(DeleteSinkRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteSinkRequest::InternalSwap(DeleteSinkRequest* other) {
  using std::swap;
  sink_name_.Swap(&other->sink_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteSinkRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogExclusion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogExclusion::kNameFieldNumber;
const int LogExclusion::kDescriptionFieldNumber;
const int LogExclusion::kFilterFieldNumber;
const int LogExclusion::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogExclusion::LogExclusion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogExclusion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogExclusion)
}
LogExclusion::LogExclusion(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogExclusion();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogExclusion)
}
LogExclusion::LogExclusion(const LogExclusion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogExclusion)
}

void LogExclusion::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disabled_ = false;
  _cached_size_ = 0;
}

LogExclusion::~LogExclusion() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogExclusion)
  SharedDtor();
}

void LogExclusion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogExclusion::ArenaDtor(void* object) {
  LogExclusion* _this = reinterpret_cast< LogExclusion* >(object);
  (void)_this;
}
void LogExclusion::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogExclusion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogExclusion::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogExclusion& LogExclusion::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsLogExclusion();
  return *internal_default_instance();
}

LogExclusion* LogExclusion::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<LogExclusion>(arena);
}

void LogExclusion::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogExclusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  disabled_ = false;
  _internal_metadata_.Clear();
}

bool LogExclusion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogExclusion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogExclusion.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogExclusion.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogExclusion.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogExclusion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogExclusion)
  return false;
#undef DO_
}

void LogExclusion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogExclusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filter(), output);
  }

  // bool disabled = 4;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->disabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogExclusion)
}

::google::protobuf::uint8* LogExclusion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogExclusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogExclusion.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filter(), target);
  }

  // bool disabled = 4;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->disabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogExclusion)
  return target;
}

size_t LogExclusion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogExclusion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // bool disabled = 4;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogExclusion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogExclusion)
  GOOGLE_DCHECK_NE(&from, this);
  const LogExclusion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogExclusion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogExclusion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogExclusion)
    MergeFrom(*source);
  }
}

void LogExclusion::MergeFrom(const LogExclusion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogExclusion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void LogExclusion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogExclusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogExclusion::CopyFrom(const LogExclusion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogExclusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogExclusion::IsInitialized() const {
  return true;
}

void LogExclusion::Swap(LogExclusion* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogExclusion* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogExclusion::UnsafeArenaSwap(LogExclusion* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogExclusion::InternalSwap(LogExclusion* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  filter_.Swap(&other->filter_);
  swap(disabled_, other->disabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogExclusion::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListExclusionsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListExclusionsRequest::kParentFieldNumber;
const int ListExclusionsRequest::kPageTokenFieldNumber;
const int ListExclusionsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExclusionsRequest::ListExclusionsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListExclusionsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListExclusionsRequest)
}
ListExclusionsRequest::ListExclusionsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListExclusionsRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListExclusionsRequest)
}
ListExclusionsRequest::ListExclusionsRequest(const ListExclusionsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListExclusionsRequest)
}

void ListExclusionsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListExclusionsRequest::~ListExclusionsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListExclusionsRequest)
  SharedDtor();
}

void ListExclusionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListExclusionsRequest::ArenaDtor(void* object) {
  ListExclusionsRequest* _this = reinterpret_cast< ListExclusionsRequest* >(object);
  (void)_this;
}
void ListExclusionsRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListExclusionsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListExclusionsRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListExclusionsRequest& ListExclusionsRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListExclusionsRequest();
  return *internal_default_instance();
}

ListExclusionsRequest* ListExclusionsRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListExclusionsRequest>(arena);
}

void ListExclusionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListExclusionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListExclusionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListExclusionsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListExclusionsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListExclusionsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListExclusionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListExclusionsRequest)
  return false;
#undef DO_
}

void ListExclusionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListExclusionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListExclusionsRequest)
}

::google::protobuf::uint8* ListExclusionsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListExclusionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListExclusionsRequest)
  return target;
}

size_t ListExclusionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListExclusionsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListExclusionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListExclusionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExclusionsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListExclusionsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListExclusionsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListExclusionsRequest)
    MergeFrom(*source);
  }
}

void ListExclusionsRequest::MergeFrom(const ListExclusionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListExclusionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListExclusionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListExclusionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExclusionsRequest::CopyFrom(const ListExclusionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListExclusionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExclusionsRequest::IsInitialized() const {
  return true;
}

void ListExclusionsRequest::Swap(ListExclusionsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListExclusionsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListExclusionsRequest::UnsafeArenaSwap(ListExclusionsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListExclusionsRequest::InternalSwap(ListExclusionsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListExclusionsRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListExclusionsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListExclusionsResponse::kExclusionsFieldNumber;
const int ListExclusionsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExclusionsResponse::ListExclusionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListExclusionsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListExclusionsResponse)
}
ListExclusionsResponse::ListExclusionsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  exclusions_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListExclusionsResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListExclusionsResponse)
}
ListExclusionsResponse::ListExclusionsResponse(const ListExclusionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      exclusions_(from.exclusions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListExclusionsResponse)
}

void ListExclusionsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListExclusionsResponse::~ListExclusionsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListExclusionsResponse)
  SharedDtor();
}

void ListExclusionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListExclusionsResponse::ArenaDtor(void* object) {
  ListExclusionsResponse* _this = reinterpret_cast< ListExclusionsResponse* >(object);
  (void)_this;
}
void ListExclusionsResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListExclusionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListExclusionsResponse::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListExclusionsResponse& ListExclusionsResponse::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsListExclusionsResponse();
  return *internal_default_instance();
}

ListExclusionsResponse* ListExclusionsResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListExclusionsResponse>(arena);
}

void ListExclusionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListExclusionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exclusions_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ListExclusionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListExclusionsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogExclusion exclusions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_exclusions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListExclusionsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListExclusionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListExclusionsResponse)
  return false;
#undef DO_
}

void ListExclusionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListExclusionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogExclusion exclusions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exclusions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->exclusions(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListExclusionsResponse)
}

::google::protobuf::uint8* ListExclusionsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListExclusionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogExclusion exclusions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exclusions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->exclusions(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListExclusionsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListExclusionsResponse)
  return target;
}

size_t ListExclusionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListExclusionsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.logging.v2.LogExclusion exclusions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->exclusions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exclusions(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListExclusionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListExclusionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExclusionsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListExclusionsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListExclusionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListExclusionsResponse)
    MergeFrom(*source);
  }
}

void ListExclusionsResponse::MergeFrom(const ListExclusionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListExclusionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exclusions_.MergeFrom(from.exclusions_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListExclusionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListExclusionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExclusionsResponse::CopyFrom(const ListExclusionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListExclusionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExclusionsResponse::IsInitialized() const {
  return true;
}

void ListExclusionsResponse::Swap(ListExclusionsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListExclusionsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListExclusionsResponse::UnsafeArenaSwap(ListExclusionsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListExclusionsResponse::InternalSwap(ListExclusionsResponse* other) {
  using std::swap;
  exclusions_.InternalSwap(&other->exclusions_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListExclusionsResponse::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetExclusionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetExclusionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetExclusionRequest::GetExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsGetExclusionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetExclusionRequest)
}
GetExclusionRequest::GetExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsGetExclusionRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetExclusionRequest)
}
GetExclusionRequest::GetExclusionRequest(const GetExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetExclusionRequest)
}

void GetExclusionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetExclusionRequest::~GetExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetExclusionRequest)
  SharedDtor();
}

void GetExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetExclusionRequest::ArenaDtor(void* object) {
  GetExclusionRequest* _this = reinterpret_cast< GetExclusionRequest* >(object);
  (void)_this;
}
void GetExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetExclusionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetExclusionRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetExclusionRequest& GetExclusionRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsGetExclusionRequest();
  return *internal_default_instance();
}

GetExclusionRequest* GetExclusionRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetExclusionRequest>(arena);
}

void GetExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetExclusionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetExclusionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetExclusionRequest)
  return false;
#undef DO_
}

void GetExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetExclusionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetExclusionRequest)
}

::google::protobuf::uint8* GetExclusionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetExclusionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetExclusionRequest)
  return target;
}

size_t GetExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetExclusionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetExclusionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetExclusionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetExclusionRequest)
    MergeFrom(*source);
  }
}

void GetExclusionRequest::MergeFrom(const GetExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetExclusionRequest::CopyFrom(const GetExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExclusionRequest::IsInitialized() const {
  return true;
}

void GetExclusionRequest::Swap(GetExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetExclusionRequest::UnsafeArenaSwap(GetExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetExclusionRequest::InternalSwap(GetExclusionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetExclusionRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateExclusionRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateExclusionRequest_default_instance_._instance.get_mutable()->exclusion_ = const_cast< ::google::logging::v2::LogExclusion*>(
      ::google::logging::v2::LogExclusion::internal_default_instance());
}
void CreateExclusionRequest::_slow_mutable_exclusion() {
  exclusion_ = ::google::protobuf::Arena::CreateMessage< ::google::logging::v2::LogExclusion >(
      GetArenaNoVirtual());
}
void CreateExclusionRequest::unsafe_arena_set_allocated_exclusion(
    ::google::logging::v2::LogExclusion* exclusion) {
  if (GetArenaNoVirtual() == NULL) {
    delete exclusion_;
  }
  exclusion_ = exclusion;
  if (exclusion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateExclusionRequest.exclusion)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateExclusionRequest::kParentFieldNumber;
const int CreateExclusionRequest::kExclusionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateExclusionRequest::CreateExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsCreateExclusionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateExclusionRequest)
}
CreateExclusionRequest::CreateExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsCreateExclusionRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateExclusionRequest)
}
CreateExclusionRequest::CreateExclusionRequest(const CreateExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  if (from.has_exclusion()) {
    exclusion_ = new ::google::logging::v2::LogExclusion(*from.exclusion_);
  } else {
    exclusion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateExclusionRequest)
}

void CreateExclusionRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exclusion_ = NULL;
  _cached_size_ = 0;
}

CreateExclusionRequest::~CreateExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateExclusionRequest)
  SharedDtor();
}

void CreateExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete exclusion_;
}

void CreateExclusionRequest::ArenaDtor(void* object) {
  CreateExclusionRequest* _this = reinterpret_cast< CreateExclusionRequest* >(object);
  (void)_this;
}
void CreateExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreateExclusionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateExclusionRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateExclusionRequest& CreateExclusionRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsCreateExclusionRequest();
  return *internal_default_instance();
}

CreateExclusionRequest* CreateExclusionRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CreateExclusionRequest>(arena);
}

void CreateExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && exclusion_ != NULL) {
    delete exclusion_;
  }
  exclusion_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateExclusionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateExclusionRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogExclusion exclusion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exclusion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateExclusionRequest)
  return false;
#undef DO_
}

void CreateExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateExclusionRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.logging.v2.LogExclusion exclusion = 2;
  if (this->has_exclusion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->exclusion_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateExclusionRequest)
}

::google::protobuf::uint8* CreateExclusionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateExclusionRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.logging.v2.LogExclusion exclusion = 2;
  if (this->has_exclusion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->exclusion_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateExclusionRequest)
  return target;
}

size_t CreateExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateExclusionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.logging.v2.LogExclusion exclusion = 2;
  if (this->has_exclusion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->exclusion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateExclusionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateExclusionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateExclusionRequest)
    MergeFrom(*source);
  }
}

void CreateExclusionRequest::MergeFrom(const CreateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.has_exclusion()) {
    mutable_exclusion()->::google::logging::v2::LogExclusion::MergeFrom(from.exclusion());
  }
}

void CreateExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateExclusionRequest::CopyFrom(const CreateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateExclusionRequest::IsInitialized() const {
  return true;
}

void CreateExclusionRequest::Swap(CreateExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateExclusionRequest::UnsafeArenaSwap(CreateExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateExclusionRequest::InternalSwap(CreateExclusionRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  swap(exclusion_, other->exclusion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateExclusionRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateExclusionRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateExclusionRequest_default_instance_._instance.get_mutable()->exclusion_ = const_cast< ::google::logging::v2::LogExclusion*>(
      ::google::logging::v2::LogExclusion::internal_default_instance());
  ::google::logging::v2::_UpdateExclusionRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateExclusionRequest::_slow_mutable_exclusion() {
  exclusion_ = ::google::protobuf::Arena::CreateMessage< ::google::logging::v2::LogExclusion >(
      GetArenaNoVirtual());
}
void UpdateExclusionRequest::unsafe_arena_set_allocated_exclusion(
    ::google::logging::v2::LogExclusion* exclusion) {
  if (GetArenaNoVirtual() == NULL) {
    delete exclusion_;
  }
  exclusion_ = exclusion;
  if (exclusion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateExclusionRequest.exclusion)
}
void UpdateExclusionRequest::_slow_mutable_update_mask() {
  update_mask_ = ::google::protobuf::Arena::Create< ::google::protobuf::FieldMask >(
      GetArenaNoVirtual());
}
void UpdateExclusionRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateExclusionRequest.update_mask)
}
void UpdateExclusionRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateExclusionRequest::kNameFieldNumber;
const int UpdateExclusionRequest::kExclusionFieldNumber;
const int UpdateExclusionRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateExclusionRequest::UpdateExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsUpdateExclusionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateExclusionRequest)
}
UpdateExclusionRequest::UpdateExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsUpdateExclusionRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateExclusionRequest)
}
UpdateExclusionRequest::UpdateExclusionRequest(const UpdateExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_exclusion()) {
    exclusion_ = new ::google::logging::v2::LogExclusion(*from.exclusion_);
  } else {
    exclusion_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateExclusionRequest)
}

void UpdateExclusionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exclusion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&exclusion_)) + sizeof(update_mask_));
  _cached_size_ = 0;
}

UpdateExclusionRequest::~UpdateExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateExclusionRequest)
  SharedDtor();
}

void UpdateExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete exclusion_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateExclusionRequest::ArenaDtor(void* object) {
  UpdateExclusionRequest* _this = reinterpret_cast< UpdateExclusionRequest* >(object);
  (void)_this;
}
void UpdateExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UpdateExclusionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateExclusionRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateExclusionRequest& UpdateExclusionRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsUpdateExclusionRequest();
  return *internal_default_instance();
}

UpdateExclusionRequest* UpdateExclusionRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UpdateExclusionRequest>(arena);
}

void UpdateExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && exclusion_ != NULL) {
    delete exclusion_;
  }
  exclusion_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateExclusionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateExclusionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.logging.v2.LogExclusion exclusion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exclusion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateExclusionRequest)
  return false;
#undef DO_
}

void UpdateExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateExclusionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.logging.v2.LogExclusion exclusion = 2;
  if (this->has_exclusion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->exclusion_, output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->update_mask_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateExclusionRequest)
}

::google::protobuf::uint8* UpdateExclusionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateExclusionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.logging.v2.LogExclusion exclusion = 2;
  if (this->has_exclusion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->exclusion_, deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->update_mask_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateExclusionRequest)
  return target;
}

size_t UpdateExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateExclusionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.logging.v2.LogExclusion exclusion = 2;
  if (this->has_exclusion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->exclusion_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateExclusionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateExclusionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateExclusionRequest)
    MergeFrom(*source);
  }
}

void UpdateExclusionRequest::MergeFrom(const UpdateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_exclusion()) {
    mutable_exclusion()->::google::logging::v2::LogExclusion::MergeFrom(from.exclusion());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateExclusionRequest::CopyFrom(const UpdateExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateExclusionRequest::IsInitialized() const {
  return true;
}

void UpdateExclusionRequest::Swap(UpdateExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateExclusionRequest::UnsafeArenaSwap(UpdateExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateExclusionRequest::InternalSwap(UpdateExclusionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(exclusion_, other->exclusion_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateExclusionRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteExclusionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteExclusionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteExclusionRequest::DeleteExclusionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsDeleteExclusionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteExclusionRequest)
}
DeleteExclusionRequest::DeleteExclusionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsDeleteExclusionRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteExclusionRequest)
}
DeleteExclusionRequest::DeleteExclusionRequest(const DeleteExclusionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteExclusionRequest)
}

void DeleteExclusionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteExclusionRequest::~DeleteExclusionRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteExclusionRequest)
  SharedDtor();
}

void DeleteExclusionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteExclusionRequest::ArenaDtor(void* object) {
  DeleteExclusionRequest* _this = reinterpret_cast< DeleteExclusionRequest* >(object);
  (void)_this;
}
void DeleteExclusionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteExclusionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteExclusionRequest::descriptor() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteExclusionRequest& DeleteExclusionRequest::default_instance() {
  ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::InitDefaultsDeleteExclusionRequest();
  return *internal_default_instance();
}

DeleteExclusionRequest* DeleteExclusionRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeleteExclusionRequest>(arena);
}

void DeleteExclusionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DeleteExclusionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteExclusionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteExclusionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteExclusionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteExclusionRequest)
  return false;
#undef DO_
}

void DeleteExclusionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteExclusionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteExclusionRequest)
}

::google::protobuf::uint8* DeleteExclusionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteExclusionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteExclusionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteExclusionRequest)
  return target;
}

size_t DeleteExclusionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteExclusionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteExclusionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteExclusionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteExclusionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteExclusionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteExclusionRequest)
    MergeFrom(*source);
  }
}

void DeleteExclusionRequest::MergeFrom(const DeleteExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteExclusionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DeleteExclusionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteExclusionRequest::CopyFrom(const DeleteExclusionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteExclusionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteExclusionRequest::IsInitialized() const {
  return true;
}

void DeleteExclusionRequest::Swap(DeleteExclusionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteExclusionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteExclusionRequest::UnsafeArenaSwap(DeleteExclusionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteExclusionRequest::InternalSwap(DeleteExclusionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteExclusionRequest::GetMetadata() const {
  protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2flogging_2fv2_2flogging_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace logging
}  // namespace google

// @@protoc_insertion_point(global_scope)
