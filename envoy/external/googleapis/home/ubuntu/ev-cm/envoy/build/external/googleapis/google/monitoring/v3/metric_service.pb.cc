// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/metric_service.proto

#include "google/monitoring/v3/metric_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace monitoring {
namespace v3 {
class ListMonitoredResourceDescriptorsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsRequest>
      _instance;
} _ListMonitoredResourceDescriptorsRequest_default_instance_;
class ListMonitoredResourceDescriptorsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsResponse>
      _instance;
} _ListMonitoredResourceDescriptorsResponse_default_instance_;
class GetMonitoredResourceDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMonitoredResourceDescriptorRequest>
      _instance;
} _GetMonitoredResourceDescriptorRequest_default_instance_;
class ListMetricDescriptorsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMetricDescriptorsRequest>
      _instance;
} _ListMetricDescriptorsRequest_default_instance_;
class ListMetricDescriptorsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMetricDescriptorsResponse>
      _instance;
} _ListMetricDescriptorsResponse_default_instance_;
class GetMetricDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetricDescriptorRequest>
      _instance;
} _GetMetricDescriptorRequest_default_instance_;
class CreateMetricDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateMetricDescriptorRequest>
      _instance;
} _CreateMetricDescriptorRequest_default_instance_;
class DeleteMetricDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteMetricDescriptorRequest>
      _instance;
} _DeleteMetricDescriptorRequest_default_instance_;
class ListTimeSeriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTimeSeriesRequest>
      _instance;
} _ListTimeSeriesRequest_default_instance_;
class ListTimeSeriesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTimeSeriesResponse>
      _instance;
} _ListTimeSeriesResponse_default_instance_;
class CreateTimeSeriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTimeSeriesRequest>
      _instance;
} _CreateTimeSeriesRequest_default_instance_;
class CreateTimeSeriesErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTimeSeriesError>
      _instance;
} _CreateTimeSeriesError_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto {
void InitDefaultsListMonitoredResourceDescriptorsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::monitoring::v3::_ListMonitoredResourceDescriptorsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance();
}

void InitDefaultsListMonitoredResourceDescriptorsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListMonitoredResourceDescriptorsRequestImpl);
}

void InitDefaultsListMonitoredResourceDescriptorsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fmonitored_5fresource_2eproto::InitDefaultsMonitoredResourceDescriptor();
  {
    void* ptr = &::google::monitoring::v3::_ListMonitoredResourceDescriptorsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance();
}

void InitDefaultsListMonitoredResourceDescriptorsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListMonitoredResourceDescriptorsResponseImpl);
}

void InitDefaultsGetMonitoredResourceDescriptorRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::monitoring::v3::_GetMonitoredResourceDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetMonitoredResourceDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetMonitoredResourceDescriptorRequest::InitAsDefaultInstance();
}

void InitDefaultsGetMonitoredResourceDescriptorRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetMonitoredResourceDescriptorRequestImpl);
}

void InitDefaultsListMetricDescriptorsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::monitoring::v3::_ListMetricDescriptorsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMetricDescriptorsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMetricDescriptorsRequest::InitAsDefaultInstance();
}

void InitDefaultsListMetricDescriptorsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListMetricDescriptorsRequestImpl);
}

void InitDefaultsListMetricDescriptorsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fmetric_2eproto::InitDefaultsMetricDescriptor();
  {
    void* ptr = &::google::monitoring::v3::_ListMetricDescriptorsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMetricDescriptorsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMetricDescriptorsResponse::InitAsDefaultInstance();
}

void InitDefaultsListMetricDescriptorsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListMetricDescriptorsResponseImpl);
}

void InitDefaultsGetMetricDescriptorRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::monitoring::v3::_GetMetricDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetMetricDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetMetricDescriptorRequest::InitAsDefaultInstance();
}

void InitDefaultsGetMetricDescriptorRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetMetricDescriptorRequestImpl);
}

void InitDefaultsCreateMetricDescriptorRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fmetric_2eproto::InitDefaultsMetricDescriptor();
  {
    void* ptr = &::google::monitoring::v3::_CreateMetricDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateMetricDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateMetricDescriptorRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateMetricDescriptorRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateMetricDescriptorRequestImpl);
}

void InitDefaultsDeleteMetricDescriptorRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::monitoring::v3::_DeleteMetricDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::DeleteMetricDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::DeleteMetricDescriptorRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteMetricDescriptorRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteMetricDescriptorRequestImpl);
}

void InitDefaultsListTimeSeriesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsTimeInterval();
  protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsAggregation();
  {
    void* ptr = &::google::monitoring::v3::_ListTimeSeriesRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListTimeSeriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListTimeSeriesRequest::InitAsDefaultInstance();
}

void InitDefaultsListTimeSeriesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListTimeSeriesRequestImpl);
}

void InitDefaultsListTimeSeriesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto::InitDefaultsTimeSeries();
  {
    void* ptr = &::google::monitoring::v3::_ListTimeSeriesResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListTimeSeriesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListTimeSeriesResponse::InitAsDefaultInstance();
}

void InitDefaultsListTimeSeriesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListTimeSeriesResponseImpl);
}

void InitDefaultsCreateTimeSeriesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto::InitDefaultsTimeSeries();
  {
    void* ptr = &::google::monitoring::v3::_CreateTimeSeriesRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateTimeSeriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateTimeSeriesRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateTimeSeriesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateTimeSeriesRequestImpl);
}

void InitDefaultsCreateTimeSeriesErrorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto::InitDefaultsTimeSeries();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::google::monitoring::v3::_CreateTimeSeriesError_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateTimeSeriesError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateTimeSeriesError::InitAsDefaultInstance();
}

void InitDefaultsCreateTimeSeriesError() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateTimeSeriesErrorImpl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse, resource_descriptors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetMonitoredResourceDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetMonitoredResourceDescriptorRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsResponse, metric_descriptors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListMetricDescriptorsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetMetricDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetMetricDescriptorRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateMetricDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateMetricDescriptorRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateMetricDescriptorRequest, metric_descriptor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteMetricDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteMetricDescriptorRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, aggregation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, order_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesResponse, time_series_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListTimeSeriesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateTimeSeriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateTimeSeriesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateTimeSeriesRequest, time_series_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateTimeSeriesError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateTimeSeriesError, time_series_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateTimeSeriesError, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest)},
  { 9, -1, sizeof(::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse)},
  { 16, -1, sizeof(::google::monitoring::v3::GetMonitoredResourceDescriptorRequest)},
  { 22, -1, sizeof(::google::monitoring::v3::ListMetricDescriptorsRequest)},
  { 31, -1, sizeof(::google::monitoring::v3::ListMetricDescriptorsResponse)},
  { 38, -1, sizeof(::google::monitoring::v3::GetMetricDescriptorRequest)},
  { 44, -1, sizeof(::google::monitoring::v3::CreateMetricDescriptorRequest)},
  { 51, -1, sizeof(::google::monitoring::v3::DeleteMetricDescriptorRequest)},
  { 57, -1, sizeof(::google::monitoring::v3::ListTimeSeriesRequest)},
  { 70, -1, sizeof(::google::monitoring::v3::ListTimeSeriesResponse)},
  { 77, -1, sizeof(::google::monitoring::v3::CreateTimeSeriesRequest)},
  { 84, -1, sizeof(::google::monitoring::v3::CreateTimeSeriesError)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListMonitoredResourceDescriptorsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListMonitoredResourceDescriptorsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetMonitoredResourceDescriptorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListMetricDescriptorsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListMetricDescriptorsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetMetricDescriptorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_CreateMetricDescriptorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_DeleteMetricDescriptorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListTimeSeriesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListTimeSeriesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_CreateTimeSeriesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_CreateTimeSeriesError_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/monitoring/v3/metric_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)google/monitoring/v3/metric_service.pr"
      "oto\022\024google.monitoring.v3\032\034google/api/an"
      "notations.proto\032\027google/api/metric.proto"
      "\032#google/api/monitored_resource.proto\032!g"
      "oogle/monitoring/v3/common.proto\032!google"
      "/monitoring/v3/metric.proto\032\033google/prot"
      "obuf/empty.proto\032\027google/rpc/status.prot"
      "o\"n\n\'ListMonitoredResourceDescriptorsReq"
      "uest\022\014\n\004name\030\005 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpa"
      "ge_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\"\212\001\n(Li"
      "stMonitoredResourceDescriptorsResponse\022E"
      "\n\024resource_descriptors\030\001 \003(\0132\'.google.ap"
      "i.MonitoredResourceDescriptor\022\027\n\017next_pa"
      "ge_token\030\002 \001(\t\"5\n%GetMonitoredResourceDe"
      "scriptorRequest\022\014\n\004name\030\003 \001(\t\"c\n\034ListMet"
      "ricDescriptorsRequest\022\014\n\004name\030\005 \001(\t\022\016\n\006f"
      "ilter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_t"
      "oken\030\004 \001(\t\"r\n\035ListMetricDescriptorsRespo"
      "nse\0228\n\022metric_descriptors\030\001 \003(\0132\034.google"
      ".api.MetricDescriptor\022\027\n\017next_page_token"
      "\030\002 \001(\t\"*\n\032GetMetricDescriptorRequest\022\014\n\004"
      "name\030\003 \001(\t\"f\n\035CreateMetricDescriptorRequ"
      "est\022\014\n\004name\030\003 \001(\t\0227\n\021metric_descriptor\030\002"
      " \001(\0132\034.google.api.MetricDescriptor\"-\n\035De"
      "leteMetricDescriptorRequest\022\014\n\004name\030\003 \001("
      "\t\"\317\002\n\025ListTimeSeriesRequest\022\014\n\004name\030\n \001("
      "\t\022\016\n\006filter\030\002 \001(\t\0224\n\010interval\030\004 \001(\0132\".go"
      "ogle.monitoring.v3.TimeInterval\0226\n\013aggre"
      "gation\030\005 \001(\0132!.google.monitoring.v3.Aggr"
      "egation\022\020\n\010order_by\030\006 \001(\t\022H\n\004view\030\007 \001(\0162"
      ":.google.monitoring.v3.ListTimeSeriesReq"
      "uest.TimeSeriesView\022\021\n\tpage_size\030\010 \001(\005\022\022"
      "\n\npage_token\030\t \001(\t\"\'\n\016TimeSeriesView\022\010\n\004"
      "FULL\020\000\022\013\n\007HEADERS\020\001\"h\n\026ListTimeSeriesRes"
      "ponse\0225\n\013time_series\030\001 \003(\0132 .google.moni"
      "toring.v3.TimeSeries\022\027\n\017next_page_token\030"
      "\002 \001(\t\"^\n\027CreateTimeSeriesRequest\022\014\n\004name"
      "\030\003 \001(\t\0225\n\013time_series\030\002 \003(\0132 .google.mon"
      "itoring.v3.TimeSeries\"r\n\025CreateTimeSerie"
      "sError\0225\n\013time_series\030\001 \001(\0132 .google.mon"
      "itoring.v3.TimeSeries\022\"\n\006status\030\002 \001(\0132\022."
      "google.rpc.Status2\365\n\n\rMetricService\022\335\001\n "
      "ListMonitoredResourceDescriptors\022=.googl"
      "e.monitoring.v3.ListMonitoredResourceDes"
      "criptorsRequest\032>.google.monitoring.v3.L"
      "istMonitoredResourceDescriptorsResponse\""
      ":\202\323\344\223\0024\0222/v3/{name=projects/*}/monitored"
      "ResourceDescriptors\022\304\001\n\036GetMonitoredReso"
      "urceDescriptor\022;.google.monitoring.v3.Ge"
      "tMonitoredResourceDescriptorRequest\032\'.go"
      "ogle.api.MonitoredResourceDescriptor\"<\202\323"
      "\344\223\0026\0224/v3/{name=projects/*/monitoredReso"
      "urceDescriptors/*}\022\261\001\n\025ListMetricDescrip"
      "tors\0222.google.monitoring.v3.ListMetricDe"
      "scriptorsRequest\0323.google.monitoring.v3."
      "ListMetricDescriptorsResponse\"/\202\323\344\223\002)\022\'/"
      "v3/{name=projects/*}/metricDescriptors\022\231"
      "\001\n\023GetMetricDescriptor\0220.google.monitori"
      "ng.v3.GetMetricDescriptorRequest\032\034.googl"
      "e.api.MetricDescriptor\"2\202\323\344\223\002,\022*/v3/{nam"
      "e=projects/*/metricDescriptors/**}\022\257\001\n\026C"
      "reateMetricDescriptor\0223.google.monitorin"
      "g.v3.CreateMetricDescriptorRequest\032\034.goo"
      "gle.api.MetricDescriptor\"B\202\323\344\223\002<\"\'/v3/{n"
      "ame=projects/*}/metricDescriptors:\021metri"
      "c_descriptor\022\231\001\n\026DeleteMetricDescriptor\022"
      "3.google.monitoring.v3.DeleteMetricDescr"
      "iptorRequest\032\026.google.protobuf.Empty\"2\202\323"
      "\344\223\002,**/v3/{name=projects/*/metricDescrip"
      "tors/**}\022\225\001\n\016ListTimeSeries\022+.google.mon"
      "itoring.v3.ListTimeSeriesRequest\032,.googl"
      "e.monitoring.v3.ListTimeSeriesResponse\"("
      "\202\323\344\223\002\"\022 /v3/{name=projects/*}/timeSeries"
      "\022\206\001\n\020CreateTimeSeries\022-.google.monitorin"
      "g.v3.CreateTimeSeriesRequest\032\026.google.pr"
      "otobuf.Empty\"+\202\323\344\223\002%\" /v3/{name=projects"
      "/*}/timeSeries:\001*B\215\001\n\030com.google.monitor"
      "ing.v3B\022MetricServiceProtoP\001Z>google.gol"
      "ang.org/genproto/googleapis/monitoring/v"
      "3;monitoring\252\002\032Google.Cloud.Monitoring.V"
      "3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/metric_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fmetric_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fmonitored_5fresource_2eproto::AddDescriptors();
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::AddDescriptors();
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto
namespace google {
namespace monitoring {
namespace v3 {
const ::google::protobuf::EnumDescriptor* ListTimeSeriesRequest_TimeSeriesView_descriptor() {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool ListTimeSeriesRequest_TimeSeriesView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::FULL;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::HEADERS;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::TimeSeriesView_MIN;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::TimeSeriesView_MAX;
const int ListTimeSeriesRequest::TimeSeriesView_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsRequest::kNameFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kFilterFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageSizeFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMonitoredResourceDescriptorsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}

void ListMonitoredResourceDescriptorsRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListMonitoredResourceDescriptorsRequest::~ListMonitoredResourceDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsRequest::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListMonitoredResourceDescriptorsRequest& ListMonitoredResourceDescriptorsRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMonitoredResourceDescriptorsRequest();
  return *internal_default_instance();
}

ListMonitoredResourceDescriptorsRequest* ListMonitoredResourceDescriptorsRequest::New(::google::protobuf::Arena* arena) const {
  ListMonitoredResourceDescriptorsRequest* n = new ListMonitoredResourceDescriptorsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMonitoredResourceDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListMonitoredResourceDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return target;
}

size_t ListMonitoredResourceDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMonitoredResourceDescriptorsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsRequest::Swap(ListMonitoredResourceDescriptorsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsRequest::InternalSwap(ListMonitoredResourceDescriptorsRequest* other) {
  using std::swap;
  filter_.Swap(&other->filter_);
  page_token_.Swap(&other->page_token_);
  name_.Swap(&other->name_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance() {
}
void ListMonitoredResourceDescriptorsResponse::clear_resource_descriptors() {
  resource_descriptors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsResponse::kResourceDescriptorsFieldNumber;
const int ListMonitoredResourceDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMonitoredResourceDescriptorsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resource_descriptors_(from.resource_descriptors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}

void ListMonitoredResourceDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListMonitoredResourceDescriptorsResponse::~ListMonitoredResourceDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListMonitoredResourceDescriptorsResponse& ListMonitoredResourceDescriptorsResponse::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMonitoredResourceDescriptorsResponse();
  return *internal_default_instance();
}

ListMonitoredResourceDescriptorsResponse* ListMonitoredResourceDescriptorsResponse::New(::google::protobuf::Arena* arena) const {
  ListMonitoredResourceDescriptorsResponse* n = new ListMonitoredResourceDescriptorsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMonitoredResourceDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_descriptors_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListMonitoredResourceDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_resource_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resource_descriptors(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->resource_descriptors(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return target;
}

size_t ListMonitoredResourceDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->resource_descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resource_descriptors(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMonitoredResourceDescriptorsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_descriptors_.MergeFrom(from.resource_descriptors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsResponse::Swap(ListMonitoredResourceDescriptorsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsResponse::InternalSwap(ListMonitoredResourceDescriptorsResponse* other) {
  using std::swap;
  resource_descriptors_.InternalSwap(&other->resource_descriptors_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMonitoredResourceDescriptorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMonitoredResourceDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMonitoredResourceDescriptorRequest::GetMonitoredResourceDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsGetMonitoredResourceDescriptorRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}
GetMonitoredResourceDescriptorRequest::GetMonitoredResourceDescriptorRequest(const GetMonitoredResourceDescriptorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}

void GetMonitoredResourceDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetMonitoredResourceDescriptorRequest::~GetMonitoredResourceDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  SharedDtor();
}

void GetMonitoredResourceDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMonitoredResourceDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMonitoredResourceDescriptorRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMonitoredResourceDescriptorRequest& GetMonitoredResourceDescriptorRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsGetMonitoredResourceDescriptorRequest();
  return *internal_default_instance();
}

GetMonitoredResourceDescriptorRequest* GetMonitoredResourceDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  GetMonitoredResourceDescriptorRequest* n = new GetMonitoredResourceDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMonitoredResourceDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMonitoredResourceDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return false;
#undef DO_
}

void GetMonitoredResourceDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}

::google::protobuf::uint8* GetMonitoredResourceDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return target;
}

size_t GetMonitoredResourceDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMonitoredResourceDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMonitoredResourceDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMonitoredResourceDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
    MergeFrom(*source);
  }
}

void GetMonitoredResourceDescriptorRequest::MergeFrom(const GetMonitoredResourceDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetMonitoredResourceDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMonitoredResourceDescriptorRequest::CopyFrom(const GetMonitoredResourceDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonitoredResourceDescriptorRequest::IsInitialized() const {
  return true;
}

void GetMonitoredResourceDescriptorRequest::Swap(GetMonitoredResourceDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMonitoredResourceDescriptorRequest::InternalSwap(GetMonitoredResourceDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMonitoredResourceDescriptorRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListMetricDescriptorsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMetricDescriptorsRequest::kNameFieldNumber;
const int ListMetricDescriptorsRequest::kFilterFieldNumber;
const int ListMetricDescriptorsRequest::kPageSizeFieldNumber;
const int ListMetricDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMetricDescriptorsRequest::ListMetricDescriptorsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMetricDescriptorsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMetricDescriptorsRequest)
}
ListMetricDescriptorsRequest::ListMetricDescriptorsRequest(const ListMetricDescriptorsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMetricDescriptorsRequest)
}

void ListMetricDescriptorsRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListMetricDescriptorsRequest::~ListMetricDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMetricDescriptorsRequest)
  SharedDtor();
}

void ListMetricDescriptorsRequest::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMetricDescriptorsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMetricDescriptorsRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListMetricDescriptorsRequest& ListMetricDescriptorsRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMetricDescriptorsRequest();
  return *internal_default_instance();
}

ListMetricDescriptorsRequest* ListMetricDescriptorsRequest::New(::google::protobuf::Arena* arena) const {
  ListMetricDescriptorsRequest* n = new ListMetricDescriptorsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMetricDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListMetricDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMetricDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMetricDescriptorsRequest)
  return false;
#undef DO_
}

void ListMetricDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMetricDescriptorsRequest)
}

::google::protobuf::uint8* ListMetricDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMetricDescriptorsRequest)
  return target;
}

size_t ListMetricDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMetricDescriptorsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMetricDescriptorsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMetricDescriptorsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMetricDescriptorsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMetricDescriptorsRequest)
    MergeFrom(*source);
  }
}

void ListMetricDescriptorsRequest::MergeFrom(const ListMetricDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListMetricDescriptorsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMetricDescriptorsRequest::CopyFrom(const ListMetricDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMetricDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListMetricDescriptorsRequest::Swap(ListMetricDescriptorsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMetricDescriptorsRequest::InternalSwap(ListMetricDescriptorsRequest* other) {
  using std::swap;
  filter_.Swap(&other->filter_);
  page_token_.Swap(&other->page_token_);
  name_.Swap(&other->name_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMetricDescriptorsRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListMetricDescriptorsResponse::InitAsDefaultInstance() {
}
void ListMetricDescriptorsResponse::clear_metric_descriptors() {
  metric_descriptors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMetricDescriptorsResponse::kMetricDescriptorsFieldNumber;
const int ListMetricDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMetricDescriptorsResponse::ListMetricDescriptorsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMetricDescriptorsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMetricDescriptorsResponse)
}
ListMetricDescriptorsResponse::ListMetricDescriptorsResponse(const ListMetricDescriptorsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metric_descriptors_(from.metric_descriptors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMetricDescriptorsResponse)
}

void ListMetricDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListMetricDescriptorsResponse::~ListMetricDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMetricDescriptorsResponse)
  SharedDtor();
}

void ListMetricDescriptorsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMetricDescriptorsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMetricDescriptorsResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListMetricDescriptorsResponse& ListMetricDescriptorsResponse::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListMetricDescriptorsResponse();
  return *internal_default_instance();
}

ListMetricDescriptorsResponse* ListMetricDescriptorsResponse::New(::google::protobuf::Arena* arena) const {
  ListMetricDescriptorsResponse* n = new ListMetricDescriptorsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMetricDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_descriptors_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListMetricDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MetricDescriptor metric_descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_metric_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMetricDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMetricDescriptorsResponse)
  return false;
#undef DO_
}

void ListMetricDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metric_descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metric_descriptors(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMetricDescriptorsResponse)
}

::google::protobuf::uint8* ListMetricDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metric_descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->metric_descriptors(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMetricDescriptorsResponse)
  return target;
}

size_t ListMetricDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metric_descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metric_descriptors(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMetricDescriptorsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMetricDescriptorsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMetricDescriptorsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMetricDescriptorsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMetricDescriptorsResponse)
    MergeFrom(*source);
  }
}

void ListMetricDescriptorsResponse::MergeFrom(const ListMetricDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metric_descriptors_.MergeFrom(from.metric_descriptors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListMetricDescriptorsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMetricDescriptorsResponse::CopyFrom(const ListMetricDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMetricDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListMetricDescriptorsResponse::Swap(ListMetricDescriptorsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMetricDescriptorsResponse::InternalSwap(ListMetricDescriptorsResponse* other) {
  using std::swap;
  metric_descriptors_.InternalSwap(&other->metric_descriptors_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMetricDescriptorsResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMetricDescriptorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricDescriptorRequest::GetMetricDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsGetMetricDescriptorRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetMetricDescriptorRequest)
}
GetMetricDescriptorRequest::GetMetricDescriptorRequest(const GetMetricDescriptorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetMetricDescriptorRequest)
}

void GetMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetMetricDescriptorRequest::~GetMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetMetricDescriptorRequest)
  SharedDtor();
}

void GetMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMetricDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMetricDescriptorRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMetricDescriptorRequest& GetMetricDescriptorRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsGetMetricDescriptorRequest();
  return *internal_default_instance();
}

GetMetricDescriptorRequest* GetMetricDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  GetMetricDescriptorRequest* n = new GetMetricDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetMetricDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetMetricDescriptorRequest)
  return false;
#undef DO_
}

void GetMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetMetricDescriptorRequest)
}

::google::protobuf::uint8* GetMetricDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMetricDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetMetricDescriptorRequest)
  return target;
}

size_t GetMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetMetricDescriptorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMetricDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetricDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetMetricDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetMetricDescriptorRequest)
    MergeFrom(*source);
  }
}

void GetMetricDescriptorRequest::MergeFrom(const GetMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetMetricDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricDescriptorRequest::CopyFrom(const GetMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricDescriptorRequest::IsInitialized() const {
  return true;
}

void GetMetricDescriptorRequest::Swap(GetMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricDescriptorRequest::InternalSwap(GetMetricDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMetricDescriptorRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateMetricDescriptorRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_CreateMetricDescriptorRequest_default_instance_._instance.get_mutable()->metric_descriptor_ = const_cast< ::google::api::MetricDescriptor*>(
      ::google::api::MetricDescriptor::internal_default_instance());
}
void CreateMetricDescriptorRequest::clear_metric_descriptor() {
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMetricDescriptorRequest::kNameFieldNumber;
const int CreateMetricDescriptorRequest::kMetricDescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMetricDescriptorRequest::CreateMetricDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateMetricDescriptorRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateMetricDescriptorRequest)
}
CreateMetricDescriptorRequest::CreateMetricDescriptorRequest(const CreateMetricDescriptorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_metric_descriptor()) {
    metric_descriptor_ = new ::google::api::MetricDescriptor(*from.metric_descriptor_);
  } else {
    metric_descriptor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateMetricDescriptorRequest)
}

void CreateMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_descriptor_ = NULL;
  _cached_size_ = 0;
}

CreateMetricDescriptorRequest::~CreateMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateMetricDescriptorRequest)
  SharedDtor();
}

void CreateMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_descriptor_;
}

void CreateMetricDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMetricDescriptorRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMetricDescriptorRequest& CreateMetricDescriptorRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateMetricDescriptorRequest();
  return *internal_default_instance();
}

CreateMetricDescriptorRequest* CreateMetricDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  CreateMetricDescriptorRequest* n = new CreateMetricDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.MetricDescriptor metric_descriptor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateMetricDescriptorRequest)
  return false;
#undef DO_
}

void CreateMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metric_descriptor_, output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateMetricDescriptorRequest)
}

::google::protobuf::uint8* CreateMetricDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->metric_descriptor_, deterministic, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateMetricDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateMetricDescriptorRequest)
  return target;
}

size_t CreateMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metric_descriptor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateMetricDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMetricDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMetricDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateMetricDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateMetricDescriptorRequest)
    MergeFrom(*source);
  }
}

void CreateMetricDescriptorRequest::MergeFrom(const CreateMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_metric_descriptor()) {
    mutable_metric_descriptor()->::google::api::MetricDescriptor::MergeFrom(from.metric_descriptor());
  }
}

void CreateMetricDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMetricDescriptorRequest::CopyFrom(const CreateMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMetricDescriptorRequest::IsInitialized() const {
  return true;
}

void CreateMetricDescriptorRequest::Swap(CreateMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMetricDescriptorRequest::InternalSwap(CreateMetricDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(metric_descriptor_, other->metric_descriptor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateMetricDescriptorRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteMetricDescriptorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMetricDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMetricDescriptorRequest::DeleteMetricDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsDeleteMetricDescriptorRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
}
DeleteMetricDescriptorRequest::DeleteMetricDescriptorRequest(const DeleteMetricDescriptorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
}

void DeleteMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteMetricDescriptorRequest::~DeleteMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
  SharedDtor();
}

void DeleteMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteMetricDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMetricDescriptorRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteMetricDescriptorRequest& DeleteMetricDescriptorRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsDeleteMetricDescriptorRequest();
  return *internal_default_instance();
}

DeleteMetricDescriptorRequest* DeleteMetricDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  DeleteMetricDescriptorRequest* n = new DeleteMetricDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.DeleteMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return false;
#undef DO_
}

void DeleteMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.DeleteMetricDescriptorRequest)
}

::google::protobuf::uint8* DeleteMetricDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteMetricDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return target;
}

size_t DeleteMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteMetricDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteMetricDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteMetricDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.DeleteMetricDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.DeleteMetricDescriptorRequest)
    MergeFrom(*source);
  }
}

void DeleteMetricDescriptorRequest::MergeFrom(const DeleteMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteMetricDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMetricDescriptorRequest::CopyFrom(const DeleteMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMetricDescriptorRequest::IsInitialized() const {
  return true;
}

void DeleteMetricDescriptorRequest::Swap(DeleteMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMetricDescriptorRequest::InternalSwap(DeleteMetricDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteMetricDescriptorRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTimeSeriesRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_ListTimeSeriesRequest_default_instance_._instance.get_mutable()->interval_ = const_cast< ::google::monitoring::v3::TimeInterval*>(
      ::google::monitoring::v3::TimeInterval::internal_default_instance());
  ::google::monitoring::v3::_ListTimeSeriesRequest_default_instance_._instance.get_mutable()->aggregation_ = const_cast< ::google::monitoring::v3::Aggregation*>(
      ::google::monitoring::v3::Aggregation::internal_default_instance());
}
void ListTimeSeriesRequest::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void ListTimeSeriesRequest::clear_aggregation() {
  if (GetArenaNoVirtual() == NULL && aggregation_ != NULL) {
    delete aggregation_;
  }
  aggregation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTimeSeriesRequest::kNameFieldNumber;
const int ListTimeSeriesRequest::kFilterFieldNumber;
const int ListTimeSeriesRequest::kIntervalFieldNumber;
const int ListTimeSeriesRequest::kAggregationFieldNumber;
const int ListTimeSeriesRequest::kOrderByFieldNumber;
const int ListTimeSeriesRequest::kViewFieldNumber;
const int ListTimeSeriesRequest::kPageSizeFieldNumber;
const int ListTimeSeriesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTimeSeriesRequest::ListTimeSeriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListTimeSeriesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListTimeSeriesRequest)
}
ListTimeSeriesRequest::ListTimeSeriesRequest(const ListTimeSeriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_by().size() > 0) {
    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interval()) {
    interval_ = new ::google::monitoring::v3::TimeInterval(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_aggregation()) {
    aggregation_ = new ::google::monitoring::v3::Aggregation(*from.aggregation_);
  } else {
    aggregation_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&view_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListTimeSeriesRequest)
}

void ListTimeSeriesRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(page_size_));
  _cached_size_ = 0;
}

ListTimeSeriesRequest::~ListTimeSeriesRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListTimeSeriesRequest)
  SharedDtor();
}

void ListTimeSeriesRequest::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete aggregation_;
}

void ListTimeSeriesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTimeSeriesRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTimeSeriesRequest& ListTimeSeriesRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListTimeSeriesRequest();
  return *internal_default_instance();
}

ListTimeSeriesRequest* ListTimeSeriesRequest::New(::google::protobuf::Arena* arena) const {
  ListTimeSeriesRequest* n = new ListTimeSeriesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTimeSeriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && aggregation_ != NULL) {
    delete aggregation_;
  }
  aggregation_ = NULL;
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&view_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool ListTimeSeriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListTimeSeriesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.TimeInterval interval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.Aggregation aggregation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aggregation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_by = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_by().data(), static_cast<int>(this->order_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.order_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListTimeSeriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListTimeSeriesRequest)
  return false;
#undef DO_
}

void ListTimeSeriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->interval_, output);
  }

  // .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->aggregation_, output);
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.order_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->order_by(), output);
  }

  // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->view(), output);
  }

  // int32 page_size = 8;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->page_size(), output);
  }

  // string page_token = 9;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->page_token(), output);
  }

  // string name = 10;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListTimeSeriesRequest)
}

::google::protobuf::uint8* ListTimeSeriesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->interval_, deterministic, target);
  }

  // .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->aggregation_, deterministic, target);
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.order_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->order_by(), target);
  }

  // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->view(), target);
  }

  // int32 page_size = 8;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->page_size(), target);
  }

  // string page_token = 9;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->page_token(), target);
  }

  // string name = 10;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListTimeSeriesRequest)
  return target;
}

size_t ListTimeSeriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListTimeSeriesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_by());
  }

  // string page_token = 9;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 10;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->aggregation_);
  }

  // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  // int32 page_size = 8;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTimeSeriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTimeSeriesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTimeSeriesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListTimeSeriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListTimeSeriesRequest)
    MergeFrom(*source);
  }
}

void ListTimeSeriesRequest::MergeFrom(const ListTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.order_by().size() > 0) {

    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::monitoring::v3::TimeInterval::MergeFrom(from.interval());
  }
  if (from.has_aggregation()) {
    mutable_aggregation()->::google::monitoring::v3::Aggregation::MergeFrom(from.aggregation());
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListTimeSeriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTimeSeriesRequest::CopyFrom(const ListTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTimeSeriesRequest::IsInitialized() const {
  return true;
}

void ListTimeSeriesRequest::Swap(ListTimeSeriesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTimeSeriesRequest::InternalSwap(ListTimeSeriesRequest* other) {
  using std::swap;
  filter_.Swap(&other->filter_);
  order_by_.Swap(&other->order_by_);
  page_token_.Swap(&other->page_token_);
  name_.Swap(&other->name_);
  swap(interval_, other->interval_);
  swap(aggregation_, other->aggregation_);
  swap(view_, other->view_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTimeSeriesRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTimeSeriesResponse::InitAsDefaultInstance() {
}
void ListTimeSeriesResponse::clear_time_series() {
  time_series_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTimeSeriesResponse::kTimeSeriesFieldNumber;
const int ListTimeSeriesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTimeSeriesResponse::ListTimeSeriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListTimeSeriesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListTimeSeriesResponse)
}
ListTimeSeriesResponse::ListTimeSeriesResponse(const ListTimeSeriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      time_series_(from.time_series_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListTimeSeriesResponse)
}

void ListTimeSeriesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTimeSeriesResponse::~ListTimeSeriesResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListTimeSeriesResponse)
  SharedDtor();
}

void ListTimeSeriesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTimeSeriesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTimeSeriesResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTimeSeriesResponse& ListTimeSeriesResponse::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsListTimeSeriesResponse();
  return *internal_default_instance();
}

ListTimeSeriesResponse* ListTimeSeriesResponse::New(::google::protobuf::Arena* arena) const {
  ListTimeSeriesResponse* n = new ListTimeSeriesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTimeSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListTimeSeriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_series_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTimeSeriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListTimeSeriesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.TimeSeries time_series = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_time_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListTimeSeriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListTimeSeriesResponse)
  return false;
#undef DO_
}

void ListTimeSeriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListTimeSeriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_series_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->time_series(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListTimeSeriesResponse)
}

::google::protobuf::uint8* ListTimeSeriesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListTimeSeriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_series_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->time_series(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListTimeSeriesResponse)
  return target;
}

size_t ListTimeSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListTimeSeriesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->time_series_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time_series(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTimeSeriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTimeSeriesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTimeSeriesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListTimeSeriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListTimeSeriesResponse)
    MergeFrom(*source);
  }
}

void ListTimeSeriesResponse::MergeFrom(const ListTimeSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  time_series_.MergeFrom(from.time_series_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTimeSeriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTimeSeriesResponse::CopyFrom(const ListTimeSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTimeSeriesResponse::IsInitialized() const {
  return true;
}

void ListTimeSeriesResponse::Swap(ListTimeSeriesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTimeSeriesResponse::InternalSwap(ListTimeSeriesResponse* other) {
  using std::swap;
  time_series_.InternalSwap(&other->time_series_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTimeSeriesResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTimeSeriesRequest::InitAsDefaultInstance() {
}
void CreateTimeSeriesRequest::clear_time_series() {
  time_series_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTimeSeriesRequest::kNameFieldNumber;
const int CreateTimeSeriesRequest::kTimeSeriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTimeSeriesRequest::CreateTimeSeriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateTimeSeriesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateTimeSeriesRequest)
}
CreateTimeSeriesRequest::CreateTimeSeriesRequest(const CreateTimeSeriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      time_series_(from.time_series_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateTimeSeriesRequest)
}

void CreateTimeSeriesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateTimeSeriesRequest::~CreateTimeSeriesRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateTimeSeriesRequest)
  SharedDtor();
}

void CreateTimeSeriesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTimeSeriesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTimeSeriesRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTimeSeriesRequest& CreateTimeSeriesRequest::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateTimeSeriesRequest();
  return *internal_default_instance();
}

CreateTimeSeriesRequest* CreateTimeSeriesRequest::New(::google::protobuf::Arena* arena) const {
  CreateTimeSeriesRequest* n = new CreateTimeSeriesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTimeSeriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_series_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateTimeSeriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateTimeSeriesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.TimeSeries time_series = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_time_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateTimeSeriesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateTimeSeriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateTimeSeriesRequest)
  return false;
#undef DO_
}

void CreateTimeSeriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_series_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->time_series(static_cast<int>(i)), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateTimeSeriesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateTimeSeriesRequest)
}

::google::protobuf::uint8* CreateTimeSeriesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_series_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->time_series(static_cast<int>(i)), deterministic, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateTimeSeriesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateTimeSeriesRequest)
  return target;
}

size_t CreateTimeSeriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateTimeSeriesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->time_series_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time_series(static_cast<int>(i)));
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTimeSeriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTimeSeriesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTimeSeriesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateTimeSeriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateTimeSeriesRequest)
    MergeFrom(*source);
  }
}

void CreateTimeSeriesRequest::MergeFrom(const CreateTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  time_series_.MergeFrom(from.time_series_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CreateTimeSeriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTimeSeriesRequest::CopyFrom(const CreateTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTimeSeriesRequest::IsInitialized() const {
  return true;
}

void CreateTimeSeriesRequest::Swap(CreateTimeSeriesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTimeSeriesRequest::InternalSwap(CreateTimeSeriesRequest* other) {
  using std::swap;
  time_series_.InternalSwap(&other->time_series_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTimeSeriesRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTimeSeriesError::InitAsDefaultInstance() {
  ::google::monitoring::v3::_CreateTimeSeriesError_default_instance_._instance.get_mutable()->time_series_ = const_cast< ::google::monitoring::v3::TimeSeries*>(
      ::google::monitoring::v3::TimeSeries::internal_default_instance());
  ::google::monitoring::v3::_CreateTimeSeriesError_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void CreateTimeSeriesError::clear_time_series() {
  if (GetArenaNoVirtual() == NULL && time_series_ != NULL) {
    delete time_series_;
  }
  time_series_ = NULL;
}
void CreateTimeSeriesError::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTimeSeriesError::kTimeSeriesFieldNumber;
const int CreateTimeSeriesError::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTimeSeriesError::CreateTimeSeriesError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateTimeSeriesError();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateTimeSeriesError)
}
CreateTimeSeriesError::CreateTimeSeriesError(const CreateTimeSeriesError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time_series()) {
    time_series_ = new ::google::monitoring::v3::TimeSeries(*from.time_series_);
  } else {
    time_series_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateTimeSeriesError)
}

void CreateTimeSeriesError::SharedCtor() {
  ::memset(&time_series_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&time_series_)) + sizeof(status_));
  _cached_size_ = 0;
}

CreateTimeSeriesError::~CreateTimeSeriesError() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateTimeSeriesError)
  SharedDtor();
}

void CreateTimeSeriesError::SharedDtor() {
  if (this != internal_default_instance()) delete time_series_;
  if (this != internal_default_instance()) delete status_;
}

void CreateTimeSeriesError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTimeSeriesError::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTimeSeriesError& CreateTimeSeriesError::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::InitDefaultsCreateTimeSeriesError();
  return *internal_default_instance();
}

CreateTimeSeriesError* CreateTimeSeriesError::New(::google::protobuf::Arena* arena) const {
  CreateTimeSeriesError* n = new CreateTimeSeriesError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTimeSeriesError::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateTimeSeriesError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && time_series_ != NULL) {
    delete time_series_;
  }
  time_series_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateTimeSeriesError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateTimeSeriesError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.monitoring.v3.TimeSeries time_series = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateTimeSeriesError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateTimeSeriesError)
  return false;
#undef DO_
}

void CreateTimeSeriesError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateTimeSeriesError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->time_series_, output);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->status_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateTimeSeriesError)
}

::google::protobuf::uint8* CreateTimeSeriesError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateTimeSeriesError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->time_series_, deterministic, target);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->status_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateTimeSeriesError)
  return target;
}

size_t CreateTimeSeriesError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateTimeSeriesError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_series_);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTimeSeriesError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateTimeSeriesError)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTimeSeriesError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTimeSeriesError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateTimeSeriesError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateTimeSeriesError)
    MergeFrom(*source);
  }
}

void CreateTimeSeriesError::MergeFrom(const CreateTimeSeriesError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateTimeSeriesError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time_series()) {
    mutable_time_series()->::google::monitoring::v3::TimeSeries::MergeFrom(from.time_series());
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void CreateTimeSeriesError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateTimeSeriesError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTimeSeriesError::CopyFrom(const CreateTimeSeriesError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateTimeSeriesError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTimeSeriesError::IsInitialized() const {
  return true;
}

void CreateTimeSeriesError::Swap(CreateTimeSeriesError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTimeSeriesError::InternalSwap(CreateTimeSeriesError* other) {
  using std::swap;
  swap(time_series_, other->time_series_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTimeSeriesError::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google

// @@protoc_insertion_point(global_scope)
