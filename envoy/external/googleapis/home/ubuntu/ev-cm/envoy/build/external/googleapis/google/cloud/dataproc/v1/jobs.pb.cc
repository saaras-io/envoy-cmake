// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1/jobs.proto

#include "google/cloud/dataproc/v1/jobs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace dataproc {
namespace v1 {
class LoggingConfig_DriverLogLevelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoggingConfig_DriverLogLevelsEntry_DoNotUse>
      _instance;
} _LoggingConfig_DriverLogLevelsEntry_DoNotUse_default_instance_;
class LoggingConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoggingConfig>
      _instance;
} _LoggingConfig_default_instance_;
class HadoopJob_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HadoopJob_PropertiesEntry_DoNotUse>
      _instance;
} _HadoopJob_PropertiesEntry_DoNotUse_default_instance_;
class HadoopJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HadoopJob>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr main_jar_file_uri_;
  ::google::protobuf::internal::ArenaStringPtr main_class_;
} _HadoopJob_default_instance_;
class SparkJob_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SparkJob_PropertiesEntry_DoNotUse>
      _instance;
} _SparkJob_PropertiesEntry_DoNotUse_default_instance_;
class SparkJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SparkJob>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr main_jar_file_uri_;
  ::google::protobuf::internal::ArenaStringPtr main_class_;
} _SparkJob_default_instance_;
class PySparkJob_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PySparkJob_PropertiesEntry_DoNotUse>
      _instance;
} _PySparkJob_PropertiesEntry_DoNotUse_default_instance_;
class PySparkJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PySparkJob>
      _instance;
} _PySparkJob_default_instance_;
class QueryListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryList>
      _instance;
} _QueryList_default_instance_;
class HiveJob_ScriptVariablesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HiveJob_ScriptVariablesEntry_DoNotUse>
      _instance;
} _HiveJob_ScriptVariablesEntry_DoNotUse_default_instance_;
class HiveJob_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HiveJob_PropertiesEntry_DoNotUse>
      _instance;
} _HiveJob_PropertiesEntry_DoNotUse_default_instance_;
class HiveJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HiveJob>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr query_file_uri_;
  const ::google::cloud::dataproc::v1::QueryList* query_list_;
} _HiveJob_default_instance_;
class SparkSqlJob_ScriptVariablesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SparkSqlJob_ScriptVariablesEntry_DoNotUse>
      _instance;
} _SparkSqlJob_ScriptVariablesEntry_DoNotUse_default_instance_;
class SparkSqlJob_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SparkSqlJob_PropertiesEntry_DoNotUse>
      _instance;
} _SparkSqlJob_PropertiesEntry_DoNotUse_default_instance_;
class SparkSqlJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SparkSqlJob>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr query_file_uri_;
  const ::google::cloud::dataproc::v1::QueryList* query_list_;
} _SparkSqlJob_default_instance_;
class PigJob_ScriptVariablesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PigJob_ScriptVariablesEntry_DoNotUse>
      _instance;
} _PigJob_ScriptVariablesEntry_DoNotUse_default_instance_;
class PigJob_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PigJob_PropertiesEntry_DoNotUse>
      _instance;
} _PigJob_PropertiesEntry_DoNotUse_default_instance_;
class PigJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PigJob>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr query_file_uri_;
  const ::google::cloud::dataproc::v1::QueryList* query_list_;
} _PigJob_default_instance_;
class JobPlacementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobPlacement>
      _instance;
} _JobPlacement_default_instance_;
class JobStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobStatus>
      _instance;
} _JobStatus_default_instance_;
class JobReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JobReference>
      _instance;
} _JobReference_default_instance_;
class JobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job>
      _instance;
  const ::google::cloud::dataproc::v1::HadoopJob* hadoop_job_;
  const ::google::cloud::dataproc::v1::SparkJob* spark_job_;
  const ::google::cloud::dataproc::v1::PySparkJob* pyspark_job_;
  const ::google::cloud::dataproc::v1::HiveJob* hive_job_;
  const ::google::cloud::dataproc::v1::PigJob* pig_job_;
  const ::google::cloud::dataproc::v1::SparkSqlJob* spark_sql_job_;
} _Job_default_instance_;
class SubmitJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubmitJobRequest>
      _instance;
} _SubmitJobRequest_default_instance_;
class GetJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJobRequest>
      _instance;
} _GetJobRequest_default_instance_;
class ListJobsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListJobsRequest>
      _instance;
} _ListJobsRequest_default_instance_;
class ListJobsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListJobsResponse>
      _instance;
} _ListJobsResponse_default_instance_;
class CancelJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelJobRequest>
      _instance;
} _CancelJobRequest_default_instance_;
class DeleteJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteJobRequest>
      _instance;
} _DeleteJobRequest_default_instance_;
}  // namespace v1
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto {
void InitDefaultsLoggingConfig_DriverLogLevelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_LoggingConfig_DriverLogLevelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::LoggingConfig_DriverLogLevelsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::LoggingConfig_DriverLogLevelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsLoggingConfig_DriverLogLevelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoggingConfig_DriverLogLevelsEntry_DoNotUseImpl);
}

void InitDefaultsLoggingConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig_DriverLogLevelsEntry_DoNotUse();
  {
    void* ptr = &::google::cloud::dataproc::v1::_LoggingConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::LoggingConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::LoggingConfig::InitAsDefaultInstance();
}

void InitDefaultsLoggingConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoggingConfigImpl);
}

void InitDefaultsHadoopJob_PropertiesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_HadoopJob_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::HadoopJob_PropertiesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::HadoopJob_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsHadoopJob_PropertiesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHadoopJob_PropertiesEntry_DoNotUseImpl);
}

void InitDefaultsHadoopJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHadoopJob_PropertiesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig();
  {
    void* ptr = &::google::cloud::dataproc::v1::_HadoopJob_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::HadoopJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::HadoopJob::InitAsDefaultInstance();
}

void InitDefaultsHadoopJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHadoopJobImpl);
}

void InitDefaultsSparkJob_PropertiesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_SparkJob_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::SparkJob_PropertiesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::SparkJob_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsSparkJob_PropertiesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSparkJob_PropertiesEntry_DoNotUseImpl);
}

void InitDefaultsSparkJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkJob_PropertiesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig();
  {
    void* ptr = &::google::cloud::dataproc::v1::_SparkJob_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::SparkJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::SparkJob::InitAsDefaultInstance();
}

void InitDefaultsSparkJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSparkJobImpl);
}

void InitDefaultsPySparkJob_PropertiesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_PySparkJob_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::PySparkJob_PropertiesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::PySparkJob_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPySparkJob_PropertiesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPySparkJob_PropertiesEntry_DoNotUseImpl);
}

void InitDefaultsPySparkJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPySparkJob_PropertiesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig();
  {
    void* ptr = &::google::cloud::dataproc::v1::_PySparkJob_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::PySparkJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::PySparkJob::InitAsDefaultInstance();
}

void InitDefaultsPySparkJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPySparkJobImpl);
}

void InitDefaultsQueryListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_QueryList_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::QueryList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::QueryList::InitAsDefaultInstance();
}

void InitDefaultsQueryList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryListImpl);
}

void InitDefaultsHiveJob_ScriptVariablesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_HiveJob_ScriptVariablesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::HiveJob_ScriptVariablesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::HiveJob_ScriptVariablesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsHiveJob_ScriptVariablesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHiveJob_ScriptVariablesEntry_DoNotUseImpl);
}

void InitDefaultsHiveJob_PropertiesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_HiveJob_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::HiveJob_PropertiesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::HiveJob_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsHiveJob_PropertiesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHiveJob_PropertiesEntry_DoNotUseImpl);
}

void InitDefaultsHiveJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsQueryList();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHiveJob_ScriptVariablesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHiveJob_PropertiesEntry_DoNotUse();
  {
    void* ptr = &::google::cloud::dataproc::v1::_HiveJob_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::HiveJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::HiveJob::InitAsDefaultInstance();
}

void InitDefaultsHiveJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHiveJobImpl);
}

void InitDefaultsSparkSqlJob_ScriptVariablesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_SparkSqlJob_ScriptVariablesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::SparkSqlJob_ScriptVariablesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::SparkSqlJob_ScriptVariablesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsSparkSqlJob_ScriptVariablesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSparkSqlJob_ScriptVariablesEntry_DoNotUseImpl);
}

void InitDefaultsSparkSqlJob_PropertiesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_SparkSqlJob_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::SparkSqlJob_PropertiesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::SparkSqlJob_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsSparkSqlJob_PropertiesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSparkSqlJob_PropertiesEntry_DoNotUseImpl);
}

void InitDefaultsSparkSqlJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsQueryList();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkSqlJob_ScriptVariablesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkSqlJob_PropertiesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig();
  {
    void* ptr = &::google::cloud::dataproc::v1::_SparkSqlJob_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::SparkSqlJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::SparkSqlJob::InitAsDefaultInstance();
}

void InitDefaultsSparkSqlJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSparkSqlJobImpl);
}

void InitDefaultsPigJob_ScriptVariablesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_PigJob_ScriptVariablesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::PigJob_ScriptVariablesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::PigJob_ScriptVariablesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPigJob_ScriptVariablesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPigJob_ScriptVariablesEntry_DoNotUseImpl);
}

void InitDefaultsPigJob_PropertiesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_PigJob_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::PigJob_PropertiesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1::PigJob_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPigJob_PropertiesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPigJob_PropertiesEntry_DoNotUseImpl);
}

void InitDefaultsPigJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsQueryList();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPigJob_ScriptVariablesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPigJob_PropertiesEntry_DoNotUse();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig();
  {
    void* ptr = &::google::cloud::dataproc::v1::_PigJob_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::PigJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::PigJob::InitAsDefaultInstance();
}

void InitDefaultsPigJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPigJobImpl);
}

void InitDefaultsJobPlacementImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_JobPlacement_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::JobPlacement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::JobPlacement::InitAsDefaultInstance();
}

void InitDefaultsJobPlacement() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobPlacementImpl);
}

void InitDefaultsJobStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::cloud::dataproc::v1::_JobStatus_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::JobStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::JobStatus::InitAsDefaultInstance();
}

void InitDefaultsJobStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobStatusImpl);
}

void InitDefaultsJobReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_JobReference_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::JobReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::JobReference::InitAsDefaultInstance();
}

void InitDefaultsJobReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobReferenceImpl);
}

void InitDefaultsJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobReference();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobPlacement();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHadoopJob();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkJob();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPySparkJob();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHiveJob();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPigJob();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkSqlJob();
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobStatus();
  {
    void* ptr = &::google::cloud::dataproc::v1::_Job_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::Job();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::Job::InitAsDefaultInstance();
}

void InitDefaultsJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobImpl);
}

void InitDefaultsSubmitJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::dataproc::v1::_SubmitJobRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::SubmitJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::SubmitJobRequest::InitAsDefaultInstance();
}

void InitDefaultsSubmitJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubmitJobRequestImpl);
}

void InitDefaultsGetJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_GetJobRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::GetJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::GetJobRequest::InitAsDefaultInstance();
}

void InitDefaultsGetJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetJobRequestImpl);
}

void InitDefaultsListJobsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_ListJobsRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::ListJobsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::ListJobsRequest::InitAsDefaultInstance();
}

void InitDefaultsListJobsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListJobsRequestImpl);
}

void InitDefaultsListJobsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJob();
  {
    void* ptr = &::google::cloud::dataproc::v1::_ListJobsResponse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::ListJobsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::ListJobsResponse::InitAsDefaultInstance();
}

void InitDefaultsListJobsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListJobsResponseImpl);
}

void InitDefaultsCancelJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_CancelJobRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::CancelJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::CancelJobRequest::InitAsDefaultInstance();
}

void InitDefaultsCancelJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCancelJobRequestImpl);
}

void InitDefaultsDeleteJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dataproc::v1::_DeleteJobRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1::DeleteJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1::DeleteJobRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteJobRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[28];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::LoggingConfig_DriverLogLevelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::LoggingConfig_DriverLogLevelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::LoggingConfig_DriverLogLevelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::LoggingConfig_DriverLogLevelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::LoggingConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::LoggingConfig, driver_log_levels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dataproc::v1::HadoopJobDefaultTypeInternal, main_jar_file_uri_),
  offsetof(::google::cloud::dataproc::v1::HadoopJobDefaultTypeInternal, main_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, jar_file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, archive_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, logging_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HadoopJob, driver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dataproc::v1::SparkJobDefaultTypeInternal, main_jar_file_uri_),
  offsetof(::google::cloud::dataproc::v1::SparkJobDefaultTypeInternal, main_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, jar_file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, archive_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, logging_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkJob, driver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, main_python_file_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, python_file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, jar_file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, archive_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PySparkJob, logging_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::QueryList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::QueryList, queries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_ScriptVariablesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_ScriptVariablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_ScriptVariablesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_ScriptVariablesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dataproc::v1::HiveJobDefaultTypeInternal, query_file_uri_),
  offsetof(::google::cloud::dataproc::v1::HiveJobDefaultTypeInternal, query_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob, continue_on_failure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob, script_variables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob, jar_file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::HiveJob, queries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_ScriptVariablesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_ScriptVariablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_ScriptVariablesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_ScriptVariablesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dataproc::v1::SparkSqlJobDefaultTypeInternal, query_file_uri_),
  offsetof(::google::cloud::dataproc::v1::SparkSqlJobDefaultTypeInternal, query_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob, script_variables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob, jar_file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob, logging_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SparkSqlJob, queries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_ScriptVariablesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_ScriptVariablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_ScriptVariablesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_ScriptVariablesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dataproc::v1::PigJobDefaultTypeInternal, query_file_uri_),
  offsetof(::google::cloud::dataproc::v1::PigJobDefaultTypeInternal, query_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, continue_on_failure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, script_variables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, jar_file_uris_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, logging_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::PigJob, queries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobPlacement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobPlacement, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobPlacement, cluster_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobStatus, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobStatus, state_start_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobReference, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::JobReference, job_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, placement_),
  offsetof(::google::cloud::dataproc::v1::JobDefaultTypeInternal, hadoop_job_),
  offsetof(::google::cloud::dataproc::v1::JobDefaultTypeInternal, spark_job_),
  offsetof(::google::cloud::dataproc::v1::JobDefaultTypeInternal, pyspark_job_),
  offsetof(::google::cloud::dataproc::v1::JobDefaultTypeInternal, hive_job_),
  offsetof(::google::cloud::dataproc::v1::JobDefaultTypeInternal, pig_job_),
  offsetof(::google::cloud::dataproc::v1::JobDefaultTypeInternal, spark_sql_job_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, status_history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, driver_output_resource_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, driver_control_files_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::Job, type_job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SubmitJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SubmitJobRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SubmitJobRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::SubmitJobRequest, job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::GetJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::GetJobRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::GetJobRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::GetJobRequest, job_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsRequest, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsRequest, job_state_matcher_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsResponse, jobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::ListJobsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::CancelJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::CancelJobRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::CancelJobRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::CancelJobRequest, job_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::DeleteJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::DeleteJobRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::DeleteJobRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1::DeleteJobRequest, job_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::cloud::dataproc::v1::LoggingConfig_DriverLogLevelsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::cloud::dataproc::v1::LoggingConfig)},
  { 15, 22, sizeof(::google::cloud::dataproc::v1::HadoopJob_PropertiesEntry_DoNotUse)},
  { 24, -1, sizeof(::google::cloud::dataproc::v1::HadoopJob)},
  { 38, 45, sizeof(::google::cloud::dataproc::v1::SparkJob_PropertiesEntry_DoNotUse)},
  { 47, -1, sizeof(::google::cloud::dataproc::v1::SparkJob)},
  { 61, 68, sizeof(::google::cloud::dataproc::v1::PySparkJob_PropertiesEntry_DoNotUse)},
  { 70, -1, sizeof(::google::cloud::dataproc::v1::PySparkJob)},
  { 83, -1, sizeof(::google::cloud::dataproc::v1::QueryList)},
  { 89, 96, sizeof(::google::cloud::dataproc::v1::HiveJob_ScriptVariablesEntry_DoNotUse)},
  { 98, 105, sizeof(::google::cloud::dataproc::v1::HiveJob_PropertiesEntry_DoNotUse)},
  { 107, -1, sizeof(::google::cloud::dataproc::v1::HiveJob)},
  { 119, 126, sizeof(::google::cloud::dataproc::v1::SparkSqlJob_ScriptVariablesEntry_DoNotUse)},
  { 128, 135, sizeof(::google::cloud::dataproc::v1::SparkSqlJob_PropertiesEntry_DoNotUse)},
  { 137, -1, sizeof(::google::cloud::dataproc::v1::SparkSqlJob)},
  { 149, 156, sizeof(::google::cloud::dataproc::v1::PigJob_ScriptVariablesEntry_DoNotUse)},
  { 158, 165, sizeof(::google::cloud::dataproc::v1::PigJob_PropertiesEntry_DoNotUse)},
  { 167, -1, sizeof(::google::cloud::dataproc::v1::PigJob)},
  { 180, -1, sizeof(::google::cloud::dataproc::v1::JobPlacement)},
  { 187, -1, sizeof(::google::cloud::dataproc::v1::JobStatus)},
  { 195, -1, sizeof(::google::cloud::dataproc::v1::JobReference)},
  { 202, -1, sizeof(::google::cloud::dataproc::v1::Job)},
  { 220, -1, sizeof(::google::cloud::dataproc::v1::SubmitJobRequest)},
  { 228, -1, sizeof(::google::cloud::dataproc::v1::GetJobRequest)},
  { 236, -1, sizeof(::google::cloud::dataproc::v1::ListJobsRequest)},
  { 247, -1, sizeof(::google::cloud::dataproc::v1::ListJobsResponse)},
  { 254, -1, sizeof(::google::cloud::dataproc::v1::CancelJobRequest)},
  { 262, -1, sizeof(::google::cloud::dataproc::v1::DeleteJobRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_LoggingConfig_DriverLogLevelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_LoggingConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_HadoopJob_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_HadoopJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_SparkJob_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_SparkJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_PySparkJob_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_PySparkJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_QueryList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_HiveJob_ScriptVariablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_HiveJob_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_HiveJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_SparkSqlJob_ScriptVariablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_SparkSqlJob_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_SparkSqlJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_PigJob_ScriptVariablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_PigJob_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_PigJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_JobPlacement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_JobStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_JobReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_Job_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_SubmitJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_GetJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_ListJobsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_ListJobsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_CancelJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1::_DeleteJobRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/dataproc/v1/jobs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#google/cloud/dataproc/v1/jobs.proto\022\030g"
      "oogle.cloud.dataproc.v1\032\034google/api/anno"
      "tations.proto\032\033google/protobuf/empty.pro"
      "to\032\037google/protobuf/timestamp.proto\"\301\002\n\r"
      "LoggingConfig\022W\n\021driver_log_levels\030\002 \003(\013"
      "2<.google.cloud.dataproc.v1.LoggingConfi"
      "g.DriverLogLevelsEntry\032e\n\024DriverLogLevel"
      "sEntry\022\013\n\003key\030\001 \001(\t\022<\n\005value\030\002 \001(\0162-.goo"
      "gle.cloud.dataproc.v1.LoggingConfig.Leve"
      "l:\0028\001\"p\n\005Level\022\025\n\021LEVEL_UNSPECIFIED\020\000\022\007\n"
      "\003ALL\020\001\022\t\n\005TRACE\020\002\022\t\n\005DEBUG\020\003\022\010\n\004INFO\020\004\022\010"
      "\n\004WARN\020\005\022\t\n\005ERROR\020\006\022\t\n\005FATAL\020\007\022\007\n\003OFF\020\010\""
      "\323\002\n\tHadoopJob\022\033\n\021main_jar_file_uri\030\001 \001(\t"
      "H\000\022\024\n\nmain_class\030\002 \001(\tH\000\022\014\n\004args\030\003 \003(\t\022\025"
      "\n\rjar_file_uris\030\004 \003(\t\022\021\n\tfile_uris\030\005 \003(\t"
      "\022\024\n\014archive_uris\030\006 \003(\t\022G\n\nproperties\030\007 \003"
      "(\01323.google.cloud.dataproc.v1.HadoopJob."
      "PropertiesEntry\022\?\n\016logging_config\030\010 \001(\0132"
      "\'.google.cloud.dataproc.v1.LoggingConfig"
      "\0321\n\017PropertiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\t:\0028\001B\010\n\006driver\"\321\002\n\010SparkJob\022\033\n\021ma"
      "in_jar_file_uri\030\001 \001(\tH\000\022\024\n\nmain_class\030\002 "
      "\001(\tH\000\022\014\n\004args\030\003 \003(\t\022\025\n\rjar_file_uris\030\004 \003"
      "(\t\022\021\n\tfile_uris\030\005 \003(\t\022\024\n\014archive_uris\030\006 "
      "\003(\t\022F\n\nproperties\030\007 \003(\01322.google.cloud.d"
      "ataproc.v1.SparkJob.PropertiesEntry\022\?\n\016l"
      "ogging_config\030\010 \001(\0132\'.google.cloud.datap"
      "roc.v1.LoggingConfig\0321\n\017PropertiesEntry\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\010\n\006drive"
      "r\"\320\002\n\nPySparkJob\022\034\n\024main_python_file_uri"
      "\030\001 \001(\t\022\014\n\004args\030\002 \003(\t\022\030\n\020python_file_uris"
      "\030\003 \003(\t\022\025\n\rjar_file_uris\030\004 \003(\t\022\021\n\tfile_ur"
      "is\030\005 \003(\t\022\024\n\014archive_uris\030\006 \003(\t\022H\n\nproper"
      "ties\030\007 \003(\01324.google.cloud.dataproc.v1.Py"
      "SparkJob.PropertiesEntry\022\?\n\016logging_conf"
      "ig\030\010 \001(\0132\'.google.cloud.dataproc.v1.Logg"
      "ingConfig\0321\n\017PropertiesEntry\022\013\n\003key\030\001 \001("
      "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\034\n\tQueryList\022\017\n\007que"
      "ries\030\001 \003(\t\"\241\003\n\007HiveJob\022\030\n\016query_file_uri"
      "\030\001 \001(\tH\000\0229\n\nquery_list\030\002 \001(\0132#.google.cl"
      "oud.dataproc.v1.QueryListH\000\022\033\n\023continue_"
      "on_failure\030\003 \001(\010\022P\n\020script_variables\030\004 \003"
      "(\01326.google.cloud.dataproc.v1.HiveJob.Sc"
      "riptVariablesEntry\022E\n\nproperties\030\005 \003(\01321"
      ".google.cloud.dataproc.v1.HiveJob.Proper"
      "tiesEntry\022\025\n\rjar_file_uris\030\006 \003(\t\0326\n\024Scri"
      "ptVariablesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\t:\0028\001\0321\n\017PropertiesEntry\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\t:\0028\001B\t\n\007queries\"\321\003\n\013Spark"
      "SqlJob\022\030\n\016query_file_uri\030\001 \001(\tH\000\0229\n\nquer"
      "y_list\030\002 \001(\0132#.google.cloud.dataproc.v1."
      "QueryListH\000\022T\n\020script_variables\030\003 \003(\0132:."
      "google.cloud.dataproc.v1.SparkSqlJob.Scr"
      "iptVariablesEntry\022I\n\nproperties\030\004 \003(\01325."
      "google.cloud.dataproc.v1.SparkSqlJob.Pro"
      "pertiesEntry\022\025\n\rjar_file_uris\0308 \003(\t\022\?\n\016l"
      "ogging_config\030\006 \001(\0132\'.google.cloud.datap"
      "roc.v1.LoggingConfig\0326\n\024ScriptVariablesE"
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0321\n\017"
      "PropertiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
      "\001(\t:\0028\001B\t\n\007queries\"\337\003\n\006PigJob\022\030\n\016query_f"
      "ile_uri\030\001 \001(\tH\000\0229\n\nquery_list\030\002 \001(\0132#.go"
      "ogle.cloud.dataproc.v1.QueryListH\000\022\033\n\023co"
      "ntinue_on_failure\030\003 \001(\010\022O\n\020script_variab"
      "les\030\004 \003(\01325.google.cloud.dataproc.v1.Pig"
      "Job.ScriptVariablesEntry\022D\n\nproperties\030\005"
      " \003(\01320.google.cloud.dataproc.v1.PigJob.P"
      "ropertiesEntry\022\025\n\rjar_file_uris\030\006 \003(\t\022\?\n"
      "\016logging_config\030\007 \001(\0132\'.google.cloud.dat"
      "aproc.v1.LoggingConfig\0326\n\024ScriptVariable"
      "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0321"
      "\n\017PropertiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
      "\002 \001(\t:\0028\001B\t\n\007queries\":\n\014JobPlacement\022\024\n\014"
      "cluster_name\030\001 \001(\t\022\024\n\014cluster_uuid\030\002 \001(\t"
      "\"\243\002\n\tJobStatus\0228\n\005state\030\001 \001(\0162).google.c"
      "loud.dataproc.v1.JobStatus.State\022\017\n\007deta"
      "ils\030\002 \001(\t\0224\n\020state_start_time\030\006 \001(\0132\032.go"
      "ogle.protobuf.Timestamp\"\224\001\n\005State\022\025\n\021STA"
      "TE_UNSPECIFIED\020\000\022\013\n\007PENDING\020\001\022\016\n\nSETUP_D"
      "ONE\020\010\022\013\n\007RUNNING\020\002\022\022\n\016CANCEL_PENDING\020\003\022\022"
      "\n\016CANCEL_STARTED\020\007\022\r\n\tCANCELLED\020\004\022\010\n\004DON"
      "E\020\005\022\t\n\005ERROR\020\006\"2\n\014JobReference\022\022\n\nprojec"
      "t_id\030\001 \001(\t\022\016\n\006job_id\030\002 \001(\t\"\234\005\n\003Job\0229\n\tre"
      "ference\030\001 \001(\0132&.google.cloud.dataproc.v1"
      ".JobReference\0229\n\tplacement\030\002 \001(\0132&.googl"
      "e.cloud.dataproc.v1.JobPlacement\0229\n\nhado"
      "op_job\030\003 \001(\0132#.google.cloud.dataproc.v1."
      "HadoopJobH\000\0227\n\tspark_job\030\004 \001(\0132\".google."
      "cloud.dataproc.v1.SparkJobH\000\022;\n\013pyspark_"
      "job\030\005 \001(\0132$.google.cloud.dataproc.v1.PyS"
      "parkJobH\000\0225\n\010hive_job\030\006 \001(\0132!.google.clo"
      "ud.dataproc.v1.HiveJobH\000\0223\n\007pig_job\030\007 \001("
      "\0132 .google.cloud.dataproc.v1.PigJobH\000\022>\n"
      "\rspark_sql_job\030\014 \001(\0132%.google.cloud.data"
      "proc.v1.SparkSqlJobH\000\0223\n\006status\030\010 \001(\0132#."
      "google.cloud.dataproc.v1.JobStatus\022;\n\016st"
      "atus_history\030\r \003(\0132#.google.cloud.datapr"
      "oc.v1.JobStatus\022\"\n\032driver_output_resourc"
      "e_uri\030\021 \001(\t\022 \n\030driver_control_files_uri\030"
      "\017 \001(\tB\n\n\010type_job\"b\n\020SubmitJobRequest\022\022\n"
      "\nproject_id\030\001 \001(\t\022\016\n\006region\030\003 \001(\t\022*\n\003job"
      "\030\002 \001(\0132\035.google.cloud.dataproc.v1.Job\"C\n"
      "\rGetJobRequest\022\022\n\nproject_id\030\001 \001(\t\022\016\n\006re"
      "gion\030\003 \001(\t\022\016\n\006job_id\030\002 \001(\t\"\200\002\n\017ListJobsR"
      "equest\022\022\n\nproject_id\030\001 \001(\t\022\016\n\006region\030\006 \001"
      "(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001("
      "\t\022\024\n\014cluster_name\030\004 \001(\t\022T\n\021job_state_mat"
      "cher\030\005 \001(\01629.google.cloud.dataproc.v1.Li"
      "stJobsRequest.JobStateMatcher\"6\n\017JobStat"
      "eMatcher\022\007\n\003ALL\020\000\022\n\n\006ACTIVE\020\001\022\016\n\nNON_ACT"
      "IVE\020\002\"X\n\020ListJobsResponse\022+\n\004jobs\030\001 \003(\0132"
      "\035.google.cloud.dataproc.v1.Job\022\027\n\017next_p"
      "age_token\030\002 \001(\t\"F\n\020CancelJobRequest\022\022\n\np"
      "roject_id\030\001 \001(\t\022\016\n\006region\030\003 \001(\t\022\016\n\006job_i"
      "d\030\002 \001(\t\"F\n\020DeleteJobRequest\022\022\n\nproject_i"
      "d\030\001 \001(\t\022\016\n\006region\030\003 \001(\t\022\016\n\006job_id\030\002 \001(\t2"
      "\226\006\n\rJobController\022\231\001\n\tSubmitJob\022*.google"
      ".cloud.dataproc.v1.SubmitJobRequest\032\035.go"
      "ogle.cloud.dataproc.v1.Job\"A\202\323\344\223\002;\"6/v1/"
      "projects/{project_id}/regions/{region}/j"
      "obs:submit:\001*\022\222\001\n\006GetJob\022\'.google.cloud."
      "dataproc.v1.GetJobRequest\032\035.google.cloud"
      ".dataproc.v1.Job\"@\202\323\344\223\002:\0228/v1/projects/{"
      "project_id}/regions/{region}/jobs/{job_i"
      "d}\022\232\001\n\010ListJobs\022).google.cloud.dataproc."
      "v1.ListJobsRequest\032*.google.cloud.datapr"
      "oc.v1.ListJobsResponse\"7\202\323\344\223\0021\022//v1/proj"
      "ects/{project_id}/regions/{region}/jobs\022"
      "\242\001\n\tCancelJob\022*.google.cloud.dataproc.v1"
      ".CancelJobRequest\032\035.google.cloud.datapro"
      "c.v1.Job\"J\202\323\344\223\002D\"\?/v1/projects/{project_"
      "id}/regions/{region}/jobs/{job_id}:cance"
      "l:\001*\022\221\001\n\tDeleteJob\022*.google.cloud.datapr"
      "oc.v1.DeleteJobRequest\032\026.google.protobuf"
      ".Empty\"@\202\323\344\223\002:*8/v1/projects/{project_id"
      "}/regions/{region}/jobs/{job_id}Bm\n\034com."
      "google.cloud.dataproc.v1B\tJobsProtoP\001Z@g"
      "oogle.golang.org/genproto/googleapis/clo"
      "ud/dataproc/v1;dataprocb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5551);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dataproc/v1/jobs.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1 {
const ::google::protobuf::EnumDescriptor* LoggingConfig_Level_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_enum_descriptors[0];
}
bool LoggingConfig_Level_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoggingConfig_Level LoggingConfig::LEVEL_UNSPECIFIED;
const LoggingConfig_Level LoggingConfig::ALL;
const LoggingConfig_Level LoggingConfig::TRACE;
const LoggingConfig_Level LoggingConfig::DEBUG;
const LoggingConfig_Level LoggingConfig::INFO;
const LoggingConfig_Level LoggingConfig::WARN;
const LoggingConfig_Level LoggingConfig::ERROR;
const LoggingConfig_Level LoggingConfig::FATAL;
const LoggingConfig_Level LoggingConfig::OFF;
const LoggingConfig_Level LoggingConfig::Level_MIN;
const LoggingConfig_Level LoggingConfig::Level_MAX;
const int LoggingConfig::Level_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* JobStatus_State_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_enum_descriptors[1];
}
bool JobStatus_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const JobStatus_State JobStatus::STATE_UNSPECIFIED;
const JobStatus_State JobStatus::PENDING;
const JobStatus_State JobStatus::SETUP_DONE;
const JobStatus_State JobStatus::RUNNING;
const JobStatus_State JobStatus::CANCEL_PENDING;
const JobStatus_State JobStatus::CANCEL_STARTED;
const JobStatus_State JobStatus::CANCELLED;
const JobStatus_State JobStatus::DONE;
const JobStatus_State JobStatus::ERROR;
const JobStatus_State JobStatus::State_MIN;
const JobStatus_State JobStatus::State_MAX;
const int JobStatus::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ListJobsRequest_JobStateMatcher_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_enum_descriptors[2];
}
bool ListJobsRequest_JobStateMatcher_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ListJobsRequest_JobStateMatcher ListJobsRequest::ALL;
const ListJobsRequest_JobStateMatcher ListJobsRequest::ACTIVE;
const ListJobsRequest_JobStateMatcher ListJobsRequest::NON_ACTIVE;
const ListJobsRequest_JobStateMatcher ListJobsRequest::JobStateMatcher_MIN;
const ListJobsRequest_JobStateMatcher ListJobsRequest::JobStateMatcher_MAX;
const int ListJobsRequest::JobStateMatcher_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

LoggingConfig_DriverLogLevelsEntry_DoNotUse::LoggingConfig_DriverLogLevelsEntry_DoNotUse() {}
LoggingConfig_DriverLogLevelsEntry_DoNotUse::LoggingConfig_DriverLogLevelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void LoggingConfig_DriverLogLevelsEntry_DoNotUse::MergeFrom(const LoggingConfig_DriverLogLevelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata LoggingConfig_DriverLogLevelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[0];
}
void LoggingConfig_DriverLogLevelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void LoggingConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoggingConfig::kDriverLogLevelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoggingConfig::LoggingConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.LoggingConfig)
}
LoggingConfig::LoggingConfig(const LoggingConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  driver_log_levels_.MergeFrom(from.driver_log_levels_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.LoggingConfig)
}

void LoggingConfig::SharedCtor() {
  _cached_size_ = 0;
}

LoggingConfig::~LoggingConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.LoggingConfig)
  SharedDtor();
}

void LoggingConfig::SharedDtor() {
}

void LoggingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoggingConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoggingConfig& LoggingConfig::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsLoggingConfig();
  return *internal_default_instance();
}

LoggingConfig* LoggingConfig::New(::google::protobuf::Arena* arena) const {
  LoggingConfig* n = new LoggingConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoggingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.LoggingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  driver_log_levels_.Clear();
  _internal_metadata_.Clear();
}

bool LoggingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.LoggingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .google.cloud.dataproc.v1.LoggingConfig.Level> driver_log_levels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          LoggingConfig_DriverLogLevelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              LoggingConfig_DriverLogLevelsEntry_DoNotUse,
              ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level > > parser(&driver_log_levels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.LoggingConfig.DriverLogLevelsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.LoggingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.LoggingConfig)
  return false;
#undef DO_
}

void LoggingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.LoggingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.cloud.dataproc.v1.LoggingConfig.Level> driver_log_levels = 2;
  if (!this->driver_log_levels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.LoggingConfig.DriverLogLevelsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->driver_log_levels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->driver_log_levels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::const_iterator
          it = this->driver_log_levels().begin();
          it != this->driver_log_levels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LoggingConfig_DriverLogLevelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(driver_log_levels_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LoggingConfig_DriverLogLevelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::const_iterator
          it = this->driver_log_levels().begin();
          it != this->driver_log_levels().end(); ++it) {
        entry.reset(driver_log_levels_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.LoggingConfig)
}

::google::protobuf::uint8* LoggingConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.LoggingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.cloud.dataproc.v1.LoggingConfig.Level> driver_log_levels = 2;
  if (!this->driver_log_levels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.LoggingConfig.DriverLogLevelsEntry.key");
      }
    };

    if (deterministic &&
        this->driver_log_levels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->driver_log_levels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::const_iterator
          it = this->driver_log_levels().begin();
          it != this->driver_log_levels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LoggingConfig_DriverLogLevelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(driver_log_levels_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LoggingConfig_DriverLogLevelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::const_iterator
          it = this->driver_log_levels().begin();
          it != this->driver_log_levels().end(); ++it) {
        entry.reset(driver_log_levels_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.LoggingConfig)
  return target;
}

size_t LoggingConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.LoggingConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.cloud.dataproc.v1.LoggingConfig.Level> driver_log_levels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->driver_log_levels_size());
  {
    ::google::protobuf::scoped_ptr<LoggingConfig_DriverLogLevelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::cloud::dataproc::v1::LoggingConfig_Level >::const_iterator
        it = this->driver_log_levels().begin();
        it != this->driver_log_levels().end(); ++it) {
      entry.reset(driver_log_levels_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoggingConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.LoggingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggingConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoggingConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.LoggingConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.LoggingConfig)
    MergeFrom(*source);
  }
}

void LoggingConfig::MergeFrom(const LoggingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.LoggingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  driver_log_levels_.MergeFrom(from.driver_log_levels_);
}

void LoggingConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.LoggingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggingConfig::CopyFrom(const LoggingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.LoggingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggingConfig::IsInitialized() const {
  return true;
}

void LoggingConfig::Swap(LoggingConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoggingConfig::InternalSwap(LoggingConfig* other) {
  using std::swap;
  driver_log_levels_.Swap(&other->driver_log_levels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoggingConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

HadoopJob_PropertiesEntry_DoNotUse::HadoopJob_PropertiesEntry_DoNotUse() {}
HadoopJob_PropertiesEntry_DoNotUse::HadoopJob_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HadoopJob_PropertiesEntry_DoNotUse::MergeFrom(const HadoopJob_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HadoopJob_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[2];
}
void HadoopJob_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void HadoopJob::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_HadoopJob_default_instance_.main_jar_file_uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dataproc::v1::_HadoopJob_default_instance_.main_class_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dataproc::v1::_HadoopJob_default_instance_._instance.get_mutable()->logging_config_ = const_cast< ::google::cloud::dataproc::v1::LoggingConfig*>(
      ::google::cloud::dataproc::v1::LoggingConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HadoopJob::kMainJarFileUriFieldNumber;
const int HadoopJob::kMainClassFieldNumber;
const int HadoopJob::kArgsFieldNumber;
const int HadoopJob::kJarFileUrisFieldNumber;
const int HadoopJob::kFileUrisFieldNumber;
const int HadoopJob::kArchiveUrisFieldNumber;
const int HadoopJob::kPropertiesFieldNumber;
const int HadoopJob::kLoggingConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HadoopJob::HadoopJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHadoopJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.HadoopJob)
}
HadoopJob::HadoopJob(const HadoopJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_),
      jar_file_uris_(from.jar_file_uris_),
      file_uris_(from.file_uris_),
      archive_uris_(from.archive_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  if (from.has_logging_config()) {
    logging_config_ = new ::google::cloud::dataproc::v1::LoggingConfig(*from.logging_config_);
  } else {
    logging_config_ = NULL;
  }
  clear_has_driver();
  switch (from.driver_case()) {
    case kMainJarFileUri: {
      set_main_jar_file_uri(from.main_jar_file_uri());
      break;
    }
    case kMainClass: {
      set_main_class(from.main_class());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.HadoopJob)
}

void HadoopJob::SharedCtor() {
  logging_config_ = NULL;
  clear_has_driver();
  _cached_size_ = 0;
}

HadoopJob::~HadoopJob() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.HadoopJob)
  SharedDtor();
}

void HadoopJob::SharedDtor() {
  if (this != internal_default_instance()) delete logging_config_;
  if (has_driver()) {
    clear_driver();
  }
}

void HadoopJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HadoopJob::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HadoopJob& HadoopJob::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHadoopJob();
  return *internal_default_instance();
}

HadoopJob* HadoopJob::New(::google::protobuf::Arena* arena) const {
  HadoopJob* n = new HadoopJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HadoopJob::clear_driver() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1.HadoopJob)
  switch (driver_case()) {
    case kMainJarFileUri: {
      driver_.main_jar_file_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kMainClass: {
      driver_.main_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DRIVER_NOT_SET;
}


void HadoopJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.HadoopJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  jar_file_uris_.Clear();
  file_uris_.Clear();
  archive_uris_.Clear();
  properties_.Clear();
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) {
    delete logging_config_;
  }
  logging_config_ = NULL;
  clear_driver();
  _internal_metadata_.Clear();
}

bool HadoopJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.HadoopJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string main_jar_file_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_jar_file_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main_jar_file_uri().data(), static_cast<int>(this->main_jar_file_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.main_jar_file_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string main_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_class()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main_class().data(), static_cast<int>(this->main_class().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.main_class"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            static_cast<int>(this->args(this->args_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jar_file_uris = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jar_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jar_file_uris(this->jar_file_uris_size() - 1).data(),
            static_cast<int>(this->jar_file_uris(this->jar_file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.jar_file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string file_uris = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_uris(this->file_uris_size() - 1).data(),
            static_cast<int>(this->file_uris(this->file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string archive_uris = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_archive_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->archive_uris(this->archive_uris_size() - 1).data(),
            static_cast<int>(this->archive_uris(this->archive_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.archive_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          HadoopJob_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HadoopJob_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.PropertiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HadoopJob.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.HadoopJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.HadoopJob)
  return false;
#undef DO_
}

void HadoopJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.HadoopJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_jar_file_uri = 1;
  if (has_main_jar_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_jar_file_uri().data(), static_cast<int>(this->main_jar_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.main_jar_file_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->main_jar_file_uri(), output);
  }

  // string main_class = 2;
  if (has_main_class()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_class().data(), static_cast<int>(this->main_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.main_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->main_class(), output);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  // repeated string jar_file_uris = 4;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.jar_file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->jar_file_uris(i), output);
  }

  // repeated string file_uris = 5;
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_uris(i).data(), static_cast<int>(this->file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->file_uris(i), output);
  }

  // repeated string archive_uris = 6;
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->archive_uris(i).data(), static_cast<int>(this->archive_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.archive_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->archive_uris(i), output);
  }

  // map<string, string> properties = 7;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HadoopJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HadoopJob.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HadoopJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HadoopJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->logging_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.HadoopJob)
}

::google::protobuf::uint8* HadoopJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.HadoopJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_jar_file_uri = 1;
  if (has_main_jar_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_jar_file_uri().data(), static_cast<int>(this->main_jar_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.main_jar_file_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->main_jar_file_uri(), target);
  }

  // string main_class = 2;
  if (has_main_class()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_class().data(), static_cast<int>(this->main_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.main_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->main_class(), target);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  // repeated string jar_file_uris = 4;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.jar_file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->jar_file_uris(i), target);
  }

  // repeated string file_uris = 5;
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_uris(i).data(), static_cast<int>(this->file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->file_uris(i), target);
  }

  // repeated string archive_uris = 6;
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->archive_uris(i).data(), static_cast<int>(this->archive_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HadoopJob.archive_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->archive_uris(i), target);
  }

  // map<string, string> properties = 7;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HadoopJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HadoopJob.PropertiesEntry.value");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HadoopJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HadoopJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->logging_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.HadoopJob)
  return target;
}

size_t HadoopJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.HadoopJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string args = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated string jar_file_uris = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->jar_file_uris_size());
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jar_file_uris(i));
  }

  // repeated string file_uris = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_uris_size());
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->file_uris(i));
  }

  // repeated string archive_uris = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->archive_uris_size());
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->archive_uris(i));
  }

  // map<string, string> properties = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<HadoopJob_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logging_config_);
  }

  switch (driver_case()) {
    // string main_jar_file_uri = 1;
    case kMainJarFileUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_jar_file_uri());
      break;
    }
    // string main_class = 2;
    case kMainClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_class());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HadoopJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.HadoopJob)
  GOOGLE_DCHECK_NE(&from, this);
  const HadoopJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HadoopJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.HadoopJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.HadoopJob)
    MergeFrom(*source);
  }
}

void HadoopJob::MergeFrom(const HadoopJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.HadoopJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  jar_file_uris_.MergeFrom(from.jar_file_uris_);
  file_uris_.MergeFrom(from.file_uris_);
  archive_uris_.MergeFrom(from.archive_uris_);
  properties_.MergeFrom(from.properties_);
  if (from.has_logging_config()) {
    mutable_logging_config()->::google::cloud::dataproc::v1::LoggingConfig::MergeFrom(from.logging_config());
  }
  switch (from.driver_case()) {
    case kMainJarFileUri: {
      set_main_jar_file_uri(from.main_jar_file_uri());
      break;
    }
    case kMainClass: {
      set_main_class(from.main_class());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
}

void HadoopJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.HadoopJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HadoopJob::CopyFrom(const HadoopJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.HadoopJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HadoopJob::IsInitialized() const {
  return true;
}

void HadoopJob::Swap(HadoopJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HadoopJob::InternalSwap(HadoopJob* other) {
  using std::swap;
  args_.InternalSwap(&other->args_);
  jar_file_uris_.InternalSwap(&other->jar_file_uris_);
  file_uris_.InternalSwap(&other->file_uris_);
  archive_uris_.InternalSwap(&other->archive_uris_);
  properties_.Swap(&other->properties_);
  swap(logging_config_, other->logging_config_);
  swap(driver_, other->driver_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HadoopJob::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SparkJob_PropertiesEntry_DoNotUse::SparkJob_PropertiesEntry_DoNotUse() {}
SparkJob_PropertiesEntry_DoNotUse::SparkJob_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SparkJob_PropertiesEntry_DoNotUse::MergeFrom(const SparkJob_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SparkJob_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[4];
}
void SparkJob_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SparkJob::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_SparkJob_default_instance_.main_jar_file_uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dataproc::v1::_SparkJob_default_instance_.main_class_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dataproc::v1::_SparkJob_default_instance_._instance.get_mutable()->logging_config_ = const_cast< ::google::cloud::dataproc::v1::LoggingConfig*>(
      ::google::cloud::dataproc::v1::LoggingConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SparkJob::kMainJarFileUriFieldNumber;
const int SparkJob::kMainClassFieldNumber;
const int SparkJob::kArgsFieldNumber;
const int SparkJob::kJarFileUrisFieldNumber;
const int SparkJob::kFileUrisFieldNumber;
const int SparkJob::kArchiveUrisFieldNumber;
const int SparkJob::kPropertiesFieldNumber;
const int SparkJob::kLoggingConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SparkJob::SparkJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.SparkJob)
}
SparkJob::SparkJob(const SparkJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_),
      jar_file_uris_(from.jar_file_uris_),
      file_uris_(from.file_uris_),
      archive_uris_(from.archive_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  if (from.has_logging_config()) {
    logging_config_ = new ::google::cloud::dataproc::v1::LoggingConfig(*from.logging_config_);
  } else {
    logging_config_ = NULL;
  }
  clear_has_driver();
  switch (from.driver_case()) {
    case kMainJarFileUri: {
      set_main_jar_file_uri(from.main_jar_file_uri());
      break;
    }
    case kMainClass: {
      set_main_class(from.main_class());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.SparkJob)
}

void SparkJob::SharedCtor() {
  logging_config_ = NULL;
  clear_has_driver();
  _cached_size_ = 0;
}

SparkJob::~SparkJob() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.SparkJob)
  SharedDtor();
}

void SparkJob::SharedDtor() {
  if (this != internal_default_instance()) delete logging_config_;
  if (has_driver()) {
    clear_driver();
  }
}

void SparkJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SparkJob::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SparkJob& SparkJob::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkJob();
  return *internal_default_instance();
}

SparkJob* SparkJob::New(::google::protobuf::Arena* arena) const {
  SparkJob* n = new SparkJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SparkJob::clear_driver() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1.SparkJob)
  switch (driver_case()) {
    case kMainJarFileUri: {
      driver_.main_jar_file_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kMainClass: {
      driver_.main_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DRIVER_NOT_SET;
}


void SparkJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.SparkJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  jar_file_uris_.Clear();
  file_uris_.Clear();
  archive_uris_.Clear();
  properties_.Clear();
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) {
    delete logging_config_;
  }
  logging_config_ = NULL;
  clear_driver();
  _internal_metadata_.Clear();
}

bool SparkJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.SparkJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string main_jar_file_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_jar_file_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main_jar_file_uri().data(), static_cast<int>(this->main_jar_file_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.main_jar_file_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string main_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_class()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main_class().data(), static_cast<int>(this->main_class().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.main_class"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            static_cast<int>(this->args(this->args_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jar_file_uris = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jar_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jar_file_uris(this->jar_file_uris_size() - 1).data(),
            static_cast<int>(this->jar_file_uris(this->jar_file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.jar_file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string file_uris = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_uris(this->file_uris_size() - 1).data(),
            static_cast<int>(this->file_uris(this->file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string archive_uris = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_archive_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->archive_uris(this->archive_uris_size() - 1).data(),
            static_cast<int>(this->archive_uris(this->archive_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.archive_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          SparkJob_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SparkJob_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.PropertiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkJob.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.SparkJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.SparkJob)
  return false;
#undef DO_
}

void SparkJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.SparkJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_jar_file_uri = 1;
  if (has_main_jar_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_jar_file_uri().data(), static_cast<int>(this->main_jar_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.main_jar_file_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->main_jar_file_uri(), output);
  }

  // string main_class = 2;
  if (has_main_class()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_class().data(), static_cast<int>(this->main_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.main_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->main_class(), output);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  // repeated string jar_file_uris = 4;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.jar_file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->jar_file_uris(i), output);
  }

  // repeated string file_uris = 5;
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_uris(i).data(), static_cast<int>(this->file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->file_uris(i), output);
  }

  // repeated string archive_uris = 6;
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->archive_uris(i).data(), static_cast<int>(this->archive_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.archive_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->archive_uris(i), output);
  }

  // map<string, string> properties = 7;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkJob.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SparkJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SparkJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->logging_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.SparkJob)
}

::google::protobuf::uint8* SparkJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.SparkJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_jar_file_uri = 1;
  if (has_main_jar_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_jar_file_uri().data(), static_cast<int>(this->main_jar_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.main_jar_file_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->main_jar_file_uri(), target);
  }

  // string main_class = 2;
  if (has_main_class()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_class().data(), static_cast<int>(this->main_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.main_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->main_class(), target);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  // repeated string jar_file_uris = 4;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.jar_file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->jar_file_uris(i), target);
  }

  // repeated string file_uris = 5;
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_uris(i).data(), static_cast<int>(this->file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->file_uris(i), target);
  }

  // repeated string archive_uris = 6;
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->archive_uris(i).data(), static_cast<int>(this->archive_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkJob.archive_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->archive_uris(i), target);
  }

  // map<string, string> properties = 7;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkJob.PropertiesEntry.value");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SparkJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SparkJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->logging_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.SparkJob)
  return target;
}

size_t SparkJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.SparkJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string args = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated string jar_file_uris = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->jar_file_uris_size());
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jar_file_uris(i));
  }

  // repeated string file_uris = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_uris_size());
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->file_uris(i));
  }

  // repeated string archive_uris = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->archive_uris_size());
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->archive_uris(i));
  }

  // map<string, string> properties = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<SparkJob_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logging_config_);
  }

  switch (driver_case()) {
    // string main_jar_file_uri = 1;
    case kMainJarFileUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_jar_file_uri());
      break;
    }
    // string main_class = 2;
    case kMainClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_class());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SparkJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.SparkJob)
  GOOGLE_DCHECK_NE(&from, this);
  const SparkJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SparkJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.SparkJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.SparkJob)
    MergeFrom(*source);
  }
}

void SparkJob::MergeFrom(const SparkJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.SparkJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  jar_file_uris_.MergeFrom(from.jar_file_uris_);
  file_uris_.MergeFrom(from.file_uris_);
  archive_uris_.MergeFrom(from.archive_uris_);
  properties_.MergeFrom(from.properties_);
  if (from.has_logging_config()) {
    mutable_logging_config()->::google::cloud::dataproc::v1::LoggingConfig::MergeFrom(from.logging_config());
  }
  switch (from.driver_case()) {
    case kMainJarFileUri: {
      set_main_jar_file_uri(from.main_jar_file_uri());
      break;
    }
    case kMainClass: {
      set_main_class(from.main_class());
      break;
    }
    case DRIVER_NOT_SET: {
      break;
    }
  }
}

void SparkJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.SparkJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparkJob::CopyFrom(const SparkJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.SparkJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparkJob::IsInitialized() const {
  return true;
}

void SparkJob::Swap(SparkJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SparkJob::InternalSwap(SparkJob* other) {
  using std::swap;
  args_.InternalSwap(&other->args_);
  jar_file_uris_.InternalSwap(&other->jar_file_uris_);
  file_uris_.InternalSwap(&other->file_uris_);
  archive_uris_.InternalSwap(&other->archive_uris_);
  properties_.Swap(&other->properties_);
  swap(logging_config_, other->logging_config_);
  swap(driver_, other->driver_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SparkJob::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PySparkJob_PropertiesEntry_DoNotUse::PySparkJob_PropertiesEntry_DoNotUse() {}
PySparkJob_PropertiesEntry_DoNotUse::PySparkJob_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PySparkJob_PropertiesEntry_DoNotUse::MergeFrom(const PySparkJob_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PySparkJob_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[6];
}
void PySparkJob_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PySparkJob::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_PySparkJob_default_instance_._instance.get_mutable()->logging_config_ = const_cast< ::google::cloud::dataproc::v1::LoggingConfig*>(
      ::google::cloud::dataproc::v1::LoggingConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PySparkJob::kMainPythonFileUriFieldNumber;
const int PySparkJob::kArgsFieldNumber;
const int PySparkJob::kPythonFileUrisFieldNumber;
const int PySparkJob::kJarFileUrisFieldNumber;
const int PySparkJob::kFileUrisFieldNumber;
const int PySparkJob::kArchiveUrisFieldNumber;
const int PySparkJob::kPropertiesFieldNumber;
const int PySparkJob::kLoggingConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PySparkJob::PySparkJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPySparkJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.PySparkJob)
}
PySparkJob::PySparkJob(const PySparkJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_),
      python_file_uris_(from.python_file_uris_),
      jar_file_uris_(from.jar_file_uris_),
      file_uris_(from.file_uris_),
      archive_uris_(from.archive_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  main_python_file_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.main_python_file_uri().size() > 0) {
    main_python_file_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_python_file_uri_);
  }
  if (from.has_logging_config()) {
    logging_config_ = new ::google::cloud::dataproc::v1::LoggingConfig(*from.logging_config_);
  } else {
    logging_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.PySparkJob)
}

void PySparkJob::SharedCtor() {
  main_python_file_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_config_ = NULL;
  _cached_size_ = 0;
}

PySparkJob::~PySparkJob() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.PySparkJob)
  SharedDtor();
}

void PySparkJob::SharedDtor() {
  main_python_file_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete logging_config_;
}

void PySparkJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PySparkJob::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PySparkJob& PySparkJob::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPySparkJob();
  return *internal_default_instance();
}

PySparkJob* PySparkJob::New(::google::protobuf::Arena* arena) const {
  PySparkJob* n = new PySparkJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PySparkJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.PySparkJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  python_file_uris_.Clear();
  jar_file_uris_.Clear();
  file_uris_.Clear();
  archive_uris_.Clear();
  properties_.Clear();
  main_python_file_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) {
    delete logging_config_;
  }
  logging_config_ = NULL;
  _internal_metadata_.Clear();
}

bool PySparkJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.PySparkJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string main_python_file_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_python_file_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->main_python_file_uri().data(), static_cast<int>(this->main_python_file_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.main_python_file_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            static_cast<int>(this->args(this->args_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string python_file_uris = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_python_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->python_file_uris(this->python_file_uris_size() - 1).data(),
            static_cast<int>(this->python_file_uris(this->python_file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.python_file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jar_file_uris = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jar_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jar_file_uris(this->jar_file_uris_size() - 1).data(),
            static_cast<int>(this->jar_file_uris(this->jar_file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.jar_file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string file_uris = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_uris(this->file_uris_size() - 1).data(),
            static_cast<int>(this->file_uris(this->file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string archive_uris = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_archive_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->archive_uris(this->archive_uris_size() - 1).data(),
            static_cast<int>(this->archive_uris(this->archive_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.archive_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          PySparkJob_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PySparkJob_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.PropertiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PySparkJob.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.PySparkJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.PySparkJob)
  return false;
#undef DO_
}

void PySparkJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.PySparkJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_python_file_uri = 1;
  if (this->main_python_file_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_python_file_uri().data(), static_cast<int>(this->main_python_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.main_python_file_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->main_python_file_uri(), output);
  }

  // repeated string args = 2;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->args(i), output);
  }

  // repeated string python_file_uris = 3;
  for (int i = 0, n = this->python_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->python_file_uris(i).data(), static_cast<int>(this->python_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.python_file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->python_file_uris(i), output);
  }

  // repeated string jar_file_uris = 4;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.jar_file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->jar_file_uris(i), output);
  }

  // repeated string file_uris = 5;
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_uris(i).data(), static_cast<int>(this->file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->file_uris(i), output);
  }

  // repeated string archive_uris = 6;
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->archive_uris(i).data(), static_cast<int>(this->archive_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.archive_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->archive_uris(i), output);
  }

  // map<string, string> properties = 7;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PySparkJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PySparkJob.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PySparkJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PySparkJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->logging_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.PySparkJob)
}

::google::protobuf::uint8* PySparkJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.PySparkJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_python_file_uri = 1;
  if (this->main_python_file_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->main_python_file_uri().data(), static_cast<int>(this->main_python_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.main_python_file_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->main_python_file_uri(), target);
  }

  // repeated string args = 2;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->args(i), target);
  }

  // repeated string python_file_uris = 3;
  for (int i = 0, n = this->python_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->python_file_uris(i).data(), static_cast<int>(this->python_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.python_file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->python_file_uris(i), target);
  }

  // repeated string jar_file_uris = 4;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.jar_file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->jar_file_uris(i), target);
  }

  // repeated string file_uris = 5;
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_uris(i).data(), static_cast<int>(this->file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->file_uris(i), target);
  }

  // repeated string archive_uris = 6;
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->archive_uris(i).data(), static_cast<int>(this->archive_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PySparkJob.archive_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->archive_uris(i), target);
  }

  // map<string, string> properties = 7;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PySparkJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PySparkJob.PropertiesEntry.value");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PySparkJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PySparkJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->logging_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.PySparkJob)
  return target;
}

size_t PySparkJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.PySparkJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string args = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated string python_file_uris = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->python_file_uris_size());
  for (int i = 0, n = this->python_file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->python_file_uris(i));
  }

  // repeated string jar_file_uris = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->jar_file_uris_size());
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jar_file_uris(i));
  }

  // repeated string file_uris = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_uris_size());
  for (int i = 0, n = this->file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->file_uris(i));
  }

  // repeated string archive_uris = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->archive_uris_size());
  for (int i = 0, n = this->archive_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->archive_uris(i));
  }

  // map<string, string> properties = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<PySparkJob_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string main_python_file_uri = 1;
  if (this->main_python_file_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->main_python_file_uri());
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 8;
  if (this->has_logging_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logging_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PySparkJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.PySparkJob)
  GOOGLE_DCHECK_NE(&from, this);
  const PySparkJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PySparkJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.PySparkJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.PySparkJob)
    MergeFrom(*source);
  }
}

void PySparkJob::MergeFrom(const PySparkJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.PySparkJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  python_file_uris_.MergeFrom(from.python_file_uris_);
  jar_file_uris_.MergeFrom(from.jar_file_uris_);
  file_uris_.MergeFrom(from.file_uris_);
  archive_uris_.MergeFrom(from.archive_uris_);
  properties_.MergeFrom(from.properties_);
  if (from.main_python_file_uri().size() > 0) {

    main_python_file_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_python_file_uri_);
  }
  if (from.has_logging_config()) {
    mutable_logging_config()->::google::cloud::dataproc::v1::LoggingConfig::MergeFrom(from.logging_config());
  }
}

void PySparkJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.PySparkJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PySparkJob::CopyFrom(const PySparkJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.PySparkJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PySparkJob::IsInitialized() const {
  return true;
}

void PySparkJob::Swap(PySparkJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PySparkJob::InternalSwap(PySparkJob* other) {
  using std::swap;
  args_.InternalSwap(&other->args_);
  python_file_uris_.InternalSwap(&other->python_file_uris_);
  jar_file_uris_.InternalSwap(&other->jar_file_uris_);
  file_uris_.InternalSwap(&other->file_uris_);
  archive_uris_.InternalSwap(&other->archive_uris_);
  properties_.Swap(&other->properties_);
  main_python_file_uri_.Swap(&other->main_python_file_uri_);
  swap(logging_config_, other->logging_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PySparkJob::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryList::kQueriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryList::QueryList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsQueryList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.QueryList)
}
QueryList::QueryList(const QueryList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      queries_(from.queries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.QueryList)
}

void QueryList::SharedCtor() {
  _cached_size_ = 0;
}

QueryList::~QueryList() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.QueryList)
  SharedDtor();
}

void QueryList::SharedDtor() {
}

void QueryList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryList::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryList& QueryList::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsQueryList();
  return *internal_default_instance();
}

QueryList* QueryList::New(::google::protobuf::Arena* arena) const {
  QueryList* n = new QueryList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryList::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.QueryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queries_.Clear();
  _internal_metadata_.Clear();
}

bool QueryList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.QueryList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string queries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_queries()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->queries(this->queries_size() - 1).data(),
            static_cast<int>(this->queries(this->queries_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.QueryList.queries"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.QueryList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.QueryList)
  return false;
#undef DO_
}

void QueryList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.QueryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string queries = 1;
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->queries(i).data(), static_cast<int>(this->queries(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.QueryList.queries");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->queries(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.QueryList)
}

::google::protobuf::uint8* QueryList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.QueryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string queries = 1;
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->queries(i).data(), static_cast<int>(this->queries(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.QueryList.queries");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->queries(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.QueryList)
  return target;
}

size_t QueryList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.QueryList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string queries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->queries_size());
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->queries(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.QueryList)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.QueryList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.QueryList)
    MergeFrom(*source);
  }
}

void QueryList::MergeFrom(const QueryList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.QueryList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queries_.MergeFrom(from.queries_);
}

void QueryList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.QueryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryList::CopyFrom(const QueryList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.QueryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryList::IsInitialized() const {
  return true;
}

void QueryList::Swap(QueryList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryList::InternalSwap(QueryList* other) {
  using std::swap;
  queries_.InternalSwap(&other->queries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryList::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

HiveJob_ScriptVariablesEntry_DoNotUse::HiveJob_ScriptVariablesEntry_DoNotUse() {}
HiveJob_ScriptVariablesEntry_DoNotUse::HiveJob_ScriptVariablesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HiveJob_ScriptVariablesEntry_DoNotUse::MergeFrom(const HiveJob_ScriptVariablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HiveJob_ScriptVariablesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[9];
}
void HiveJob_ScriptVariablesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HiveJob_PropertiesEntry_DoNotUse::HiveJob_PropertiesEntry_DoNotUse() {}
HiveJob_PropertiesEntry_DoNotUse::HiveJob_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HiveJob_PropertiesEntry_DoNotUse::MergeFrom(const HiveJob_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HiveJob_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[10];
}
void HiveJob_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void HiveJob::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_HiveJob_default_instance_.query_file_uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dataproc::v1::_HiveJob_default_instance_.query_list_ = const_cast< ::google::cloud::dataproc::v1::QueryList*>(
      ::google::cloud::dataproc::v1::QueryList::internal_default_instance());
}
void HiveJob::set_allocated_query_list(::google::cloud::dataproc::v1::QueryList* query_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_queries();
  if (query_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      query_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_list, submessage_arena);
    }
    set_has_query_list();
    queries_.query_list_ = query_list;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.HiveJob.query_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HiveJob::kQueryFileUriFieldNumber;
const int HiveJob::kQueryListFieldNumber;
const int HiveJob::kContinueOnFailureFieldNumber;
const int HiveJob::kScriptVariablesFieldNumber;
const int HiveJob::kPropertiesFieldNumber;
const int HiveJob::kJarFileUrisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HiveJob::HiveJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHiveJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.HiveJob)
}
HiveJob::HiveJob(const HiveJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jar_file_uris_(from.jar_file_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_variables_.MergeFrom(from.script_variables_);
  properties_.MergeFrom(from.properties_);
  continue_on_failure_ = from.continue_on_failure_;
  clear_has_queries();
  switch (from.queries_case()) {
    case kQueryFileUri: {
      set_query_file_uri(from.query_file_uri());
      break;
    }
    case kQueryList: {
      mutable_query_list()->::google::cloud::dataproc::v1::QueryList::MergeFrom(from.query_list());
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.HiveJob)
}

void HiveJob::SharedCtor() {
  continue_on_failure_ = false;
  clear_has_queries();
  _cached_size_ = 0;
}

HiveJob::~HiveJob() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.HiveJob)
  SharedDtor();
}

void HiveJob::SharedDtor() {
  if (has_queries()) {
    clear_queries();
  }
}

void HiveJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HiveJob::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HiveJob& HiveJob::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsHiveJob();
  return *internal_default_instance();
}

HiveJob* HiveJob::New(::google::protobuf::Arena* arena) const {
  HiveJob* n = new HiveJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HiveJob::clear_queries() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1.HiveJob)
  switch (queries_case()) {
    case kQueryFileUri: {
      queries_.query_file_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kQueryList: {
      delete queries_.query_list_;
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QUERIES_NOT_SET;
}


void HiveJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.HiveJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  script_variables_.Clear();
  properties_.Clear();
  jar_file_uris_.Clear();
  continue_on_failure_ = false;
  clear_queries();
  _internal_metadata_.Clear();
}

bool HiveJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.HiveJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query_file_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_file_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HiveJob.query_file_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.QueryList query_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool continue_on_failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &continue_on_failure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> script_variables = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          HiveJob_ScriptVariablesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HiveJob_ScriptVariablesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&script_variables_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HiveJob.ScriptVariablesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HiveJob.ScriptVariablesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          HiveJob_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HiveJob_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HiveJob.PropertiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HiveJob.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jar_file_uris = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jar_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jar_file_uris(this->jar_file_uris_size() - 1).data(),
            static_cast<int>(this->jar_file_uris(this->jar_file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.HiveJob.jar_file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.HiveJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.HiveJob)
  return false;
#undef DO_
}

void HiveJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.HiveJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_file_uri = 1;
  if (has_query_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HiveJob.query_file_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query_file_uri(), output);
  }

  // .google.cloud.dataproc.v1.QueryList query_list = 2;
  if (has_query_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *queries_.query_list_, output);
  }

  // bool continue_on_failure = 3;
  if (this->continue_on_failure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->continue_on_failure(), output);
  }

  // map<string, string> script_variables = 4;
  if (!this->script_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.ScriptVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.ScriptVariablesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->script_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HiveJob_ScriptVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HiveJob_ScriptVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it) {
        entry.reset(script_variables_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> properties = 5;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HiveJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HiveJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string jar_file_uris = 6;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HiveJob.jar_file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->jar_file_uris(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.HiveJob)
}

::google::protobuf::uint8* HiveJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.HiveJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_file_uri = 1;
  if (has_query_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HiveJob.query_file_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query_file_uri(), target);
  }

  // .google.cloud.dataproc.v1.QueryList query_list = 2;
  if (has_query_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *queries_.query_list_, deterministic, target);
  }

  // bool continue_on_failure = 3;
  if (this->continue_on_failure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->continue_on_failure(), target);
  }

  // map<string, string> script_variables = 4;
  if (!this->script_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.ScriptVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.ScriptVariablesEntry.value");
      }
    };

    if (deterministic &&
        this->script_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HiveJob_ScriptVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HiveJob_ScriptVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it) {
        entry.reset(script_variables_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> properties = 5;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.HiveJob.PropertiesEntry.value");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HiveJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HiveJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string jar_file_uris = 6;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.HiveJob.jar_file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->jar_file_uris(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.HiveJob)
  return target;
}

size_t HiveJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.HiveJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> script_variables = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->script_variables_size());
  {
    ::google::protobuf::scoped_ptr<HiveJob_ScriptVariablesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->script_variables().begin();
        it != this->script_variables().end(); ++it) {
      entry.reset(script_variables_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> properties = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<HiveJob_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string jar_file_uris = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->jar_file_uris_size());
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jar_file_uris(i));
  }

  // bool continue_on_failure = 3;
  if (this->continue_on_failure() != 0) {
    total_size += 1 + 1;
  }

  switch (queries_case()) {
    // string query_file_uri = 1;
    case kQueryFileUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_file_uri());
      break;
    }
    // .google.cloud.dataproc.v1.QueryList query_list = 2;
    case kQueryList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *queries_.query_list_);
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HiveJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.HiveJob)
  GOOGLE_DCHECK_NE(&from, this);
  const HiveJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HiveJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.HiveJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.HiveJob)
    MergeFrom(*source);
  }
}

void HiveJob::MergeFrom(const HiveJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.HiveJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  script_variables_.MergeFrom(from.script_variables_);
  properties_.MergeFrom(from.properties_);
  jar_file_uris_.MergeFrom(from.jar_file_uris_);
  if (from.continue_on_failure() != 0) {
    set_continue_on_failure(from.continue_on_failure());
  }
  switch (from.queries_case()) {
    case kQueryFileUri: {
      set_query_file_uri(from.query_file_uri());
      break;
    }
    case kQueryList: {
      mutable_query_list()->::google::cloud::dataproc::v1::QueryList::MergeFrom(from.query_list());
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
}

void HiveJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.HiveJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HiveJob::CopyFrom(const HiveJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.HiveJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HiveJob::IsInitialized() const {
  return true;
}

void HiveJob::Swap(HiveJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HiveJob::InternalSwap(HiveJob* other) {
  using std::swap;
  script_variables_.Swap(&other->script_variables_);
  properties_.Swap(&other->properties_);
  jar_file_uris_.InternalSwap(&other->jar_file_uris_);
  swap(continue_on_failure_, other->continue_on_failure_);
  swap(queries_, other->queries_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HiveJob::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SparkSqlJob_ScriptVariablesEntry_DoNotUse::SparkSqlJob_ScriptVariablesEntry_DoNotUse() {}
SparkSqlJob_ScriptVariablesEntry_DoNotUse::SparkSqlJob_ScriptVariablesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SparkSqlJob_ScriptVariablesEntry_DoNotUse::MergeFrom(const SparkSqlJob_ScriptVariablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SparkSqlJob_ScriptVariablesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[12];
}
void SparkSqlJob_ScriptVariablesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

SparkSqlJob_PropertiesEntry_DoNotUse::SparkSqlJob_PropertiesEntry_DoNotUse() {}
SparkSqlJob_PropertiesEntry_DoNotUse::SparkSqlJob_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SparkSqlJob_PropertiesEntry_DoNotUse::MergeFrom(const SparkSqlJob_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SparkSqlJob_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[13];
}
void SparkSqlJob_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SparkSqlJob::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_SparkSqlJob_default_instance_.query_file_uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dataproc::v1::_SparkSqlJob_default_instance_.query_list_ = const_cast< ::google::cloud::dataproc::v1::QueryList*>(
      ::google::cloud::dataproc::v1::QueryList::internal_default_instance());
  ::google::cloud::dataproc::v1::_SparkSqlJob_default_instance_._instance.get_mutable()->logging_config_ = const_cast< ::google::cloud::dataproc::v1::LoggingConfig*>(
      ::google::cloud::dataproc::v1::LoggingConfig::internal_default_instance());
}
void SparkSqlJob::set_allocated_query_list(::google::cloud::dataproc::v1::QueryList* query_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_queries();
  if (query_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      query_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_list, submessage_arena);
    }
    set_has_query_list();
    queries_.query_list_ = query_list;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.SparkSqlJob.query_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SparkSqlJob::kQueryFileUriFieldNumber;
const int SparkSqlJob::kQueryListFieldNumber;
const int SparkSqlJob::kScriptVariablesFieldNumber;
const int SparkSqlJob::kPropertiesFieldNumber;
const int SparkSqlJob::kJarFileUrisFieldNumber;
const int SparkSqlJob::kLoggingConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SparkSqlJob::SparkSqlJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkSqlJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.SparkSqlJob)
}
SparkSqlJob::SparkSqlJob(const SparkSqlJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jar_file_uris_(from.jar_file_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_variables_.MergeFrom(from.script_variables_);
  properties_.MergeFrom(from.properties_);
  if (from.has_logging_config()) {
    logging_config_ = new ::google::cloud::dataproc::v1::LoggingConfig(*from.logging_config_);
  } else {
    logging_config_ = NULL;
  }
  clear_has_queries();
  switch (from.queries_case()) {
    case kQueryFileUri: {
      set_query_file_uri(from.query_file_uri());
      break;
    }
    case kQueryList: {
      mutable_query_list()->::google::cloud::dataproc::v1::QueryList::MergeFrom(from.query_list());
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.SparkSqlJob)
}

void SparkSqlJob::SharedCtor() {
  logging_config_ = NULL;
  clear_has_queries();
  _cached_size_ = 0;
}

SparkSqlJob::~SparkSqlJob() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.SparkSqlJob)
  SharedDtor();
}

void SparkSqlJob::SharedDtor() {
  if (this != internal_default_instance()) delete logging_config_;
  if (has_queries()) {
    clear_queries();
  }
}

void SparkSqlJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SparkSqlJob::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SparkSqlJob& SparkSqlJob::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSparkSqlJob();
  return *internal_default_instance();
}

SparkSqlJob* SparkSqlJob::New(::google::protobuf::Arena* arena) const {
  SparkSqlJob* n = new SparkSqlJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SparkSqlJob::clear_queries() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1.SparkSqlJob)
  switch (queries_case()) {
    case kQueryFileUri: {
      queries_.query_file_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kQueryList: {
      delete queries_.query_list_;
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QUERIES_NOT_SET;
}


void SparkSqlJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.SparkSqlJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  script_variables_.Clear();
  properties_.Clear();
  jar_file_uris_.Clear();
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) {
    delete logging_config_;
  }
  logging_config_ = NULL;
  clear_queries();
  _internal_metadata_.Clear();
}

bool SparkSqlJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.SparkSqlJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query_file_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_file_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkSqlJob.query_file_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.QueryList query_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> script_variables = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          SparkSqlJob_ScriptVariablesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SparkSqlJob_ScriptVariablesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&script_variables_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkSqlJob.ScriptVariablesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkSqlJob.ScriptVariablesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          SparkSqlJob_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SparkSqlJob_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkSqlJob.PropertiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkSqlJob.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.LoggingConfig logging_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jar_file_uris = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jar_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jar_file_uris(this->jar_file_uris_size() - 1).data(),
            static_cast<int>(this->jar_file_uris(this->jar_file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SparkSqlJob.jar_file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.SparkSqlJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.SparkSqlJob)
  return false;
#undef DO_
}

void SparkSqlJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.SparkSqlJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_file_uri = 1;
  if (has_query_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkSqlJob.query_file_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query_file_uri(), output);
  }

  // .google.cloud.dataproc.v1.QueryList query_list = 2;
  if (has_query_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *queries_.query_list_, output);
  }

  // map<string, string> script_variables = 3;
  if (!this->script_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.ScriptVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.ScriptVariablesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->script_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SparkSqlJob_ScriptVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SparkSqlJob_ScriptVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it) {
        entry.reset(script_variables_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> properties = 4;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SparkSqlJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SparkSqlJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 6;
  if (this->has_logging_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->logging_config_, output);
  }

  // repeated string jar_file_uris = 56;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkSqlJob.jar_file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      56, this->jar_file_uris(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.SparkSqlJob)
}

::google::protobuf::uint8* SparkSqlJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.SparkSqlJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_file_uri = 1;
  if (has_query_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkSqlJob.query_file_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query_file_uri(), target);
  }

  // .google.cloud.dataproc.v1.QueryList query_list = 2;
  if (has_query_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *queries_.query_list_, deterministic, target);
  }

  // map<string, string> script_variables = 3;
  if (!this->script_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.ScriptVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.ScriptVariablesEntry.value");
      }
    };

    if (deterministic &&
        this->script_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SparkSqlJob_ScriptVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SparkSqlJob_ScriptVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it) {
        entry.reset(script_variables_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> properties = 4;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.SparkSqlJob.PropertiesEntry.value");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SparkSqlJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SparkSqlJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 6;
  if (this->has_logging_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->logging_config_, deterministic, target);
  }

  // repeated string jar_file_uris = 56;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SparkSqlJob.jar_file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(56, this->jar_file_uris(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.SparkSqlJob)
  return target;
}

size_t SparkSqlJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.SparkSqlJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> script_variables = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->script_variables_size());
  {
    ::google::protobuf::scoped_ptr<SparkSqlJob_ScriptVariablesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->script_variables().begin();
        it != this->script_variables().end(); ++it) {
      entry.reset(script_variables_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> properties = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<SparkSqlJob_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string jar_file_uris = 56;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->jar_file_uris_size());
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jar_file_uris(i));
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 6;
  if (this->has_logging_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logging_config_);
  }

  switch (queries_case()) {
    // string query_file_uri = 1;
    case kQueryFileUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_file_uri());
      break;
    }
    // .google.cloud.dataproc.v1.QueryList query_list = 2;
    case kQueryList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *queries_.query_list_);
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SparkSqlJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.SparkSqlJob)
  GOOGLE_DCHECK_NE(&from, this);
  const SparkSqlJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SparkSqlJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.SparkSqlJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.SparkSqlJob)
    MergeFrom(*source);
  }
}

void SparkSqlJob::MergeFrom(const SparkSqlJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.SparkSqlJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  script_variables_.MergeFrom(from.script_variables_);
  properties_.MergeFrom(from.properties_);
  jar_file_uris_.MergeFrom(from.jar_file_uris_);
  if (from.has_logging_config()) {
    mutable_logging_config()->::google::cloud::dataproc::v1::LoggingConfig::MergeFrom(from.logging_config());
  }
  switch (from.queries_case()) {
    case kQueryFileUri: {
      set_query_file_uri(from.query_file_uri());
      break;
    }
    case kQueryList: {
      mutable_query_list()->::google::cloud::dataproc::v1::QueryList::MergeFrom(from.query_list());
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
}

void SparkSqlJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.SparkSqlJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparkSqlJob::CopyFrom(const SparkSqlJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.SparkSqlJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparkSqlJob::IsInitialized() const {
  return true;
}

void SparkSqlJob::Swap(SparkSqlJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SparkSqlJob::InternalSwap(SparkSqlJob* other) {
  using std::swap;
  script_variables_.Swap(&other->script_variables_);
  properties_.Swap(&other->properties_);
  jar_file_uris_.InternalSwap(&other->jar_file_uris_);
  swap(logging_config_, other->logging_config_);
  swap(queries_, other->queries_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SparkSqlJob::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PigJob_ScriptVariablesEntry_DoNotUse::PigJob_ScriptVariablesEntry_DoNotUse() {}
PigJob_ScriptVariablesEntry_DoNotUse::PigJob_ScriptVariablesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PigJob_ScriptVariablesEntry_DoNotUse::MergeFrom(const PigJob_ScriptVariablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PigJob_ScriptVariablesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[15];
}
void PigJob_ScriptVariablesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PigJob_PropertiesEntry_DoNotUse::PigJob_PropertiesEntry_DoNotUse() {}
PigJob_PropertiesEntry_DoNotUse::PigJob_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PigJob_PropertiesEntry_DoNotUse::MergeFrom(const PigJob_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PigJob_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[16];
}
void PigJob_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PigJob::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_PigJob_default_instance_.query_file_uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dataproc::v1::_PigJob_default_instance_.query_list_ = const_cast< ::google::cloud::dataproc::v1::QueryList*>(
      ::google::cloud::dataproc::v1::QueryList::internal_default_instance());
  ::google::cloud::dataproc::v1::_PigJob_default_instance_._instance.get_mutable()->logging_config_ = const_cast< ::google::cloud::dataproc::v1::LoggingConfig*>(
      ::google::cloud::dataproc::v1::LoggingConfig::internal_default_instance());
}
void PigJob::set_allocated_query_list(::google::cloud::dataproc::v1::QueryList* query_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_queries();
  if (query_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      query_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_list, submessage_arena);
    }
    set_has_query_list();
    queries_.query_list_ = query_list;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.PigJob.query_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PigJob::kQueryFileUriFieldNumber;
const int PigJob::kQueryListFieldNumber;
const int PigJob::kContinueOnFailureFieldNumber;
const int PigJob::kScriptVariablesFieldNumber;
const int PigJob::kPropertiesFieldNumber;
const int PigJob::kJarFileUrisFieldNumber;
const int PigJob::kLoggingConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PigJob::PigJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPigJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.PigJob)
}
PigJob::PigJob(const PigJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jar_file_uris_(from.jar_file_uris_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_variables_.MergeFrom(from.script_variables_);
  properties_.MergeFrom(from.properties_);
  if (from.has_logging_config()) {
    logging_config_ = new ::google::cloud::dataproc::v1::LoggingConfig(*from.logging_config_);
  } else {
    logging_config_ = NULL;
  }
  continue_on_failure_ = from.continue_on_failure_;
  clear_has_queries();
  switch (from.queries_case()) {
    case kQueryFileUri: {
      set_query_file_uri(from.query_file_uri());
      break;
    }
    case kQueryList: {
      mutable_query_list()->::google::cloud::dataproc::v1::QueryList::MergeFrom(from.query_list());
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.PigJob)
}

void PigJob::SharedCtor() {
  ::memset(&logging_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&continue_on_failure_) -
      reinterpret_cast<char*>(&logging_config_)) + sizeof(continue_on_failure_));
  clear_has_queries();
  _cached_size_ = 0;
}

PigJob::~PigJob() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.PigJob)
  SharedDtor();
}

void PigJob::SharedDtor() {
  if (this != internal_default_instance()) delete logging_config_;
  if (has_queries()) {
    clear_queries();
  }
}

void PigJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PigJob::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PigJob& PigJob::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsPigJob();
  return *internal_default_instance();
}

PigJob* PigJob::New(::google::protobuf::Arena* arena) const {
  PigJob* n = new PigJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PigJob::clear_queries() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1.PigJob)
  switch (queries_case()) {
    case kQueryFileUri: {
      queries_.query_file_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kQueryList: {
      delete queries_.query_list_;
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QUERIES_NOT_SET;
}


void PigJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.PigJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  script_variables_.Clear();
  properties_.Clear();
  jar_file_uris_.Clear();
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) {
    delete logging_config_;
  }
  logging_config_ = NULL;
  continue_on_failure_ = false;
  clear_queries();
  _internal_metadata_.Clear();
}

bool PigJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.PigJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query_file_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_file_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PigJob.query_file_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.QueryList query_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool continue_on_failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &continue_on_failure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> script_variables = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          PigJob_ScriptVariablesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PigJob_ScriptVariablesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&script_variables_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PigJob.ScriptVariablesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PigJob.ScriptVariablesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          PigJob_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PigJob_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PigJob.PropertiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PigJob.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jar_file_uris = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jar_file_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jar_file_uris(this->jar_file_uris_size() - 1).data(),
            static_cast<int>(this->jar_file_uris(this->jar_file_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.PigJob.jar_file_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.LoggingConfig logging_config = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.PigJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.PigJob)
  return false;
#undef DO_
}

void PigJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.PigJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_file_uri = 1;
  if (has_query_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PigJob.query_file_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query_file_uri(), output);
  }

  // .google.cloud.dataproc.v1.QueryList query_list = 2;
  if (has_query_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *queries_.query_list_, output);
  }

  // bool continue_on_failure = 3;
  if (this->continue_on_failure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->continue_on_failure(), output);
  }

  // map<string, string> script_variables = 4;
  if (!this->script_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.ScriptVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.ScriptVariablesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->script_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PigJob_ScriptVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PigJob_ScriptVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it) {
        entry.reset(script_variables_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> properties = 5;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PigJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PigJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string jar_file_uris = 6;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PigJob.jar_file_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->jar_file_uris(i), output);
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 7;
  if (this->has_logging_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->logging_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.PigJob)
}

::google::protobuf::uint8* PigJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.PigJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_file_uri = 1;
  if (has_query_file_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_file_uri().data(), static_cast<int>(this->query_file_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PigJob.query_file_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query_file_uri(), target);
  }

  // .google.cloud.dataproc.v1.QueryList query_list = 2;
  if (has_query_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *queries_.query_list_, deterministic, target);
  }

  // bool continue_on_failure = 3;
  if (this->continue_on_failure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->continue_on_failure(), target);
  }

  // map<string, string> script_variables = 4;
  if (!this->script_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.ScriptVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.ScriptVariablesEntry.value");
      }
    };

    if (deterministic &&
        this->script_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PigJob_ScriptVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PigJob_ScriptVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->script_variables().begin();
          it != this->script_variables().end(); ++it) {
        entry.reset(script_variables_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> properties = 5;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1.PigJob.PropertiesEntry.value");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PigJob_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PigJob_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string jar_file_uris = 6;
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jar_file_uris(i).data(), static_cast<int>(this->jar_file_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.PigJob.jar_file_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->jar_file_uris(i), target);
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 7;
  if (this->has_logging_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->logging_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.PigJob)
  return target;
}

size_t PigJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.PigJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> script_variables = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->script_variables_size());
  {
    ::google::protobuf::scoped_ptr<PigJob_ScriptVariablesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->script_variables().begin();
        it != this->script_variables().end(); ++it) {
      entry.reset(script_variables_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> properties = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<PigJob_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string jar_file_uris = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->jar_file_uris_size());
  for (int i = 0, n = this->jar_file_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jar_file_uris(i));
  }

  // .google.cloud.dataproc.v1.LoggingConfig logging_config = 7;
  if (this->has_logging_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logging_config_);
  }

  // bool continue_on_failure = 3;
  if (this->continue_on_failure() != 0) {
    total_size += 1 + 1;
  }

  switch (queries_case()) {
    // string query_file_uri = 1;
    case kQueryFileUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_file_uri());
      break;
    }
    // .google.cloud.dataproc.v1.QueryList query_list = 2;
    case kQueryList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *queries_.query_list_);
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PigJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.PigJob)
  GOOGLE_DCHECK_NE(&from, this);
  const PigJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PigJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.PigJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.PigJob)
    MergeFrom(*source);
  }
}

void PigJob::MergeFrom(const PigJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.PigJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  script_variables_.MergeFrom(from.script_variables_);
  properties_.MergeFrom(from.properties_);
  jar_file_uris_.MergeFrom(from.jar_file_uris_);
  if (from.has_logging_config()) {
    mutable_logging_config()->::google::cloud::dataproc::v1::LoggingConfig::MergeFrom(from.logging_config());
  }
  if (from.continue_on_failure() != 0) {
    set_continue_on_failure(from.continue_on_failure());
  }
  switch (from.queries_case()) {
    case kQueryFileUri: {
      set_query_file_uri(from.query_file_uri());
      break;
    }
    case kQueryList: {
      mutable_query_list()->::google::cloud::dataproc::v1::QueryList::MergeFrom(from.query_list());
      break;
    }
    case QUERIES_NOT_SET: {
      break;
    }
  }
}

void PigJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.PigJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PigJob::CopyFrom(const PigJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.PigJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PigJob::IsInitialized() const {
  return true;
}

void PigJob::Swap(PigJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PigJob::InternalSwap(PigJob* other) {
  using std::swap;
  script_variables_.Swap(&other->script_variables_);
  properties_.Swap(&other->properties_);
  jar_file_uris_.InternalSwap(&other->jar_file_uris_);
  swap(logging_config_, other->logging_config_);
  swap(continue_on_failure_, other->continue_on_failure_);
  swap(queries_, other->queries_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PigJob::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobPlacement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobPlacement::kClusterNameFieldNumber;
const int JobPlacement::kClusterUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobPlacement::JobPlacement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobPlacement();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.JobPlacement)
}
JobPlacement::JobPlacement(const JobPlacement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_uuid().size() > 0) {
    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.JobPlacement)
}

void JobPlacement::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

JobPlacement::~JobPlacement() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.JobPlacement)
  SharedDtor();
}

void JobPlacement::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JobPlacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobPlacement::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobPlacement& JobPlacement::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobPlacement();
  return *internal_default_instance();
}

JobPlacement* JobPlacement::New(::google::protobuf::Arena* arena) const {
  JobPlacement* n = new JobPlacement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobPlacement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.JobPlacement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JobPlacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.JobPlacement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.JobPlacement.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.JobPlacement.cluster_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.JobPlacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.JobPlacement)
  return false;
#undef DO_
}

void JobPlacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.JobPlacement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobPlacement.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  // string cluster_uuid = 2;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobPlacement.cluster_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.JobPlacement)
}

::google::protobuf::uint8* JobPlacement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.JobPlacement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobPlacement.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  // string cluster_uuid = 2;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobPlacement.cluster_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.JobPlacement)
  return target;
}

size_t JobPlacement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.JobPlacement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string cluster_uuid = 2;
  if (this->cluster_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobPlacement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.JobPlacement)
  GOOGLE_DCHECK_NE(&from, this);
  const JobPlacement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobPlacement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.JobPlacement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.JobPlacement)
    MergeFrom(*source);
  }
}

void JobPlacement::MergeFrom(const JobPlacement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.JobPlacement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.cluster_uuid().size() > 0) {

    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
}

void JobPlacement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.JobPlacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobPlacement::CopyFrom(const JobPlacement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.JobPlacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobPlacement::IsInitialized() const {
  return true;
}

void JobPlacement::Swap(JobPlacement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobPlacement::InternalSwap(JobPlacement* other) {
  using std::swap;
  cluster_name_.Swap(&other->cluster_name_);
  cluster_uuid_.Swap(&other->cluster_uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobPlacement::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobStatus::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_JobStatus_default_instance_._instance.get_mutable()->state_start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void JobStatus::clear_state_start_time() {
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) {
    delete state_start_time_;
  }
  state_start_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobStatus::kStateFieldNumber;
const int JobStatus::kDetailsFieldNumber;
const int JobStatus::kStateStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobStatus::JobStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.JobStatus)
}
JobStatus::JobStatus(const JobStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.details().size() > 0) {
    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_state_start_time()) {
    state_start_time_ = new ::google::protobuf::Timestamp(*from.state_start_time_);
  } else {
    state_start_time_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.JobStatus)
}

void JobStatus::SharedCtor() {
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&state_start_time_)) + sizeof(state_));
  _cached_size_ = 0;
}

JobStatus::~JobStatus() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.JobStatus)
  SharedDtor();
}

void JobStatus::SharedDtor() {
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_start_time_;
}

void JobStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobStatus::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobStatus& JobStatus::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobStatus();
  return *internal_default_instance();
}

JobStatus* JobStatus::New(::google::protobuf::Arena* arena) const {
  JobStatus* n = new JobStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.JobStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) {
    delete state_start_time_;
  }
  state_start_time_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool JobStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.JobStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dataproc.v1.JobStatus.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::dataproc::v1::JobStatus_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details().data(), static_cast<int>(this->details().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.JobStatus.details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp state_start_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.JobStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.JobStatus)
  return false;
#undef DO_
}

void JobStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.JobStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1.JobStatus.State state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // string details = 2;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobStatus.details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->details(), output);
  }

  // .google.protobuf.Timestamp state_start_time = 6;
  if (this->has_state_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->state_start_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.JobStatus)
}

::google::protobuf::uint8* JobStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.JobStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1.JobStatus.State state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // string details = 2;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobStatus.details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->details(), target);
  }

  // .google.protobuf.Timestamp state_start_time = 6;
  if (this->has_state_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->state_start_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.JobStatus)
  return target;
}

size_t JobStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.JobStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string details = 2;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->details());
  }

  // .google.protobuf.Timestamp state_start_time = 6;
  if (this->has_state_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_start_time_);
  }

  // .google.cloud.dataproc.v1.JobStatus.State state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.JobStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const JobStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.JobStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.JobStatus)
    MergeFrom(*source);
  }
}

void JobStatus::MergeFrom(const JobStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.JobStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.details().size() > 0) {

    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_state_start_time()) {
    mutable_state_start_time()->::google::protobuf::Timestamp::MergeFrom(from.state_start_time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void JobStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.JobStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobStatus::CopyFrom(const JobStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.JobStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobStatus::IsInitialized() const {
  return true;
}

void JobStatus::Swap(JobStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobStatus::InternalSwap(JobStatus* other) {
  using std::swap;
  details_.Swap(&other->details_);
  swap(state_start_time_, other->state_start_time_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobStatus::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JobReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JobReference::kProjectIdFieldNumber;
const int JobReference::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JobReference::JobReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.JobReference)
}
JobReference::JobReference(const JobReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.JobReference)
}

void JobReference::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

JobReference::~JobReference() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.JobReference)
  SharedDtor();
}

void JobReference::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JobReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobReference::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JobReference& JobReference::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJobReference();
  return *internal_default_instance();
}

JobReference* JobReference::New(::google::protobuf::Arena* arena) const {
  JobReference* n = new JobReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JobReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.JobReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JobReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.JobReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.JobReference.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.JobReference.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.JobReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.JobReference)
  return false;
#undef DO_
}

void JobReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.JobReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobReference.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobReference.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.JobReference)
}

::google::protobuf::uint8* JobReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.JobReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobReference.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.JobReference.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.JobReference)
  return target;
}

size_t JobReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.JobReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.JobReference)
  GOOGLE_DCHECK_NE(&from, this);
  const JobReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JobReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.JobReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.JobReference)
    MergeFrom(*source);
  }
}

void JobReference::MergeFrom(const JobReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.JobReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
}

void JobReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.JobReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobReference::CopyFrom(const JobReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.JobReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobReference::IsInitialized() const {
  return true;
}

void JobReference::Swap(JobReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JobReference::InternalSwap(JobReference* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  job_id_.Swap(&other->job_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JobReference::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_Job_default_instance_._instance.get_mutable()->reference_ = const_cast< ::google::cloud::dataproc::v1::JobReference*>(
      ::google::cloud::dataproc::v1::JobReference::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_._instance.get_mutable()->placement_ = const_cast< ::google::cloud::dataproc::v1::JobPlacement*>(
      ::google::cloud::dataproc::v1::JobPlacement::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_.hadoop_job_ = const_cast< ::google::cloud::dataproc::v1::HadoopJob*>(
      ::google::cloud::dataproc::v1::HadoopJob::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_.spark_job_ = const_cast< ::google::cloud::dataproc::v1::SparkJob*>(
      ::google::cloud::dataproc::v1::SparkJob::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_.pyspark_job_ = const_cast< ::google::cloud::dataproc::v1::PySparkJob*>(
      ::google::cloud::dataproc::v1::PySparkJob::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_.hive_job_ = const_cast< ::google::cloud::dataproc::v1::HiveJob*>(
      ::google::cloud::dataproc::v1::HiveJob::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_.pig_job_ = const_cast< ::google::cloud::dataproc::v1::PigJob*>(
      ::google::cloud::dataproc::v1::PigJob::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_.spark_sql_job_ = const_cast< ::google::cloud::dataproc::v1::SparkSqlJob*>(
      ::google::cloud::dataproc::v1::SparkSqlJob::internal_default_instance());
  ::google::cloud::dataproc::v1::_Job_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::cloud::dataproc::v1::JobStatus*>(
      ::google::cloud::dataproc::v1::JobStatus::internal_default_instance());
}
void Job::set_allocated_hadoop_job(::google::cloud::dataproc::v1::HadoopJob* hadoop_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_job();
  if (hadoop_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hadoop_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hadoop_job, submessage_arena);
    }
    set_has_hadoop_job();
    type_job_.hadoop_job_ = hadoop_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.Job.hadoop_job)
}
void Job::set_allocated_spark_job(::google::cloud::dataproc::v1::SparkJob* spark_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_job();
  if (spark_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      spark_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, spark_job, submessage_arena);
    }
    set_has_spark_job();
    type_job_.spark_job_ = spark_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.Job.spark_job)
}
void Job::set_allocated_pyspark_job(::google::cloud::dataproc::v1::PySparkJob* pyspark_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_job();
  if (pyspark_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pyspark_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pyspark_job, submessage_arena);
    }
    set_has_pyspark_job();
    type_job_.pyspark_job_ = pyspark_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.Job.pyspark_job)
}
void Job::set_allocated_hive_job(::google::cloud::dataproc::v1::HiveJob* hive_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_job();
  if (hive_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hive_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hive_job, submessage_arena);
    }
    set_has_hive_job();
    type_job_.hive_job_ = hive_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.Job.hive_job)
}
void Job::set_allocated_pig_job(::google::cloud::dataproc::v1::PigJob* pig_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_job();
  if (pig_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pig_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pig_job, submessage_arena);
    }
    set_has_pig_job();
    type_job_.pig_job_ = pig_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.Job.pig_job)
}
void Job::set_allocated_spark_sql_job(::google::cloud::dataproc::v1::SparkSqlJob* spark_sql_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_job();
  if (spark_sql_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      spark_sql_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, spark_sql_job, submessage_arena);
    }
    set_has_spark_sql_job();
    type_job_.spark_sql_job_ = spark_sql_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.Job.spark_sql_job)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job::kReferenceFieldNumber;
const int Job::kPlacementFieldNumber;
const int Job::kHadoopJobFieldNumber;
const int Job::kSparkJobFieldNumber;
const int Job::kPysparkJobFieldNumber;
const int Job::kHiveJobFieldNumber;
const int Job::kPigJobFieldNumber;
const int Job::kSparkSqlJobFieldNumber;
const int Job::kStatusFieldNumber;
const int Job::kStatusHistoryFieldNumber;
const int Job::kDriverOutputResourceUriFieldNumber;
const int Job::kDriverControlFilesUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job::Job()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.Job)
}
Job::Job(const Job& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_history_(from.status_history_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  driver_control_files_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.driver_control_files_uri().size() > 0) {
    driver_control_files_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_control_files_uri_);
  }
  driver_output_resource_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.driver_output_resource_uri().size() > 0) {
    driver_output_resource_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_output_resource_uri_);
  }
  if (from.has_reference()) {
    reference_ = new ::google::cloud::dataproc::v1::JobReference(*from.reference_);
  } else {
    reference_ = NULL;
  }
  if (from.has_placement()) {
    placement_ = new ::google::cloud::dataproc::v1::JobPlacement(*from.placement_);
  } else {
    placement_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::cloud::dataproc::v1::JobStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  clear_has_type_job();
  switch (from.type_job_case()) {
    case kHadoopJob: {
      mutable_hadoop_job()->::google::cloud::dataproc::v1::HadoopJob::MergeFrom(from.hadoop_job());
      break;
    }
    case kSparkJob: {
      mutable_spark_job()->::google::cloud::dataproc::v1::SparkJob::MergeFrom(from.spark_job());
      break;
    }
    case kPysparkJob: {
      mutable_pyspark_job()->::google::cloud::dataproc::v1::PySparkJob::MergeFrom(from.pyspark_job());
      break;
    }
    case kHiveJob: {
      mutable_hive_job()->::google::cloud::dataproc::v1::HiveJob::MergeFrom(from.hive_job());
      break;
    }
    case kPigJob: {
      mutable_pig_job()->::google::cloud::dataproc::v1::PigJob::MergeFrom(from.pig_job());
      break;
    }
    case kSparkSqlJob: {
      mutable_spark_sql_job()->::google::cloud::dataproc::v1::SparkSqlJob::MergeFrom(from.spark_sql_job());
      break;
    }
    case TYPE_JOB_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.Job)
}

void Job::SharedCtor() {
  driver_control_files_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_output_resource_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&reference_)) + sizeof(status_));
  clear_has_type_job();
  _cached_size_ = 0;
}

Job::~Job() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.Job)
  SharedDtor();
}

void Job::SharedDtor() {
  driver_control_files_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_output_resource_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete reference_;
  if (this != internal_default_instance()) delete placement_;
  if (this != internal_default_instance()) delete status_;
  if (has_type_job()) {
    clear_type_job();
  }
}

void Job::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Job::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job& Job::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsJob();
  return *internal_default_instance();
}

Job* Job::New(::google::protobuf::Arena* arena) const {
  Job* n = new Job;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Job::clear_type_job() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1.Job)
  switch (type_job_case()) {
    case kHadoopJob: {
      delete type_job_.hadoop_job_;
      break;
    }
    case kSparkJob: {
      delete type_job_.spark_job_;
      break;
    }
    case kPysparkJob: {
      delete type_job_.pyspark_job_;
      break;
    }
    case kHiveJob: {
      delete type_job_.hive_job_;
      break;
    }
    case kPigJob: {
      delete type_job_.pig_job_;
      break;
    }
    case kSparkSqlJob: {
      delete type_job_.spark_sql_job_;
      break;
    }
    case TYPE_JOB_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_JOB_NOT_SET;
}


void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_history_.Clear();
  driver_control_files_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_output_resource_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reference_ != NULL) {
    delete reference_;
  }
  reference_ = NULL;
  if (GetArenaNoVirtual() == NULL && placement_ != NULL) {
    delete placement_;
  }
  placement_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  clear_type_job();
  _internal_metadata_.Clear();
}

bool Job::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.Job)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dataproc.v1.JobReference reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.JobPlacement placement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_placement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.HadoopJob hadoop_job = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hadoop_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.SparkJob spark_job = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spark_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.PySparkJob pyspark_job = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pyspark_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.HiveJob hive_job = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hive_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.PigJob pig_job = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pig_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.JobStatus status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.SparkSqlJob spark_sql_job = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spark_sql_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dataproc.v1.JobStatus status_history = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_status_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string driver_control_files_uri = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_driver_control_files_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->driver_control_files_uri().data(), static_cast<int>(this->driver_control_files_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.Job.driver_control_files_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string driver_output_resource_uri = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_driver_output_resource_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->driver_output_resource_uri().data(), static_cast<int>(this->driver_output_resource_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.Job.driver_output_resource_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.Job)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.Job)
  return false;
#undef DO_
}

void Job::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1.JobReference reference = 1;
  if (this->has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->reference_, output);
  }

  // .google.cloud.dataproc.v1.JobPlacement placement = 2;
  if (this->has_placement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->placement_, output);
  }

  // .google.cloud.dataproc.v1.HadoopJob hadoop_job = 3;
  if (has_hadoop_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *type_job_.hadoop_job_, output);
  }

  // .google.cloud.dataproc.v1.SparkJob spark_job = 4;
  if (has_spark_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *type_job_.spark_job_, output);
  }

  // .google.cloud.dataproc.v1.PySparkJob pyspark_job = 5;
  if (has_pyspark_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *type_job_.pyspark_job_, output);
  }

  // .google.cloud.dataproc.v1.HiveJob hive_job = 6;
  if (has_hive_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *type_job_.hive_job_, output);
  }

  // .google.cloud.dataproc.v1.PigJob pig_job = 7;
  if (has_pig_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *type_job_.pig_job_, output);
  }

  // .google.cloud.dataproc.v1.JobStatus status = 8;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->status_, output);
  }

  // .google.cloud.dataproc.v1.SparkSqlJob spark_sql_job = 12;
  if (has_spark_sql_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *type_job_.spark_sql_job_, output);
  }

  // repeated .google.cloud.dataproc.v1.JobStatus status_history = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_history_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->status_history(static_cast<int>(i)), output);
  }

  // string driver_control_files_uri = 15;
  if (this->driver_control_files_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_control_files_uri().data(), static_cast<int>(this->driver_control_files_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.Job.driver_control_files_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->driver_control_files_uri(), output);
  }

  // string driver_output_resource_uri = 17;
  if (this->driver_output_resource_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_output_resource_uri().data(), static_cast<int>(this->driver_output_resource_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.Job.driver_output_resource_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->driver_output_resource_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.Job)
}

::google::protobuf::uint8* Job::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1.JobReference reference = 1;
  if (this->has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->reference_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.JobPlacement placement = 2;
  if (this->has_placement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->placement_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.HadoopJob hadoop_job = 3;
  if (has_hadoop_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *type_job_.hadoop_job_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.SparkJob spark_job = 4;
  if (has_spark_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *type_job_.spark_job_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.PySparkJob pyspark_job = 5;
  if (has_pyspark_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *type_job_.pyspark_job_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.HiveJob hive_job = 6;
  if (has_hive_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *type_job_.hive_job_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.PigJob pig_job = 7;
  if (has_pig_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *type_job_.pig_job_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.JobStatus status = 8;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->status_, deterministic, target);
  }

  // .google.cloud.dataproc.v1.SparkSqlJob spark_sql_job = 12;
  if (has_spark_sql_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *type_job_.spark_sql_job_, deterministic, target);
  }

  // repeated .google.cloud.dataproc.v1.JobStatus status_history = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_history_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->status_history(static_cast<int>(i)), deterministic, target);
  }

  // string driver_control_files_uri = 15;
  if (this->driver_control_files_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_control_files_uri().data(), static_cast<int>(this->driver_control_files_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.Job.driver_control_files_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->driver_control_files_uri(), target);
  }

  // string driver_output_resource_uri = 17;
  if (this->driver_output_resource_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_output_resource_uri().data(), static_cast<int>(this->driver_output_resource_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.Job.driver_output_resource_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->driver_output_resource_uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.Job)
  return target;
}

size_t Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.Job)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1.JobStatus status_history = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->status_history_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->status_history(static_cast<int>(i)));
    }
  }

  // string driver_control_files_uri = 15;
  if (this->driver_control_files_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->driver_control_files_uri());
  }

  // string driver_output_resource_uri = 17;
  if (this->driver_output_resource_uri().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->driver_output_resource_uri());
  }

  // .google.cloud.dataproc.v1.JobReference reference = 1;
  if (this->has_reference()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->reference_);
  }

  // .google.cloud.dataproc.v1.JobPlacement placement = 2;
  if (this->has_placement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->placement_);
  }

  // .google.cloud.dataproc.v1.JobStatus status = 8;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  switch (type_job_case()) {
    // .google.cloud.dataproc.v1.HadoopJob hadoop_job = 3;
    case kHadoopJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_job_.hadoop_job_);
      break;
    }
    // .google.cloud.dataproc.v1.SparkJob spark_job = 4;
    case kSparkJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_job_.spark_job_);
      break;
    }
    // .google.cloud.dataproc.v1.PySparkJob pyspark_job = 5;
    case kPysparkJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_job_.pyspark_job_);
      break;
    }
    // .google.cloud.dataproc.v1.HiveJob hive_job = 6;
    case kHiveJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_job_.hive_job_);
      break;
    }
    // .google.cloud.dataproc.v1.PigJob pig_job = 7;
    case kPigJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_job_.pig_job_);
      break;
    }
    // .google.cloud.dataproc.v1.SparkSqlJob spark_sql_job = 12;
    case kSparkSqlJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_job_.spark_sql_job_);
      break;
    }
    case TYPE_JOB_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Job::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.Job)
  GOOGLE_DCHECK_NE(&from, this);
  const Job* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.Job)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.Job)
    MergeFrom(*source);
  }
}

void Job::MergeFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.Job)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_history_.MergeFrom(from.status_history_);
  if (from.driver_control_files_uri().size() > 0) {

    driver_control_files_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_control_files_uri_);
  }
  if (from.driver_output_resource_uri().size() > 0) {

    driver_output_resource_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_output_resource_uri_);
  }
  if (from.has_reference()) {
    mutable_reference()->::google::cloud::dataproc::v1::JobReference::MergeFrom(from.reference());
  }
  if (from.has_placement()) {
    mutable_placement()->::google::cloud::dataproc::v1::JobPlacement::MergeFrom(from.placement());
  }
  if (from.has_status()) {
    mutable_status()->::google::cloud::dataproc::v1::JobStatus::MergeFrom(from.status());
  }
  switch (from.type_job_case()) {
    case kHadoopJob: {
      mutable_hadoop_job()->::google::cloud::dataproc::v1::HadoopJob::MergeFrom(from.hadoop_job());
      break;
    }
    case kSparkJob: {
      mutable_spark_job()->::google::cloud::dataproc::v1::SparkJob::MergeFrom(from.spark_job());
      break;
    }
    case kPysparkJob: {
      mutable_pyspark_job()->::google::cloud::dataproc::v1::PySparkJob::MergeFrom(from.pyspark_job());
      break;
    }
    case kHiveJob: {
      mutable_hive_job()->::google::cloud::dataproc::v1::HiveJob::MergeFrom(from.hive_job());
      break;
    }
    case kPigJob: {
      mutable_pig_job()->::google::cloud::dataproc::v1::PigJob::MergeFrom(from.pig_job());
      break;
    }
    case kSparkSqlJob: {
      mutable_spark_sql_job()->::google::cloud::dataproc::v1::SparkSqlJob::MergeFrom(from.spark_sql_job());
      break;
    }
    case TYPE_JOB_NOT_SET: {
      break;
    }
  }
}

void Job::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job::IsInitialized() const {
  return true;
}

void Job::Swap(Job* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job::InternalSwap(Job* other) {
  using std::swap;
  status_history_.InternalSwap(&other->status_history_);
  driver_control_files_uri_.Swap(&other->driver_control_files_uri_);
  driver_output_resource_uri_.Swap(&other->driver_output_resource_uri_);
  swap(reference_, other->reference_);
  swap(placement_, other->placement_);
  swap(status_, other->status_);
  swap(type_job_, other->type_job_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Job::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubmitJobRequest::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1::_SubmitJobRequest_default_instance_._instance.get_mutable()->job_ = const_cast< ::google::cloud::dataproc::v1::Job*>(
      ::google::cloud::dataproc::v1::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitJobRequest::kProjectIdFieldNumber;
const int SubmitJobRequest::kRegionFieldNumber;
const int SubmitJobRequest::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitJobRequest::SubmitJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSubmitJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.SubmitJobRequest)
}
SubmitJobRequest::SubmitJobRequest(const SubmitJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.has_job()) {
    job_ = new ::google::cloud::dataproc::v1::Job(*from.job_);
  } else {
    job_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.SubmitJobRequest)
}

void SubmitJobRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_ = NULL;
  _cached_size_ = 0;
}

SubmitJobRequest::~SubmitJobRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.SubmitJobRequest)
  SharedDtor();
}

void SubmitJobRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete job_;
}

void SubmitJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitJobRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitJobRequest& SubmitJobRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsSubmitJobRequest();
  return *internal_default_instance();
}

SubmitJobRequest* SubmitJobRequest::New(::google::protobuf::Arena* arena) const {
  SubmitJobRequest* n = new SubmitJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.SubmitJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
  _internal_metadata_.Clear();
}

bool SubmitJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.SubmitJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SubmitJobRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.Job job = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.SubmitJobRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.SubmitJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.SubmitJobRequest)
  return false;
#undef DO_
}

void SubmitJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.SubmitJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SubmitJobRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // .google.cloud.dataproc.v1.Job job = 2;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_, output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SubmitJobRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.SubmitJobRequest)
}

::google::protobuf::uint8* SubmitJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.SubmitJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SubmitJobRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // .google.cloud.dataproc.v1.Job job = 2;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->job_, deterministic, target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.SubmitJobRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.SubmitJobRequest)
  return target;
}

size_t SubmitJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.SubmitJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // .google.cloud.dataproc.v1.Job job = 2;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.SubmitJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.SubmitJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.SubmitJobRequest)
    MergeFrom(*source);
  }
}

void SubmitJobRequest::MergeFrom(const SubmitJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.SubmitJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.has_job()) {
    mutable_job()->::google::cloud::dataproc::v1::Job::MergeFrom(from.job());
  }
}

void SubmitJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.SubmitJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitJobRequest::CopyFrom(const SubmitJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.SubmitJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitJobRequest::IsInitialized() const {
  return true;
}

void SubmitJobRequest::Swap(SubmitJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitJobRequest::InternalSwap(SubmitJobRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  region_.Swap(&other->region_);
  swap(job_, other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitJobRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJobRequest::kProjectIdFieldNumber;
const int GetJobRequest::kRegionFieldNumber;
const int GetJobRequest::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJobRequest::GetJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsGetJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.GetJobRequest)
}
GetJobRequest::GetJobRequest(const GetJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.GetJobRequest)
}

void GetJobRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetJobRequest::~GetJobRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.GetJobRequest)
  SharedDtor();
}

void GetJobRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJobRequest& GetJobRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsGetJobRequest();
  return *internal_default_instance();
}

GetJobRequest* GetJobRequest::New(::google::protobuf::Arena* arena) const {
  GetJobRequest* n = new GetJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.GetJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.GetJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.GetJobRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.GetJobRequest.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.GetJobRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.GetJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.GetJobRequest)
  return false;
#undef DO_
}

void GetJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.GetJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.GetJobRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.GetJobRequest.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.GetJobRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.GetJobRequest)
}

::google::protobuf::uint8* GetJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.GetJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.GetJobRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.GetJobRequest.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.GetJobRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.GetJobRequest)
  return target;
}

size_t GetJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.GetJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.GetJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.GetJobRequest)
    MergeFrom(*source);
  }
}

void GetJobRequest::MergeFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
}

void GetJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobRequest::CopyFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobRequest::IsInitialized() const {
  return true;
}

void GetJobRequest::Swap(GetJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJobRequest::InternalSwap(GetJobRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  job_id_.Swap(&other->job_id_);
  region_.Swap(&other->region_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetJobRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListJobsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListJobsRequest::kProjectIdFieldNumber;
const int ListJobsRequest::kRegionFieldNumber;
const int ListJobsRequest::kPageSizeFieldNumber;
const int ListJobsRequest::kPageTokenFieldNumber;
const int ListJobsRequest::kClusterNameFieldNumber;
const int ListJobsRequest::kJobStateMatcherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListJobsRequest::ListJobsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsListJobsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.ListJobsRequest)
}
ListJobsRequest::ListJobsRequest(const ListJobsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&job_state_matcher_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(job_state_matcher_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.ListJobsRequest)
}

void ListJobsRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_state_matcher_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(job_state_matcher_));
  _cached_size_ = 0;
}

ListJobsRequest::~ListJobsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.ListJobsRequest)
  SharedDtor();
}

void ListJobsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListJobsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListJobsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListJobsRequest& ListJobsRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsListJobsRequest();
  return *internal_default_instance();
}

ListJobsRequest* ListJobsRequest::New(::google::protobuf::Arena* arena) const {
  ListJobsRequest* n = new ListJobsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListJobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.ListJobsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_state_matcher_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(job_state_matcher_));
  _internal_metadata_.Clear();
}

bool ListJobsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.ListJobsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ListJobsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ListJobsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ListJobsRequest.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher job_state_matcher = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_job_state_matcher(static_cast< ::google::cloud::dataproc::v1::ListJobsRequest_JobStateMatcher >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ListJobsRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.ListJobsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.ListJobsRequest)
  return false;
#undef DO_
}

void ListJobsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.ListJobsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // string cluster_name = 4;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cluster_name(), output);
  }

  // .google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher job_state_matcher = 5;
  if (this->job_state_matcher() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->job_state_matcher(), output);
  }

  // string region = 6;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->region(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.ListJobsRequest)
}

::google::protobuf::uint8* ListJobsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.ListJobsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // string cluster_name = 4;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cluster_name(), target);
  }

  // .google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher job_state_matcher = 5;
  if (this->job_state_matcher() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->job_state_matcher(), target);
  }

  // string region = 6;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->region(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.ListJobsRequest)
  return target;
}

size_t ListJobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.ListJobsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string cluster_name = 4;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string region = 6;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // .google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher job_state_matcher = 5;
  if (this->job_state_matcher() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->job_state_matcher());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListJobsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.ListJobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListJobsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListJobsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.ListJobsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.ListJobsRequest)
    MergeFrom(*source);
  }
}

void ListJobsRequest::MergeFrom(const ListJobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.ListJobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.job_state_matcher() != 0) {
    set_job_state_matcher(from.job_state_matcher());
  }
}

void ListJobsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.ListJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListJobsRequest::CopyFrom(const ListJobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.ListJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListJobsRequest::IsInitialized() const {
  return true;
}

void ListJobsRequest::Swap(ListJobsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListJobsRequest::InternalSwap(ListJobsRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  page_token_.Swap(&other->page_token_);
  cluster_name_.Swap(&other->cluster_name_);
  region_.Swap(&other->region_);
  swap(page_size_, other->page_size_);
  swap(job_state_matcher_, other->job_state_matcher_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListJobsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListJobsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListJobsResponse::kJobsFieldNumber;
const int ListJobsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListJobsResponse::ListJobsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsListJobsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.ListJobsResponse)
}
ListJobsResponse::ListJobsResponse(const ListJobsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jobs_(from.jobs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.ListJobsResponse)
}

void ListJobsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListJobsResponse::~ListJobsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.ListJobsResponse)
  SharedDtor();
}

void ListJobsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListJobsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListJobsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListJobsResponse& ListJobsResponse::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsListJobsResponse();
  return *internal_default_instance();
}

ListJobsResponse* ListJobsResponse::New(::google::protobuf::Arena* arena) const {
  ListJobsResponse* n = new ListJobsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListJobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.ListJobsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jobs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListJobsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.ListJobsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dataproc.v1.Job jobs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ListJobsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.ListJobsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.ListJobsResponse)
  return false;
#undef DO_
}

void ListJobsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.ListJobsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1.Job jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobs(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.ListJobsResponse)
}

::google::protobuf::uint8* ListJobsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.ListJobsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1.Job jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->jobs(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ListJobsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.ListJobsResponse)
  return target;
}

size_t ListJobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.ListJobsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1.Job jobs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jobs(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListJobsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.ListJobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListJobsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListJobsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.ListJobsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.ListJobsResponse)
    MergeFrom(*source);
  }
}

void ListJobsResponse::MergeFrom(const ListJobsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.ListJobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jobs_.MergeFrom(from.jobs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListJobsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.ListJobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListJobsResponse::CopyFrom(const ListJobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.ListJobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListJobsResponse::IsInitialized() const {
  return true;
}

void ListJobsResponse::Swap(ListJobsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListJobsResponse::InternalSwap(ListJobsResponse* other) {
  using std::swap;
  jobs_.InternalSwap(&other->jobs_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListJobsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelJobRequest::kProjectIdFieldNumber;
const int CancelJobRequest::kRegionFieldNumber;
const int CancelJobRequest::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelJobRequest::CancelJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsCancelJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.CancelJobRequest)
}
CancelJobRequest::CancelJobRequest(const CancelJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.CancelJobRequest)
}

void CancelJobRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelJobRequest::~CancelJobRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.CancelJobRequest)
  SharedDtor();
}

void CancelJobRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelJobRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelJobRequest& CancelJobRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsCancelJobRequest();
  return *internal_default_instance();
}

CancelJobRequest* CancelJobRequest::New(::google::protobuf::Arena* arena) const {
  CancelJobRequest* n = new CancelJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.CancelJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CancelJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.CancelJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.CancelJobRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.CancelJobRequest.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.CancelJobRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.CancelJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.CancelJobRequest)
  return false;
#undef DO_
}

void CancelJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.CancelJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.CancelJobRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.CancelJobRequest.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.CancelJobRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.CancelJobRequest)
}

::google::protobuf::uint8* CancelJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.CancelJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.CancelJobRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.CancelJobRequest.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.CancelJobRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.CancelJobRequest)
  return target;
}

size_t CancelJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.CancelJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.CancelJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.CancelJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.CancelJobRequest)
    MergeFrom(*source);
  }
}

void CancelJobRequest::MergeFrom(const CancelJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.CancelJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
}

void CancelJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.CancelJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelJobRequest::CopyFrom(const CancelJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.CancelJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelJobRequest::IsInitialized() const {
  return true;
}

void CancelJobRequest::Swap(CancelJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelJobRequest::InternalSwap(CancelJobRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  job_id_.Swap(&other->job_id_);
  region_.Swap(&other->region_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelJobRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteJobRequest::kProjectIdFieldNumber;
const int DeleteJobRequest::kRegionFieldNumber;
const int DeleteJobRequest::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteJobRequest::DeleteJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsDeleteJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.DeleteJobRequest)
}
DeleteJobRequest::DeleteJobRequest(const DeleteJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.DeleteJobRequest)
}

void DeleteJobRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteJobRequest::~DeleteJobRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.DeleteJobRequest)
  SharedDtor();
}

void DeleteJobRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteJobRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteJobRequest& DeleteJobRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::InitDefaultsDeleteJobRequest();
  return *internal_default_instance();
}

DeleteJobRequest* DeleteJobRequest::New(::google::protobuf::Arena* arena) const {
  DeleteJobRequest* n = new DeleteJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.DeleteJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.DeleteJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.DeleteJobRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.DeleteJobRequest.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.DeleteJobRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.DeleteJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.DeleteJobRequest)
  return false;
#undef DO_
}

void DeleteJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.DeleteJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.DeleteJobRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.DeleteJobRequest.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.DeleteJobRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.DeleteJobRequest)
}

::google::protobuf::uint8* DeleteJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.DeleteJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.DeleteJobRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.DeleteJobRequest.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.DeleteJobRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.DeleteJobRequest)
  return target;
}

size_t DeleteJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.DeleteJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.DeleteJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.DeleteJobRequest)
    MergeFrom(*source);
  }
}

void DeleteJobRequest::MergeFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
}

void DeleteJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobRequest::CopyFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobRequest::IsInitialized() const {
  return true;
}

void DeleteJobRequest::Swap(DeleteJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteJobRequest::InternalSwap(DeleteJobRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  job_id_.Swap(&other->job_id_);
  region_.Swap(&other->region_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteJobRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1_2fjobs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace dataproc
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
