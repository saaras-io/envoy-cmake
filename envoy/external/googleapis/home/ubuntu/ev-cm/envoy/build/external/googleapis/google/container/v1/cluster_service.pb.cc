// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

#include "google/container/v1/cluster_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace container {
namespace v1 {
class NodeConfig_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig_MetadataEntry_DoNotUse>
      _instance;
} _NodeConfig_MetadataEntry_DoNotUse_default_instance_;
class NodeConfig_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig_LabelsEntry_DoNotUse>
      _instance;
} _NodeConfig_LabelsEntry_DoNotUse_default_instance_;
class NodeConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeConfig>
      _instance;
} _NodeConfig_default_instance_;
class MasterAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuth>
      _instance;
} _MasterAuth_default_instance_;
class ClientCertificateConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientCertificateConfig>
      _instance;
} _ClientCertificateConfig_default_instance_;
class AddonsConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddonsConfig>
      _instance;
} _AddonsConfig_default_instance_;
class HttpLoadBalancingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpLoadBalancing>
      _instance;
} _HttpLoadBalancing_default_instance_;
class HorizontalPodAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HorizontalPodAutoscaling>
      _instance;
} _HorizontalPodAutoscaling_default_instance_;
class KubernetesDashboardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KubernetesDashboard>
      _instance;
} _KubernetesDashboard_default_instance_;
class NetworkPolicyConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkPolicyConfig>
      _instance;
} _NetworkPolicyConfig_default_instance_;
class MasterAuthorizedNetworksConfig_CidrBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuthorizedNetworksConfig_CidrBlock>
      _instance;
} _MasterAuthorizedNetworksConfig_CidrBlock_default_instance_;
class MasterAuthorizedNetworksConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterAuthorizedNetworksConfig>
      _instance;
} _MasterAuthorizedNetworksConfig_default_instance_;
class LegacyAbacDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LegacyAbac>
      _instance;
} _LegacyAbac_default_instance_;
class NetworkPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkPolicy>
      _instance;
} _NetworkPolicy_default_instance_;
class IPAllocationPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IPAllocationPolicy>
      _instance;
} _IPAllocationPolicy_default_instance_;
class Cluster_ResourceLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster_ResourceLabelsEntry_DoNotUse>
      _instance;
} _Cluster_ResourceLabelsEntry_DoNotUse_default_instance_;
class ClusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster>
      _instance;
} _Cluster_default_instance_;
class ClusterUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterUpdate>
      _instance;
} _ClusterUpdate_default_instance_;
class OperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Operation>
      _instance;
} _Operation_default_instance_;
class CreateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterRequest>
      _instance;
} _CreateClusterRequest_default_instance_;
class GetClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetClusterRequest>
      _instance;
} _GetClusterRequest_default_instance_;
class UpdateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterRequest>
      _instance;
} _UpdateClusterRequest_default_instance_;
class UpdateNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNodePoolRequest>
      _instance;
} _UpdateNodePoolRequest_default_instance_;
class SetNodePoolAutoscalingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolAutoscalingRequest>
      _instance;
} _SetNodePoolAutoscalingRequest_default_instance_;
class SetLoggingServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLoggingServiceRequest>
      _instance;
} _SetLoggingServiceRequest_default_instance_;
class SetMonitoringServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMonitoringServiceRequest>
      _instance;
} _SetMonitoringServiceRequest_default_instance_;
class SetAddonsConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAddonsConfigRequest>
      _instance;
} _SetAddonsConfigRequest_default_instance_;
class SetLocationsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLocationsRequest>
      _instance;
} _SetLocationsRequest_default_instance_;
class UpdateMasterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateMasterRequest>
      _instance;
} _UpdateMasterRequest_default_instance_;
class SetMasterAuthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMasterAuthRequest>
      _instance;
} _SetMasterAuthRequest_default_instance_;
class DeleteClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRequest>
      _instance;
} _DeleteClusterRequest_default_instance_;
class ListClustersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersRequest>
      _instance;
} _ListClustersRequest_default_instance_;
class ListClustersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersResponse>
      _instance;
} _ListClustersResponse_default_instance_;
class GetOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOperationRequest>
      _instance;
} _GetOperationRequest_default_instance_;
class ListOperationsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOperationsRequest>
      _instance;
} _ListOperationsRequest_default_instance_;
class CancelOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelOperationRequest>
      _instance;
} _CancelOperationRequest_default_instance_;
class ListOperationsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOperationsResponse>
      _instance;
} _ListOperationsResponse_default_instance_;
class GetServerConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServerConfigRequest>
      _instance;
} _GetServerConfigRequest_default_instance_;
class ServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerConfig>
      _instance;
} _ServerConfig_default_instance_;
class CreateNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNodePoolRequest>
      _instance;
} _CreateNodePoolRequest_default_instance_;
class DeleteNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteNodePoolRequest>
      _instance;
} _DeleteNodePoolRequest_default_instance_;
class ListNodePoolsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNodePoolsRequest>
      _instance;
} _ListNodePoolsRequest_default_instance_;
class GetNodePoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNodePoolRequest>
      _instance;
} _GetNodePoolRequest_default_instance_;
class NodePoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodePool>
      _instance;
} _NodePool_default_instance_;
class NodeManagementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeManagement>
      _instance;
} _NodeManagement_default_instance_;
class AutoUpgradeOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoUpgradeOptions>
      _instance;
} _AutoUpgradeOptions_default_instance_;
class MaintenancePolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaintenancePolicy>
      _instance;
} _MaintenancePolicy_default_instance_;
class MaintenanceWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaintenanceWindow>
      _instance;
  const ::google::container::v1::DailyMaintenanceWindow* daily_maintenance_window_;
} _MaintenanceWindow_default_instance_;
class DailyMaintenanceWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DailyMaintenanceWindow>
      _instance;
} _DailyMaintenanceWindow_default_instance_;
class SetNodePoolManagementRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolManagementRequest>
      _instance;
} _SetNodePoolManagementRequest_default_instance_;
class SetNodePoolSizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNodePoolSizeRequest>
      _instance;
} _SetNodePoolSizeRequest_default_instance_;
class RollbackNodePoolUpgradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollbackNodePoolUpgradeRequest>
      _instance;
} _RollbackNodePoolUpgradeRequest_default_instance_;
class ListNodePoolsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNodePoolsResponse>
      _instance;
} _ListNodePoolsResponse_default_instance_;
class NodePoolAutoscalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodePoolAutoscaling>
      _instance;
} _NodePoolAutoscaling_default_instance_;
class SetLabelsRequest_ResourceLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLabelsRequest_ResourceLabelsEntry_DoNotUse>
      _instance;
} _SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_;
class SetLabelsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLabelsRequest>
      _instance;
} _SetLabelsRequest_default_instance_;
class SetLegacyAbacRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLegacyAbacRequest>
      _instance;
} _SetLegacyAbacRequest_default_instance_;
class StartIPRotationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartIPRotationRequest>
      _instance;
} _StartIPRotationRequest_default_instance_;
class CompleteIPRotationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteIPRotationRequest>
      _instance;
} _CompleteIPRotationRequest_default_instance_;
class AcceleratorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AcceleratorConfig>
      _instance;
} _AcceleratorConfig_default_instance_;
class SetNetworkPolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNetworkPolicyRequest>
      _instance;
} _SetNetworkPolicyRequest_default_instance_;
class SetMaintenancePolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMaintenancePolicyRequest>
      _instance;
} _SetMaintenancePolicyRequest_default_instance_;
}  // namespace v1
}  // namespace container
}  // namespace google
namespace protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto {
void InitDefaultsNodeConfig_MetadataEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_NodeConfig_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse();
  }
  ::google::container::v1::NodeConfig_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsNodeConfig_MetadataEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeConfig_MetadataEntry_DoNotUseImpl);
}

void InitDefaultsNodeConfig_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_NodeConfig_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse();
  }
  ::google::container::v1::NodeConfig_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsNodeConfig_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeConfig_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsNodeConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeConfig_MetadataEntry_DoNotUse();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeConfig_LabelsEntry_DoNotUse();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAcceleratorConfig();
  {
    void* ptr = &::google::container::v1::_NodeConfig_default_instance_;
    new (ptr) ::google::container::v1::NodeConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodeConfig::InitAsDefaultInstance();
}

void InitDefaultsNodeConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeConfigImpl);
}

void InitDefaultsMasterAuthImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsClientCertificateConfig();
  {
    void* ptr = &::google::container::v1::_MasterAuth_default_instance_;
    new (ptr) ::google::container::v1::MasterAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MasterAuth::InitAsDefaultInstance();
}

void InitDefaultsMasterAuth() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMasterAuthImpl);
}

void InitDefaultsClientCertificateConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_ClientCertificateConfig_default_instance_;
    new (ptr) ::google::container::v1::ClientCertificateConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ClientCertificateConfig::InitAsDefaultInstance();
}

void InitDefaultsClientCertificateConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientCertificateConfigImpl);
}

void InitDefaultsAddonsConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsHttpLoadBalancing();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsHorizontalPodAutoscaling();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsKubernetesDashboard();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNetworkPolicyConfig();
  {
    void* ptr = &::google::container::v1::_AddonsConfig_default_instance_;
    new (ptr) ::google::container::v1::AddonsConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AddonsConfig::InitAsDefaultInstance();
}

void InitDefaultsAddonsConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddonsConfigImpl);
}

void InitDefaultsHttpLoadBalancingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_HttpLoadBalancing_default_instance_;
    new (ptr) ::google::container::v1::HttpLoadBalancing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::HttpLoadBalancing::InitAsDefaultInstance();
}

void InitDefaultsHttpLoadBalancing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHttpLoadBalancingImpl);
}

void InitDefaultsHorizontalPodAutoscalingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_HorizontalPodAutoscaling_default_instance_;
    new (ptr) ::google::container::v1::HorizontalPodAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::HorizontalPodAutoscaling::InitAsDefaultInstance();
}

void InitDefaultsHorizontalPodAutoscaling() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHorizontalPodAutoscalingImpl);
}

void InitDefaultsKubernetesDashboardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_KubernetesDashboard_default_instance_;
    new (ptr) ::google::container::v1::KubernetesDashboard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::KubernetesDashboard::InitAsDefaultInstance();
}

void InitDefaultsKubernetesDashboard() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKubernetesDashboardImpl);
}

void InitDefaultsNetworkPolicyConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_NetworkPolicyConfig_default_instance_;
    new (ptr) ::google::container::v1::NetworkPolicyConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NetworkPolicyConfig::InitAsDefaultInstance();
}

void InitDefaultsNetworkPolicyConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetworkPolicyConfigImpl);
}

void InitDefaultsMasterAuthorizedNetworksConfig_CidrBlockImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_MasterAuthorizedNetworksConfig_CidrBlock_default_instance_;
    new (ptr) ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock::InitAsDefaultInstance();
}

void InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMasterAuthorizedNetworksConfig_CidrBlockImpl);
}

void InitDefaultsMasterAuthorizedNetworksConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock();
  {
    void* ptr = &::google::container::v1::_MasterAuthorizedNetworksConfig_default_instance_;
    new (ptr) ::google::container::v1::MasterAuthorizedNetworksConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MasterAuthorizedNetworksConfig::InitAsDefaultInstance();
}

void InitDefaultsMasterAuthorizedNetworksConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMasterAuthorizedNetworksConfigImpl);
}

void InitDefaultsLegacyAbacImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_LegacyAbac_default_instance_;
    new (ptr) ::google::container::v1::LegacyAbac();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::LegacyAbac::InitAsDefaultInstance();
}

void InitDefaultsLegacyAbac() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLegacyAbacImpl);
}

void InitDefaultsNetworkPolicyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_NetworkPolicy_default_instance_;
    new (ptr) ::google::container::v1::NetworkPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NetworkPolicy::InitAsDefaultInstance();
}

void InitDefaultsNetworkPolicy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetworkPolicyImpl);
}

void InitDefaultsIPAllocationPolicyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_IPAllocationPolicy_default_instance_;
    new (ptr) ::google::container::v1::IPAllocationPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::IPAllocationPolicy::InitAsDefaultInstance();
}

void InitDefaultsIPAllocationPolicy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIPAllocationPolicyImpl);
}

void InitDefaultsCluster_ResourceLabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_Cluster_ResourceLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse();
  }
  ::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsCluster_ResourceLabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCluster_ResourceLabelsEntry_DoNotUseImpl);
}

void InitDefaultsClusterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeConfig();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuth();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAddonsConfig();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePool();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCluster_ResourceLabelsEntry_DoNotUse();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsLegacyAbac();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNetworkPolicy();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsIPAllocationPolicy();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuthorizedNetworksConfig();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMaintenancePolicy();
  {
    void* ptr = &::google::container::v1::_Cluster_default_instance_;
    new (ptr) ::google::container::v1::Cluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::Cluster::InitAsDefaultInstance();
}

void InitDefaultsCluster() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterImpl);
}

void InitDefaultsClusterUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAddonsConfig();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePoolAutoscaling();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuthorizedNetworksConfig();
  {
    void* ptr = &::google::container::v1::_ClusterUpdate_default_instance_;
    new (ptr) ::google::container::v1::ClusterUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ClusterUpdate::InitAsDefaultInstance();
}

void InitDefaultsClusterUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterUpdateImpl);
}

void InitDefaultsOperationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_Operation_default_instance_;
    new (ptr) ::google::container::v1::Operation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::Operation::InitAsDefaultInstance();
}

void InitDefaultsOperation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationImpl);
}

void InitDefaultsCreateClusterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCluster();
  {
    void* ptr = &::google::container::v1::_CreateClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::CreateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CreateClusterRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateClusterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateClusterRequestImpl);
}

void InitDefaultsGetClusterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_GetClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::GetClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetClusterRequest::InitAsDefaultInstance();
}

void InitDefaultsGetClusterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetClusterRequestImpl);
}

void InitDefaultsUpdateClusterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsClusterUpdate();
  {
    void* ptr = &::google::container::v1::_UpdateClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::UpdateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UpdateClusterRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateClusterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateClusterRequestImpl);
}

void InitDefaultsUpdateNodePoolRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_UpdateNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::UpdateNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UpdateNodePoolRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateNodePoolRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateNodePoolRequestImpl);
}

void InitDefaultsSetNodePoolAutoscalingRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePoolAutoscaling();
  {
    void* ptr = &::google::container::v1::_SetNodePoolAutoscalingRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNodePoolAutoscalingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNodePoolAutoscalingRequest::InitAsDefaultInstance();
}

void InitDefaultsSetNodePoolAutoscalingRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetNodePoolAutoscalingRequestImpl);
}

void InitDefaultsSetLoggingServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_SetLoggingServiceRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLoggingServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLoggingServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsSetLoggingServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetLoggingServiceRequestImpl);
}

void InitDefaultsSetMonitoringServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_SetMonitoringServiceRequest_default_instance_;
    new (ptr) ::google::container::v1::SetMonitoringServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetMonitoringServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsSetMonitoringServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetMonitoringServiceRequestImpl);
}

void InitDefaultsSetAddonsConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAddonsConfig();
  {
    void* ptr = &::google::container::v1::_SetAddonsConfigRequest_default_instance_;
    new (ptr) ::google::container::v1::SetAddonsConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetAddonsConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsSetAddonsConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetAddonsConfigRequestImpl);
}

void InitDefaultsSetLocationsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_SetLocationsRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLocationsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLocationsRequest::InitAsDefaultInstance();
}

void InitDefaultsSetLocationsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetLocationsRequestImpl);
}

void InitDefaultsUpdateMasterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_UpdateMasterRequest_default_instance_;
    new (ptr) ::google::container::v1::UpdateMasterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::UpdateMasterRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateMasterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateMasterRequestImpl);
}

void InitDefaultsSetMasterAuthRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuth();
  {
    void* ptr = &::google::container::v1::_SetMasterAuthRequest_default_instance_;
    new (ptr) ::google::container::v1::SetMasterAuthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetMasterAuthRequest::InitAsDefaultInstance();
}

void InitDefaultsSetMasterAuthRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetMasterAuthRequestImpl);
}

void InitDefaultsDeleteClusterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_DeleteClusterRequest_default_instance_;
    new (ptr) ::google::container::v1::DeleteClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DeleteClusterRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteClusterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteClusterRequestImpl);
}

void InitDefaultsListClustersRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_ListClustersRequest_default_instance_;
    new (ptr) ::google::container::v1::ListClustersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListClustersRequest::InitAsDefaultInstance();
}

void InitDefaultsListClustersRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListClustersRequestImpl);
}

void InitDefaultsListClustersResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCluster();
  {
    void* ptr = &::google::container::v1::_ListClustersResponse_default_instance_;
    new (ptr) ::google::container::v1::ListClustersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListClustersResponse::InitAsDefaultInstance();
}

void InitDefaultsListClustersResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListClustersResponseImpl);
}

void InitDefaultsGetOperationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_GetOperationRequest_default_instance_;
    new (ptr) ::google::container::v1::GetOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetOperationRequest::InitAsDefaultInstance();
}

void InitDefaultsGetOperationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetOperationRequestImpl);
}

void InitDefaultsListOperationsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_ListOperationsRequest_default_instance_;
    new (ptr) ::google::container::v1::ListOperationsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListOperationsRequest::InitAsDefaultInstance();
}

void InitDefaultsListOperationsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListOperationsRequestImpl);
}

void InitDefaultsCancelOperationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_CancelOperationRequest_default_instance_;
    new (ptr) ::google::container::v1::CancelOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CancelOperationRequest::InitAsDefaultInstance();
}

void InitDefaultsCancelOperationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCancelOperationRequestImpl);
}

void InitDefaultsListOperationsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsOperation();
  {
    void* ptr = &::google::container::v1::_ListOperationsResponse_default_instance_;
    new (ptr) ::google::container::v1::ListOperationsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListOperationsResponse::InitAsDefaultInstance();
}

void InitDefaultsListOperationsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListOperationsResponseImpl);
}

void InitDefaultsGetServerConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_GetServerConfigRequest_default_instance_;
    new (ptr) ::google::container::v1::GetServerConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetServerConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsGetServerConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServerConfigRequestImpl);
}

void InitDefaultsServerConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_ServerConfig_default_instance_;
    new (ptr) ::google::container::v1::ServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ServerConfig::InitAsDefaultInstance();
}

void InitDefaultsServerConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerConfigImpl);
}

void InitDefaultsCreateNodePoolRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePool();
  {
    void* ptr = &::google::container::v1::_CreateNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::CreateNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CreateNodePoolRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateNodePoolRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateNodePoolRequestImpl);
}

void InitDefaultsDeleteNodePoolRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_DeleteNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::DeleteNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DeleteNodePoolRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteNodePoolRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteNodePoolRequestImpl);
}

void InitDefaultsListNodePoolsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_ListNodePoolsRequest_default_instance_;
    new (ptr) ::google::container::v1::ListNodePoolsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListNodePoolsRequest::InitAsDefaultInstance();
}

void InitDefaultsListNodePoolsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListNodePoolsRequestImpl);
}

void InitDefaultsGetNodePoolRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_GetNodePoolRequest_default_instance_;
    new (ptr) ::google::container::v1::GetNodePoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::GetNodePoolRequest::InitAsDefaultInstance();
}

void InitDefaultsGetNodePoolRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetNodePoolRequestImpl);
}

void InitDefaultsNodePoolImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeConfig();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePoolAutoscaling();
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeManagement();
  {
    void* ptr = &::google::container::v1::_NodePool_default_instance_;
    new (ptr) ::google::container::v1::NodePool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodePool::InitAsDefaultInstance();
}

void InitDefaultsNodePool() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodePoolImpl);
}

void InitDefaultsNodeManagementImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAutoUpgradeOptions();
  {
    void* ptr = &::google::container::v1::_NodeManagement_default_instance_;
    new (ptr) ::google::container::v1::NodeManagement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodeManagement::InitAsDefaultInstance();
}

void InitDefaultsNodeManagement() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeManagementImpl);
}

void InitDefaultsAutoUpgradeOptionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_AutoUpgradeOptions_default_instance_;
    new (ptr) ::google::container::v1::AutoUpgradeOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AutoUpgradeOptions::InitAsDefaultInstance();
}

void InitDefaultsAutoUpgradeOptions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAutoUpgradeOptionsImpl);
}

void InitDefaultsMaintenancePolicyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMaintenanceWindow();
  {
    void* ptr = &::google::container::v1::_MaintenancePolicy_default_instance_;
    new (ptr) ::google::container::v1::MaintenancePolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MaintenancePolicy::InitAsDefaultInstance();
}

void InitDefaultsMaintenancePolicy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMaintenancePolicyImpl);
}

void InitDefaultsMaintenanceWindowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsDailyMaintenanceWindow();
  {
    void* ptr = &::google::container::v1::_MaintenanceWindow_default_instance_;
    new (ptr) ::google::container::v1::MaintenanceWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::MaintenanceWindow::InitAsDefaultInstance();
}

void InitDefaultsMaintenanceWindow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMaintenanceWindowImpl);
}

void InitDefaultsDailyMaintenanceWindowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_DailyMaintenanceWindow_default_instance_;
    new (ptr) ::google::container::v1::DailyMaintenanceWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::DailyMaintenanceWindow::InitAsDefaultInstance();
}

void InitDefaultsDailyMaintenanceWindow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDailyMaintenanceWindowImpl);
}

void InitDefaultsSetNodePoolManagementRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeManagement();
  {
    void* ptr = &::google::container::v1::_SetNodePoolManagementRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNodePoolManagementRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNodePoolManagementRequest::InitAsDefaultInstance();
}

void InitDefaultsSetNodePoolManagementRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetNodePoolManagementRequestImpl);
}

void InitDefaultsSetNodePoolSizeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_SetNodePoolSizeRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNodePoolSizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNodePoolSizeRequest::InitAsDefaultInstance();
}

void InitDefaultsSetNodePoolSizeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetNodePoolSizeRequestImpl);
}

void InitDefaultsRollbackNodePoolUpgradeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_RollbackNodePoolUpgradeRequest_default_instance_;
    new (ptr) ::google::container::v1::RollbackNodePoolUpgradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::RollbackNodePoolUpgradeRequest::InitAsDefaultInstance();
}

void InitDefaultsRollbackNodePoolUpgradeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRollbackNodePoolUpgradeRequestImpl);
}

void InitDefaultsListNodePoolsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePool();
  {
    void* ptr = &::google::container::v1::_ListNodePoolsResponse_default_instance_;
    new (ptr) ::google::container::v1::ListNodePoolsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::ListNodePoolsResponse::InitAsDefaultInstance();
}

void InitDefaultsListNodePoolsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListNodePoolsResponseImpl);
}

void InitDefaultsNodePoolAutoscalingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_NodePoolAutoscaling_default_instance_;
    new (ptr) ::google::container::v1::NodePoolAutoscaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::NodePoolAutoscaling::InitAsDefaultInstance();
}

void InitDefaultsNodePoolAutoscaling() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodePoolAutoscalingImpl);
}

void InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse();
  }
  ::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUseImpl);
}

void InitDefaultsSetLabelsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLabelsRequest_ResourceLabelsEntry_DoNotUse();
  {
    void* ptr = &::google::container::v1::_SetLabelsRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLabelsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLabelsRequest::InitAsDefaultInstance();
}

void InitDefaultsSetLabelsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetLabelsRequestImpl);
}

void InitDefaultsSetLegacyAbacRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_SetLegacyAbacRequest_default_instance_;
    new (ptr) ::google::container::v1::SetLegacyAbacRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetLegacyAbacRequest::InitAsDefaultInstance();
}

void InitDefaultsSetLegacyAbacRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetLegacyAbacRequestImpl);
}

void InitDefaultsStartIPRotationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_StartIPRotationRequest_default_instance_;
    new (ptr) ::google::container::v1::StartIPRotationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::StartIPRotationRequest::InitAsDefaultInstance();
}

void InitDefaultsStartIPRotationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartIPRotationRequestImpl);
}

void InitDefaultsCompleteIPRotationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_CompleteIPRotationRequest_default_instance_;
    new (ptr) ::google::container::v1::CompleteIPRotationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::CompleteIPRotationRequest::InitAsDefaultInstance();
}

void InitDefaultsCompleteIPRotationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCompleteIPRotationRequestImpl);
}

void InitDefaultsAcceleratorConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::container::v1::_AcceleratorConfig_default_instance_;
    new (ptr) ::google::container::v1::AcceleratorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::AcceleratorConfig::InitAsDefaultInstance();
}

void InitDefaultsAcceleratorConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcceleratorConfigImpl);
}

void InitDefaultsSetNetworkPolicyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNetworkPolicy();
  {
    void* ptr = &::google::container::v1::_SetNetworkPolicyRequest_default_instance_;
    new (ptr) ::google::container::v1::SetNetworkPolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetNetworkPolicyRequest::InitAsDefaultInstance();
}

void InitDefaultsSetNetworkPolicyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetNetworkPolicyRequestImpl);
}

void InitDefaultsSetMaintenancePolicyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMaintenancePolicy();
  {
    void* ptr = &::google::container::v1::_SetMaintenancePolicyRequest_default_instance_;
    new (ptr) ::google::container::v1::SetMaintenancePolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::container::v1::SetMaintenancePolicyRequest::InitAsDefaultInstance();
}

void InitDefaultsSetMaintenancePolicyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetMaintenancePolicyRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[62];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, machine_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, disk_size_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, oauth_scopes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, service_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, image_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, local_ssd_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, preemptible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, accelerators_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeConfig, min_cpu_platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuth, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuth, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuth, client_certificate_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuth, cluster_ca_certificate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuth, client_certificate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuth, client_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClientCertificateConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClientCertificateConfig, issue_client_certificate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AddonsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AddonsConfig, http_load_balancing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AddonsConfig, horizontal_pod_autoscaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AddonsConfig, kubernetes_dashboard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AddonsConfig, network_policy_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::HttpLoadBalancing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::HttpLoadBalancing, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::HorizontalPodAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::HorizontalPodAutoscaling, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::KubernetesDashboard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::KubernetesDashboard, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NetworkPolicyConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NetworkPolicyConfig, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock, cidr_block_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MasterAuthorizedNetworksConfig, cidr_blocks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::LegacyAbac, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::LegacyAbac, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NetworkPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NetworkPolicy, provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NetworkPolicy, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, use_ip_aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, create_subnetwork_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, subnetwork_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, cluster_ipv4_cidr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, node_ipv4_cidr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, services_ipv4_cidr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, cluster_secondary_range_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, services_secondary_range_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, cluster_ipv4_cidr_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, node_ipv4_cidr_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::IPAllocationPolicy, services_ipv4_cidr_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, initial_node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, node_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, master_auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, logging_service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, monitoring_service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, network_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, cluster_ipv4_cidr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, addons_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, subnetwork_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, node_pools_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, enable_kubernetes_alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, resource_labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, label_fingerprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, legacy_abac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, network_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, ip_allocation_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, master_authorized_networks_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, maintenance_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, self_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, initial_cluster_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, current_master_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, current_node_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, status_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, node_ipv4_cidr_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, services_ipv4_cidr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, instance_group_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, current_node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Cluster, expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_node_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_monitoring_service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_addons_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_node_pool_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_image_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_node_pool_autoscaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_master_authorized_networks_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ClusterUpdate, desired_master_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, operation_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, status_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, self_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, target_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::Operation, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateClusterRequest, cluster_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetClusterRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetClusterRequest, cluster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateClusterRequest, update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, node_pool_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, node_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateNodePoolRequest, image_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, node_pool_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolAutoscalingRequest, autoscaling_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLoggingServiceRequest, logging_service_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMonitoringServiceRequest, monitoring_service_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetAddonsConfigRequest, addons_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLocationsRequest, locations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::UpdateMasterRequest, master_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMasterAuthRequest, update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteClusterRequest, cluster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListClustersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListClustersRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListClustersRequest, zone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListClustersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListClustersResponse, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListClustersResponse, missing_zones_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetOperationRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetOperationRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetOperationRequest, operation_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListOperationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListOperationsRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListOperationsRequest, zone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CancelOperationRequest, operation_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListOperationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListOperationsResponse, operations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListOperationsResponse, missing_zones_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetServerConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetServerConfigRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetServerConfigRequest, zone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ServerConfig, default_cluster_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ServerConfig, valid_node_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ServerConfig, default_image_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ServerConfig, valid_image_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ServerConfig, valid_master_versions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CreateNodePoolRequest, node_pool_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DeleteNodePoolRequest, node_pool_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListNodePoolsRequest, cluster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::GetNodePoolRequest, node_pool_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, initial_node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, self_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, instance_group_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, status_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, autoscaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePool, management_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeManagement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeManagement, auto_upgrade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeManagement, auto_repair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodeManagement, upgrade_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AutoUpgradeOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AutoUpgradeOptions, auto_upgrade_start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AutoUpgradeOptions, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MaintenancePolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MaintenancePolicy, window_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MaintenanceWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MaintenanceWindow, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::container::v1::MaintenanceWindowDefaultTypeInternal, daily_maintenance_window_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::MaintenanceWindow, policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DailyMaintenanceWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DailyMaintenanceWindow, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::DailyMaintenanceWindow, duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, node_pool_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolManagementRequest, management_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, node_pool_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNodePoolSizeRequest, node_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::RollbackNodePoolUpgradeRequest, node_pool_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListNodePoolsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::ListNodePoolsResponse, node_pools_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, min_node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::NodePoolAutoscaling, max_node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, resource_labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLabelsRequest, label_fingerprint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetLegacyAbacRequest, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::StartIPRotationRequest, cluster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::CompleteIPRotationRequest, cluster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AcceleratorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AcceleratorConfig, accelerator_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::AcceleratorConfig, accelerator_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetNetworkPolicyRequest, network_policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::container::v1::SetMaintenancePolicyRequest, maintenance_policy_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::container::v1::NodeConfig_MetadataEntry_DoNotUse)},
  { 9, 16, sizeof(::google::container::v1::NodeConfig_LabelsEntry_DoNotUse)},
  { 18, -1, sizeof(::google::container::v1::NodeConfig)},
  { 35, -1, sizeof(::google::container::v1::MasterAuth)},
  { 46, -1, sizeof(::google::container::v1::ClientCertificateConfig)},
  { 52, -1, sizeof(::google::container::v1::AddonsConfig)},
  { 61, -1, sizeof(::google::container::v1::HttpLoadBalancing)},
  { 67, -1, sizeof(::google::container::v1::HorizontalPodAutoscaling)},
  { 73, -1, sizeof(::google::container::v1::KubernetesDashboard)},
  { 79, -1, sizeof(::google::container::v1::NetworkPolicyConfig)},
  { 85, -1, sizeof(::google::container::v1::MasterAuthorizedNetworksConfig_CidrBlock)},
  { 92, -1, sizeof(::google::container::v1::MasterAuthorizedNetworksConfig)},
  { 99, -1, sizeof(::google::container::v1::LegacyAbac)},
  { 105, -1, sizeof(::google::container::v1::NetworkPolicy)},
  { 112, -1, sizeof(::google::container::v1::IPAllocationPolicy)},
  { 128, 135, sizeof(::google::container::v1::Cluster_ResourceLabelsEntry_DoNotUse)},
  { 137, -1, sizeof(::google::container::v1::Cluster)},
  { 177, -1, sizeof(::google::container::v1::ClusterUpdate)},
  { 191, -1, sizeof(::google::container::v1::Operation)},
  { 206, -1, sizeof(::google::container::v1::CreateClusterRequest)},
  { 214, -1, sizeof(::google::container::v1::GetClusterRequest)},
  { 222, -1, sizeof(::google::container::v1::UpdateClusterRequest)},
  { 231, -1, sizeof(::google::container::v1::UpdateNodePoolRequest)},
  { 242, -1, sizeof(::google::container::v1::SetNodePoolAutoscalingRequest)},
  { 252, -1, sizeof(::google::container::v1::SetLoggingServiceRequest)},
  { 261, -1, sizeof(::google::container::v1::SetMonitoringServiceRequest)},
  { 270, -1, sizeof(::google::container::v1::SetAddonsConfigRequest)},
  { 279, -1, sizeof(::google::container::v1::SetLocationsRequest)},
  { 288, -1, sizeof(::google::container::v1::UpdateMasterRequest)},
  { 297, -1, sizeof(::google::container::v1::SetMasterAuthRequest)},
  { 307, -1, sizeof(::google::container::v1::DeleteClusterRequest)},
  { 315, -1, sizeof(::google::container::v1::ListClustersRequest)},
  { 322, -1, sizeof(::google::container::v1::ListClustersResponse)},
  { 329, -1, sizeof(::google::container::v1::GetOperationRequest)},
  { 337, -1, sizeof(::google::container::v1::ListOperationsRequest)},
  { 344, -1, sizeof(::google::container::v1::CancelOperationRequest)},
  { 352, -1, sizeof(::google::container::v1::ListOperationsResponse)},
  { 359, -1, sizeof(::google::container::v1::GetServerConfigRequest)},
  { 366, -1, sizeof(::google::container::v1::ServerConfig)},
  { 376, -1, sizeof(::google::container::v1::CreateNodePoolRequest)},
  { 385, -1, sizeof(::google::container::v1::DeleteNodePoolRequest)},
  { 394, -1, sizeof(::google::container::v1::ListNodePoolsRequest)},
  { 402, -1, sizeof(::google::container::v1::GetNodePoolRequest)},
  { 411, -1, sizeof(::google::container::v1::NodePool)},
  { 426, -1, sizeof(::google::container::v1::NodeManagement)},
  { 434, -1, sizeof(::google::container::v1::AutoUpgradeOptions)},
  { 441, -1, sizeof(::google::container::v1::MaintenancePolicy)},
  { 447, -1, sizeof(::google::container::v1::MaintenanceWindow)},
  { 454, -1, sizeof(::google::container::v1::DailyMaintenanceWindow)},
  { 461, -1, sizeof(::google::container::v1::SetNodePoolManagementRequest)},
  { 471, -1, sizeof(::google::container::v1::SetNodePoolSizeRequest)},
  { 481, -1, sizeof(::google::container::v1::RollbackNodePoolUpgradeRequest)},
  { 490, -1, sizeof(::google::container::v1::ListNodePoolsResponse)},
  { 496, -1, sizeof(::google::container::v1::NodePoolAutoscaling)},
  { 504, 511, sizeof(::google::container::v1::SetLabelsRequest_ResourceLabelsEntry_DoNotUse)},
  { 513, -1, sizeof(::google::container::v1::SetLabelsRequest)},
  { 523, -1, sizeof(::google::container::v1::SetLegacyAbacRequest)},
  { 532, -1, sizeof(::google::container::v1::StartIPRotationRequest)},
  { 540, -1, sizeof(::google::container::v1::CompleteIPRotationRequest)},
  { 548, -1, sizeof(::google::container::v1::AcceleratorConfig)},
  { 555, -1, sizeof(::google::container::v1::SetNetworkPolicyRequest)},
  { 564, -1, sizeof(::google::container::v1::SetMaintenancePolicyRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeConfig_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeConfig_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MasterAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ClientCertificateConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AddonsConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_HttpLoadBalancing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_HorizontalPodAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_KubernetesDashboard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NetworkPolicyConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MasterAuthorizedNetworksConfig_CidrBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MasterAuthorizedNetworksConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_LegacyAbac_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NetworkPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_IPAllocationPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_Cluster_ResourceLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_Cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ClusterUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_Operation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CreateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UpdateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UpdateNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNodePoolAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLoggingServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetMonitoringServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetAddonsConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLocationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_UpdateMasterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetMasterAuthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListClustersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListClustersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListOperationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CancelOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListOperationsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetServerConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ServerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CreateNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DeleteNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListNodePoolsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_GetNodePoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodePool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodeManagement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AutoUpgradeOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MaintenancePolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_MaintenanceWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_DailyMaintenanceWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNodePoolManagementRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNodePoolSizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_RollbackNodePoolUpgradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_ListNodePoolsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_NodePoolAutoscaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLabelsRequest_ResourceLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLabelsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetLegacyAbacRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_StartIPRotationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_CompleteIPRotationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_AcceleratorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetNetworkPolicyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::container::v1::_SetMaintenancePolicyRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/container/v1/cluster_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 62);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)google/container/v1/cluster_service.pr"
      "oto\022\023google.container.v1\032\034google/api/ann"
      "otations.proto\032\033google/protobuf/empty.pr"
      "oto\"\355\003\n\nNodeConfig\022\024\n\014machine_type\030\001 \001(\t"
      "\022\024\n\014disk_size_gb\030\002 \001(\005\022\024\n\014oauth_scopes\030\003"
      " \003(\t\022\027\n\017service_account\030\t \001(\t\022\?\n\010metadat"
      "a\030\004 \003(\0132-.google.container.v1.NodeConfig"
      ".MetadataEntry\022\022\n\nimage_type\030\005 \001(\t\022;\n\006la"
      "bels\030\006 \003(\0132+.google.container.v1.NodeCon"
      "fig.LabelsEntry\022\027\n\017local_ssd_count\030\007 \001(\005"
      "\022\014\n\004tags\030\010 \003(\t\022\023\n\013preemptible\030\n \001(\010\022<\n\014a"
      "ccelerators\030\013 \003(\0132&.google.container.v1."
      "AcceleratorConfig\022\030\n\020min_cpu_platform\030\r "
      "\001(\t\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
      "ue\030\002 \001(\t:\0028\001\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"\321\001\n\nMasterAuth\022\020\n\010us"
      "ername\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022O\n\031client"
      "_certificate_config\030\003 \001(\0132,.google.conta"
      "iner.v1.ClientCertificateConfig\022\036\n\026clust"
      "er_ca_certificate\030d \001(\t\022\032\n\022client_certif"
      "icate\030e \001(\t\022\022\n\nclient_key\030f \001(\t\";\n\027Clien"
      "tCertificateConfig\022 \n\030issue_client_certi"
      "ficate\030\001 \001(\010\"\267\002\n\014AddonsConfig\022C\n\023http_lo"
      "ad_balancing\030\001 \001(\0132&.google.container.v1"
      ".HttpLoadBalancing\022Q\n\032horizontal_pod_aut"
      "oscaling\030\002 \001(\0132-.google.container.v1.Hor"
      "izontalPodAutoscaling\022F\n\024kubernetes_dash"
      "board\030\003 \001(\0132(.google.container.v1.Kubern"
      "etesDashboard\022G\n\025network_policy_config\030\004"
      " \001(\0132(.google.container.v1.NetworkPolicy"
      "Config\"%\n\021HttpLoadBalancing\022\020\n\010disabled\030"
      "\001 \001(\010\",\n\030HorizontalPodAutoscaling\022\020\n\010dis"
      "abled\030\001 \001(\010\"\'\n\023KubernetesDashboard\022\020\n\010di"
      "sabled\030\001 \001(\010\"\'\n\023NetworkPolicyConfig\022\020\n\010d"
      "isabled\030\001 \001(\010\"\274\001\n\036MasterAuthorizedNetwor"
      "ksConfig\022\017\n\007enabled\030\001 \001(\010\022R\n\013cidr_blocks"
      "\030\002 \003(\0132=.google.container.v1.MasterAutho"
      "rizedNetworksConfig.CidrBlock\0325\n\tCidrBlo"
      "ck\022\024\n\014display_name\030\001 \001(\t\022\022\n\ncidr_block\030\002"
      " \001(\t\"\035\n\nLegacyAbac\022\017\n\007enabled\030\001 \001(\010\"\221\001\n\r"
      "NetworkPolicy\022=\n\010provider\030\001 \001(\0162+.google"
      ".container.v1.NetworkPolicy.Provider\022\017\n\007"
      "enabled\030\002 \001(\010\"0\n\010Provider\022\030\n\024PROVIDER_UN"
      "SPECIFIED\020\000\022\n\n\006CALICO\020\001\"\335\002\n\022IPAllocation"
      "Policy\022\026\n\016use_ip_aliases\030\001 \001(\010\022\031\n\021create"
      "_subnetwork\030\002 \001(\010\022\027\n\017subnetwork_name\030\003 \001"
      "(\t\022\031\n\021cluster_ipv4_cidr\030\004 \001(\t\022\026\n\016node_ip"
      "v4_cidr\030\005 \001(\t\022\032\n\022services_ipv4_cidr\030\006 \001("
      "\t\022$\n\034cluster_secondary_range_name\030\007 \001(\t\022"
      "%\n\035services_secondary_range_name\030\010 \001(\t\022\037"
      "\n\027cluster_ipv4_cidr_block\030\t \001(\t\022\034\n\024node_"
      "ipv4_cidr_block\030\n \001(\t\022 \n\030services_ipv4_c"
      "idr_block\030\013 \001(\t\"\252\013\n\007Cluster\022\014\n\004name\030\001 \001("
      "\t\022\023\n\013description\030\002 \001(\t\022\032\n\022initial_node_c"
      "ount\030\003 \001(\005\0224\n\013node_config\030\004 \001(\0132\037.google"
      ".container.v1.NodeConfig\0224\n\013master_auth\030"
      "\005 \001(\0132\037.google.container.v1.MasterAuth\022\027"
      "\n\017logging_service\030\006 \001(\t\022\032\n\022monitoring_se"
      "rvice\030\007 \001(\t\022\017\n\007network\030\010 \001(\t\022\031\n\021cluster_"
      "ipv4_cidr\030\t \001(\t\0228\n\raddons_config\030\n \001(\0132!"
      ".google.container.v1.AddonsConfig\022\022\n\nsub"
      "network\030\013 \001(\t\0221\n\nnode_pools\030\014 \003(\0132\035.goog"
      "le.container.v1.NodePool\022\021\n\tlocations\030\r "
      "\003(\t\022\037\n\027enable_kubernetes_alpha\030\016 \001(\010\022I\n\017"
      "resource_labels\030\017 \003(\01320.google.container"
      ".v1.Cluster.ResourceLabelsEntry\022\031\n\021label"
      "_fingerprint\030\020 \001(\t\0224\n\013legacy_abac\030\022 \001(\0132"
      "\037.google.container.v1.LegacyAbac\022:\n\016netw"
      "ork_policy\030\023 \001(\0132\".google.container.v1.N"
      "etworkPolicy\022E\n\024ip_allocation_policy\030\024 \001"
      "(\0132\'.google.container.v1.IPAllocationPol"
      "icy\022^\n!master_authorized_networks_config"
      "\030\026 \001(\01323.google.container.v1.MasterAutho"
      "rizedNetworksConfig\022B\n\022maintenance_polic"
      "y\030\027 \001(\0132&.google.container.v1.Maintenanc"
      "ePolicy\022\021\n\tself_link\030d \001(\t\022\014\n\004zone\030e \001(\t"
      "\022\020\n\010endpoint\030f \001(\t\022\037\n\027initial_cluster_ve"
      "rsion\030g \001(\t\022\036\n\026current_master_version\030h "
      "\001(\t\022\034\n\024current_node_version\030i \001(\t\022\023\n\013cre"
      "ate_time\030j \001(\t\0223\n\006status\030k \001(\0162#.google."
      "container.v1.Cluster.Status\022\026\n\016status_me"
      "ssage\030l \001(\t\022\033\n\023node_ipv4_cidr_size\030m \001(\005"
      "\022\032\n\022services_ipv4_cidr\030n \001(\t\022\033\n\023instance"
      "_group_urls\030o \003(\t\022\032\n\022current_node_count\030"
      "p \001(\005\022\023\n\013expire_time\030q \001(\t\0325\n\023ResourceLa"
      "belsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001\"i\n\006Status\022\026\n\022STATUS_UNSPECIFIED\020\000\022\020\n\014P"
      "ROVISIONING\020\001\022\013\n\007RUNNING\020\002\022\017\n\013RECONCILIN"
      "G\020\003\022\014\n\010STOPPING\020\004\022\t\n\005ERROR\020\005\"\301\003\n\rCluster"
      "Update\022\034\n\024desired_node_version\030\004 \001(\t\022\"\n\032"
      "desired_monitoring_service\030\005 \001(\t\022@\n\025desi"
      "red_addons_config\030\006 \001(\0132!.google.contain"
      "er.v1.AddonsConfig\022\034\n\024desired_node_pool_"
      "id\030\007 \001(\t\022\032\n\022desired_image_type\030\010 \001(\t\022O\n\035"
      "desired_node_pool_autoscaling\030\t \001(\0132(.go"
      "ogle.container.v1.NodePoolAutoscaling\022\031\n"
      "\021desired_locations\030\n \003(\t\022f\n)desired_mast"
      "er_authorized_networks_config\030\014 \001(\01323.go"
      "ogle.container.v1.MasterAuthorizedNetwor"
      "ksConfig\022\036\n\026desired_master_version\030d \001(\t"
      "\"\345\005\n\tOperation\022\014\n\004name\030\001 \001(\t\022\014\n\004zone\030\002 \001"
      "(\t\022;\n\016operation_type\030\003 \001(\0162#.google.cont"
      "ainer.v1.Operation.Type\0225\n\006status\030\004 \001(\0162"
      "%.google.container.v1.Operation.Status\022\016"
      "\n\006detail\030\010 \001(\t\022\026\n\016status_message\030\005 \001(\t\022\021"
      "\n\tself_link\030\006 \001(\t\022\023\n\013target_link\030\007 \001(\t\022\022"
      "\n\nstart_time\030\n \001(\t\022\020\n\010end_time\030\013 \001(\t\"R\n\006"
      "Status\022\026\n\022STATUS_UNSPECIFIED\020\000\022\013\n\007PENDIN"
      "G\020\001\022\013\n\007RUNNING\020\002\022\010\n\004DONE\020\003\022\014\n\010ABORTING\020\004"
      "\"\375\002\n\004Type\022\024\n\020TYPE_UNSPECIFIED\020\000\022\022\n\016CREAT"
      "E_CLUSTER\020\001\022\022\n\016DELETE_CLUSTER\020\002\022\022\n\016UPGRA"
      "DE_MASTER\020\003\022\021\n\rUPGRADE_NODES\020\004\022\022\n\016REPAIR"
      "_CLUSTER\020\005\022\022\n\016UPDATE_CLUSTER\020\006\022\024\n\020CREATE"
      "_NODE_POOL\020\007\022\024\n\020DELETE_NODE_POOL\020\010\022\034\n\030SE"
      "T_NODE_POOL_MANAGEMENT\020\t\022\025\n\021AUTO_REPAIR_"
      "NODES\020\n\022\026\n\022AUTO_UPGRADE_NODES\020\013\022\016\n\nSET_L"
      "ABELS\020\014\022\023\n\017SET_MASTER_AUTH\020\r\022\026\n\022SET_NODE"
      "_POOL_SIZE\020\016\022\026\n\022SET_NETWORK_POLICY\020\017\022\032\n\026"
      "SET_MAINTENANCE_POLICY\020\020\"g\n\024CreateCluste"
      "rRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001"
      "(\t\022-\n\007cluster\030\003 \001(\0132\034.google.container.v"
      "1.Cluster\"I\n\021GetClusterRequest\022\022\n\nprojec"
      "t_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003"
      " \001(\t\"\200\001\n\024UpdateClusterRequest\022\022\n\nproject"
      "_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 "
      "\001(\t\0222\n\006update\030\004 \001(\0132\".google.container.v"
      "1.ClusterUpdate\"\215\001\n\025UpdateNodePoolReques"
      "t\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\nc"
      "luster_id\030\003 \001(\t\022\024\n\014node_pool_id\030\004 \001(\t\022\024\n"
      "\014node_version\030\005 \001(\t\022\022\n\nimage_type\030\006 \001(\t\""
      "\252\001\n\035SetNodePoolAutoscalingRequest\022\022\n\npro"
      "ject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_i"
      "d\030\003 \001(\t\022\024\n\014node_pool_id\030\004 \001(\t\022=\n\013autosca"
      "ling\030\005 \001(\0132(.google.container.v1.NodePoo"
      "lAutoscaling\"i\n\030SetLoggingServiceRequest"
      "\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncl"
      "uster_id\030\003 \001(\t\022\027\n\017logging_service\030\004 \001(\t\""
      "o\n\033SetMonitoringServiceRequest\022\022\n\nprojec"
      "t_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003"
      " \001(\t\022\032\n\022monitoring_service\030\004 \001(\t\"\210\001\n\026Set"
      "AddonsConfigRequest\022\022\n\nproject_id\030\001 \001(\t\022"
      "\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\0228\n\radd"
      "ons_config\030\004 \001(\0132!.google.container.v1.A"
      "ddonsConfig\"^\n\023SetLocationsRequest\022\022\n\npr"
      "oject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_"
      "id\030\003 \001(\t\022\021\n\tlocations\030\004 \003(\t\"c\n\023UpdateMas"
      "terRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002"
      " \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\026\n\016master_versi"
      "on\030\004 \001(\t\"\221\002\n\024SetMasterAuthRequest\022\022\n\npro"
      "ject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_i"
      "d\030\003 \001(\t\022@\n\006action\030\004 \001(\01620.google.contain"
      "er.v1.SetMasterAuthRequest.Action\022/\n\006upd"
      "ate\030\005 \001(\0132\037.google.container.v1.MasterAu"
      "th\"P\n\006Action\022\013\n\007UNKNOWN\020\000\022\020\n\014SET_PASSWOR"
      "D\020\001\022\025\n\021GENERATE_PASSWORD\020\002\022\020\n\014SET_USERNA"
      "ME\020\003\"L\n\024DeleteClusterRequest\022\022\n\nproject_"
      "id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001"
      "(\t\"7\n\023ListClustersRequest\022\022\n\nproject_id\030"
      "\001 \001(\t\022\014\n\004zone\030\002 \001(\t\"]\n\024ListClustersRespo"
      "nse\022.\n\010clusters\030\001 \003(\0132\034.google.container"
      ".v1.Cluster\022\025\n\rmissing_zones\030\002 \003(\t\"M\n\023Ge"
      "tOperationRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n"
      "\004zone\030\002 \001(\t\022\024\n\014operation_id\030\003 \001(\t\"9\n\025Lis"
      "tOperationsRequest\022\022\n\nproject_id\030\001 \001(\t\022\014"
      "\n\004zone\030\002 \001(\t\"P\n\026CancelOperationRequest\022\022"
      "\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\024\n\014oper"
      "ation_id\030\003 \001(\t\"c\n\026ListOperationsResponse"
      "\0222\n\noperations\030\001 \003(\0132\036.google.container."
      "v1.Operation\022\025\n\rmissing_zones\030\002 \003(\t\":\n\026G"
      "etServerConfigRequest\022\022\n\nproject_id\030\001 \001("
      "\t\022\014\n\004zone\030\002 \001(\t\"\242\001\n\014ServerConfig\022\037\n\027defa"
      "ult_cluster_version\030\001 \001(\t\022\033\n\023valid_node_"
      "versions\030\003 \003(\t\022\032\n\022default_image_type\030\004 \001"
      "(\t\022\031\n\021valid_image_types\030\005 \003(\t\022\035\n\025valid_m"
      "aster_versions\030\006 \003(\t\"\177\n\025CreateNodePoolRe"
      "quest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022"
      "\022\n\ncluster_id\030\003 \001(\t\0220\n\tnode_pool\030\004 \001(\0132\035"
      ".google.container.v1.NodePool\"c\n\025DeleteN"
      "odePoolRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zo"
      "ne\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\024\n\014node_poo"
      "l_id\030\004 \001(\t\"L\n\024ListNodePoolsRequest\022\022\n\npr"
      "oject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_"
      "id\030\003 \001(\t\"`\n\022GetNodePoolRequest\022\022\n\nprojec"
      "t_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003"
      " \001(\t\022\024\n\014node_pool_id\030\004 \001(\t\"\360\003\n\010NodePool\022"
      "\014\n\004name\030\001 \001(\t\022/\n\006config\030\002 \001(\0132\037.google.c"
      "ontainer.v1.NodeConfig\022\032\n\022initial_node_c"
      "ount\030\003 \001(\005\022\021\n\tself_link\030d \001(\t\022\017\n\007version"
      "\030e \001(\t\022\033\n\023instance_group_urls\030f \003(\t\0224\n\006s"
      "tatus\030g \001(\0162$.google.container.v1.NodePo"
      "ol.Status\022\026\n\016status_message\030h \001(\t\022=\n\013aut"
      "oscaling\030\004 \001(\0132(.google.container.v1.Nod"
      "ePoolAutoscaling\0227\n\nmanagement\030\005 \001(\0132#.g"
      "oogle.container.v1.NodeManagement\"\201\001\n\006St"
      "atus\022\026\n\022STATUS_UNSPECIFIED\020\000\022\020\n\014PROVISIO"
      "NING\020\001\022\013\n\007RUNNING\020\002\022\026\n\022RUNNING_WITH_ERRO"
      "R\020\003\022\017\n\013RECONCILING\020\004\022\014\n\010STOPPING\020\005\022\t\n\005ER"
      "ROR\020\006\"}\n\016NodeManagement\022\024\n\014auto_upgrade\030"
      "\001 \001(\010\022\023\n\013auto_repair\030\002 \001(\010\022@\n\017upgrade_op"
      "tions\030\n \001(\0132\'.google.container.v1.AutoUp"
      "gradeOptions\"J\n\022AutoUpgradeOptions\022\037\n\027au"
      "to_upgrade_start_time\030\001 \001(\t\022\023\n\013descripti"
      "on\030\002 \001(\t\"K\n\021MaintenancePolicy\0226\n\006window\030"
      "\001 \001(\0132&.google.container.v1.MaintenanceW"
      "indow\"n\n\021MaintenanceWindow\022O\n\030daily_main"
      "tenance_window\030\002 \001(\0132+.google.container."
      "v1.DailyMaintenanceWindowH\000B\010\n\006policy\">\n"
      "\026DailyMaintenanceWindow\022\022\n\nstart_time\030\002 "
      "\001(\t\022\020\n\010duration\030\003 \001(\t\"\243\001\n\034SetNodePoolMan"
      "agementRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zo"
      "ne\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\024\n\014node_poo"
      "l_id\030\004 \001(\t\0227\n\nmanagement\030\005 \001(\0132#.google."
      "container.v1.NodeManagement\"x\n\026SetNodePo"
      "olSizeRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zon"
      "e\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\024\n\014node_pool"
      "_id\030\004 \001(\t\022\022\n\nnode_count\030\005 \001(\005\"l\n\036Rollbac"
      "kNodePoolUpgradeRequest\022\022\n\nproject_id\030\001 "
      "\001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022\024\n"
      "\014node_pool_id\030\004 \001(\t\"J\n\025ListNodePoolsResp"
      "onse\0221\n\nnode_pools\030\001 \003(\0132\035.google.contai"
      "ner.v1.NodePool\"V\n\023NodePoolAutoscaling\022\017"
      "\n\007enabled\030\001 \001(\010\022\026\n\016min_node_count\030\002 \001(\005\022"
      "\026\n\016max_node_count\030\003 \001(\005\"\356\001\n\020SetLabelsReq"
      "uest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022"
      "\n\ncluster_id\030\003 \001(\t\022R\n\017resource_labels\030\004 "
      "\003(\01329.google.container.v1.SetLabelsReque"
      "st.ResourceLabelsEntry\022\031\n\021label_fingerpr"
      "int\030\005 \001(\t\0325\n\023ResourceLabelsEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"]\n\024SetLegacyAba"
      "cRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002 \001"
      "(\t\022\022\n\ncluster_id\030\003 \001(\t\022\017\n\007enabled\030\004 \001(\010\""
      "N\n\026StartIPRotationRequest\022\022\n\nproject_id\030"
      "\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\""
      "Q\n\031CompleteIPRotationRequest\022\022\n\nproject_"
      "id\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001"
      "(\t\"H\n\021AcceleratorConfig\022\031\n\021accelerator_c"
      "ount\030\001 \001(\003\022\030\n\020accelerator_type\030\002 \001(\t\"\213\001\n"
      "\027SetNetworkPolicyRequest\022\022\n\nproject_id\030\001"
      " \001(\t\022\014\n\004zone\030\002 \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022:"
      "\n\016network_policy\030\004 \001(\0132\".google.containe"
      "r.v1.NetworkPolicy\"\227\001\n\033SetMaintenancePol"
      "icyRequest\022\022\n\nproject_id\030\001 \001(\t\022\014\n\004zone\030\002"
      " \001(\t\022\022\n\ncluster_id\030\003 \001(\t\022B\n\022maintenance_"
      "policy\030\004 \001(\0132&.google.container.v1.Maint"
      "enancePolicy2\343*\n\016ClusterManager\022\234\001\n\014List"
      "Clusters\022(.google.container.v1.ListClust"
      "ersRequest\032).google.container.v1.ListClu"
      "stersResponse\"7\202\323\344\223\0021\022//v1/projects/{pro"
      "ject_id}/zones/{zone}/clusters\022\230\001\n\nGetCl"
      "uster\022&.google.container.v1.GetClusterRe"
      "quest\032\034.google.container.v1.Cluster\"D\202\323\344"
      "\223\002>\022</v1/projects/{project_id}/zones/{zo"
      "ne}/clusters/{cluster_id}\022\226\001\n\rCreateClus"
      "ter\022).google.container.v1.CreateClusterR"
      "equest\032\036.google.container.v1.Operation\":"
      "\202\323\344\223\0024\"//v1/projects/{project_id}/zones/"
      "{zone}/clusters:\001*\022\243\001\n\rUpdateCluster\022).g"
      "oogle.container.v1.UpdateClusterRequest\032"
      "\036.google.container.v1.Operation\"G\202\323\344\223\002A\032"
      "</v1/projects/{project_id}/zones/{zone}/"
      "clusters/{cluster_id}:\001*\022\305\001\n\016UpdateNodeP"
      "ool\022*.google.container.v1.UpdateNodePool"
      "Request\032\036.google.container.v1.Operation\""
      "g\202\323\344\223\002a\"\\/v1/projects/{project_id}/zones"
      "/{zone}/clusters/{cluster_id}/nodePools/"
      "{node_pool_id}/update:\001*\022\332\001\n\026SetNodePool"
      "Autoscaling\0222.google.container.v1.SetNod"
      "ePoolAutoscalingRequest\032\036.google.contain"
      "er.v1.Operation\"l\202\323\344\223\002f\"a/v1/projects/{p"
      "roject_id}/zones/{zone}/clusters/{cluste"
      "r_id}/nodePools/{node_pool_id}/autoscali"
      "ng:\001*\022\263\001\n\021SetLoggingService\022-.google.con"
      "tainer.v1.SetLoggingServiceRequest\032\036.goo"
      "gle.container.v1.Operation\"O\202\323\344\223\002I\"D/v1/"
      "projects/{project_id}/zones/{zone}/clust"
      "ers/{cluster_id}/logging:\001*\022\274\001\n\024SetMonit"
      "oringService\0220.google.container.v1.SetMo"
      "nitoringServiceRequest\032\036.google.containe"
      "r.v1.Operation\"R\202\323\344\223\002L\"G/v1/projects/{pr"
      "oject_id}/zones/{zone}/clusters/{cluster"
      "_id}/monitoring:\001*\022\256\001\n\017SetAddonsConfig\022+"
      ".google.container.v1.SetAddonsConfigRequ"
      "est\032\036.google.container.v1.Operation\"N\202\323\344"
      "\223\002H\"C/v1/projects/{project_id}/zones/{zo"
      "ne}/clusters/{cluster_id}/addons:\001*\022\253\001\n\014"
      "SetLocations\022(.google.container.v1.SetLo"
      "cationsRequest\032\036.google.container.v1.Ope"
      "ration\"Q\202\323\344\223\002K\"F/v1/projects/{project_id"
      "}/zones/{zone}/clusters/{cluster_id}/loc"
      "ations:\001*\022\250\001\n\014UpdateMaster\022(.google.cont"
      "ainer.v1.UpdateMasterRequest\032\036.google.co"
      "ntainer.v1.Operation\"N\202\323\344\223\002H\"C/v1/projec"
      "ts/{project_id}/zones/{zone}/clusters/{c"
      "luster_id}/master:\001*\022\261\001\n\rSetMasterAuth\022)"
      ".google.container.v1.SetMasterAuthReques"
      "t\032\036.google.container.v1.Operation\"U\202\323\344\223\002"
      "O\"J/v1/projects/{project_id}/zones/{zone"
      "}/clusters/{cluster_id}:setMasterAuth:\001*"
      "\022\240\001\n\rDeleteCluster\022).google.container.v1"
      ".DeleteClusterRequest\032\036.google.container"
      ".v1.Operation\"D\202\323\344\223\002>*</v1/projects/{pro"
      "ject_id}/zones/{zone}/clusters/{cluster_"
      "id}\022\244\001\n\016ListOperations\022*.google.containe"
      "r.v1.ListOperationsRequest\032+.google.cont"
      "ainer.v1.ListOperationsResponse\"9\202\323\344\223\0023\022"
      "1/v1/projects/{project_id}/zones/{zone}/"
      "operations\022\242\001\n\014GetOperation\022(.google.con"
      "tainer.v1.GetOperationRequest\032\036.google.c"
      "ontainer.v1.Operation\"H\202\323\344\223\002B\022@/v1/proje"
      "cts/{project_id}/zones/{zone}/operations"
      "/{operation_id}\022\252\001\n\017CancelOperation\022+.go"
      "ogle.container.v1.CancelOperationRequest"
      "\032\026.google.protobuf.Empty\"R\202\323\344\223\002L\"G/v1/pr"
      "ojects/{project_id}/zones/{zone}/operati"
      "ons/{operation_id}:cancel:\001*\022\236\001\n\017GetServ"
      "erConfig\022+.google.container.v1.GetServer"
      "ConfigRequest\032!.google.container.v1.Serv"
      "erConfig\";\202\323\344\223\0025\0223/v1/projects/{project_"
      "id}/zones/{zone}/serverconfig\022\266\001\n\rListNo"
      "dePools\022).google.container.v1.ListNodePo"
      "olsRequest\032*.google.container.v1.ListNod"
      "ePoolsResponse\"N\202\323\344\223\002H\022F/v1/projects/{pr"
      "oject_id}/zones/{zone}/clusters/{cluster"
      "_id}/nodePools\022\264\001\n\013GetNodePool\022\'.google."
      "container.v1.GetNodePoolRequest\032\035.google"
      ".container.v1.NodePool\"]\202\323\344\223\002W\022U/v1/proj"
      "ects/{project_id}/zones/{zone}/clusters/"
      "{cluster_id}/nodePools/{node_pool_id}\022\257\001"
      "\n\016CreateNodePool\022*.google.container.v1.C"
      "reateNodePoolRequest\032\036.google.container."
      "v1.Operation\"Q\202\323\344\223\002K\"F/v1/projects/{proj"
      "ect_id}/zones/{zone}/clusters/{cluster_i"
      "d}/nodePools:\001*\022\273\001\n\016DeleteNodePool\022*.goo"
      "gle.container.v1.DeleteNodePoolRequest\032\036"
      ".google.container.v1.Operation\"]\202\323\344\223\002W*U"
      "/v1/projects/{project_id}/zones/{zone}/c"
      "lusters/{cluster_id}/nodePools/{node_poo"
      "l_id}\022\331\001\n\027RollbackNodePoolUpgrade\0223.goog"
      "le.container.v1.RollbackNodePoolUpgradeR"
      "equest\032\036.google.container.v1.Operation\"i"
      "\202\323\344\223\002c\"^/v1/projects/{project_id}/zones/"
      "{zone}/clusters/{cluster_id}/nodePools/{"
      "node_pool_id}:rollback:\001*\022\332\001\n\025SetNodePoo"
      "lManagement\0221.google.container.v1.SetNod"
      "ePoolManagementRequest\032\036.google.containe"
      "r.v1.Operation\"n\202\323\344\223\002h\"c/v1/projects/{pr"
      "oject_id}/zones/{zone}/clusters/{cluster"
      "_id}/nodePools/{node_pool_id}/setManagem"
      "ent:\001*\022\252\001\n\tSetLabels\022%.google.container."
      "v1.SetLabelsRequest\032\036.google.container.v"
      "1.Operation\"V\202\323\344\223\002P\"K/v1/projects/{proje"
      "ct_id}/zones/{zone}/clusters/{cluster_id"
      "}/resourceLabels:\001*\022\256\001\n\rSetLegacyAbac\022)."
      "google.container.v1.SetLegacyAbacRequest"
      "\032\036.google.container.v1.Operation\"R\202\323\344\223\002L"
      "\"G/v1/projects/{project_id}/zones/{zone}"
      "/clusters/{cluster_id}/legacyAbac:\001*\022\267\001\n"
      "\017StartIPRotation\022+.google.container.v1.S"
      "tartIPRotationRequest\032\036.google.container"
      ".v1.Operation\"W\202\323\344\223\002Q\"L/v1/projects/{pro"
      "ject_id}/zones/{zone}/clusters/{cluster_"
      "id}:startIpRotation:\001*\022\300\001\n\022CompleteIPRot"
      "ation\022..google.container.v1.CompleteIPRo"
      "tationRequest\032\036.google.container.v1.Oper"
      "ation\"Z\202\323\344\223\002T\"O/v1/projects/{project_id}"
      "/zones/{zone}/clusters/{cluster_id}:comp"
      "leteIpRotation:\001*\022\310\001\n\017SetNodePoolSize\022+."
      "google.container.v1.SetNodePoolSizeReque"
      "st\032\036.google.container.v1.Operation\"h\202\323\344\223"
      "\002b\"]/v1/projects/{project_id}/zones/{zon"
      "e}/clusters/{cluster_id}/nodePools/{node"
      "_pool_id}/setSize:\001*\022\272\001\n\020SetNetworkPolic"
      "y\022,.google.container.v1.SetNetworkPolicy"
      "Request\032\036.google.container.v1.Operation\""
      "X\202\323\344\223\002R\"M/v1/projects/{project_id}/zones"
      "/{zone}/clusters/{cluster_id}:setNetwork"
      "Policy:\001*\022\306\001\n\024SetMaintenancePolicy\0220.goo"
      "gle.container.v1.SetMaintenancePolicyReq"
      "uest\032\036.google.container.v1.Operation\"\\\202\323"
      "\344\223\002V\"Q/v1/projects/{project_id}/zones/{z"
      "one}/clusters/{cluster_id}:setMaintenanc"
      "ePolicy:\001*Bn\n\027com.google.container.v1B\023C"
      "lusterServiceProtoP\001Z<google.golang.org/"
      "genproto/googleapis/container/v1;contain"
      "erb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 15370);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/container/v1/cluster_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto
namespace google {
namespace container {
namespace v1 {
const ::google::protobuf::EnumDescriptor* NetworkPolicy_Provider_descriptor() {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool NetworkPolicy_Provider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetworkPolicy_Provider NetworkPolicy::PROVIDER_UNSPECIFIED;
const NetworkPolicy_Provider NetworkPolicy::CALICO;
const NetworkPolicy_Provider NetworkPolicy::Provider_MIN;
const NetworkPolicy_Provider NetworkPolicy::Provider_MAX;
const int NetworkPolicy::Provider_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Cluster_Status_descriptor() {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_enum_descriptors[1];
}
bool Cluster_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_Status Cluster::STATUS_UNSPECIFIED;
const Cluster_Status Cluster::PROVISIONING;
const Cluster_Status Cluster::RUNNING;
const Cluster_Status Cluster::RECONCILING;
const Cluster_Status Cluster::STOPPING;
const Cluster_Status Cluster::ERROR;
const Cluster_Status Cluster::Status_MIN;
const Cluster_Status Cluster::Status_MAX;
const int Cluster::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operation_Status_descriptor() {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_enum_descriptors[2];
}
bool Operation_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operation_Status Operation::STATUS_UNSPECIFIED;
const Operation_Status Operation::PENDING;
const Operation_Status Operation::RUNNING;
const Operation_Status Operation::DONE;
const Operation_Status Operation::ABORTING;
const Operation_Status Operation::Status_MIN;
const Operation_Status Operation::Status_MAX;
const int Operation::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operation_Type_descriptor() {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_enum_descriptors[3];
}
bool Operation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operation_Type Operation::TYPE_UNSPECIFIED;
const Operation_Type Operation::CREATE_CLUSTER;
const Operation_Type Operation::DELETE_CLUSTER;
const Operation_Type Operation::UPGRADE_MASTER;
const Operation_Type Operation::UPGRADE_NODES;
const Operation_Type Operation::REPAIR_CLUSTER;
const Operation_Type Operation::UPDATE_CLUSTER;
const Operation_Type Operation::CREATE_NODE_POOL;
const Operation_Type Operation::DELETE_NODE_POOL;
const Operation_Type Operation::SET_NODE_POOL_MANAGEMENT;
const Operation_Type Operation::AUTO_REPAIR_NODES;
const Operation_Type Operation::AUTO_UPGRADE_NODES;
const Operation_Type Operation::SET_LABELS;
const Operation_Type Operation::SET_MASTER_AUTH;
const Operation_Type Operation::SET_NODE_POOL_SIZE;
const Operation_Type Operation::SET_NETWORK_POLICY;
const Operation_Type Operation::SET_MAINTENANCE_POLICY;
const Operation_Type Operation::Type_MIN;
const Operation_Type Operation::Type_MAX;
const int Operation::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetMasterAuthRequest_Action_descriptor() {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_enum_descriptors[4];
}
bool SetMasterAuthRequest_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetMasterAuthRequest_Action SetMasterAuthRequest::UNKNOWN;
const SetMasterAuthRequest_Action SetMasterAuthRequest::SET_PASSWORD;
const SetMasterAuthRequest_Action SetMasterAuthRequest::GENERATE_PASSWORD;
const SetMasterAuthRequest_Action SetMasterAuthRequest::SET_USERNAME;
const SetMasterAuthRequest_Action SetMasterAuthRequest::Action_MIN;
const SetMasterAuthRequest_Action SetMasterAuthRequest::Action_MAX;
const int SetMasterAuthRequest::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NodePool_Status_descriptor() {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_enum_descriptors[5];
}
bool NodePool_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodePool_Status NodePool::STATUS_UNSPECIFIED;
const NodePool_Status NodePool::PROVISIONING;
const NodePool_Status NodePool::RUNNING;
const NodePool_Status NodePool::RUNNING_WITH_ERROR;
const NodePool_Status NodePool::RECONCILING;
const NodePool_Status NodePool::STOPPING;
const NodePool_Status NodePool::ERROR;
const NodePool_Status NodePool::Status_MIN;
const NodePool_Status NodePool::Status_MAX;
const int NodePool::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

NodeConfig_MetadataEntry_DoNotUse::NodeConfig_MetadataEntry_DoNotUse() {}
NodeConfig_MetadataEntry_DoNotUse::NodeConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void NodeConfig_MetadataEntry_DoNotUse::MergeFrom(const NodeConfig_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NodeConfig_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[0];
}
void NodeConfig_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

NodeConfig_LabelsEntry_DoNotUse::NodeConfig_LabelsEntry_DoNotUse() {}
NodeConfig_LabelsEntry_DoNotUse::NodeConfig_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void NodeConfig_LabelsEntry_DoNotUse::MergeFrom(const NodeConfig_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NodeConfig_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[1];
}
void NodeConfig_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void NodeConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeConfig::kMachineTypeFieldNumber;
const int NodeConfig::kDiskSizeGbFieldNumber;
const int NodeConfig::kOauthScopesFieldNumber;
const int NodeConfig::kServiceAccountFieldNumber;
const int NodeConfig::kMetadataFieldNumber;
const int NodeConfig::kImageTypeFieldNumber;
const int NodeConfig::kLabelsFieldNumber;
const int NodeConfig::kLocalSsdCountFieldNumber;
const int NodeConfig::kTagsFieldNumber;
const int NodeConfig::kPreemptibleFieldNumber;
const int NodeConfig::kAcceleratorsFieldNumber;
const int NodeConfig::kMinCpuPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeConfig::NodeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodeConfig)
}
NodeConfig::NodeConfig(const NodeConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      oauth_scopes_(from.oauth_scopes_),
      tags_(from.tags_),
      accelerators_(from.accelerators_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  labels_.MergeFrom(from.labels_);
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_type().size() > 0) {
    machine_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_);
  }
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_type().size() > 0) {
    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_account().size() > 0) {
    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.min_cpu_platform().size() > 0) {
    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  ::memcpy(&disk_size_gb_, &from.disk_size_gb_,
    static_cast<size_t>(reinterpret_cast<char*>(&preemptible_) -
    reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodeConfig)
}

void NodeConfig::SharedCtor() {
  machine_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disk_size_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preemptible_) -
      reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
  _cached_size_ = 0;
}

NodeConfig::~NodeConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodeConfig)
  SharedDtor();
}

void NodeConfig::SharedDtor() {
  machine_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeConfig::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeConfig& NodeConfig::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeConfig();
  return *internal_default_instance();
}

NodeConfig* NodeConfig::New(::google::protobuf::Arena* arena) const {
  NodeConfig* n = new NodeConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oauth_scopes_.Clear();
  metadata_.Clear();
  labels_.Clear();
  tags_.Clear();
  accelerators_.Clear();
  machine_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disk_size_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preemptible_) -
      reinterpret_cast<char*>(&disk_size_gb_)) + sizeof(preemptible_));
  _internal_metadata_.Clear();
}

bool NodeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string machine_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_type().data(), static_cast<int>(this->machine_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.machine_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 disk_size_gb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &disk_size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string oauth_scopes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_oauth_scopes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oauth_scopes(this->oauth_scopes_size() - 1).data(),
            static_cast<int>(this->oauth_scopes(this->oauth_scopes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.oauth_scopes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          NodeConfig_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NodeConfig_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_type().data(), static_cast<int>(this->image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          NodeConfig_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NodeConfig_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 local_ssd_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &local_ssd_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_account = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account().data(), static_cast<int>(this->service_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.service_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool preemptible = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preemptible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_accelerators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string min_cpu_platform = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_min_cpu_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodeConfig.min_cpu_platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodeConfig)
  return false;
#undef DO_
}

void NodeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.machine_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine_type(), output);
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->disk_size_gb(), output);
  }

  // repeated string oauth_scopes = 3;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.oauth_scopes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->oauth_scopes(i), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->image_type(), output);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->local_ssd_count(), output);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->tags(i), output);
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.service_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->service_account(), output);
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->preemptible(), output);
  }

  // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->accelerators(static_cast<int>(i)), output);
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.min_cpu_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->min_cpu_platform(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodeConfig)
}

::google::protobuf::uint8* NodeConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type().data(), static_cast<int>(this->machine_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.machine_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine_type(), target);
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->disk_size_gb(), target);
  }

  // repeated string oauth_scopes = 3;
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_scopes(i).data(), static_cast<int>(this->oauth_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.oauth_scopes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->oauth_scopes(i), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->image_type(), target);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.NodeConfig.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->local_ssd_count(), target);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->tags(i), target);
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.service_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->service_account(), target);
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->preemptible(), target);
  }

  // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->accelerators(static_cast<int>(i)), deterministic, target);
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodeConfig.min_cpu_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->min_cpu_platform(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodeConfig)
  return target;
}

size_t NodeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodeConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string oauth_scopes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->oauth_scopes_size());
  for (int i = 0, n = this->oauth_scopes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->oauth_scopes(i));
  }

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::google::protobuf::scoped_ptr<NodeConfig_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> labels = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<NodeConfig_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string tags = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated .google.container.v1.AcceleratorConfig accelerators = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->accelerators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accelerators(static_cast<int>(i)));
    }
  }

  // string machine_type = 1;
  if (this->machine_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_type());
  }

  // string image_type = 5;
  if (this->image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_type());
  }

  // string service_account = 9;
  if (this->service_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account());
  }

  // string min_cpu_platform = 13;
  if (this->min_cpu_platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->min_cpu_platform());
  }

  // int32 disk_size_gb = 2;
  if (this->disk_size_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->disk_size_gb());
  }

  // int32 local_ssd_count = 7;
  if (this->local_ssd_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->local_ssd_count());
  }

  // bool preemptible = 10;
  if (this->preemptible() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodeConfig)
    MergeFrom(*source);
  }
}

void NodeConfig::MergeFrom(const NodeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  oauth_scopes_.MergeFrom(from.oauth_scopes_);
  metadata_.MergeFrom(from.metadata_);
  labels_.MergeFrom(from.labels_);
  tags_.MergeFrom(from.tags_);
  accelerators_.MergeFrom(from.accelerators_);
  if (from.machine_type().size() > 0) {

    machine_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_);
  }
  if (from.image_type().size() > 0) {

    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  if (from.service_account().size() > 0) {

    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  if (from.min_cpu_platform().size() > 0) {

    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  if (from.disk_size_gb() != 0) {
    set_disk_size_gb(from.disk_size_gb());
  }
  if (from.local_ssd_count() != 0) {
    set_local_ssd_count(from.local_ssd_count());
  }
  if (from.preemptible() != 0) {
    set_preemptible(from.preemptible());
  }
}

void NodeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeConfig::CopyFrom(const NodeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeConfig::IsInitialized() const {
  return true;
}

void NodeConfig::Swap(NodeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeConfig::InternalSwap(NodeConfig* other) {
  using std::swap;
  oauth_scopes_.InternalSwap(&other->oauth_scopes_);
  metadata_.Swap(&other->metadata_);
  labels_.Swap(&other->labels_);
  tags_.InternalSwap(&other->tags_);
  accelerators_.InternalSwap(&other->accelerators_);
  machine_type_.Swap(&other->machine_type_);
  image_type_.Swap(&other->image_type_);
  service_account_.Swap(&other->service_account_);
  min_cpu_platform_.Swap(&other->min_cpu_platform_);
  swap(disk_size_gb_, other->disk_size_gb_);
  swap(local_ssd_count_, other->local_ssd_count_);
  swap(preemptible_, other->preemptible_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeConfig::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MasterAuth::InitAsDefaultInstance() {
  ::google::container::v1::_MasterAuth_default_instance_._instance.get_mutable()->client_certificate_config_ = const_cast< ::google::container::v1::ClientCertificateConfig*>(
      ::google::container::v1::ClientCertificateConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuth::kUsernameFieldNumber;
const int MasterAuth::kPasswordFieldNumber;
const int MasterAuth::kClientCertificateConfigFieldNumber;
const int MasterAuth::kClusterCaCertificateFieldNumber;
const int MasterAuth::kClientCertificateFieldNumber;
const int MasterAuth::kClientKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuth::MasterAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuth();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MasterAuth)
}
MasterAuth::MasterAuth(const MasterAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  cluster_ca_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ca_certificate().size() > 0) {
    cluster_ca_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ca_certificate_);
  }
  client_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_certificate().size() > 0) {
    client_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_certificate_);
  }
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_key().size() > 0) {
    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  if (from.has_client_certificate_config()) {
    client_certificate_config_ = new ::google::container::v1::ClientCertificateConfig(*from.client_certificate_config_);
  } else {
    client_certificate_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MasterAuth)
}

void MasterAuth::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_config_ = NULL;
  _cached_size_ = 0;
}

MasterAuth::~MasterAuth() {
  // @@protoc_insertion_point(destructor:google.container.v1.MasterAuth)
  SharedDtor();
}

void MasterAuth::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_certificate_config_;
}

void MasterAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterAuth::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterAuth& MasterAuth::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuth();
  return *internal_default_instance();
}

MasterAuth* MasterAuth::New(::google::protobuf::Arena* arena) const {
  MasterAuth* n = new MasterAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ca_certificate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_certificate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && client_certificate_config_ != NULL) {
    delete client_certificate_config_;
  }
  client_certificate_config_ = NULL;
  _internal_metadata_.Clear();
}

bool MasterAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MasterAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_certificate_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ca_certificate = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ca_certificate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.cluster_ca_certificate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_certificate = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_certificate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.client_certificate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_key = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_key().data(), static_cast<int>(this->client_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuth.client_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MasterAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MasterAuth)
  return false;
#undef DO_
}

void MasterAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->client_certificate_config_, output);
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.cluster_ca_certificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->cluster_ca_certificate(), output);
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_certificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->client_certificate(), output);
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_key().data(), static_cast<int>(this->client_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->client_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MasterAuth)
}

::google::protobuf::uint8* MasterAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MasterAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->client_certificate_config_, deterministic, target);
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ca_certificate().data(), static_cast<int>(this->cluster_ca_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.cluster_ca_certificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->cluster_ca_certificate(), target);
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_certificate().data(), static_cast<int>(this->client_certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_certificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->client_certificate(), target);
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_key().data(), static_cast<int>(this->client_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuth.client_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->client_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MasterAuth)
  return target;
}

size_t MasterAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MasterAuth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string cluster_ca_certificate = 100;
  if (this->cluster_ca_certificate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ca_certificate());
  }

  // string client_certificate = 101;
  if (this->client_certificate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_certificate());
  }

  // string client_key = 102;
  if (this->client_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_key());
  }

  // .google.container.v1.ClientCertificateConfig client_certificate_config = 3;
  if (this->has_client_certificate_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->client_certificate_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MasterAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MasterAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MasterAuth)
    MergeFrom(*source);
  }
}

void MasterAuth::MergeFrom(const MasterAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MasterAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.cluster_ca_certificate().size() > 0) {

    cluster_ca_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ca_certificate_);
  }
  if (from.client_certificate().size() > 0) {

    client_certificate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_certificate_);
  }
  if (from.client_key().size() > 0) {

    client_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_key_);
  }
  if (from.has_client_certificate_config()) {
    mutable_client_certificate_config()->::google::container::v1::ClientCertificateConfig::MergeFrom(from.client_certificate_config());
  }
}

void MasterAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MasterAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuth::CopyFrom(const MasterAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MasterAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuth::IsInitialized() const {
  return true;
}

void MasterAuth::Swap(MasterAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuth::InternalSwap(MasterAuth* other) {
  using std::swap;
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  cluster_ca_certificate_.Swap(&other->cluster_ca_certificate_);
  client_certificate_.Swap(&other->client_certificate_);
  client_key_.Swap(&other->client_key_);
  swap(client_certificate_config_, other->client_certificate_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MasterAuth::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientCertificateConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCertificateConfig::kIssueClientCertificateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCertificateConfig::ClientCertificateConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsClientCertificateConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ClientCertificateConfig)
}
ClientCertificateConfig::ClientCertificateConfig(const ClientCertificateConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issue_client_certificate_ = from.issue_client_certificate_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ClientCertificateConfig)
}

void ClientCertificateConfig::SharedCtor() {
  issue_client_certificate_ = false;
  _cached_size_ = 0;
}

ClientCertificateConfig::~ClientCertificateConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ClientCertificateConfig)
  SharedDtor();
}

void ClientCertificateConfig::SharedDtor() {
}

void ClientCertificateConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientCertificateConfig::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientCertificateConfig& ClientCertificateConfig::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsClientCertificateConfig();
  return *internal_default_instance();
}

ClientCertificateConfig* ClientCertificateConfig::New(::google::protobuf::Arena* arena) const {
  ClientCertificateConfig* n = new ClientCertificateConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientCertificateConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issue_client_certificate_ = false;
  _internal_metadata_.Clear();
}

bool ClientCertificateConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ClientCertificateConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool issue_client_certificate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issue_client_certificate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ClientCertificateConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ClientCertificateConfig)
  return false;
#undef DO_
}

void ClientCertificateConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issue_client_certificate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ClientCertificateConfig)
}

::google::protobuf::uint8* ClientCertificateConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ClientCertificateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issue_client_certificate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ClientCertificateConfig)
  return target;
}

size_t ClientCertificateConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ClientCertificateConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool issue_client_certificate = 1;
  if (this->issue_client_certificate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientCertificateConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ClientCertificateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCertificateConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCertificateConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ClientCertificateConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ClientCertificateConfig)
    MergeFrom(*source);
  }
}

void ClientCertificateConfig::MergeFrom(const ClientCertificateConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ClientCertificateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issue_client_certificate() != 0) {
    set_issue_client_certificate(from.issue_client_certificate());
  }
}

void ClientCertificateConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ClientCertificateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCertificateConfig::CopyFrom(const ClientCertificateConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ClientCertificateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCertificateConfig::IsInitialized() const {
  return true;
}

void ClientCertificateConfig::Swap(ClientCertificateConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCertificateConfig::InternalSwap(ClientCertificateConfig* other) {
  using std::swap;
  swap(issue_client_certificate_, other->issue_client_certificate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientCertificateConfig::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddonsConfig::InitAsDefaultInstance() {
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->http_load_balancing_ = const_cast< ::google::container::v1::HttpLoadBalancing*>(
      ::google::container::v1::HttpLoadBalancing::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->horizontal_pod_autoscaling_ = const_cast< ::google::container::v1::HorizontalPodAutoscaling*>(
      ::google::container::v1::HorizontalPodAutoscaling::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->kubernetes_dashboard_ = const_cast< ::google::container::v1::KubernetesDashboard*>(
      ::google::container::v1::KubernetesDashboard::internal_default_instance());
  ::google::container::v1::_AddonsConfig_default_instance_._instance.get_mutable()->network_policy_config_ = const_cast< ::google::container::v1::NetworkPolicyConfig*>(
      ::google::container::v1::NetworkPolicyConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddonsConfig::kHttpLoadBalancingFieldNumber;
const int AddonsConfig::kHorizontalPodAutoscalingFieldNumber;
const int AddonsConfig::kKubernetesDashboardFieldNumber;
const int AddonsConfig::kNetworkPolicyConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddonsConfig::AddonsConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAddonsConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AddonsConfig)
}
AddonsConfig::AddonsConfig(const AddonsConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_http_load_balancing()) {
    http_load_balancing_ = new ::google::container::v1::HttpLoadBalancing(*from.http_load_balancing_);
  } else {
    http_load_balancing_ = NULL;
  }
  if (from.has_horizontal_pod_autoscaling()) {
    horizontal_pod_autoscaling_ = new ::google::container::v1::HorizontalPodAutoscaling(*from.horizontal_pod_autoscaling_);
  } else {
    horizontal_pod_autoscaling_ = NULL;
  }
  if (from.has_kubernetes_dashboard()) {
    kubernetes_dashboard_ = new ::google::container::v1::KubernetesDashboard(*from.kubernetes_dashboard_);
  } else {
    kubernetes_dashboard_ = NULL;
  }
  if (from.has_network_policy_config()) {
    network_policy_config_ = new ::google::container::v1::NetworkPolicyConfig(*from.network_policy_config_);
  } else {
    network_policy_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AddonsConfig)
}

void AddonsConfig::SharedCtor() {
  ::memset(&http_load_balancing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_policy_config_) -
      reinterpret_cast<char*>(&http_load_balancing_)) + sizeof(network_policy_config_));
  _cached_size_ = 0;
}

AddonsConfig::~AddonsConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.AddonsConfig)
  SharedDtor();
}

void AddonsConfig::SharedDtor() {
  if (this != internal_default_instance()) delete http_load_balancing_;
  if (this != internal_default_instance()) delete horizontal_pod_autoscaling_;
  if (this != internal_default_instance()) delete kubernetes_dashboard_;
  if (this != internal_default_instance()) delete network_policy_config_;
}

void AddonsConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddonsConfig::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddonsConfig& AddonsConfig::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAddonsConfig();
  return *internal_default_instance();
}

AddonsConfig* AddonsConfig::New(::google::protobuf::Arena* arena) const {
  AddonsConfig* n = new AddonsConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddonsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && http_load_balancing_ != NULL) {
    delete http_load_balancing_;
  }
  http_load_balancing_ = NULL;
  if (GetArenaNoVirtual() == NULL && horizontal_pod_autoscaling_ != NULL) {
    delete horizontal_pod_autoscaling_;
  }
  horizontal_pod_autoscaling_ = NULL;
  if (GetArenaNoVirtual() == NULL && kubernetes_dashboard_ != NULL) {
    delete kubernetes_dashboard_;
  }
  kubernetes_dashboard_ = NULL;
  if (GetArenaNoVirtual() == NULL && network_policy_config_ != NULL) {
    delete network_policy_config_;
  }
  network_policy_config_ = NULL;
  _internal_metadata_.Clear();
}

bool AddonsConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AddonsConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http_load_balancing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_horizontal_pod_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kubernetes_dashboard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AddonsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AddonsConfig)
  return false;
#undef DO_
}

void AddonsConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->http_load_balancing_, output);
  }

  // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->horizontal_pod_autoscaling_, output);
  }

  // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3;
  if (this->has_kubernetes_dashboard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->kubernetes_dashboard_, output);
  }

  // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->network_policy_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AddonsConfig)
}

::google::protobuf::uint8* AddonsConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AddonsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->http_load_balancing_, deterministic, target);
  }

  // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->horizontal_pod_autoscaling_, deterministic, target);
  }

  // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3;
  if (this->has_kubernetes_dashboard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->kubernetes_dashboard_, deterministic, target);
  }

  // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->network_policy_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AddonsConfig)
  return target;
}

size_t AddonsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AddonsConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.container.v1.HttpLoadBalancing http_load_balancing = 1;
  if (this->has_http_load_balancing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->http_load_balancing_);
  }

  // .google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;
  if (this->has_horizontal_pod_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->horizontal_pod_autoscaling_);
  }

  // .google.container.v1.KubernetesDashboard kubernetes_dashboard = 3;
  if (this->has_kubernetes_dashboard()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->kubernetes_dashboard_);
  }

  // .google.container.v1.NetworkPolicyConfig network_policy_config = 4;
  if (this->has_network_policy_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->network_policy_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddonsConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AddonsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AddonsConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddonsConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AddonsConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AddonsConfig)
    MergeFrom(*source);
  }
}

void AddonsConfig::MergeFrom(const AddonsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AddonsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_http_load_balancing()) {
    mutable_http_load_balancing()->::google::container::v1::HttpLoadBalancing::MergeFrom(from.http_load_balancing());
  }
  if (from.has_horizontal_pod_autoscaling()) {
    mutable_horizontal_pod_autoscaling()->::google::container::v1::HorizontalPodAutoscaling::MergeFrom(from.horizontal_pod_autoscaling());
  }
  if (from.has_kubernetes_dashboard()) {
    mutable_kubernetes_dashboard()->::google::container::v1::KubernetesDashboard::MergeFrom(from.kubernetes_dashboard());
  }
  if (from.has_network_policy_config()) {
    mutable_network_policy_config()->::google::container::v1::NetworkPolicyConfig::MergeFrom(from.network_policy_config());
  }
}

void AddonsConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AddonsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddonsConfig::CopyFrom(const AddonsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AddonsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddonsConfig::IsInitialized() const {
  return true;
}

void AddonsConfig::Swap(AddonsConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddonsConfig::InternalSwap(AddonsConfig* other) {
  using std::swap;
  swap(http_load_balancing_, other->http_load_balancing_);
  swap(horizontal_pod_autoscaling_, other->horizontal_pod_autoscaling_);
  swap(kubernetes_dashboard_, other->kubernetes_dashboard_);
  swap(network_policy_config_, other->network_policy_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddonsConfig::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HttpLoadBalancing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpLoadBalancing::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpLoadBalancing::HttpLoadBalancing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsHttpLoadBalancing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.HttpLoadBalancing)
}
HttpLoadBalancing::HttpLoadBalancing(const HttpLoadBalancing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.HttpLoadBalancing)
}

void HttpLoadBalancing::SharedCtor() {
  disabled_ = false;
  _cached_size_ = 0;
}

HttpLoadBalancing::~HttpLoadBalancing() {
  // @@protoc_insertion_point(destructor:google.container.v1.HttpLoadBalancing)
  SharedDtor();
}

void HttpLoadBalancing::SharedDtor() {
}

void HttpLoadBalancing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpLoadBalancing::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpLoadBalancing& HttpLoadBalancing::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsHttpLoadBalancing();
  return *internal_default_instance();
}

HttpLoadBalancing* HttpLoadBalancing::New(::google::protobuf::Arena* arena) const {
  HttpLoadBalancing* n = new HttpLoadBalancing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpLoadBalancing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

bool HttpLoadBalancing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.HttpLoadBalancing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.HttpLoadBalancing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.HttpLoadBalancing)
  return false;
#undef DO_
}

void HttpLoadBalancing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.HttpLoadBalancing)
}

::google::protobuf::uint8* HttpLoadBalancing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.HttpLoadBalancing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.HttpLoadBalancing)
  return target;
}

size_t HttpLoadBalancing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.HttpLoadBalancing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpLoadBalancing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.HttpLoadBalancing)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpLoadBalancing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpLoadBalancing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.HttpLoadBalancing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.HttpLoadBalancing)
    MergeFrom(*source);
  }
}

void HttpLoadBalancing::MergeFrom(const HttpLoadBalancing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.HttpLoadBalancing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void HttpLoadBalancing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.HttpLoadBalancing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpLoadBalancing::CopyFrom(const HttpLoadBalancing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.HttpLoadBalancing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpLoadBalancing::IsInitialized() const {
  return true;
}

void HttpLoadBalancing::Swap(HttpLoadBalancing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpLoadBalancing::InternalSwap(HttpLoadBalancing* other) {
  using std::swap;
  swap(disabled_, other->disabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpLoadBalancing::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HorizontalPodAutoscaling::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HorizontalPodAutoscaling::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HorizontalPodAutoscaling::HorizontalPodAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsHorizontalPodAutoscaling();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.HorizontalPodAutoscaling)
}
HorizontalPodAutoscaling::HorizontalPodAutoscaling(const HorizontalPodAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.HorizontalPodAutoscaling)
}

void HorizontalPodAutoscaling::SharedCtor() {
  disabled_ = false;
  _cached_size_ = 0;
}

HorizontalPodAutoscaling::~HorizontalPodAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1.HorizontalPodAutoscaling)
  SharedDtor();
}

void HorizontalPodAutoscaling::SharedDtor() {
}

void HorizontalPodAutoscaling::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HorizontalPodAutoscaling::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HorizontalPodAutoscaling& HorizontalPodAutoscaling::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsHorizontalPodAutoscaling();
  return *internal_default_instance();
}

HorizontalPodAutoscaling* HorizontalPodAutoscaling::New(::google::protobuf::Arena* arena) const {
  HorizontalPodAutoscaling* n = new HorizontalPodAutoscaling;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HorizontalPodAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

bool HorizontalPodAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.HorizontalPodAutoscaling)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.HorizontalPodAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.HorizontalPodAutoscaling)
  return false;
#undef DO_
}

void HorizontalPodAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.HorizontalPodAutoscaling)
}

::google::protobuf::uint8* HorizontalPodAutoscaling::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.HorizontalPodAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.HorizontalPodAutoscaling)
  return target;
}

size_t HorizontalPodAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.HorizontalPodAutoscaling)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HorizontalPodAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.HorizontalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const HorizontalPodAutoscaling* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HorizontalPodAutoscaling>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.HorizontalPodAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.HorizontalPodAutoscaling)
    MergeFrom(*source);
  }
}

void HorizontalPodAutoscaling::MergeFrom(const HorizontalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.HorizontalPodAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void HorizontalPodAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.HorizontalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HorizontalPodAutoscaling::CopyFrom(const HorizontalPodAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.HorizontalPodAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HorizontalPodAutoscaling::IsInitialized() const {
  return true;
}

void HorizontalPodAutoscaling::Swap(HorizontalPodAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HorizontalPodAutoscaling::InternalSwap(HorizontalPodAutoscaling* other) {
  using std::swap;
  swap(disabled_, other->disabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HorizontalPodAutoscaling::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KubernetesDashboard::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KubernetesDashboard::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KubernetesDashboard::KubernetesDashboard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsKubernetesDashboard();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.KubernetesDashboard)
}
KubernetesDashboard::KubernetesDashboard(const KubernetesDashboard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.KubernetesDashboard)
}

void KubernetesDashboard::SharedCtor() {
  disabled_ = false;
  _cached_size_ = 0;
}

KubernetesDashboard::~KubernetesDashboard() {
  // @@protoc_insertion_point(destructor:google.container.v1.KubernetesDashboard)
  SharedDtor();
}

void KubernetesDashboard::SharedDtor() {
}

void KubernetesDashboard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KubernetesDashboard::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KubernetesDashboard& KubernetesDashboard::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsKubernetesDashboard();
  return *internal_default_instance();
}

KubernetesDashboard* KubernetesDashboard::New(::google::protobuf::Arena* arena) const {
  KubernetesDashboard* n = new KubernetesDashboard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KubernetesDashboard::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

bool KubernetesDashboard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.KubernetesDashboard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.KubernetesDashboard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.KubernetesDashboard)
  return false;
#undef DO_
}

void KubernetesDashboard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.KubernetesDashboard)
}

::google::protobuf::uint8* KubernetesDashboard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.KubernetesDashboard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.KubernetesDashboard)
  return target;
}

size_t KubernetesDashboard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.KubernetesDashboard)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KubernetesDashboard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.KubernetesDashboard)
  GOOGLE_DCHECK_NE(&from, this);
  const KubernetesDashboard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KubernetesDashboard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.KubernetesDashboard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.KubernetesDashboard)
    MergeFrom(*source);
  }
}

void KubernetesDashboard::MergeFrom(const KubernetesDashboard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.KubernetesDashboard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void KubernetesDashboard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.KubernetesDashboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KubernetesDashboard::CopyFrom(const KubernetesDashboard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.KubernetesDashboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KubernetesDashboard::IsInitialized() const {
  return true;
}

void KubernetesDashboard::Swap(KubernetesDashboard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KubernetesDashboard::InternalSwap(KubernetesDashboard* other) {
  using std::swap;
  swap(disabled_, other->disabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KubernetesDashboard::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetworkPolicyConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkPolicyConfig::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkPolicyConfig::NetworkPolicyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNetworkPolicyConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NetworkPolicyConfig)
}
NetworkPolicyConfig::NetworkPolicyConfig(const NetworkPolicyConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NetworkPolicyConfig)
}

void NetworkPolicyConfig::SharedCtor() {
  disabled_ = false;
  _cached_size_ = 0;
}

NetworkPolicyConfig::~NetworkPolicyConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.NetworkPolicyConfig)
  SharedDtor();
}

void NetworkPolicyConfig::SharedDtor() {
}

void NetworkPolicyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkPolicyConfig::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetworkPolicyConfig& NetworkPolicyConfig::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNetworkPolicyConfig();
  return *internal_default_instance();
}

NetworkPolicyConfig* NetworkPolicyConfig::New(::google::protobuf::Arena* arena) const {
  NetworkPolicyConfig* n = new NetworkPolicyConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkPolicyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disabled_ = false;
  _internal_metadata_.Clear();
}

bool NetworkPolicyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NetworkPolicyConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NetworkPolicyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NetworkPolicyConfig)
  return false;
#undef DO_
}

void NetworkPolicyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NetworkPolicyConfig)
}

::google::protobuf::uint8* NetworkPolicyConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NetworkPolicyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disabled = 1;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NetworkPolicyConfig)
  return target;
}

size_t NetworkPolicyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NetworkPolicyConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool disabled = 1;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkPolicyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NetworkPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkPolicyConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkPolicyConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NetworkPolicyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NetworkPolicyConfig)
    MergeFrom(*source);
  }
}

void NetworkPolicyConfig::MergeFrom(const NetworkPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NetworkPolicyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void NetworkPolicyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NetworkPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkPolicyConfig::CopyFrom(const NetworkPolicyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NetworkPolicyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkPolicyConfig::IsInitialized() const {
  return true;
}

void NetworkPolicyConfig::Swap(NetworkPolicyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkPolicyConfig::InternalSwap(NetworkPolicyConfig* other) {
  using std::swap;
  swap(disabled_, other->disabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkPolicyConfig::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MasterAuthorizedNetworksConfig_CidrBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuthorizedNetworksConfig_CidrBlock::kDisplayNameFieldNumber;
const int MasterAuthorizedNetworksConfig_CidrBlock::kCidrBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuthorizedNetworksConfig_CidrBlock::MasterAuthorizedNetworksConfig_CidrBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
}
MasterAuthorizedNetworksConfig_CidrBlock::MasterAuthorizedNetworksConfig_CidrBlock(const MasterAuthorizedNetworksConfig_CidrBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cidr_block().size() > 0) {
    cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cidr_block_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
}

void MasterAuthorizedNetworksConfig_CidrBlock::SharedCtor() {
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MasterAuthorizedNetworksConfig_CidrBlock::~MasterAuthorizedNetworksConfig_CidrBlock() {
  // @@protoc_insertion_point(destructor:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  SharedDtor();
}

void MasterAuthorizedNetworksConfig_CidrBlock::SharedDtor() {
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MasterAuthorizedNetworksConfig_CidrBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterAuthorizedNetworksConfig_CidrBlock::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterAuthorizedNetworksConfig_CidrBlock& MasterAuthorizedNetworksConfig_CidrBlock::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuthorizedNetworksConfig_CidrBlock();
  return *internal_default_instance();
}

MasterAuthorizedNetworksConfig_CidrBlock* MasterAuthorizedNetworksConfig_CidrBlock::New(::google::protobuf::Arena* arena) const {
  MasterAuthorizedNetworksConfig_CidrBlock* n = new MasterAuthorizedNetworksConfig_CidrBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterAuthorizedNetworksConfig_CidrBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MasterAuthorizedNetworksConfig_CidrBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string display_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cidr_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  return false;
#undef DO_
}

void MasterAuthorizedNetworksConfig_CidrBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->display_name(), output);
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cidr_block(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
}

::google::protobuf::uint8* MasterAuthorizedNetworksConfig_CidrBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string display_name = 1;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->display_name(), target);
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cidr_block().data(), static_cast<int>(this->cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cidr_block(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  return target;
}

size_t MasterAuthorizedNetworksConfig_CidrBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string display_name = 1;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string cidr_block = 2;
  if (this->cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cidr_block());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterAuthorizedNetworksConfig_CidrBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuthorizedNetworksConfig_CidrBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterAuthorizedNetworksConfig_CidrBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
    MergeFrom(*source);
  }
}

void MasterAuthorizedNetworksConfig_CidrBlock::MergeFrom(const MasterAuthorizedNetworksConfig_CidrBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.cidr_block().size() > 0) {

    cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cidr_block_);
  }
}

void MasterAuthorizedNetworksConfig_CidrBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuthorizedNetworksConfig_CidrBlock::CopyFrom(const MasterAuthorizedNetworksConfig_CidrBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuthorizedNetworksConfig_CidrBlock::IsInitialized() const {
  return true;
}

void MasterAuthorizedNetworksConfig_CidrBlock::Swap(MasterAuthorizedNetworksConfig_CidrBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuthorizedNetworksConfig_CidrBlock::InternalSwap(MasterAuthorizedNetworksConfig_CidrBlock* other) {
  using std::swap;
  display_name_.Swap(&other->display_name_);
  cidr_block_.Swap(&other->cidr_block_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MasterAuthorizedNetworksConfig_CidrBlock::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MasterAuthorizedNetworksConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterAuthorizedNetworksConfig::kEnabledFieldNumber;
const int MasterAuthorizedNetworksConfig::kCidrBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterAuthorizedNetworksConfig::MasterAuthorizedNetworksConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuthorizedNetworksConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MasterAuthorizedNetworksConfig)
}
MasterAuthorizedNetworksConfig::MasterAuthorizedNetworksConfig(const MasterAuthorizedNetworksConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cidr_blocks_(from.cidr_blocks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MasterAuthorizedNetworksConfig)
}

void MasterAuthorizedNetworksConfig::SharedCtor() {
  enabled_ = false;
  _cached_size_ = 0;
}

MasterAuthorizedNetworksConfig::~MasterAuthorizedNetworksConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.MasterAuthorizedNetworksConfig)
  SharedDtor();
}

void MasterAuthorizedNetworksConfig::SharedDtor() {
}

void MasterAuthorizedNetworksConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterAuthorizedNetworksConfig::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterAuthorizedNetworksConfig& MasterAuthorizedNetworksConfig::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMasterAuthorizedNetworksConfig();
  return *internal_default_instance();
}

MasterAuthorizedNetworksConfig* MasterAuthorizedNetworksConfig::New(::google::protobuf::Arena* arena) const {
  MasterAuthorizedNetworksConfig* n = new MasterAuthorizedNetworksConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterAuthorizedNetworksConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cidr_blocks_.Clear();
  enabled_ = false;
  _internal_metadata_.Clear();
}

bool MasterAuthorizedNetworksConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MasterAuthorizedNetworksConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cidr_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MasterAuthorizedNetworksConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MasterAuthorizedNetworksConfig)
  return false;
#undef DO_
}

void MasterAuthorizedNetworksConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cidr_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cidr_blocks(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MasterAuthorizedNetworksConfig)
}

::google::protobuf::uint8* MasterAuthorizedNetworksConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MasterAuthorizedNetworksConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cidr_blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->cidr_blocks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MasterAuthorizedNetworksConfig)
  return target;
}

size_t MasterAuthorizedNetworksConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MasterAuthorizedNetworksConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock cidr_blocks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cidr_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cidr_blocks(static_cast<int>(i)));
    }
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterAuthorizedNetworksConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterAuthorizedNetworksConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterAuthorizedNetworksConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MasterAuthorizedNetworksConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MasterAuthorizedNetworksConfig)
    MergeFrom(*source);
  }
}

void MasterAuthorizedNetworksConfig::MergeFrom(const MasterAuthorizedNetworksConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cidr_blocks_.MergeFrom(from.cidr_blocks_);
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void MasterAuthorizedNetworksConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterAuthorizedNetworksConfig::CopyFrom(const MasterAuthorizedNetworksConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MasterAuthorizedNetworksConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterAuthorizedNetworksConfig::IsInitialized() const {
  return true;
}

void MasterAuthorizedNetworksConfig::Swap(MasterAuthorizedNetworksConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterAuthorizedNetworksConfig::InternalSwap(MasterAuthorizedNetworksConfig* other) {
  using std::swap;
  cidr_blocks_.InternalSwap(&other->cidr_blocks_);
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MasterAuthorizedNetworksConfig::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LegacyAbac::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LegacyAbac::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LegacyAbac::LegacyAbac()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsLegacyAbac();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.LegacyAbac)
}
LegacyAbac::LegacyAbac(const LegacyAbac& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.LegacyAbac)
}

void LegacyAbac::SharedCtor() {
  enabled_ = false;
  _cached_size_ = 0;
}

LegacyAbac::~LegacyAbac() {
  // @@protoc_insertion_point(destructor:google.container.v1.LegacyAbac)
  SharedDtor();
}

void LegacyAbac::SharedDtor() {
}

void LegacyAbac::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LegacyAbac::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LegacyAbac& LegacyAbac::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsLegacyAbac();
  return *internal_default_instance();
}

LegacyAbac* LegacyAbac::New(::google::protobuf::Arena* arena) const {
  LegacyAbac* n = new LegacyAbac;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LegacyAbac::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.LegacyAbac)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

bool LegacyAbac::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.LegacyAbac)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.LegacyAbac)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.LegacyAbac)
  return false;
#undef DO_
}

void LegacyAbac::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.LegacyAbac)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.LegacyAbac)
}

::google::protobuf::uint8* LegacyAbac::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.LegacyAbac)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.LegacyAbac)
  return target;
}

size_t LegacyAbac::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.LegacyAbac)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LegacyAbac::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.LegacyAbac)
  GOOGLE_DCHECK_NE(&from, this);
  const LegacyAbac* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LegacyAbac>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.LegacyAbac)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.LegacyAbac)
    MergeFrom(*source);
  }
}

void LegacyAbac::MergeFrom(const LegacyAbac& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.LegacyAbac)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void LegacyAbac::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.LegacyAbac)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LegacyAbac::CopyFrom(const LegacyAbac& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.LegacyAbac)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LegacyAbac::IsInitialized() const {
  return true;
}

void LegacyAbac::Swap(LegacyAbac* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LegacyAbac::InternalSwap(LegacyAbac* other) {
  using std::swap;
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LegacyAbac::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetworkPolicy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkPolicy::kProviderFieldNumber;
const int NetworkPolicy::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkPolicy::NetworkPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNetworkPolicy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NetworkPolicy)
}
NetworkPolicy::NetworkPolicy(const NetworkPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&provider_, &from.provider_,
    static_cast<size_t>(reinterpret_cast<char*>(&enabled_) -
    reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NetworkPolicy)
}

void NetworkPolicy::SharedCtor() {
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
  _cached_size_ = 0;
}

NetworkPolicy::~NetworkPolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1.NetworkPolicy)
  SharedDtor();
}

void NetworkPolicy::SharedDtor() {
}

void NetworkPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkPolicy::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetworkPolicy& NetworkPolicy::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNetworkPolicy();
  return *internal_default_instance();
}

NetworkPolicy* NetworkPolicy::New(::google::protobuf::Arena* arena) const {
  NetworkPolicy* n = new NetworkPolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(enabled_));
  _internal_metadata_.Clear();
}

bool NetworkPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NetworkPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.NetworkPolicy.Provider provider = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_provider(static_cast< ::google::container::v1::NetworkPolicy_Provider >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NetworkPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NetworkPolicy)
  return false;
#undef DO_
}

void NetworkPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->provider(), output);
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NetworkPolicy)
}

::google::protobuf::uint8* NetworkPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NetworkPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->provider(), target);
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NetworkPolicy)
  return target;
}

size_t NetworkPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NetworkPolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.container.v1.NetworkPolicy.Provider provider = 1;
  if (this->provider() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->provider());
  }

  // bool enabled = 2;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NetworkPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NetworkPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NetworkPolicy)
    MergeFrom(*source);
  }
}

void NetworkPolicy::MergeFrom(const NetworkPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NetworkPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.provider() != 0) {
    set_provider(from.provider());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void NetworkPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NetworkPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkPolicy::CopyFrom(const NetworkPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NetworkPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkPolicy::IsInitialized() const {
  return true;
}

void NetworkPolicy::Swap(NetworkPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkPolicy::InternalSwap(NetworkPolicy* other) {
  using std::swap;
  swap(provider_, other->provider_);
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkPolicy::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IPAllocationPolicy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IPAllocationPolicy::kUseIpAliasesFieldNumber;
const int IPAllocationPolicy::kCreateSubnetworkFieldNumber;
const int IPAllocationPolicy::kSubnetworkNameFieldNumber;
const int IPAllocationPolicy::kClusterIpv4CidrFieldNumber;
const int IPAllocationPolicy::kNodeIpv4CidrFieldNumber;
const int IPAllocationPolicy::kServicesIpv4CidrFieldNumber;
const int IPAllocationPolicy::kClusterSecondaryRangeNameFieldNumber;
const int IPAllocationPolicy::kServicesSecondaryRangeNameFieldNumber;
const int IPAllocationPolicy::kClusterIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kNodeIpv4CidrBlockFieldNumber;
const int IPAllocationPolicy::kServicesIpv4CidrBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IPAllocationPolicy::IPAllocationPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsIPAllocationPolicy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.IPAllocationPolicy)
}
IPAllocationPolicy::IPAllocationPolicy(const IPAllocationPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subnetwork_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork_name().size() > 0) {
    subnetwork_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_name_);
  }
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr().size() > 0) {
    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  node_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_ipv4_cidr().size() > 0) {
    node_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_);
  }
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr().size() > 0) {
    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  cluster_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_secondary_range_name().size() > 0) {
    cluster_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_secondary_range_name_);
  }
  services_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_secondary_range_name().size() > 0) {
    services_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_secondary_range_name_);
  }
  cluster_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr_block().size() > 0) {
    cluster_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_block_);
  }
  node_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_ipv4_cidr_block().size() > 0) {
    node_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_block_);
  }
  services_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr_block().size() > 0) {
    services_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_block_);
  }
  ::memcpy(&use_ip_aliases_, &from.use_ip_aliases_,
    static_cast<size_t>(reinterpret_cast<char*>(&create_subnetwork_) -
    reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(create_subnetwork_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.IPAllocationPolicy)
}

void IPAllocationPolicy::SharedCtor() {
  subnetwork_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_ip_aliases_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_subnetwork_) -
      reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(create_subnetwork_));
  _cached_size_ = 0;
}

IPAllocationPolicy::~IPAllocationPolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1.IPAllocationPolicy)
  SharedDtor();
}

void IPAllocationPolicy::SharedDtor() {
  subnetwork_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IPAllocationPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IPAllocationPolicy::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IPAllocationPolicy& IPAllocationPolicy::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsIPAllocationPolicy();
  return *internal_default_instance();
}

IPAllocationPolicy* IPAllocationPolicy::New(::google::protobuf::Arena* arena) const {
  IPAllocationPolicy* n = new IPAllocationPolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IPAllocationPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnetwork_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_secondary_range_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_secondary_range_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_block_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_ip_aliases_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_subnetwork_) -
      reinterpret_cast<char*>(&use_ip_aliases_)) + sizeof(create_subnetwork_));
  _internal_metadata_.Clear();
}

bool IPAllocationPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.IPAllocationPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_ip_aliases = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_ip_aliases_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool create_subnetwork = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_subnetwork_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.subnetwork_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_ipv4_cidr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.node_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.services_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_secondary_range_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_secondary_range_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.cluster_secondary_range_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_secondary_range_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_secondary_range_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.services_secondary_range_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr_block = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_ipv4_cidr_block = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr_block = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr_block()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.IPAllocationPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.IPAllocationPolicy)
  return false;
#undef DO_
}

void IPAllocationPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_ip_aliases(), output);
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->create_subnetwork(), output);
  }

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.subnetwork_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subnetwork_name(), output);
  }

  // string cluster_ipv4_cidr = 4;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cluster_ipv4_cidr(), output);
  }

  // string node_ipv4_cidr = 5;
  if (this->node_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->node_ipv4_cidr(), output);
  }

  // string services_ipv4_cidr = 6;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->services_ipv4_cidr(), output);
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_secondary_range_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cluster_secondary_range_name(), output);
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_secondary_range_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->services_secondary_range_name(), output);
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cluster_ipv4_cidr_block(), output);
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->node_ipv4_cidr_block(), output);
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->services_ipv4_cidr_block(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.IPAllocationPolicy)
}

::google::protobuf::uint8* IPAllocationPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.IPAllocationPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_ip_aliases(), target);
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->create_subnetwork(), target);
  }

  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_name().data(), static_cast<int>(this->subnetwork_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.subnetwork_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subnetwork_name(), target);
  }

  // string cluster_ipv4_cidr = 4;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cluster_ipv4_cidr(), target);
  }

  // string node_ipv4_cidr = 5;
  if (this->node_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr().data(), static_cast<int>(this->node_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->node_ipv4_cidr(), target);
  }

  // string services_ipv4_cidr = 6;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->services_ipv4_cidr(), target);
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_secondary_range_name().data(), static_cast<int>(this->cluster_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_secondary_range_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cluster_secondary_range_name(), target);
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_secondary_range_name().data(), static_cast<int>(this->services_secondary_range_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_secondary_range_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->services_secondary_range_name(), target);
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr_block().data(), static_cast<int>(this->cluster_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cluster_ipv4_cidr_block(), target);
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ipv4_cidr_block().data(), static_cast<int>(this->node_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->node_ipv4_cidr_block(), target);
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr_block().data(), static_cast<int>(this->services_ipv4_cidr_block().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->services_ipv4_cidr_block(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.IPAllocationPolicy)
  return target;
}

size_t IPAllocationPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.IPAllocationPolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subnetwork_name = 3;
  if (this->subnetwork_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork_name());
  }

  // string cluster_ipv4_cidr = 4;
  if (this->cluster_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr());
  }

  // string node_ipv4_cidr = 5;
  if (this->node_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_ipv4_cidr());
  }

  // string services_ipv4_cidr = 6;
  if (this->services_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr());
  }

  // string cluster_secondary_range_name = 7;
  if (this->cluster_secondary_range_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_secondary_range_name());
  }

  // string services_secondary_range_name = 8;
  if (this->services_secondary_range_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_secondary_range_name());
  }

  // string cluster_ipv4_cidr_block = 9;
  if (this->cluster_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr_block());
  }

  // string node_ipv4_cidr_block = 10;
  if (this->node_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_ipv4_cidr_block());
  }

  // string services_ipv4_cidr_block = 11;
  if (this->services_ipv4_cidr_block().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr_block());
  }

  // bool use_ip_aliases = 1;
  if (this->use_ip_aliases() != 0) {
    total_size += 1 + 1;
  }

  // bool create_subnetwork = 2;
  if (this->create_subnetwork() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IPAllocationPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.IPAllocationPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const IPAllocationPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IPAllocationPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.IPAllocationPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.IPAllocationPolicy)
    MergeFrom(*source);
  }
}

void IPAllocationPolicy::MergeFrom(const IPAllocationPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.IPAllocationPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnetwork_name().size() > 0) {

    subnetwork_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_name_);
  }
  if (from.cluster_ipv4_cidr().size() > 0) {

    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  if (from.node_ipv4_cidr().size() > 0) {

    node_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_);
  }
  if (from.services_ipv4_cidr().size() > 0) {

    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  if (from.cluster_secondary_range_name().size() > 0) {

    cluster_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_secondary_range_name_);
  }
  if (from.services_secondary_range_name().size() > 0) {

    services_secondary_range_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_secondary_range_name_);
  }
  if (from.cluster_ipv4_cidr_block().size() > 0) {

    cluster_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_block_);
  }
  if (from.node_ipv4_cidr_block().size() > 0) {

    node_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_ipv4_cidr_block_);
  }
  if (from.services_ipv4_cidr_block().size() > 0) {

    services_ipv4_cidr_block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_block_);
  }
  if (from.use_ip_aliases() != 0) {
    set_use_ip_aliases(from.use_ip_aliases());
  }
  if (from.create_subnetwork() != 0) {
    set_create_subnetwork(from.create_subnetwork());
  }
}

void IPAllocationPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.IPAllocationPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IPAllocationPolicy::CopyFrom(const IPAllocationPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.IPAllocationPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IPAllocationPolicy::IsInitialized() const {
  return true;
}

void IPAllocationPolicy::Swap(IPAllocationPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IPAllocationPolicy::InternalSwap(IPAllocationPolicy* other) {
  using std::swap;
  subnetwork_name_.Swap(&other->subnetwork_name_);
  cluster_ipv4_cidr_.Swap(&other->cluster_ipv4_cidr_);
  node_ipv4_cidr_.Swap(&other->node_ipv4_cidr_);
  services_ipv4_cidr_.Swap(&other->services_ipv4_cidr_);
  cluster_secondary_range_name_.Swap(&other->cluster_secondary_range_name_);
  services_secondary_range_name_.Swap(&other->services_secondary_range_name_);
  cluster_ipv4_cidr_block_.Swap(&other->cluster_ipv4_cidr_block_);
  node_ipv4_cidr_block_.Swap(&other->node_ipv4_cidr_block_);
  services_ipv4_cidr_block_.Swap(&other->services_ipv4_cidr_block_);
  swap(use_ip_aliases_, other->use_ip_aliases_);
  swap(create_subnetwork_, other->create_subnetwork_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IPAllocationPolicy::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Cluster_ResourceLabelsEntry_DoNotUse::Cluster_ResourceLabelsEntry_DoNotUse() {}
Cluster_ResourceLabelsEntry_DoNotUse::Cluster_ResourceLabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Cluster_ResourceLabelsEntry_DoNotUse::MergeFrom(const Cluster_ResourceLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Cluster_ResourceLabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[15];
}
void Cluster_ResourceLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Cluster::InitAsDefaultInstance() {
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->node_config_ = const_cast< ::google::container::v1::NodeConfig*>(
      ::google::container::v1::NodeConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->master_auth_ = const_cast< ::google::container::v1::MasterAuth*>(
      ::google::container::v1::MasterAuth::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->addons_config_ = const_cast< ::google::container::v1::AddonsConfig*>(
      ::google::container::v1::AddonsConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->legacy_abac_ = const_cast< ::google::container::v1::LegacyAbac*>(
      ::google::container::v1::LegacyAbac::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->network_policy_ = const_cast< ::google::container::v1::NetworkPolicy*>(
      ::google::container::v1::NetworkPolicy::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->ip_allocation_policy_ = const_cast< ::google::container::v1::IPAllocationPolicy*>(
      ::google::container::v1::IPAllocationPolicy::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->master_authorized_networks_config_ = const_cast< ::google::container::v1::MasterAuthorizedNetworksConfig*>(
      ::google::container::v1::MasterAuthorizedNetworksConfig::internal_default_instance());
  ::google::container::v1::_Cluster_default_instance_._instance.get_mutable()->maintenance_policy_ = const_cast< ::google::container::v1::MaintenancePolicy*>(
      ::google::container::v1::MaintenancePolicy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster::kNameFieldNumber;
const int Cluster::kDescriptionFieldNumber;
const int Cluster::kInitialNodeCountFieldNumber;
const int Cluster::kNodeConfigFieldNumber;
const int Cluster::kMasterAuthFieldNumber;
const int Cluster::kLoggingServiceFieldNumber;
const int Cluster::kMonitoringServiceFieldNumber;
const int Cluster::kNetworkFieldNumber;
const int Cluster::kClusterIpv4CidrFieldNumber;
const int Cluster::kAddonsConfigFieldNumber;
const int Cluster::kSubnetworkFieldNumber;
const int Cluster::kNodePoolsFieldNumber;
const int Cluster::kLocationsFieldNumber;
const int Cluster::kEnableKubernetesAlphaFieldNumber;
const int Cluster::kResourceLabelsFieldNumber;
const int Cluster::kLabelFingerprintFieldNumber;
const int Cluster::kLegacyAbacFieldNumber;
const int Cluster::kNetworkPolicyFieldNumber;
const int Cluster::kIpAllocationPolicyFieldNumber;
const int Cluster::kMasterAuthorizedNetworksConfigFieldNumber;
const int Cluster::kMaintenancePolicyFieldNumber;
const int Cluster::kSelfLinkFieldNumber;
const int Cluster::kZoneFieldNumber;
const int Cluster::kEndpointFieldNumber;
const int Cluster::kInitialClusterVersionFieldNumber;
const int Cluster::kCurrentMasterVersionFieldNumber;
const int Cluster::kCurrentNodeVersionFieldNumber;
const int Cluster::kCreateTimeFieldNumber;
const int Cluster::kStatusFieldNumber;
const int Cluster::kStatusMessageFieldNumber;
const int Cluster::kNodeIpv4CidrSizeFieldNumber;
const int Cluster::kServicesIpv4CidrFieldNumber;
const int Cluster::kInstanceGroupUrlsFieldNumber;
const int Cluster::kCurrentNodeCountFieldNumber;
const int Cluster::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster::Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCluster();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.Cluster)
}
Cluster::Cluster(const Cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      node_pools_(from.node_pools_),
      locations_(from.locations_),
      instance_group_urls_(from.instance_group_urls_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_labels_.MergeFrom(from.resource_labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logging_service().size() > 0) {
    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.monitoring_service().size() > 0) {
    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.network().size() > 0) {
    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_ipv4_cidr().size() > 0) {
    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork().size() > 0) {
    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_fingerprint().size() > 0) {
    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.endpoint().size() > 0) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  initial_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.initial_cluster_version().size() > 0) {
    initial_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_cluster_version_);
  }
  current_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_master_version().size() > 0) {
    current_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_master_version_);
  }
  current_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_node_version().size() > 0) {
    current_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_node_version_);
  }
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_time().size() > 0) {
    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.services_ipv4_cidr().size() > 0) {
    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  expire_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expire_time().size() > 0) {
    expire_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expire_time_);
  }
  if (from.has_node_config()) {
    node_config_ = new ::google::container::v1::NodeConfig(*from.node_config_);
  } else {
    node_config_ = NULL;
  }
  if (from.has_master_auth()) {
    master_auth_ = new ::google::container::v1::MasterAuth(*from.master_auth_);
  } else {
    master_auth_ = NULL;
  }
  if (from.has_addons_config()) {
    addons_config_ = new ::google::container::v1::AddonsConfig(*from.addons_config_);
  } else {
    addons_config_ = NULL;
  }
  if (from.has_legacy_abac()) {
    legacy_abac_ = new ::google::container::v1::LegacyAbac(*from.legacy_abac_);
  } else {
    legacy_abac_ = NULL;
  }
  if (from.has_network_policy()) {
    network_policy_ = new ::google::container::v1::NetworkPolicy(*from.network_policy_);
  } else {
    network_policy_ = NULL;
  }
  if (from.has_ip_allocation_policy()) {
    ip_allocation_policy_ = new ::google::container::v1::IPAllocationPolicy(*from.ip_allocation_policy_);
  } else {
    ip_allocation_policy_ = NULL;
  }
  if (from.has_master_authorized_networks_config()) {
    master_authorized_networks_config_ = new ::google::container::v1::MasterAuthorizedNetworksConfig(*from.master_authorized_networks_config_);
  } else {
    master_authorized_networks_config_ = NULL;
  }
  if (from.has_maintenance_policy()) {
    maintenance_policy_ = new ::google::container::v1::MaintenancePolicy(*from.maintenance_policy_);
  } else {
    maintenance_policy_ = NULL;
  }
  ::memcpy(&initial_node_count_, &from.initial_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
    reinterpret_cast<char*>(&initial_node_count_)) + sizeof(node_ipv4_cidr_size_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.Cluster)
}

void Cluster::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
      reinterpret_cast<char*>(&node_config_)) + sizeof(node_ipv4_cidr_size_));
  _cached_size_ = 0;
}

Cluster::~Cluster() {
  // @@protoc_insertion_point(destructor:google.container.v1.Cluster)
  SharedDtor();
}

void Cluster::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_config_;
  if (this != internal_default_instance()) delete master_auth_;
  if (this != internal_default_instance()) delete addons_config_;
  if (this != internal_default_instance()) delete legacy_abac_;
  if (this != internal_default_instance()) delete network_policy_;
  if (this != internal_default_instance()) delete ip_allocation_policy_;
  if (this != internal_default_instance()) delete master_authorized_networks_config_;
  if (this != internal_default_instance()) delete maintenance_policy_;
}

void Cluster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cluster::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cluster& Cluster::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCluster();
  return *internal_default_instance();
}

Cluster* Cluster::New(::google::protobuf::Arena* arena) const {
  Cluster* n = new Cluster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_pools_.Clear();
  locations_.Clear();
  resource_labels_.Clear();
  instance_group_urls_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_cluster_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  services_ipv4_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_config_ != NULL) {
    delete node_config_;
  }
  node_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && master_auth_ != NULL) {
    delete master_auth_;
  }
  master_auth_ = NULL;
  if (GetArenaNoVirtual() == NULL && addons_config_ != NULL) {
    delete addons_config_;
  }
  addons_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && legacy_abac_ != NULL) {
    delete legacy_abac_;
  }
  legacy_abac_ = NULL;
  if (GetArenaNoVirtual() == NULL && network_policy_ != NULL) {
    delete network_policy_;
  }
  network_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && ip_allocation_policy_ != NULL) {
    delete ip_allocation_policy_;
  }
  ip_allocation_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && master_authorized_networks_config_ != NULL) {
    delete master_authorized_networks_config_;
  }
  master_authorized_networks_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && maintenance_policy_ != NULL) {
    delete maintenance_policy_;
  }
  maintenance_policy_ = NULL;
  ::memset(&initial_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_ipv4_cidr_size_) -
      reinterpret_cast<char*>(&initial_node_count_)) + sizeof(node_ipv4_cidr_size_));
  _internal_metadata_.Clear();
}

bool Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.Cluster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeConfig node_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuth master_auth = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logging_service = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logging_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logging_service().data(), static_cast<int>(this->logging_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.logging_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string monitoring_service = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string network = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), static_cast<int>(this->network().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.network"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_ipv4_cidr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.cluster_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AddonsConfig addons_config = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.subnetwork"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.container.v1.NodePool node_pools = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_node_pools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_kubernetes_alpha = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_kubernetes_alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> resource_labels = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          Cluster_ResourceLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Cluster_ResourceLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&resource_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.ResourceLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.ResourceLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_fingerprint = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_fingerprint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.label_fingerprint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.LegacyAbac legacy_abac = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_legacy_abac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NetworkPolicy network_policy = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ip_allocation_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_authorized_networks_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maintenance_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string endpoint = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string initial_cluster_version = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initial_cluster_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.initial_cluster_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_master_version = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.current_master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_node_version = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.current_node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_time = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_time().data(), static_cast<int>(this->create_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.create_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Cluster.Status status = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 856 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::Cluster_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_ipv4_cidr_size = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 872 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_ipv4_cidr_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string services_ipv4_cidr = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_services_ipv4_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.services_ipv4_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instance_group_urls = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instance_group_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_group_urls(this->instance_group_urls_size() - 1).data(),
            static_cast<int>(this->instance_group_urls(this->instance_group_urls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.instance_group_urls"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_node_count = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 896 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expire_time = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expire_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expire_time().data(), static_cast<int>(this->expire_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Cluster.expire_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.Cluster)
  return false;
#undef DO_
}

void Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->initial_node_count(), output);
  }

  // .google.container.v1.NodeConfig node_config = 4;
  if (this->has_node_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->node_config_, output);
  }

  // .google.container.v1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->master_auth_, output);
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.logging_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->logging_service(), output);
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->monitoring_service(), output);
  }

  // string network = 8;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->network(), output);
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.cluster_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cluster_ipv4_cidr(), output);
  }

  // .google.container.v1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->addons_config_, output);
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.subnetwork");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->subnetwork(), output);
  }

  // repeated .google.container.v1.NodePool node_pools = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->node_pools(static_cast<int>(i)), output);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->locations(i), output);
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->enable_kubernetes_alpha(), output);
  }

  // map<string, string> resource_labels = 15;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->resource_labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string label_fingerprint = 16;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.label_fingerprint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->label_fingerprint(), output);
  }

  // .google.container.v1.LegacyAbac legacy_abac = 18;
  if (this->has_legacy_abac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->legacy_abac_, output);
  }

  // .google.container.v1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->network_policy_, output);
  }

  // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->ip_allocation_policy_, output);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->master_authorized_networks_config_, output);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->maintenance_policy_, output);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->self_link(), output);
  }

  // string zone = 101;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->zone(), output);
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->endpoint(), output);
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.initial_cluster_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->initial_cluster_version(), output);
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->current_master_version(), output);
  }

  // string current_node_version = 105;
  if (this->current_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      105, this->current_node_version(), output);
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.create_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      106, this->create_time(), output);
  }

  // .google.container.v1.Cluster.Status status = 107;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      107, this->status(), output);
  }

  // string status_message = 108;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      108, this->status_message(), output);
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(109, this->node_ipv4_cidr_size(), output);
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.services_ipv4_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      110, this->services_ipv4_cidr(), output);
  }

  // repeated string instance_group_urls = 111;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.instance_group_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      111, this->instance_group_urls(i), output);
  }

  // int32 current_node_count = 112;
  if (this->current_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(112, this->current_node_count(), output);
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expire_time().data(), static_cast<int>(this->expire_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.expire_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      113, this->expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.Cluster)
}

::google::protobuf::uint8* Cluster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->initial_node_count(), target);
  }

  // .google.container.v1.NodeConfig node_config = 4;
  if (this->has_node_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->node_config_, deterministic, target);
  }

  // .google.container.v1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->master_auth_, deterministic, target);
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.logging_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->logging_service(), target);
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->monitoring_service(), target);
  }

  // string network = 8;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->network(), target);
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_ipv4_cidr().data(), static_cast<int>(this->cluster_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.cluster_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cluster_ipv4_cidr(), target);
  }

  // .google.container.v1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->addons_config_, deterministic, target);
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork().data(), static_cast<int>(this->subnetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.subnetwork");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->subnetwork(), target);
  }

  // repeated .google.container.v1.NodePool node_pools = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->node_pools(static_cast<int>(i)), deterministic, target);
  }

  // repeated string locations = 13;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->locations(i), target);
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->enable_kubernetes_alpha(), target);
  }

  // map<string, string> resource_labels = 15;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.Cluster.ResourceLabelsEntry.value");
      }
    };

    if (deterministic &&
        this->resource_labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string label_fingerprint = 16;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.label_fingerprint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->label_fingerprint(), target);
  }

  // .google.container.v1.LegacyAbac legacy_abac = 18;
  if (this->has_legacy_abac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *this->legacy_abac_, deterministic, target);
  }

  // .google.container.v1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *this->network_policy_, deterministic, target);
  }

  // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->ip_allocation_policy_, deterministic, target);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, *this->master_authorized_networks_config_, deterministic, target);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, *this->maintenance_policy_, deterministic, target);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->self_link(), target);
  }

  // string zone = 101;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->zone(), target);
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->endpoint(), target);
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initial_cluster_version().data(), static_cast<int>(this->initial_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.initial_cluster_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->initial_cluster_version(), target);
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_master_version().data(), static_cast<int>(this->current_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->current_master_version(), target);
  }

  // string current_node_version = 105;
  if (this->current_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_node_version().data(), static_cast<int>(this->current_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.current_node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        105, this->current_node_version(), target);
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.create_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        106, this->create_time(), target);
  }

  // .google.container.v1.Cluster.Status status = 107;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      107, this->status(), target);
  }

  // string status_message = 108;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        108, this->status_message(), target);
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(109, this->node_ipv4_cidr_size(), target);
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->services_ipv4_cidr().data(), static_cast<int>(this->services_ipv4_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.services_ipv4_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        110, this->services_ipv4_cidr(), target);
  }

  // repeated string instance_group_urls = 111;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.instance_group_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(111, this->instance_group_urls(i), target);
  }

  // int32 current_node_count = 112;
  if (this->current_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(112, this->current_node_count(), target);
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expire_time().data(), static_cast<int>(this->expire_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Cluster.expire_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        113, this->expire_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.Cluster)
  return target;
}

size_t Cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.Cluster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.container.v1.NodePool node_pools = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->node_pools_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_pools(static_cast<int>(i)));
    }
  }

  // repeated string locations = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // map<string, string> resource_labels = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_labels_size());
  {
    ::google::protobuf::scoped_ptr<Cluster_ResourceLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->resource_labels().begin();
        it != this->resource_labels().end(); ++it) {
      entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string instance_group_urls = 111;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->instance_group_urls_size());
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instance_group_urls(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string logging_service = 6;
  if (this->logging_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logging_service());
  }

  // string monitoring_service = 7;
  if (this->monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitoring_service());
  }

  // string network = 8;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // string cluster_ipv4_cidr = 9;
  if (this->cluster_ipv4_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_ipv4_cidr());
  }

  // string subnetwork = 11;
  if (this->subnetwork().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork());
  }

  // string label_fingerprint = 16;
  if (this->label_fingerprint().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_fingerprint());
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string zone = 101;
  if (this->zone().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string endpoint = 102;
  if (this->endpoint().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  // string initial_cluster_version = 103;
  if (this->initial_cluster_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->initial_cluster_version());
  }

  // string current_master_version = 104;
  if (this->current_master_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_master_version());
  }

  // string current_node_version = 105;
  if (this->current_node_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_node_version());
  }

  // string create_time = 106;
  if (this->create_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_time());
  }

  // string status_message = 108;
  if (this->status_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // string services_ipv4_cidr = 110;
  if (this->services_ipv4_cidr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services_ipv4_cidr());
  }

  // string expire_time = 113;
  if (this->expire_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expire_time());
  }

  // .google.container.v1.NodeConfig node_config = 4;
  if (this->has_node_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->node_config_);
  }

  // .google.container.v1.MasterAuth master_auth = 5;
  if (this->has_master_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->master_auth_);
  }

  // .google.container.v1.AddonsConfig addons_config = 10;
  if (this->has_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->addons_config_);
  }

  // .google.container.v1.LegacyAbac legacy_abac = 18;
  if (this->has_legacy_abac()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->legacy_abac_);
  }

  // .google.container.v1.NetworkPolicy network_policy = 19;
  if (this->has_network_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->network_policy_);
  }

  // .google.container.v1.IPAllocationPolicy ip_allocation_policy = 20;
  if (this->has_ip_allocation_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ip_allocation_policy_);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig master_authorized_networks_config = 22;
  if (this->has_master_authorized_networks_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->master_authorized_networks_config_);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 23;
  if (this->has_maintenance_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->maintenance_policy_);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initial_node_count());
  }

  // bool enable_kubernetes_alpha = 14;
  if (this->enable_kubernetes_alpha() != 0) {
    total_size += 1 + 1;
  }

  // int32 current_node_count = 112;
  if (this->current_node_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_node_count());
  }

  // .google.container.v1.Cluster.Status status = 107;
  if (this->status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 node_ipv4_cidr_size = 109;
  if (this->node_ipv4_cidr_size() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_ipv4_cidr_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const Cluster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cluster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.Cluster)
    MergeFrom(*source);
  }
}

void Cluster::MergeFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_pools_.MergeFrom(from.node_pools_);
  locations_.MergeFrom(from.locations_);
  resource_labels_.MergeFrom(from.resource_labels_);
  instance_group_urls_.MergeFrom(from.instance_group_urls_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.logging_service().size() > 0) {

    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  if (from.monitoring_service().size() > 0) {

    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.cluster_ipv4_cidr().size() > 0) {

    cluster_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_ipv4_cidr_);
  }
  if (from.subnetwork().size() > 0) {

    subnetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_);
  }
  if (from.label_fingerprint().size() > 0) {

    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.endpoint().size() > 0) {

    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  if (from.initial_cluster_version().size() > 0) {

    initial_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_cluster_version_);
  }
  if (from.current_master_version().size() > 0) {

    current_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_master_version_);
  }
  if (from.current_node_version().size() > 0) {

    current_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_node_version_);
  }
  if (from.create_time().size() > 0) {

    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.services_ipv4_cidr().size() > 0) {

    services_ipv4_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.services_ipv4_cidr_);
  }
  if (from.expire_time().size() > 0) {

    expire_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expire_time_);
  }
  if (from.has_node_config()) {
    mutable_node_config()->::google::container::v1::NodeConfig::MergeFrom(from.node_config());
  }
  if (from.has_master_auth()) {
    mutable_master_auth()->::google::container::v1::MasterAuth::MergeFrom(from.master_auth());
  }
  if (from.has_addons_config()) {
    mutable_addons_config()->::google::container::v1::AddonsConfig::MergeFrom(from.addons_config());
  }
  if (from.has_legacy_abac()) {
    mutable_legacy_abac()->::google::container::v1::LegacyAbac::MergeFrom(from.legacy_abac());
  }
  if (from.has_network_policy()) {
    mutable_network_policy()->::google::container::v1::NetworkPolicy::MergeFrom(from.network_policy());
  }
  if (from.has_ip_allocation_policy()) {
    mutable_ip_allocation_policy()->::google::container::v1::IPAllocationPolicy::MergeFrom(from.ip_allocation_policy());
  }
  if (from.has_master_authorized_networks_config()) {
    mutable_master_authorized_networks_config()->::google::container::v1::MasterAuthorizedNetworksConfig::MergeFrom(from.master_authorized_networks_config());
  }
  if (from.has_maintenance_policy()) {
    mutable_maintenance_policy()->::google::container::v1::MaintenancePolicy::MergeFrom(from.maintenance_policy());
  }
  if (from.initial_node_count() != 0) {
    set_initial_node_count(from.initial_node_count());
  }
  if (from.enable_kubernetes_alpha() != 0) {
    set_enable_kubernetes_alpha(from.enable_kubernetes_alpha());
  }
  if (from.current_node_count() != 0) {
    set_current_node_count(from.current_node_count());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.node_ipv4_cidr_size() != 0) {
    set_node_ipv4_cidr_size(from.node_ipv4_cidr_size());
  }
}

void Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cluster::CopyFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster::IsInitialized() const {
  return true;
}

void Cluster::Swap(Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster::InternalSwap(Cluster* other) {
  using std::swap;
  node_pools_.InternalSwap(&other->node_pools_);
  locations_.InternalSwap(&other->locations_);
  resource_labels_.Swap(&other->resource_labels_);
  instance_group_urls_.InternalSwap(&other->instance_group_urls_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  logging_service_.Swap(&other->logging_service_);
  monitoring_service_.Swap(&other->monitoring_service_);
  network_.Swap(&other->network_);
  cluster_ipv4_cidr_.Swap(&other->cluster_ipv4_cidr_);
  subnetwork_.Swap(&other->subnetwork_);
  label_fingerprint_.Swap(&other->label_fingerprint_);
  self_link_.Swap(&other->self_link_);
  zone_.Swap(&other->zone_);
  endpoint_.Swap(&other->endpoint_);
  initial_cluster_version_.Swap(&other->initial_cluster_version_);
  current_master_version_.Swap(&other->current_master_version_);
  current_node_version_.Swap(&other->current_node_version_);
  create_time_.Swap(&other->create_time_);
  status_message_.Swap(&other->status_message_);
  services_ipv4_cidr_.Swap(&other->services_ipv4_cidr_);
  expire_time_.Swap(&other->expire_time_);
  swap(node_config_, other->node_config_);
  swap(master_auth_, other->master_auth_);
  swap(addons_config_, other->addons_config_);
  swap(legacy_abac_, other->legacy_abac_);
  swap(network_policy_, other->network_policy_);
  swap(ip_allocation_policy_, other->ip_allocation_policy_);
  swap(master_authorized_networks_config_, other->master_authorized_networks_config_);
  swap(maintenance_policy_, other->maintenance_policy_);
  swap(initial_node_count_, other->initial_node_count_);
  swap(enable_kubernetes_alpha_, other->enable_kubernetes_alpha_);
  swap(current_node_count_, other->current_node_count_);
  swap(status_, other->status_);
  swap(node_ipv4_cidr_size_, other->node_ipv4_cidr_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cluster::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterUpdate::InitAsDefaultInstance() {
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_addons_config_ = const_cast< ::google::container::v1::AddonsConfig*>(
      ::google::container::v1::AddonsConfig::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_node_pool_autoscaling_ = const_cast< ::google::container::v1::NodePoolAutoscaling*>(
      ::google::container::v1::NodePoolAutoscaling::internal_default_instance());
  ::google::container::v1::_ClusterUpdate_default_instance_._instance.get_mutable()->desired_master_authorized_networks_config_ = const_cast< ::google::container::v1::MasterAuthorizedNetworksConfig*>(
      ::google::container::v1::MasterAuthorizedNetworksConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterUpdate::kDesiredNodeVersionFieldNumber;
const int ClusterUpdate::kDesiredMonitoringServiceFieldNumber;
const int ClusterUpdate::kDesiredAddonsConfigFieldNumber;
const int ClusterUpdate::kDesiredNodePoolIdFieldNumber;
const int ClusterUpdate::kDesiredImageTypeFieldNumber;
const int ClusterUpdate::kDesiredNodePoolAutoscalingFieldNumber;
const int ClusterUpdate::kDesiredLocationsFieldNumber;
const int ClusterUpdate::kDesiredMasterAuthorizedNetworksConfigFieldNumber;
const int ClusterUpdate::kDesiredMasterVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterUpdate::ClusterUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsClusterUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ClusterUpdate)
}
ClusterUpdate::ClusterUpdate(const ClusterUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      desired_locations_(from.desired_locations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desired_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_node_version().size() > 0) {
    desired_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_version_);
  }
  desired_monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_monitoring_service().size() > 0) {
    desired_monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_monitoring_service_);
  }
  desired_node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_node_pool_id().size() > 0) {
    desired_node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_pool_id_);
  }
  desired_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_image_type().size() > 0) {
    desired_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_image_type_);
  }
  desired_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desired_master_version().size() > 0) {
    desired_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_master_version_);
  }
  if (from.has_desired_addons_config()) {
    desired_addons_config_ = new ::google::container::v1::AddonsConfig(*from.desired_addons_config_);
  } else {
    desired_addons_config_ = NULL;
  }
  if (from.has_desired_node_pool_autoscaling()) {
    desired_node_pool_autoscaling_ = new ::google::container::v1::NodePoolAutoscaling(*from.desired_node_pool_autoscaling_);
  } else {
    desired_node_pool_autoscaling_ = NULL;
  }
  if (from.has_desired_master_authorized_networks_config()) {
    desired_master_authorized_networks_config_ = new ::google::container::v1::MasterAuthorizedNetworksConfig(*from.desired_master_authorized_networks_config_);
  } else {
    desired_master_authorized_networks_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ClusterUpdate)
}

void ClusterUpdate::SharedCtor() {
  desired_node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&desired_addons_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&desired_master_authorized_networks_config_) -
      reinterpret_cast<char*>(&desired_addons_config_)) + sizeof(desired_master_authorized_networks_config_));
  _cached_size_ = 0;
}

ClusterUpdate::~ClusterUpdate() {
  // @@protoc_insertion_point(destructor:google.container.v1.ClusterUpdate)
  SharedDtor();
}

void ClusterUpdate::SharedDtor() {
  desired_node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete desired_addons_config_;
  if (this != internal_default_instance()) delete desired_node_pool_autoscaling_;
  if (this != internal_default_instance()) delete desired_master_authorized_networks_config_;
}

void ClusterUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterUpdate::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterUpdate& ClusterUpdate::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsClusterUpdate();
  return *internal_default_instance();
}

ClusterUpdate* ClusterUpdate::New(::google::protobuf::Arena* arena) const {
  ClusterUpdate* n = new ClusterUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desired_locations_.Clear();
  desired_node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && desired_addons_config_ != NULL) {
    delete desired_addons_config_;
  }
  desired_addons_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && desired_node_pool_autoscaling_ != NULL) {
    delete desired_node_pool_autoscaling_;
  }
  desired_node_pool_autoscaling_ = NULL;
  if (GetArenaNoVirtual() == NULL && desired_master_authorized_networks_config_ != NULL) {
    delete desired_master_authorized_networks_config_;
  }
  desired_master_authorized_networks_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ClusterUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ClusterUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string desired_node_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_monitoring_service = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AddonsConfig desired_addons_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_node_pool_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_image_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_node_pool_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string desired_locations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_desired_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_locations(this->desired_locations_size() - 1).data(),
            static_cast<int>(this->desired_locations(this->desired_locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_desired_master_authorized_networks_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desired_master_version = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ClusterUpdate.desired_master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ClusterUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ClusterUpdate)
  return false;
#undef DO_
}

void ClusterUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->desired_node_version(), output);
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desired_monitoring_service(), output);
  }

  // .google.container.v1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->desired_addons_config_, output);
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->desired_node_pool_id(), output);
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->desired_image_type(), output);
  }

  // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->desired_node_pool_autoscaling_, output);
  }

  // repeated string desired_locations = 10;
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_locations(i).data(), static_cast<int>(this->desired_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->desired_locations(i), output);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->desired_master_authorized_networks_config_, output);
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->desired_master_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ClusterUpdate)
}

::google::protobuf::uint8* ClusterUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ClusterUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_version().data(), static_cast<int>(this->desired_node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desired_node_version(), target);
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_monitoring_service().data(), static_cast<int>(this->desired_monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desired_monitoring_service(), target);
  }

  // .google.container.v1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->desired_addons_config_, deterministic, target);
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_node_pool_id().data(), static_cast<int>(this->desired_node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->desired_node_pool_id(), target);
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_image_type().data(), static_cast<int>(this->desired_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->desired_image_type(), target);
  }

  // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->desired_node_pool_autoscaling_, deterministic, target);
  }

  // repeated string desired_locations = 10;
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_locations(i).data(), static_cast<int>(this->desired_locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->desired_locations(i), target);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->desired_master_authorized_networks_config_, deterministic, target);
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desired_master_version().data(), static_cast<int>(this->desired_master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ClusterUpdate.desired_master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->desired_master_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ClusterUpdate)
  return target;
}

size_t ClusterUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ClusterUpdate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string desired_locations = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->desired_locations_size());
  for (int i = 0, n = this->desired_locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->desired_locations(i));
  }

  // string desired_node_version = 4;
  if (this->desired_node_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_node_version());
  }

  // string desired_monitoring_service = 5;
  if (this->desired_monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_monitoring_service());
  }

  // string desired_node_pool_id = 7;
  if (this->desired_node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_node_pool_id());
  }

  // string desired_image_type = 8;
  if (this->desired_image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_image_type());
  }

  // string desired_master_version = 100;
  if (this->desired_master_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desired_master_version());
  }

  // .google.container.v1.AddonsConfig desired_addons_config = 6;
  if (this->has_desired_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->desired_addons_config_);
  }

  // .google.container.v1.NodePoolAutoscaling desired_node_pool_autoscaling = 9;
  if (this->has_desired_node_pool_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->desired_node_pool_autoscaling_);
  }

  // .google.container.v1.MasterAuthorizedNetworksConfig desired_master_authorized_networks_config = 12;
  if (this->has_desired_master_authorized_networks_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->desired_master_authorized_networks_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ClusterUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ClusterUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ClusterUpdate)
    MergeFrom(*source);
  }
}

void ClusterUpdate::MergeFrom(const ClusterUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ClusterUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  desired_locations_.MergeFrom(from.desired_locations_);
  if (from.desired_node_version().size() > 0) {

    desired_node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_version_);
  }
  if (from.desired_monitoring_service().size() > 0) {

    desired_monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_monitoring_service_);
  }
  if (from.desired_node_pool_id().size() > 0) {

    desired_node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_node_pool_id_);
  }
  if (from.desired_image_type().size() > 0) {

    desired_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_image_type_);
  }
  if (from.desired_master_version().size() > 0) {

    desired_master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_master_version_);
  }
  if (from.has_desired_addons_config()) {
    mutable_desired_addons_config()->::google::container::v1::AddonsConfig::MergeFrom(from.desired_addons_config());
  }
  if (from.has_desired_node_pool_autoscaling()) {
    mutable_desired_node_pool_autoscaling()->::google::container::v1::NodePoolAutoscaling::MergeFrom(from.desired_node_pool_autoscaling());
  }
  if (from.has_desired_master_authorized_networks_config()) {
    mutable_desired_master_authorized_networks_config()->::google::container::v1::MasterAuthorizedNetworksConfig::MergeFrom(from.desired_master_authorized_networks_config());
  }
}

void ClusterUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ClusterUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterUpdate::CopyFrom(const ClusterUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ClusterUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterUpdate::IsInitialized() const {
  return true;
}

void ClusterUpdate::Swap(ClusterUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterUpdate::InternalSwap(ClusterUpdate* other) {
  using std::swap;
  desired_locations_.InternalSwap(&other->desired_locations_);
  desired_node_version_.Swap(&other->desired_node_version_);
  desired_monitoring_service_.Swap(&other->desired_monitoring_service_);
  desired_node_pool_id_.Swap(&other->desired_node_pool_id_);
  desired_image_type_.Swap(&other->desired_image_type_);
  desired_master_version_.Swap(&other->desired_master_version_);
  swap(desired_addons_config_, other->desired_addons_config_);
  swap(desired_node_pool_autoscaling_, other->desired_node_pool_autoscaling_);
  swap(desired_master_authorized_networks_config_, other->desired_master_authorized_networks_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterUpdate::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Operation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operation::kNameFieldNumber;
const int Operation::kZoneFieldNumber;
const int Operation::kOperationTypeFieldNumber;
const int Operation::kStatusFieldNumber;
const int Operation::kDetailFieldNumber;
const int Operation::kStatusMessageFieldNumber;
const int Operation::kSelfLinkFieldNumber;
const int Operation::kTargetLinkFieldNumber;
const int Operation::kStartTimeFieldNumber;
const int Operation::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operation::Operation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsOperation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.Operation)
}
Operation::Operation(const Operation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  target_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_link().size() > 0) {
    target_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_link_);
  }
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_time().size() > 0) {
    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  ::memcpy(&operation_type_, &from.operation_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.Operation)
}

void Operation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&operation_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
  _cached_size_ = 0;
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:google.container.v1.Operation)
  SharedDtor();
}

void Operation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Operation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Operation::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Operation& Operation::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsOperation();
  return *internal_default_instance();
}

Operation* Operation::New(::google::protobuf::Arena* arena) const {
  Operation* n = new Operation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&operation_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&operation_type_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Operation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.Operation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Operation.Type operation_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::google::container::v1::Operation_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Operation.Status status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::Operation_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_link = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_link().data(), static_cast<int>(this->target_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.target_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), static_cast<int>(this->detail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string end_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_time().data(), static_cast<int>(this->end_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.Operation.end_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.Operation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.Operation)
  return false;
#undef DO_
}

void Operation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // .google.container.v1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->operation_type(), output);
  }

  // .google.container.v1.Operation.Status status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->status_message(), output);
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->self_link(), output);
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_link().data(), static_cast<int>(this->target_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.target_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->target_link(), output);
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->detail(), output);
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->start_time(), output);
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.end_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.Operation)
}

::google::protobuf::uint8* Operation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // .google.container.v1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->operation_type(), target);
  }

  // .google.container.v1.Operation.Status status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->status_message(), target);
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->self_link(), target);
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_link().data(), static_cast<int>(this->target_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.target_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->target_link(), target);
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->detail(), target);
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->start_time(), target);
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.Operation.end_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.Operation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string status_message = 5;
  if (this->status_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // string self_link = 6;
  if (this->self_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string target_link = 7;
  if (this->target_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_link());
  }

  // string detail = 8;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  // string start_time = 10;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string end_time = 11;
  if (this->end_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_time());
  }

  // .google.container.v1.Operation.Type operation_type = 3;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  // .google.container.v1.Operation.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Operation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.Operation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.target_link().size() > 0) {

    target_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_link_);
  }
  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.end_time().size() > 0) {

    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Operation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::Swap(Operation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operation::InternalSwap(Operation* other) {
  using std::swap;
  name_.Swap(&other->name_);
  zone_.Swap(&other->zone_);
  status_message_.Swap(&other->status_message_);
  self_link_.Swap(&other->self_link_);
  target_link_.Swap(&other->target_link_);
  detail_.Swap(&other->detail_);
  start_time_.Swap(&other->start_time_);
  end_time_.Swap(&other->end_time_);
  swap(operation_type_, other->operation_type_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateClusterRequest::InitAsDefaultInstance() {
  ::google::container::v1::_CreateClusterRequest_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::google::container::v1::Cluster*>(
      ::google::container::v1::Cluster::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterRequest::kProjectIdFieldNumber;
const int CreateClusterRequest::kZoneFieldNumber;
const int CreateClusterRequest::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterRequest::CreateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCreateClusterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CreateClusterRequest)
}
CreateClusterRequest::CreateClusterRequest(const CreateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::google::container::v1::Cluster(*from.cluster_);
  } else {
    cluster_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CreateClusterRequest)
}

void CreateClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ = NULL;
  _cached_size_ = 0;
}

CreateClusterRequest::~CreateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CreateClusterRequest)
  SharedDtor();
}

void CreateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cluster_;
}

void CreateClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateClusterRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterRequest& CreateClusterRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCreateClusterRequest();
  return *internal_default_instance();
}

CreateClusterRequest* CreateClusterRequest::New(::google::protobuf::Arena* arena) const {
  CreateClusterRequest* n = new CreateClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) {
    delete cluster_;
  }
  cluster_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CreateClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.Cluster cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CreateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CreateClusterRequest)
  return false;
#undef DO_
}

void CreateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // .google.container.v1.Cluster cluster = 3;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cluster_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CreateClusterRequest)
}

::google::protobuf::uint8* CreateClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // .google.container.v1.Cluster cluster = 3;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->cluster_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CreateClusterRequest)
  return target;
}

size_t CreateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CreateClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // .google.container.v1.Cluster cluster = 3;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cluster_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CreateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CreateClusterRequest)
    MergeFrom(*source);
  }
}

void CreateClusterRequest::MergeFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::google::container::v1::Cluster::MergeFrom(from.cluster());
  }
}

void CreateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterRequest::CopyFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterRequest::IsInitialized() const {
  return true;
}

void CreateClusterRequest::Swap(CreateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterRequest::InternalSwap(CreateClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  swap(cluster_, other->cluster_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateClusterRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterRequest::kProjectIdFieldNumber;
const int GetClusterRequest::kZoneFieldNumber;
const int GetClusterRequest::kClusterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterRequest::GetClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetClusterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetClusterRequest)
}
GetClusterRequest::GetClusterRequest(const GetClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetClusterRequest)
}

void GetClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetClusterRequest::~GetClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetClusterRequest)
  SharedDtor();
}

void GetClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterRequest& GetClusterRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetClusterRequest();
  return *internal_default_instance();
}

GetClusterRequest* GetClusterRequest::New(::google::protobuf::Arena* arena) const {
  GetClusterRequest* n = new GetClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetClusterRequest)
  return false;
#undef DO_
}

void GetClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetClusterRequest)
}

::google::protobuf::uint8* GetClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetClusterRequest)
  return target;
}

size_t GetClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetClusterRequest)
    MergeFrom(*source);
  }
}

void GetClusterRequest::MergeFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
}

void GetClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterRequest::CopyFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterRequest::IsInitialized() const {
  return true;
}

void GetClusterRequest::Swap(GetClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterRequest::InternalSwap(GetClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetClusterRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateClusterRequest::InitAsDefaultInstance() {
  ::google::container::v1::_UpdateClusterRequest_default_instance_._instance.get_mutable()->update_ = const_cast< ::google::container::v1::ClusterUpdate*>(
      ::google::container::v1::ClusterUpdate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterRequest::kProjectIdFieldNumber;
const int UpdateClusterRequest::kZoneFieldNumber;
const int UpdateClusterRequest::kClusterIdFieldNumber;
const int UpdateClusterRequest::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterRequest::UpdateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsUpdateClusterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UpdateClusterRequest)
}
UpdateClusterRequest::UpdateClusterRequest(const UpdateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_update()) {
    update_ = new ::google::container::v1::ClusterUpdate(*from.update_);
  } else {
    update_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UpdateClusterRequest)
}

void UpdateClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_ = NULL;
  _cached_size_ = 0;
}

UpdateClusterRequest::~UpdateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.UpdateClusterRequest)
  SharedDtor();
}

void UpdateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_;
}

void UpdateClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateClusterRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterRequest& UpdateClusterRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsUpdateClusterRequest();
  return *internal_default_instance();
}

UpdateClusterRequest* UpdateClusterRequest::New(::google::protobuf::Arena* arena) const {
  UpdateClusterRequest* n = new UpdateClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && update_ != NULL) {
    delete update_;
  }
  update_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UpdateClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.ClusterUpdate update = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UpdateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UpdateClusterRequest)
  return false;
#undef DO_
}

void UpdateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.ClusterUpdate update = 4;
  if (this->has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->update_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UpdateClusterRequest)
}

::google::protobuf::uint8* UpdateClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.ClusterUpdate update = 4;
  if (this->has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->update_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UpdateClusterRequest)
  return target;
}

size_t UpdateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UpdateClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.container.v1.ClusterUpdate update = 4;
  if (this->has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UpdateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UpdateClusterRequest)
    MergeFrom(*source);
  }
}

void UpdateClusterRequest::MergeFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_update()) {
    mutable_update()->::google::container::v1::ClusterUpdate::MergeFrom(from.update());
  }
}

void UpdateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterRequest::CopyFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterRequest::IsInitialized() const {
  return true;
}

void UpdateClusterRequest::Swap(UpdateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterRequest::InternalSwap(UpdateClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(update_, other->update_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateClusterRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateNodePoolRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNodePoolRequest::kProjectIdFieldNumber;
const int UpdateNodePoolRequest::kZoneFieldNumber;
const int UpdateNodePoolRequest::kClusterIdFieldNumber;
const int UpdateNodePoolRequest::kNodePoolIdFieldNumber;
const int UpdateNodePoolRequest::kNodeVersionFieldNumber;
const int UpdateNodePoolRequest::kImageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNodePoolRequest::UpdateNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsUpdateNodePoolRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UpdateNodePoolRequest)
}
UpdateNodePoolRequest::UpdateNodePoolRequest(const UpdateNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_version().size() > 0) {
    node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_version_);
  }
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_type().size() > 0) {
    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UpdateNodePoolRequest)
}

void UpdateNodePoolRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateNodePoolRequest::~UpdateNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.UpdateNodePoolRequest)
  SharedDtor();
}

void UpdateNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateNodePoolRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateNodePoolRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateNodePoolRequest& UpdateNodePoolRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsUpdateNodePoolRequest();
  return *internal_default_instance();
}

UpdateNodePoolRequest* UpdateNodePoolRequest::New(::google::protobuf::Arena* arena) const {
  UpdateNodePoolRequest* n = new UpdateNodePoolRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UpdateNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UpdateNodePoolRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_version().data(), static_cast<int>(this->node_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.node_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_type().data(), static_cast<int>(this->image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateNodePoolRequest.image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UpdateNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UpdateNodePoolRequest)
  return false;
#undef DO_
}

void UpdateNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // string node_version = 5;
  if (this->node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_version().data(), static_cast<int>(this->node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->node_version(), output);
  }

  // string image_type = 6;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->image_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UpdateNodePoolRequest)
}

::google::protobuf::uint8* UpdateNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UpdateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // string node_version = 5;
  if (this->node_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_version().data(), static_cast<int>(this->node_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.node_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->node_version(), target);
  }

  // string image_type = 6;
  if (this->image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_type().data(), static_cast<int>(this->image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateNodePoolRequest.image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->image_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UpdateNodePoolRequest)
  return target;
}

size_t UpdateNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UpdateNodePoolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // string node_version = 5;
  if (this->node_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_version());
  }

  // string image_type = 6;
  if (this->image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UpdateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNodePoolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateNodePoolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UpdateNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UpdateNodePoolRequest)
    MergeFrom(*source);
  }
}

void UpdateNodePoolRequest::MergeFrom(const UpdateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UpdateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.node_version().size() > 0) {

    node_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_version_);
  }
  if (from.image_type().size() > 0) {

    image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_type_);
  }
}

void UpdateNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UpdateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNodePoolRequest::CopyFrom(const UpdateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UpdateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodePoolRequest::IsInitialized() const {
  return true;
}

void UpdateNodePoolRequest::Swap(UpdateNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNodePoolRequest::InternalSwap(UpdateNodePoolRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  node_pool_id_.Swap(&other->node_pool_id_);
  node_version_.Swap(&other->node_version_);
  image_type_.Swap(&other->image_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateNodePoolRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolAutoscalingRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetNodePoolAutoscalingRequest_default_instance_._instance.get_mutable()->autoscaling_ = const_cast< ::google::container::v1::NodePoolAutoscaling*>(
      ::google::container::v1::NodePoolAutoscaling::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolAutoscalingRequest::kProjectIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kZoneFieldNumber;
const int SetNodePoolAutoscalingRequest::kClusterIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kNodePoolIdFieldNumber;
const int SetNodePoolAutoscalingRequest::kAutoscalingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolAutoscalingRequest::SetNodePoolAutoscalingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNodePoolAutoscalingRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNodePoolAutoscalingRequest)
}
SetNodePoolAutoscalingRequest::SetNodePoolAutoscalingRequest(const SetNodePoolAutoscalingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.has_autoscaling()) {
    autoscaling_ = new ::google::container::v1::NodePoolAutoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNodePoolAutoscalingRequest)
}

void SetNodePoolAutoscalingRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autoscaling_ = NULL;
  _cached_size_ = 0;
}

SetNodePoolAutoscalingRequest::~SetNodePoolAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNodePoolAutoscalingRequest)
  SharedDtor();
}

void SetNodePoolAutoscalingRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void SetNodePoolAutoscalingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetNodePoolAutoscalingRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetNodePoolAutoscalingRequest& SetNodePoolAutoscalingRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNodePoolAutoscalingRequest();
  return *internal_default_instance();
}

SetNodePoolAutoscalingRequest* SetNodePoolAutoscalingRequest::New(::google::protobuf::Arena* arena) const {
  SetNodePoolAutoscalingRequest* n = new SetNodePoolAutoscalingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetNodePoolAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && autoscaling_ != NULL) {
    delete autoscaling_;
  }
  autoscaling_ = NULL;
  _internal_metadata_.Clear();
}

bool SetNodePoolAutoscalingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNodePoolAutoscalingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePoolAutoscaling autoscaling = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNodePoolAutoscalingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNodePoolAutoscalingRequest)
  return false;
#undef DO_
}

void SetNodePoolAutoscalingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 5;
  if (this->has_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->autoscaling_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNodePoolAutoscalingRequest)
}

::google::protobuf::uint8* SetNodePoolAutoscalingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNodePoolAutoscalingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 5;
  if (this->has_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->autoscaling_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNodePoolAutoscalingRequest)
  return target;
}

size_t SetNodePoolAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNodePoolAutoscalingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 5;
  if (this->has_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->autoscaling_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetNodePoolAutoscalingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolAutoscalingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetNodePoolAutoscalingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNodePoolAutoscalingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNodePoolAutoscalingRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolAutoscalingRequest::MergeFrom(const SetNodePoolAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.has_autoscaling()) {
    mutable_autoscaling()->::google::container::v1::NodePoolAutoscaling::MergeFrom(from.autoscaling());
  }
}

void SetNodePoolAutoscalingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolAutoscalingRequest::CopyFrom(const SetNodePoolAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNodePoolAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolAutoscalingRequest::IsInitialized() const {
  return true;
}

void SetNodePoolAutoscalingRequest::Swap(SetNodePoolAutoscalingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolAutoscalingRequest::InternalSwap(SetNodePoolAutoscalingRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  node_pool_id_.Swap(&other->node_pool_id_);
  swap(autoscaling_, other->autoscaling_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetNodePoolAutoscalingRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetLoggingServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLoggingServiceRequest::kProjectIdFieldNumber;
const int SetLoggingServiceRequest::kZoneFieldNumber;
const int SetLoggingServiceRequest::kClusterIdFieldNumber;
const int SetLoggingServiceRequest::kLoggingServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLoggingServiceRequest::SetLoggingServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLoggingServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLoggingServiceRequest)
}
SetLoggingServiceRequest::SetLoggingServiceRequest(const SetLoggingServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logging_service().size() > 0) {
    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLoggingServiceRequest)
}

void SetLoggingServiceRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetLoggingServiceRequest::~SetLoggingServiceRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLoggingServiceRequest)
  SharedDtor();
}

void SetLoggingServiceRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLoggingServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLoggingServiceRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetLoggingServiceRequest& SetLoggingServiceRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLoggingServiceRequest();
  return *internal_default_instance();
}

SetLoggingServiceRequest* SetLoggingServiceRequest::New(::google::protobuf::Arena* arena) const {
  SetLoggingServiceRequest* n = new SetLoggingServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLoggingServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logging_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetLoggingServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLoggingServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logging_service = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logging_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logging_service().data(), static_cast<int>(this->logging_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLoggingServiceRequest.logging_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLoggingServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLoggingServiceRequest)
  return false;
#undef DO_
}

void SetLoggingServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string logging_service = 4;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.logging_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->logging_service(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLoggingServiceRequest)
}

::google::protobuf::uint8* SetLoggingServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLoggingServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string logging_service = 4;
  if (this->logging_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logging_service().data(), static_cast<int>(this->logging_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLoggingServiceRequest.logging_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->logging_service(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLoggingServiceRequest)
  return target;
}

size_t SetLoggingServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLoggingServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string logging_service = 4;
  if (this->logging_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logging_service());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLoggingServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLoggingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLoggingServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLoggingServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLoggingServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLoggingServiceRequest)
    MergeFrom(*source);
  }
}

void SetLoggingServiceRequest::MergeFrom(const SetLoggingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLoggingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.logging_service().size() > 0) {

    logging_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logging_service_);
  }
}

void SetLoggingServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLoggingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLoggingServiceRequest::CopyFrom(const SetLoggingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLoggingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLoggingServiceRequest::IsInitialized() const {
  return true;
}

void SetLoggingServiceRequest::Swap(SetLoggingServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLoggingServiceRequest::InternalSwap(SetLoggingServiceRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  logging_service_.Swap(&other->logging_service_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLoggingServiceRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetMonitoringServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMonitoringServiceRequest::kProjectIdFieldNumber;
const int SetMonitoringServiceRequest::kZoneFieldNumber;
const int SetMonitoringServiceRequest::kClusterIdFieldNumber;
const int SetMonitoringServiceRequest::kMonitoringServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMonitoringServiceRequest::SetMonitoringServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetMonitoringServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetMonitoringServiceRequest)
}
SetMonitoringServiceRequest::SetMonitoringServiceRequest(const SetMonitoringServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.monitoring_service().size() > 0) {
    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetMonitoringServiceRequest)
}

void SetMonitoringServiceRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetMonitoringServiceRequest::~SetMonitoringServiceRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetMonitoringServiceRequest)
  SharedDtor();
}

void SetMonitoringServiceRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetMonitoringServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMonitoringServiceRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMonitoringServiceRequest& SetMonitoringServiceRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetMonitoringServiceRequest();
  return *internal_default_instance();
}

SetMonitoringServiceRequest* SetMonitoringServiceRequest::New(::google::protobuf::Arena* arena) const {
  SetMonitoringServiceRequest* n = new SetMonitoringServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMonitoringServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  monitoring_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetMonitoringServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetMonitoringServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string monitoring_service = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitoring_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMonitoringServiceRequest.monitoring_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetMonitoringServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetMonitoringServiceRequest)
  return false;
#undef DO_
}

void SetMonitoringServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string monitoring_service = 4;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.monitoring_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->monitoring_service(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetMonitoringServiceRequest)
}

::google::protobuf::uint8* SetMonitoringServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetMonitoringServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string monitoring_service = 4;
  if (this->monitoring_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->monitoring_service().data(), static_cast<int>(this->monitoring_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMonitoringServiceRequest.monitoring_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->monitoring_service(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetMonitoringServiceRequest)
  return target;
}

size_t SetMonitoringServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetMonitoringServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string monitoring_service = 4;
  if (this->monitoring_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitoring_service());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMonitoringServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetMonitoringServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMonitoringServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMonitoringServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetMonitoringServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetMonitoringServiceRequest)
    MergeFrom(*source);
  }
}

void SetMonitoringServiceRequest::MergeFrom(const SetMonitoringServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetMonitoringServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.monitoring_service().size() > 0) {

    monitoring_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitoring_service_);
  }
}

void SetMonitoringServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetMonitoringServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMonitoringServiceRequest::CopyFrom(const SetMonitoringServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetMonitoringServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMonitoringServiceRequest::IsInitialized() const {
  return true;
}

void SetMonitoringServiceRequest::Swap(SetMonitoringServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMonitoringServiceRequest::InternalSwap(SetMonitoringServiceRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  monitoring_service_.Swap(&other->monitoring_service_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMonitoringServiceRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetAddonsConfigRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetAddonsConfigRequest_default_instance_._instance.get_mutable()->addons_config_ = const_cast< ::google::container::v1::AddonsConfig*>(
      ::google::container::v1::AddonsConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAddonsConfigRequest::kProjectIdFieldNumber;
const int SetAddonsConfigRequest::kZoneFieldNumber;
const int SetAddonsConfigRequest::kClusterIdFieldNumber;
const int SetAddonsConfigRequest::kAddonsConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAddonsConfigRequest::SetAddonsConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetAddonsConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetAddonsConfigRequest)
}
SetAddonsConfigRequest::SetAddonsConfigRequest(const SetAddonsConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_addons_config()) {
    addons_config_ = new ::google::container::v1::AddonsConfig(*from.addons_config_);
  } else {
    addons_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetAddonsConfigRequest)
}

void SetAddonsConfigRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addons_config_ = NULL;
  _cached_size_ = 0;
}

SetAddonsConfigRequest::~SetAddonsConfigRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetAddonsConfigRequest)
  SharedDtor();
}

void SetAddonsConfigRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete addons_config_;
}

void SetAddonsConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAddonsConfigRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetAddonsConfigRequest& SetAddonsConfigRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetAddonsConfigRequest();
  return *internal_default_instance();
}

SetAddonsConfigRequest* SetAddonsConfigRequest::New(::google::protobuf::Arena* arena) const {
  SetAddonsConfigRequest* n = new SetAddonsConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetAddonsConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && addons_config_ != NULL) {
    delete addons_config_;
  }
  addons_config_ = NULL;
  _internal_metadata_.Clear();
}

bool SetAddonsConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetAddonsConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetAddonsConfigRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetAddonsConfigRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetAddonsConfigRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AddonsConfig addons_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addons_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetAddonsConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetAddonsConfigRequest)
  return false;
#undef DO_
}

void SetAddonsConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.AddonsConfig addons_config = 4;
  if (this->has_addons_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->addons_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetAddonsConfigRequest)
}

::google::protobuf::uint8* SetAddonsConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetAddonsConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetAddonsConfigRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.AddonsConfig addons_config = 4;
  if (this->has_addons_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->addons_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetAddonsConfigRequest)
  return target;
}

size_t SetAddonsConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetAddonsConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.container.v1.AddonsConfig addons_config = 4;
  if (this->has_addons_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->addons_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetAddonsConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetAddonsConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAddonsConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetAddonsConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetAddonsConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetAddonsConfigRequest)
    MergeFrom(*source);
  }
}

void SetAddonsConfigRequest::MergeFrom(const SetAddonsConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetAddonsConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_addons_config()) {
    mutable_addons_config()->::google::container::v1::AddonsConfig::MergeFrom(from.addons_config());
  }
}

void SetAddonsConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetAddonsConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAddonsConfigRequest::CopyFrom(const SetAddonsConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetAddonsConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAddonsConfigRequest::IsInitialized() const {
  return true;
}

void SetAddonsConfigRequest::Swap(SetAddonsConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAddonsConfigRequest::InternalSwap(SetAddonsConfigRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(addons_config_, other->addons_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetAddonsConfigRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetLocationsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLocationsRequest::kProjectIdFieldNumber;
const int SetLocationsRequest::kZoneFieldNumber;
const int SetLocationsRequest::kClusterIdFieldNumber;
const int SetLocationsRequest::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLocationsRequest::SetLocationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLocationsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLocationsRequest)
}
SetLocationsRequest::SetLocationsRequest(const SetLocationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locations_(from.locations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLocationsRequest)
}

void SetLocationsRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetLocationsRequest::~SetLocationsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLocationsRequest)
  SharedDtor();
}

void SetLocationsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLocationsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLocationsRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetLocationsRequest& SetLocationsRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLocationsRequest();
  return *internal_default_instance();
}

SetLocationsRequest* SetLocationsRequest::New(::google::protobuf::Arena* arena) const {
  SetLocationsRequest* n = new SetLocationsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetLocationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLocationsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            static_cast<int>(this->locations(this->locations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLocationsRequest.locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLocationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLocationsRequest)
  return false;
#undef DO_
}

void SetLocationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // repeated string locations = 4;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->locations(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLocationsRequest)
}

::google::protobuf::uint8* SetLocationsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLocationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // repeated string locations = 4;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), static_cast<int>(this->locations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLocationsRequest.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->locations(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLocationsRequest)
  return target;
}

size_t SetLocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLocationsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string locations = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locations_size());
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLocationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLocationsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLocationsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLocationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLocationsRequest)
    MergeFrom(*source);
  }
}

void SetLocationsRequest::MergeFrom(const SetLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
}

void SetLocationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLocationsRequest::CopyFrom(const SetLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLocationsRequest::IsInitialized() const {
  return true;
}

void SetLocationsRequest::Swap(SetLocationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLocationsRequest::InternalSwap(SetLocationsRequest* other) {
  using std::swap;
  locations_.InternalSwap(&other->locations_);
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLocationsRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateMasterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateMasterRequest::kProjectIdFieldNumber;
const int UpdateMasterRequest::kZoneFieldNumber;
const int UpdateMasterRequest::kClusterIdFieldNumber;
const int UpdateMasterRequest::kMasterVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateMasterRequest::UpdateMasterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsUpdateMasterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.UpdateMasterRequest)
}
UpdateMasterRequest::UpdateMasterRequest(const UpdateMasterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.master_version().size() > 0) {
    master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_version_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.UpdateMasterRequest)
}

void UpdateMasterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateMasterRequest::~UpdateMasterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.UpdateMasterRequest)
  SharedDtor();
}

void UpdateMasterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateMasterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateMasterRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateMasterRequest& UpdateMasterRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsUpdateMasterRequest();
  return *internal_default_instance();
}

UpdateMasterRequest* UpdateMasterRequest::New(::google::protobuf::Arena* arena) const {
  UpdateMasterRequest* n = new UpdateMasterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateMasterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UpdateMasterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.UpdateMasterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string master_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_version().data(), static_cast<int>(this->master_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.UpdateMasterRequest.master_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.UpdateMasterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.UpdateMasterRequest)
  return false;
#undef DO_
}

void UpdateMasterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string master_version = 4;
  if (this->master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_version().data(), static_cast<int>(this->master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.master_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->master_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.UpdateMasterRequest)
}

::google::protobuf::uint8* UpdateMasterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.UpdateMasterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string master_version = 4;
  if (this->master_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_version().data(), static_cast<int>(this->master_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.UpdateMasterRequest.master_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->master_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.UpdateMasterRequest)
  return target;
}

size_t UpdateMasterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.UpdateMasterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string master_version = 4;
  if (this->master_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateMasterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.UpdateMasterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMasterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateMasterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.UpdateMasterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.UpdateMasterRequest)
    MergeFrom(*source);
  }
}

void UpdateMasterRequest::MergeFrom(const UpdateMasterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.UpdateMasterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.master_version().size() > 0) {

    master_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_version_);
  }
}

void UpdateMasterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.UpdateMasterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMasterRequest::CopyFrom(const UpdateMasterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.UpdateMasterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMasterRequest::IsInitialized() const {
  return true;
}

void UpdateMasterRequest::Swap(UpdateMasterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateMasterRequest::InternalSwap(UpdateMasterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  master_version_.Swap(&other->master_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateMasterRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetMasterAuthRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetMasterAuthRequest_default_instance_._instance.get_mutable()->update_ = const_cast< ::google::container::v1::MasterAuth*>(
      ::google::container::v1::MasterAuth::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMasterAuthRequest::kProjectIdFieldNumber;
const int SetMasterAuthRequest::kZoneFieldNumber;
const int SetMasterAuthRequest::kClusterIdFieldNumber;
const int SetMasterAuthRequest::kActionFieldNumber;
const int SetMasterAuthRequest::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMasterAuthRequest::SetMasterAuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetMasterAuthRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetMasterAuthRequest)
}
SetMasterAuthRequest::SetMasterAuthRequest(const SetMasterAuthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_update()) {
    update_ = new ::google::container::v1::MasterAuth(*from.update_);
  } else {
    update_ = NULL;
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetMasterAuthRequest)
}

void SetMasterAuthRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&update_)) + sizeof(action_));
  _cached_size_ = 0;
}

SetMasterAuthRequest::~SetMasterAuthRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetMasterAuthRequest)
  SharedDtor();
}

void SetMasterAuthRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_;
}

void SetMasterAuthRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMasterAuthRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMasterAuthRequest& SetMasterAuthRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetMasterAuthRequest();
  return *internal_default_instance();
}

SetMasterAuthRequest* SetMasterAuthRequest::New(::google::protobuf::Arena* arena) const {
  SetMasterAuthRequest* n = new SetMasterAuthRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMasterAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && update_ != NULL) {
    delete update_;
  }
  update_ = NULL;
  action_ = 0;
  _internal_metadata_.Clear();
}

bool SetMasterAuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetMasterAuthRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMasterAuthRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMasterAuthRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMasterAuthRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.SetMasterAuthRequest.Action action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::google::container::v1::SetMasterAuthRequest_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MasterAuth update = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetMasterAuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetMasterAuthRequest)
  return false;
#undef DO_
}

void SetMasterAuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.SetMasterAuthRequest.Action action = 4;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->action(), output);
  }

  // .google.container.v1.MasterAuth update = 5;
  if (this->has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->update_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetMasterAuthRequest)
}

::google::protobuf::uint8* SetMasterAuthRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetMasterAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMasterAuthRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.SetMasterAuthRequest.Action action = 4;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->action(), target);
  }

  // .google.container.v1.MasterAuth update = 5;
  if (this->has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->update_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetMasterAuthRequest)
  return target;
}

size_t SetMasterAuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetMasterAuthRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.container.v1.MasterAuth update = 5;
  if (this->has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_);
  }

  // .google.container.v1.SetMasterAuthRequest.Action action = 4;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMasterAuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetMasterAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMasterAuthRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMasterAuthRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetMasterAuthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetMasterAuthRequest)
    MergeFrom(*source);
  }
}

void SetMasterAuthRequest::MergeFrom(const SetMasterAuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetMasterAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_update()) {
    mutable_update()->::google::container::v1::MasterAuth::MergeFrom(from.update());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void SetMasterAuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetMasterAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMasterAuthRequest::CopyFrom(const SetMasterAuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetMasterAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMasterAuthRequest::IsInitialized() const {
  return true;
}

void SetMasterAuthRequest::Swap(SetMasterAuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMasterAuthRequest::InternalSwap(SetMasterAuthRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(update_, other->update_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMasterAuthRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRequest::kProjectIdFieldNumber;
const int DeleteClusterRequest::kZoneFieldNumber;
const int DeleteClusterRequest::kClusterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRequest::DeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsDeleteClusterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DeleteClusterRequest)
}
DeleteClusterRequest::DeleteClusterRequest(const DeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DeleteClusterRequest)
}

void DeleteClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteClusterRequest::~DeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.DeleteClusterRequest)
  SharedDtor();
}

void DeleteClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteClusterRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteClusterRequest& DeleteClusterRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsDeleteClusterRequest();
  return *internal_default_instance();
}

DeleteClusterRequest* DeleteClusterRequest::New(::google::protobuf::Arena* arena) const {
  DeleteClusterRequest* n = new DeleteClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DeleteClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteClusterRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DeleteClusterRequest)
  return false;
#undef DO_
}

void DeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DeleteClusterRequest)
}

::google::protobuf::uint8* DeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DeleteClusterRequest)
  return target;
}

size_t DeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DeleteClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DeleteClusterRequest)
    MergeFrom(*source);
  }
}

void DeleteClusterRequest::MergeFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
}

void DeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRequest::CopyFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRequest::IsInitialized() const {
  return true;
}

void DeleteClusterRequest::Swap(DeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRequest::InternalSwap(DeleteClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteClusterRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListClustersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersRequest::kProjectIdFieldNumber;
const int ListClustersRequest::kZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersRequest::ListClustersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListClustersRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListClustersRequest)
}
ListClustersRequest::ListClustersRequest(const ListClustersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListClustersRequest)
}

void ListClustersRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListClustersRequest::~ListClustersRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListClustersRequest)
  SharedDtor();
}

void ListClustersRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClustersRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersRequest& ListClustersRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListClustersRequest();
  return *internal_default_instance();
}

ListClustersRequest* ListClustersRequest::New(::google::protobuf::Arena* arena) const {
  ListClustersRequest* n = new ListClustersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClustersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListClustersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListClustersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListClustersRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListClustersRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListClustersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListClustersRequest)
  return false;
#undef DO_
}

void ListClustersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListClustersRequest)
}

::google::protobuf::uint8* ListClustersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListClustersRequest)
  return target;
}

size_t ListClustersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListClustersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClustersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListClustersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListClustersRequest)
    MergeFrom(*source);
  }
}

void ListClustersRequest::MergeFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
}

void ListClustersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersRequest::CopyFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersRequest::IsInitialized() const {
  return true;
}

void ListClustersRequest::Swap(ListClustersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersRequest::InternalSwap(ListClustersRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClustersRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListClustersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersResponse::kClustersFieldNumber;
const int ListClustersResponse::kMissingZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersResponse::ListClustersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListClustersResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListClustersResponse)
}
ListClustersResponse::ListClustersResponse(const ListClustersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      missing_zones_(from.missing_zones_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListClustersResponse)
}

void ListClustersResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListClustersResponse::~ListClustersResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListClustersResponse)
  SharedDtor();
}

void ListClustersResponse::SharedDtor() {
}

void ListClustersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClustersResponse::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersResponse& ListClustersResponse::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListClustersResponse();
  return *internal_default_instance();
}

ListClustersResponse* ListClustersResponse::New(::google::protobuf::Arena* arena) const {
  ListClustersResponse* n = new ListClustersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClustersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  missing_zones_.Clear();
  _internal_metadata_.Clear();
}

bool ListClustersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListClustersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.Cluster clusters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_missing_zones()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->missing_zones(this->missing_zones_size() - 1).data(),
            static_cast<int>(this->missing_zones(this->missing_zones_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListClustersResponse.missing_zones"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListClustersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListClustersResponse)
  return false;
#undef DO_
}

void ListClustersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->clusters(static_cast<int>(i)), output);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersResponse.missing_zones");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->missing_zones(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListClustersResponse)
}

::google::protobuf::uint8* ListClustersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->clusters(static_cast<int>(i)), deterministic, target);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListClustersResponse.missing_zones");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->missing_zones(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListClustersResponse)
  return target;
}

size_t ListClustersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListClustersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.container.v1.Cluster clusters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->clusters(static_cast<int>(i)));
    }
  }

  // repeated string missing_zones = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->missing_zones_size());
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->missing_zones(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClustersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListClustersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListClustersResponse)
    MergeFrom(*source);
  }
}

void ListClustersResponse::MergeFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  missing_zones_.MergeFrom(from.missing_zones_);
}

void ListClustersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersResponse::CopyFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersResponse::IsInitialized() const {
  return true;
}

void ListClustersResponse::Swap(ListClustersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersResponse::InternalSwap(ListClustersResponse* other) {
  using std::swap;
  clusters_.InternalSwap(&other->clusters_);
  missing_zones_.InternalSwap(&other->missing_zones_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClustersResponse::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOperationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOperationRequest::kProjectIdFieldNumber;
const int GetOperationRequest::kZoneFieldNumber;
const int GetOperationRequest::kOperationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOperationRequest::GetOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetOperationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetOperationRequest)
}
GetOperationRequest::GetOperationRequest(const GetOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetOperationRequest)
}

void GetOperationRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOperationRequest::~GetOperationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetOperationRequest)
  SharedDtor();
}

void GetOperationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOperationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOperationRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOperationRequest& GetOperationRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetOperationRequest();
  return *internal_default_instance();
}

GetOperationRequest* GetOperationRequest::New(::google::protobuf::Arena* arena) const {
  GetOperationRequest* n = new GetOperationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetOperationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOperationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOperationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetOperationRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetOperationRequest)
  return false;
#undef DO_
}

void GetOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operation_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetOperationRequest)
}

::google::protobuf::uint8* GetOperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetOperationRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operation_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetOperationRequest)
  return target;
}

size_t GetOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetOperationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOperationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetOperationRequest)
    MergeFrom(*source);
  }
}

void GetOperationRequest::MergeFrom(const GetOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
}

void GetOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOperationRequest::CopyFrom(const GetOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOperationRequest::IsInitialized() const {
  return true;
}

void GetOperationRequest::Swap(GetOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOperationRequest::InternalSwap(GetOperationRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  operation_id_.Swap(&other->operation_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOperationRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListOperationsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOperationsRequest::kProjectIdFieldNumber;
const int ListOperationsRequest::kZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOperationsRequest::ListOperationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListOperationsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListOperationsRequest)
}
ListOperationsRequest::ListOperationsRequest(const ListOperationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListOperationsRequest)
}

void ListOperationsRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListOperationsRequest::~ListOperationsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListOperationsRequest)
  SharedDtor();
}

void ListOperationsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListOperationsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListOperationsRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListOperationsRequest& ListOperationsRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListOperationsRequest();
  return *internal_default_instance();
}

ListOperationsRequest* ListOperationsRequest::New(::google::protobuf::Arena* arena) const {
  ListOperationsRequest* n = new ListOperationsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListOperationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListOperationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListOperationsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListOperationsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListOperationsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListOperationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListOperationsRequest)
  return false;
#undef DO_
}

void ListOperationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListOperationsRequest)
}

::google::protobuf::uint8* ListOperationsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListOperationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListOperationsRequest)
  return target;
}

size_t ListOperationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListOperationsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListOperationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListOperationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOperationsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListOperationsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListOperationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListOperationsRequest)
    MergeFrom(*source);
  }
}

void ListOperationsRequest::MergeFrom(const ListOperationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListOperationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
}

void ListOperationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListOperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOperationsRequest::CopyFrom(const ListOperationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListOperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOperationsRequest::IsInitialized() const {
  return true;
}

void ListOperationsRequest::Swap(ListOperationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOperationsRequest::InternalSwap(ListOperationsRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListOperationsRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelOperationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelOperationRequest::kProjectIdFieldNumber;
const int CancelOperationRequest::kZoneFieldNumber;
const int CancelOperationRequest::kOperationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelOperationRequest::CancelOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCancelOperationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CancelOperationRequest)
}
CancelOperationRequest::CancelOperationRequest(const CancelOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CancelOperationRequest)
}

void CancelOperationRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelOperationRequest::~CancelOperationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CancelOperationRequest)
  SharedDtor();
}

void CancelOperationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelOperationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelOperationRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelOperationRequest& CancelOperationRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCancelOperationRequest();
  return *internal_default_instance();
}

CancelOperationRequest* CancelOperationRequest::New(::google::protobuf::Arena* arena) const {
  CancelOperationRequest* n = new CancelOperationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CancelOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CancelOperationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CancelOperationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CancelOperationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CancelOperationRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CancelOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CancelOperationRequest)
  return false;
#undef DO_
}

void CancelOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operation_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CancelOperationRequest)
}

::google::protobuf::uint8* CancelOperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CancelOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CancelOperationRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operation_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CancelOperationRequest)
  return target;
}

size_t CancelOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CancelOperationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string operation_id = 3;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelOperationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelOperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CancelOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CancelOperationRequest)
    MergeFrom(*source);
  }
}

void CancelOperationRequest::MergeFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
}

void CancelOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOperationRequest::CopyFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOperationRequest::IsInitialized() const {
  return true;
}

void CancelOperationRequest::Swap(CancelOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelOperationRequest::InternalSwap(CancelOperationRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  operation_id_.Swap(&other->operation_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelOperationRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListOperationsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOperationsResponse::kOperationsFieldNumber;
const int ListOperationsResponse::kMissingZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOperationsResponse::ListOperationsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListOperationsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListOperationsResponse)
}
ListOperationsResponse::ListOperationsResponse(const ListOperationsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      operations_(from.operations_),
      missing_zones_(from.missing_zones_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListOperationsResponse)
}

void ListOperationsResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListOperationsResponse::~ListOperationsResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListOperationsResponse)
  SharedDtor();
}

void ListOperationsResponse::SharedDtor() {
}

void ListOperationsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListOperationsResponse::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListOperationsResponse& ListOperationsResponse::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListOperationsResponse();
  return *internal_default_instance();
}

ListOperationsResponse* ListOperationsResponse::New(::google::protobuf::Arena* arena) const {
  ListOperationsResponse* n = new ListOperationsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListOperationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  missing_zones_.Clear();
  _internal_metadata_.Clear();
}

bool ListOperationsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListOperationsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.Operation operations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_operations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string missing_zones = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_missing_zones()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->missing_zones(this->missing_zones_size() - 1).data(),
            static_cast<int>(this->missing_zones(this->missing_zones_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListOperationsResponse.missing_zones"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListOperationsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListOperationsResponse)
  return false;
#undef DO_
}

void ListOperationsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Operation operations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->operations(static_cast<int>(i)), output);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsResponse.missing_zones");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->missing_zones(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListOperationsResponse)
}

::google::protobuf::uint8* ListOperationsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListOperationsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.Operation operations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->operations(static_cast<int>(i)), deterministic, target);
  }

  // repeated string missing_zones = 2;
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->missing_zones(i).data(), static_cast<int>(this->missing_zones(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListOperationsResponse.missing_zones");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->missing_zones(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListOperationsResponse)
  return target;
}

size_t ListOperationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListOperationsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.container.v1.Operation operations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->operations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operations(static_cast<int>(i)));
    }
  }

  // repeated string missing_zones = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->missing_zones_size());
  for (int i = 0, n = this->missing_zones_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->missing_zones(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListOperationsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListOperationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOperationsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListOperationsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListOperationsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListOperationsResponse)
    MergeFrom(*source);
  }
}

void ListOperationsResponse::MergeFrom(const ListOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListOperationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  missing_zones_.MergeFrom(from.missing_zones_);
}

void ListOperationsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOperationsResponse::CopyFrom(const ListOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOperationsResponse::IsInitialized() const {
  return true;
}

void ListOperationsResponse::Swap(ListOperationsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOperationsResponse::InternalSwap(ListOperationsResponse* other) {
  using std::swap;
  operations_.InternalSwap(&other->operations_);
  missing_zones_.InternalSwap(&other->missing_zones_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListOperationsResponse::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServerConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServerConfigRequest::kProjectIdFieldNumber;
const int GetServerConfigRequest::kZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServerConfigRequest::GetServerConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetServerConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetServerConfigRequest)
}
GetServerConfigRequest::GetServerConfigRequest(const GetServerConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetServerConfigRequest)
}

void GetServerConfigRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetServerConfigRequest::~GetServerConfigRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetServerConfigRequest)
  SharedDtor();
}

void GetServerConfigRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServerConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServerConfigRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServerConfigRequest& GetServerConfigRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetServerConfigRequest();
  return *internal_default_instance();
}

GetServerConfigRequest* GetServerConfigRequest::New(::google::protobuf::Arena* arena) const {
  GetServerConfigRequest* n = new GetServerConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServerConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServerConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetServerConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetServerConfigRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetServerConfigRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetServerConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetServerConfigRequest)
  return false;
#undef DO_
}

void GetServerConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetServerConfigRequest)
}

::google::protobuf::uint8* GetServerConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetServerConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetServerConfigRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetServerConfigRequest)
  return target;
}

size_t GetServerConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetServerConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServerConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetServerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServerConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServerConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetServerConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetServerConfigRequest)
    MergeFrom(*source);
  }
}

void GetServerConfigRequest::MergeFrom(const GetServerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetServerConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
}

void GetServerConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetServerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServerConfigRequest::CopyFrom(const GetServerConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetServerConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServerConfigRequest::IsInitialized() const {
  return true;
}

void GetServerConfigRequest::Swap(GetServerConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServerConfigRequest::InternalSwap(GetServerConfigRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServerConfigRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConfig::kDefaultClusterVersionFieldNumber;
const int ServerConfig::kValidNodeVersionsFieldNumber;
const int ServerConfig::kDefaultImageTypeFieldNumber;
const int ServerConfig::kValidImageTypesFieldNumber;
const int ServerConfig::kValidMasterVersionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConfig::ServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsServerConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ServerConfig)
}
ServerConfig::ServerConfig(const ServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      valid_node_versions_(from.valid_node_versions_),
      valid_image_types_(from.valid_image_types_),
      valid_master_versions_(from.valid_master_versions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  default_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_cluster_version().size() > 0) {
    default_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_cluster_version_);
  }
  default_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_image_type().size() > 0) {
    default_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_image_type_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ServerConfig)
}

void ServerConfig::SharedCtor() {
  default_cluster_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ServerConfig::~ServerConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.ServerConfig)
  SharedDtor();
}

void ServerConfig::SharedDtor() {
  default_cluster_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerConfig::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerConfig& ServerConfig::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsServerConfig();
  return *internal_default_instance();
}

ServerConfig* ServerConfig::New(::google::protobuf::Arena* arena) const {
  ServerConfig* n = new ServerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valid_node_versions_.Clear();
  valid_image_types_.Clear();
  valid_master_versions_.Clear();
  default_cluster_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_image_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ServerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string default_cluster_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_cluster_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.default_cluster_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_node_versions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_node_versions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_node_versions(this->valid_node_versions_size() - 1).data(),
            static_cast<int>(this->valid_node_versions(this->valid_node_versions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.valid_node_versions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_image_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_image_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.default_image_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_image_types = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_image_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_image_types(this->valid_image_types_size() - 1).data(),
            static_cast<int>(this->valid_image_types(this->valid_image_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.valid_image_types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valid_master_versions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valid_master_versions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_master_versions(this->valid_master_versions_size() - 1).data(),
            static_cast<int>(this->valid_master_versions(this->valid_master_versions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ServerConfig.valid_master_versions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ServerConfig)
  return false;
#undef DO_
}

void ServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_cluster_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->default_cluster_version(), output);
  }

  // repeated string valid_node_versions = 3;
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_node_versions(i).data(), static_cast<int>(this->valid_node_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_node_versions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->valid_node_versions(i), output);
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_image_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->default_image_type(), output);
  }

  // repeated string valid_image_types = 5;
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_image_types(i).data(), static_cast<int>(this->valid_image_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_image_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->valid_image_types(i), output);
  }

  // repeated string valid_master_versions = 6;
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_master_versions(i).data(), static_cast<int>(this->valid_master_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_master_versions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->valid_master_versions(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ServerConfig)
}

::google::protobuf::uint8* ServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_cluster_version().data(), static_cast<int>(this->default_cluster_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_cluster_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->default_cluster_version(), target);
  }

  // repeated string valid_node_versions = 3;
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_node_versions(i).data(), static_cast<int>(this->valid_node_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_node_versions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->valid_node_versions(i), target);
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_image_type().data(), static_cast<int>(this->default_image_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.default_image_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->default_image_type(), target);
  }

  // repeated string valid_image_types = 5;
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_image_types(i).data(), static_cast<int>(this->valid_image_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_image_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->valid_image_types(i), target);
  }

  // repeated string valid_master_versions = 6;
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_master_versions(i).data(), static_cast<int>(this->valid_master_versions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ServerConfig.valid_master_versions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->valid_master_versions(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ServerConfig)
  return target;
}

size_t ServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ServerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string valid_node_versions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_node_versions_size());
  for (int i = 0, n = this->valid_node_versions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_node_versions(i));
  }

  // repeated string valid_image_types = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_image_types_size());
  for (int i = 0, n = this->valid_image_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_image_types(i));
  }

  // repeated string valid_master_versions = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valid_master_versions_size());
  for (int i = 0, n = this->valid_master_versions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valid_master_versions(i));
  }

  // string default_cluster_version = 1;
  if (this->default_cluster_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_cluster_version());
  }

  // string default_image_type = 4;
  if (this->default_image_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_image_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ServerConfig)
    MergeFrom(*source);
  }
}

void ServerConfig::MergeFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  valid_node_versions_.MergeFrom(from.valid_node_versions_);
  valid_image_types_.MergeFrom(from.valid_image_types_);
  valid_master_versions_.MergeFrom(from.valid_master_versions_);
  if (from.default_cluster_version().size() > 0) {

    default_cluster_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_cluster_version_);
  }
  if (from.default_image_type().size() > 0) {

    default_image_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_image_type_);
  }
}

void ServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfig::CopyFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerConfig::IsInitialized() const {
  return true;
}

void ServerConfig::Swap(ServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConfig::InternalSwap(ServerConfig* other) {
  using std::swap;
  valid_node_versions_.InternalSwap(&other->valid_node_versions_);
  valid_image_types_.InternalSwap(&other->valid_image_types_);
  valid_master_versions_.InternalSwap(&other->valid_master_versions_);
  default_cluster_version_.Swap(&other->default_cluster_version_);
  default_image_type_.Swap(&other->default_image_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerConfig::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNodePoolRequest::InitAsDefaultInstance() {
  ::google::container::v1::_CreateNodePoolRequest_default_instance_._instance.get_mutable()->node_pool_ = const_cast< ::google::container::v1::NodePool*>(
      ::google::container::v1::NodePool::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNodePoolRequest::kProjectIdFieldNumber;
const int CreateNodePoolRequest::kZoneFieldNumber;
const int CreateNodePoolRequest::kClusterIdFieldNumber;
const int CreateNodePoolRequest::kNodePoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNodePoolRequest::CreateNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCreateNodePoolRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CreateNodePoolRequest)
}
CreateNodePoolRequest::CreateNodePoolRequest(const CreateNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_node_pool()) {
    node_pool_ = new ::google::container::v1::NodePool(*from.node_pool_);
  } else {
    node_pool_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CreateNodePoolRequest)
}

void CreateNodePoolRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_ = NULL;
  _cached_size_ = 0;
}

CreateNodePoolRequest::~CreateNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CreateNodePoolRequest)
  SharedDtor();
}

void CreateNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_pool_;
}

void CreateNodePoolRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNodePoolRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNodePoolRequest& CreateNodePoolRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCreateNodePoolRequest();
  return *internal_default_instance();
}

CreateNodePoolRequest* CreateNodePoolRequest::New(::google::protobuf::Arena* arena) const {
  CreateNodePoolRequest* n = new CreateNodePoolRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_pool_ != NULL) {
    delete node_pool_;
  }
  node_pool_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CreateNodePoolRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CreateNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePool node_pool = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_pool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CreateNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CreateNodePoolRequest)
  return false;
#undef DO_
}

void CreateNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.NodePool node_pool = 4;
  if (this->has_node_pool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->node_pool_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CreateNodePoolRequest)
}

::google::protobuf::uint8* CreateNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CreateNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CreateNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.NodePool node_pool = 4;
  if (this->has_node_pool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->node_pool_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CreateNodePoolRequest)
  return target;
}

size_t CreateNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CreateNodePoolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.container.v1.NodePool node_pool = 4;
  if (this->has_node_pool()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->node_pool_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CreateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNodePoolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNodePoolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CreateNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CreateNodePoolRequest)
    MergeFrom(*source);
  }
}

void CreateNodePoolRequest::MergeFrom(const CreateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CreateNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_node_pool()) {
    mutable_node_pool()->::google::container::v1::NodePool::MergeFrom(from.node_pool());
  }
}

void CreateNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CreateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNodePoolRequest::CopyFrom(const CreateNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CreateNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNodePoolRequest::IsInitialized() const {
  return true;
}

void CreateNodePoolRequest::Swap(CreateNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNodePoolRequest::InternalSwap(CreateNodePoolRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(node_pool_, other->node_pool_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNodePoolRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteNodePoolRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteNodePoolRequest::kProjectIdFieldNumber;
const int DeleteNodePoolRequest::kZoneFieldNumber;
const int DeleteNodePoolRequest::kClusterIdFieldNumber;
const int DeleteNodePoolRequest::kNodePoolIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteNodePoolRequest::DeleteNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsDeleteNodePoolRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DeleteNodePoolRequest)
}
DeleteNodePoolRequest::DeleteNodePoolRequest(const DeleteNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DeleteNodePoolRequest)
}

void DeleteNodePoolRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteNodePoolRequest::~DeleteNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.DeleteNodePoolRequest)
  SharedDtor();
}

void DeleteNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteNodePoolRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteNodePoolRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteNodePoolRequest& DeleteNodePoolRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsDeleteNodePoolRequest();
  return *internal_default_instance();
}

DeleteNodePoolRequest* DeleteNodePoolRequest::New(::google::protobuf::Arena* arena) const {
  DeleteNodePoolRequest* n = new DeleteNodePoolRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DeleteNodePoolRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DeleteNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DeleteNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DeleteNodePoolRequest)
  return false;
#undef DO_
}

void DeleteNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DeleteNodePoolRequest)
}

::google::protobuf::uint8* DeleteNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DeleteNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DeleteNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DeleteNodePoolRequest)
  return target;
}

size_t DeleteNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DeleteNodePoolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DeleteNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNodePoolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteNodePoolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DeleteNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DeleteNodePoolRequest)
    MergeFrom(*source);
  }
}

void DeleteNodePoolRequest::MergeFrom(const DeleteNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DeleteNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
}

void DeleteNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DeleteNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNodePoolRequest::CopyFrom(const DeleteNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DeleteNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodePoolRequest::IsInitialized() const {
  return true;
}

void DeleteNodePoolRequest::Swap(DeleteNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteNodePoolRequest::InternalSwap(DeleteNodePoolRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  node_pool_id_.Swap(&other->node_pool_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteNodePoolRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNodePoolsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNodePoolsRequest::kProjectIdFieldNumber;
const int ListNodePoolsRequest::kZoneFieldNumber;
const int ListNodePoolsRequest::kClusterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNodePoolsRequest::ListNodePoolsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListNodePoolsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListNodePoolsRequest)
}
ListNodePoolsRequest::ListNodePoolsRequest(const ListNodePoolsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListNodePoolsRequest)
}

void ListNodePoolsRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListNodePoolsRequest::~ListNodePoolsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListNodePoolsRequest)
  SharedDtor();
}

void ListNodePoolsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNodePoolsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListNodePoolsRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNodePoolsRequest& ListNodePoolsRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListNodePoolsRequest();
  return *internal_default_instance();
}

ListNodePoolsRequest* ListNodePoolsRequest::New(::google::protobuf::Arena* arena) const {
  ListNodePoolsRequest* n = new ListNodePoolsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListNodePoolsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListNodePoolsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListNodePoolsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListNodePoolsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListNodePoolsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.ListNodePoolsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListNodePoolsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListNodePoolsRequest)
  return false;
#undef DO_
}

void ListNodePoolsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListNodePoolsRequest)
}

::google::protobuf::uint8* ListNodePoolsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListNodePoolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.ListNodePoolsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListNodePoolsRequest)
  return target;
}

size_t ListNodePoolsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListNodePoolsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListNodePoolsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListNodePoolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodePoolsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNodePoolsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListNodePoolsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListNodePoolsRequest)
    MergeFrom(*source);
  }
}

void ListNodePoolsRequest::MergeFrom(const ListNodePoolsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListNodePoolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
}

void ListNodePoolsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListNodePoolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodePoolsRequest::CopyFrom(const ListNodePoolsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListNodePoolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodePoolsRequest::IsInitialized() const {
  return true;
}

void ListNodePoolsRequest::Swap(ListNodePoolsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNodePoolsRequest::InternalSwap(ListNodePoolsRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListNodePoolsRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNodePoolRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNodePoolRequest::kProjectIdFieldNumber;
const int GetNodePoolRequest::kZoneFieldNumber;
const int GetNodePoolRequest::kClusterIdFieldNumber;
const int GetNodePoolRequest::kNodePoolIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNodePoolRequest::GetNodePoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetNodePoolRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.GetNodePoolRequest)
}
GetNodePoolRequest::GetNodePoolRequest(const GetNodePoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.GetNodePoolRequest)
}

void GetNodePoolRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetNodePoolRequest::~GetNodePoolRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.GetNodePoolRequest)
  SharedDtor();
}

void GetNodePoolRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNodePoolRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNodePoolRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNodePoolRequest& GetNodePoolRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsGetNodePoolRequest();
  return *internal_default_instance();
}

GetNodePoolRequest* GetNodePoolRequest::New(::google::protobuf::Arena* arena) const {
  GetNodePoolRequest* n = new GetNodePoolRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNodePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetNodePoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.GetNodePoolRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.GetNodePoolRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.GetNodePoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.GetNodePoolRequest)
  return false;
#undef DO_
}

void GetNodePoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.GetNodePoolRequest)
}

::google::protobuf::uint8* GetNodePoolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.GetNodePoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.GetNodePoolRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.GetNodePoolRequest)
  return target;
}

size_t GetNodePoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.GetNodePoolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNodePoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.GetNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNodePoolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNodePoolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.GetNodePoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.GetNodePoolRequest)
    MergeFrom(*source);
  }
}

void GetNodePoolRequest::MergeFrom(const GetNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.GetNodePoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
}

void GetNodePoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.GetNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodePoolRequest::CopyFrom(const GetNodePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.GetNodePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodePoolRequest::IsInitialized() const {
  return true;
}

void GetNodePoolRequest::Swap(GetNodePoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNodePoolRequest::InternalSwap(GetNodePoolRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  node_pool_id_.Swap(&other->node_pool_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNodePoolRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodePool::InitAsDefaultInstance() {
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::container::v1::NodeConfig*>(
      ::google::container::v1::NodeConfig::internal_default_instance());
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->autoscaling_ = const_cast< ::google::container::v1::NodePoolAutoscaling*>(
      ::google::container::v1::NodePoolAutoscaling::internal_default_instance());
  ::google::container::v1::_NodePool_default_instance_._instance.get_mutable()->management_ = const_cast< ::google::container::v1::NodeManagement*>(
      ::google::container::v1::NodeManagement::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodePool::kNameFieldNumber;
const int NodePool::kConfigFieldNumber;
const int NodePool::kInitialNodeCountFieldNumber;
const int NodePool::kSelfLinkFieldNumber;
const int NodePool::kVersionFieldNumber;
const int NodePool::kInstanceGroupUrlsFieldNumber;
const int NodePool::kStatusFieldNumber;
const int NodePool::kStatusMessageFieldNumber;
const int NodePool::kAutoscalingFieldNumber;
const int NodePool::kManagementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodePool::NodePool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePool();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodePool)
}
NodePool::NodePool(const NodePool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instance_group_urls_(from.instance_group_urls_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_link().size() > 0) {
    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.has_config()) {
    config_ = new ::google::container::v1::NodeConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_autoscaling()) {
    autoscaling_ = new ::google::container::v1::NodePoolAutoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = NULL;
  }
  if (from.has_management()) {
    management_ = new ::google::container::v1::NodeManagement(*from.management_);
  } else {
    management_ = NULL;
  }
  ::memcpy(&initial_node_count_, &from.initial_node_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&initial_node_count_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodePool)
}

void NodePool::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&config_)) + sizeof(status_));
  _cached_size_ = 0;
}

NodePool::~NodePool() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodePool)
  SharedDtor();
}

void NodePool::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete autoscaling_;
  if (this != internal_default_instance()) delete management_;
}

void NodePool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodePool::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodePool& NodePool::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePool();
  return *internal_default_instance();
}

NodePool* NodePool::New(::google::protobuf::Arena* arena) const {
  NodePool* n = new NodePool;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodePool::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_group_urls_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  self_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && autoscaling_ != NULL) {
    delete autoscaling_;
  }
  autoscaling_ = NULL;
  if (GetArenaNoVirtual() == NULL && management_ != NULL) {
    delete management_;
  }
  management_ = NULL;
  ::memset(&initial_node_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&initial_node_count_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool NodePool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodePool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 initial_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_autoscaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeManagement management = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_link = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_link().data(), static_cast<int>(this->self_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.self_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instance_group_urls = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instance_group_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_group_urls(this->instance_group_urls_size() - 1).data(),
            static_cast<int>(this->instance_group_urls(this->instance_group_urls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.instance_group_urls"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodePool.Status status = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 824 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::container::v1::NodePool_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.NodePool.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodePool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodePool)
  return false;
#undef DO_
}

void NodePool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.container.v1.NodeConfig config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->initial_node_count(), output);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->autoscaling_, output);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->management_, output);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.self_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->self_link(), output);
  }

  // string version = 101;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->version(), output);
  }

  // repeated string instance_group_urls = 102;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.instance_group_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      102, this->instance_group_urls(i), output);
  }

  // .google.container.v1.NodePool.Status status = 103;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      103, this->status(), output);
  }

  // string status_message = 104;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->status_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodePool)
}

::google::protobuf::uint8* NodePool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodePool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.container.v1.NodeConfig config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->config_, deterministic, target);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->initial_node_count(), target);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->autoscaling_, deterministic, target);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->management_, deterministic, target);
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_link().data(), static_cast<int>(this->self_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.self_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->self_link(), target);
  }

  // string version = 101;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->version(), target);
  }

  // repeated string instance_group_urls = 102;
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_urls(i).data(), static_cast<int>(this->instance_group_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.instance_group_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(102, this->instance_group_urls(i), target);
  }

  // .google.container.v1.NodePool.Status status = 103;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      103, this->status(), target);
  }

  // string status_message = 104;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.NodePool.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->status_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodePool)
  return target;
}

size_t NodePool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodePool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string instance_group_urls = 102;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->instance_group_urls_size());
  for (int i = 0, n = this->instance_group_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instance_group_urls(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string self_link = 100;
  if (this->self_link().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_link());
  }

  // string version = 101;
  if (this->version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string status_message = 104;
  if (this->status_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // .google.container.v1.NodeConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .google.container.v1.NodePoolAutoscaling autoscaling = 4;
  if (this->has_autoscaling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->autoscaling_);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->management_);
  }

  // int32 initial_node_count = 3;
  if (this->initial_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initial_node_count());
  }

  // .google.container.v1.NodePool.Status status = 103;
  if (this->status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodePool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodePool)
  GOOGLE_DCHECK_NE(&from, this);
  const NodePool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodePool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodePool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodePool)
    MergeFrom(*source);
  }
}

void NodePool::MergeFrom(const NodePool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodePool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instance_group_urls_.MergeFrom(from.instance_group_urls_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.self_link().size() > 0) {

    self_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_link_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.has_config()) {
    mutable_config()->::google::container::v1::NodeConfig::MergeFrom(from.config());
  }
  if (from.has_autoscaling()) {
    mutable_autoscaling()->::google::container::v1::NodePoolAutoscaling::MergeFrom(from.autoscaling());
  }
  if (from.has_management()) {
    mutable_management()->::google::container::v1::NodeManagement::MergeFrom(from.management());
  }
  if (from.initial_node_count() != 0) {
    set_initial_node_count(from.initial_node_count());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void NodePool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodePool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodePool::CopyFrom(const NodePool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodePool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodePool::IsInitialized() const {
  return true;
}

void NodePool::Swap(NodePool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodePool::InternalSwap(NodePool* other) {
  using std::swap;
  instance_group_urls_.InternalSwap(&other->instance_group_urls_);
  name_.Swap(&other->name_);
  self_link_.Swap(&other->self_link_);
  version_.Swap(&other->version_);
  status_message_.Swap(&other->status_message_);
  swap(config_, other->config_);
  swap(autoscaling_, other->autoscaling_);
  swap(management_, other->management_);
  swap(initial_node_count_, other->initial_node_count_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodePool::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeManagement::InitAsDefaultInstance() {
  ::google::container::v1::_NodeManagement_default_instance_._instance.get_mutable()->upgrade_options_ = const_cast< ::google::container::v1::AutoUpgradeOptions*>(
      ::google::container::v1::AutoUpgradeOptions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeManagement::kAutoUpgradeFieldNumber;
const int NodeManagement::kAutoRepairFieldNumber;
const int NodeManagement::kUpgradeOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeManagement::NodeManagement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeManagement();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodeManagement)
}
NodeManagement::NodeManagement(const NodeManagement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_upgrade_options()) {
    upgrade_options_ = new ::google::container::v1::AutoUpgradeOptions(*from.upgrade_options_);
  } else {
    upgrade_options_ = NULL;
  }
  ::memcpy(&auto_upgrade_, &from.auto_upgrade_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_repair_) -
    reinterpret_cast<char*>(&auto_upgrade_)) + sizeof(auto_repair_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodeManagement)
}

void NodeManagement::SharedCtor() {
  ::memset(&upgrade_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_repair_) -
      reinterpret_cast<char*>(&upgrade_options_)) + sizeof(auto_repair_));
  _cached_size_ = 0;
}

NodeManagement::~NodeManagement() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodeManagement)
  SharedDtor();
}

void NodeManagement::SharedDtor() {
  if (this != internal_default_instance()) delete upgrade_options_;
}

void NodeManagement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeManagement::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeManagement& NodeManagement::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodeManagement();
  return *internal_default_instance();
}

NodeManagement* NodeManagement::New(::google::protobuf::Arena* arena) const {
  NodeManagement* n = new NodeManagement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeManagement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && upgrade_options_ != NULL) {
    delete upgrade_options_;
  }
  upgrade_options_ = NULL;
  ::memset(&auto_upgrade_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_repair_) -
      reinterpret_cast<char*>(&auto_upgrade_)) + sizeof(auto_repair_));
  _internal_metadata_.Clear();
}

bool NodeManagement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodeManagement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool auto_upgrade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_upgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool auto_repair = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_repair_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upgrade_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodeManagement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodeManagement)
  return false;
#undef DO_
}

void NodeManagement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->auto_upgrade(), output);
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->auto_repair(), output);
  }

  // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->upgrade_options_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodeManagement)
}

::google::protobuf::uint8* NodeManagement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodeManagement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->auto_upgrade(), target);
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->auto_repair(), target);
  }

  // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->upgrade_options_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodeManagement)
  return target;
}

size_t NodeManagement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodeManagement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.container.v1.AutoUpgradeOptions upgrade_options = 10;
  if (this->has_upgrade_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upgrade_options_);
  }

  // bool auto_upgrade = 1;
  if (this->auto_upgrade() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_repair = 2;
  if (this->auto_repair() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeManagement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodeManagement)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeManagement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeManagement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodeManagement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodeManagement)
    MergeFrom(*source);
  }
}

void NodeManagement::MergeFrom(const NodeManagement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodeManagement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_upgrade_options()) {
    mutable_upgrade_options()->::google::container::v1::AutoUpgradeOptions::MergeFrom(from.upgrade_options());
  }
  if (from.auto_upgrade() != 0) {
    set_auto_upgrade(from.auto_upgrade());
  }
  if (from.auto_repair() != 0) {
    set_auto_repair(from.auto_repair());
  }
}

void NodeManagement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodeManagement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeManagement::CopyFrom(const NodeManagement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodeManagement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeManagement::IsInitialized() const {
  return true;
}

void NodeManagement::Swap(NodeManagement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeManagement::InternalSwap(NodeManagement* other) {
  using std::swap;
  swap(upgrade_options_, other->upgrade_options_);
  swap(auto_upgrade_, other->auto_upgrade_);
  swap(auto_repair_, other->auto_repair_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeManagement::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutoUpgradeOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoUpgradeOptions::kAutoUpgradeStartTimeFieldNumber;
const int AutoUpgradeOptions::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoUpgradeOptions::AutoUpgradeOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAutoUpgradeOptions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AutoUpgradeOptions)
}
AutoUpgradeOptions::AutoUpgradeOptions(const AutoUpgradeOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auto_upgrade_start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auto_upgrade_start_time().size() > 0) {
    auto_upgrade_start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auto_upgrade_start_time_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AutoUpgradeOptions)
}

void AutoUpgradeOptions::SharedCtor() {
  auto_upgrade_start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AutoUpgradeOptions::~AutoUpgradeOptions() {
  // @@protoc_insertion_point(destructor:google.container.v1.AutoUpgradeOptions)
  SharedDtor();
}

void AutoUpgradeOptions::SharedDtor() {
  auto_upgrade_start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AutoUpgradeOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoUpgradeOptions::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutoUpgradeOptions& AutoUpgradeOptions::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAutoUpgradeOptions();
  return *internal_default_instance();
}

AutoUpgradeOptions* AutoUpgradeOptions::New(::google::protobuf::Arena* arena) const {
  AutoUpgradeOptions* n = new AutoUpgradeOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutoUpgradeOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auto_upgrade_start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AutoUpgradeOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AutoUpgradeOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string auto_upgrade_start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auto_upgrade_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AutoUpgradeOptions.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AutoUpgradeOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AutoUpgradeOptions)
  return false;
#undef DO_
}

void AutoUpgradeOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->auto_upgrade_start_time(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AutoUpgradeOptions)
}

::google::protobuf::uint8* AutoUpgradeOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AutoUpgradeOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auto_upgrade_start_time().data(), static_cast<int>(this->auto_upgrade_start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->auto_upgrade_start_time(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AutoUpgradeOptions.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AutoUpgradeOptions)
  return target;
}

size_t AutoUpgradeOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AutoUpgradeOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string auto_upgrade_start_time = 1;
  if (this->auto_upgrade_start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auto_upgrade_start_time());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoUpgradeOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AutoUpgradeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoUpgradeOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoUpgradeOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AutoUpgradeOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AutoUpgradeOptions)
    MergeFrom(*source);
  }
}

void AutoUpgradeOptions::MergeFrom(const AutoUpgradeOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AutoUpgradeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.auto_upgrade_start_time().size() > 0) {

    auto_upgrade_start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auto_upgrade_start_time_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void AutoUpgradeOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AutoUpgradeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoUpgradeOptions::CopyFrom(const AutoUpgradeOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AutoUpgradeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoUpgradeOptions::IsInitialized() const {
  return true;
}

void AutoUpgradeOptions::Swap(AutoUpgradeOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoUpgradeOptions::InternalSwap(AutoUpgradeOptions* other) {
  using std::swap;
  auto_upgrade_start_time_.Swap(&other->auto_upgrade_start_time_);
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AutoUpgradeOptions::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaintenancePolicy::InitAsDefaultInstance() {
  ::google::container::v1::_MaintenancePolicy_default_instance_._instance.get_mutable()->window_ = const_cast< ::google::container::v1::MaintenanceWindow*>(
      ::google::container::v1::MaintenanceWindow::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaintenancePolicy::kWindowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaintenancePolicy::MaintenancePolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMaintenancePolicy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MaintenancePolicy)
}
MaintenancePolicy::MaintenancePolicy(const MaintenancePolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window()) {
    window_ = new ::google::container::v1::MaintenanceWindow(*from.window_);
  } else {
    window_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MaintenancePolicy)
}

void MaintenancePolicy::SharedCtor() {
  window_ = NULL;
  _cached_size_ = 0;
}

MaintenancePolicy::~MaintenancePolicy() {
  // @@protoc_insertion_point(destructor:google.container.v1.MaintenancePolicy)
  SharedDtor();
}

void MaintenancePolicy::SharedDtor() {
  if (this != internal_default_instance()) delete window_;
}

void MaintenancePolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaintenancePolicy::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaintenancePolicy& MaintenancePolicy::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMaintenancePolicy();
  return *internal_default_instance();
}

MaintenancePolicy* MaintenancePolicy::New(::google::protobuf::Arena* arena) const {
  MaintenancePolicy* n = new MaintenancePolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaintenancePolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && window_ != NULL) {
    delete window_;
  }
  window_ = NULL;
  _internal_metadata_.Clear();
}

bool MaintenancePolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MaintenancePolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.MaintenanceWindow window = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MaintenancePolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MaintenancePolicy)
  return false;
#undef DO_
}

void MaintenancePolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->window_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MaintenancePolicy)
}

::google::protobuf::uint8* MaintenancePolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MaintenancePolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->window_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MaintenancePolicy)
  return target;
}

size_t MaintenancePolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MaintenancePolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.container.v1.MaintenanceWindow window = 1;
  if (this->has_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->window_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaintenancePolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MaintenancePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const MaintenancePolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaintenancePolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MaintenancePolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MaintenancePolicy)
    MergeFrom(*source);
  }
}

void MaintenancePolicy::MergeFrom(const MaintenancePolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MaintenancePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_window()) {
    mutable_window()->::google::container::v1::MaintenanceWindow::MergeFrom(from.window());
  }
}

void MaintenancePolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MaintenancePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenancePolicy::CopyFrom(const MaintenancePolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MaintenancePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenancePolicy::IsInitialized() const {
  return true;
}

void MaintenancePolicy::Swap(MaintenancePolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaintenancePolicy::InternalSwap(MaintenancePolicy* other) {
  using std::swap;
  swap(window_, other->window_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaintenancePolicy::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaintenanceWindow::InitAsDefaultInstance() {
  ::google::container::v1::_MaintenanceWindow_default_instance_.daily_maintenance_window_ = const_cast< ::google::container::v1::DailyMaintenanceWindow*>(
      ::google::container::v1::DailyMaintenanceWindow::internal_default_instance());
}
void MaintenanceWindow::set_allocated_daily_maintenance_window(::google::container::v1::DailyMaintenanceWindow* daily_maintenance_window) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_policy();
  if (daily_maintenance_window) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      daily_maintenance_window = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, daily_maintenance_window, submessage_arena);
    }
    set_has_daily_maintenance_window();
    policy_.daily_maintenance_window_ = daily_maintenance_window;
  }
  // @@protoc_insertion_point(field_set_allocated:google.container.v1.MaintenanceWindow.daily_maintenance_window)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaintenanceWindow::kDailyMaintenanceWindowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaintenanceWindow::MaintenanceWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMaintenanceWindow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.MaintenanceWindow)
}
MaintenanceWindow::MaintenanceWindow(const MaintenanceWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_policy();
  switch (from.policy_case()) {
    case kDailyMaintenanceWindow: {
      mutable_daily_maintenance_window()->::google::container::v1::DailyMaintenanceWindow::MergeFrom(from.daily_maintenance_window());
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.MaintenanceWindow)
}

void MaintenanceWindow::SharedCtor() {
  clear_has_policy();
  _cached_size_ = 0;
}

MaintenanceWindow::~MaintenanceWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1.MaintenanceWindow)
  SharedDtor();
}

void MaintenanceWindow::SharedDtor() {
  if (has_policy()) {
    clear_policy();
  }
}

void MaintenanceWindow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaintenanceWindow::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaintenanceWindow& MaintenanceWindow::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsMaintenanceWindow();
  return *internal_default_instance();
}

MaintenanceWindow* MaintenanceWindow::New(::google::protobuf::Arena* arena) const {
  MaintenanceWindow* n = new MaintenanceWindow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaintenanceWindow::clear_policy() {
// @@protoc_insertion_point(one_of_clear_start:google.container.v1.MaintenanceWindow)
  switch (policy_case()) {
    case kDailyMaintenanceWindow: {
      delete policy_.daily_maintenance_window_;
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = POLICY_NOT_SET;
}


void MaintenanceWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_policy();
  _internal_metadata_.Clear();
}

bool MaintenanceWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.MaintenanceWindow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_daily_maintenance_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.MaintenanceWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.MaintenanceWindow)
  return false;
#undef DO_
}

void MaintenanceWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
  if (has_daily_maintenance_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *policy_.daily_maintenance_window_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.MaintenanceWindow)
}

::google::protobuf::uint8* MaintenanceWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.MaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
  if (has_daily_maintenance_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *policy_.daily_maintenance_window_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.MaintenanceWindow)
  return target;
}

size_t MaintenanceWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.MaintenanceWindow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (policy_case()) {
    // .google.container.v1.DailyMaintenanceWindow daily_maintenance_window = 2;
    case kDailyMaintenanceWindow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *policy_.daily_maintenance_window_);
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaintenanceWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.MaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const MaintenanceWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaintenanceWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.MaintenanceWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.MaintenanceWindow)
    MergeFrom(*source);
  }
}

void MaintenanceWindow::MergeFrom(const MaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.MaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.policy_case()) {
    case kDailyMaintenanceWindow: {
      mutable_daily_maintenance_window()->::google::container::v1::DailyMaintenanceWindow::MergeFrom(from.daily_maintenance_window());
      break;
    }
    case POLICY_NOT_SET: {
      break;
    }
  }
}

void MaintenanceWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.MaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenanceWindow::CopyFrom(const MaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.MaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenanceWindow::IsInitialized() const {
  return true;
}

void MaintenanceWindow::Swap(MaintenanceWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaintenanceWindow::InternalSwap(MaintenanceWindow* other) {
  using std::swap;
  swap(policy_, other->policy_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaintenanceWindow::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DailyMaintenanceWindow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyMaintenanceWindow::kStartTimeFieldNumber;
const int DailyMaintenanceWindow::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyMaintenanceWindow::DailyMaintenanceWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsDailyMaintenanceWindow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.DailyMaintenanceWindow)
}
DailyMaintenanceWindow::DailyMaintenanceWindow(const DailyMaintenanceWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.DailyMaintenanceWindow)
}

void DailyMaintenanceWindow::SharedCtor() {
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DailyMaintenanceWindow::~DailyMaintenanceWindow() {
  // @@protoc_insertion_point(destructor:google.container.v1.DailyMaintenanceWindow)
  SharedDtor();
}

void DailyMaintenanceWindow::SharedDtor() {
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DailyMaintenanceWindow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyMaintenanceWindow::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyMaintenanceWindow& DailyMaintenanceWindow::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsDailyMaintenanceWindow();
  return *internal_default_instance();
}

DailyMaintenanceWindow* DailyMaintenanceWindow::New(::google::protobuf::Arena* arena) const {
  DailyMaintenanceWindow* n = new DailyMaintenanceWindow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyMaintenanceWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DailyMaintenanceWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.DailyMaintenanceWindow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DailyMaintenanceWindow.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.DailyMaintenanceWindow.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.DailyMaintenanceWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.DailyMaintenanceWindow)
  return false;
#undef DO_
}

void DailyMaintenanceWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->start_time(), output);
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.DailyMaintenanceWindow)
}

::google::protobuf::uint8* DailyMaintenanceWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.DailyMaintenanceWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_time = 2;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->start_time(), target);
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.DailyMaintenanceWindow.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.DailyMaintenanceWindow)
  return target;
}

size_t DailyMaintenanceWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.DailyMaintenanceWindow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string start_time = 2;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string duration = 3;
  if (this->duration().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyMaintenanceWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.DailyMaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyMaintenanceWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyMaintenanceWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.DailyMaintenanceWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.DailyMaintenanceWindow)
    MergeFrom(*source);
  }
}

void DailyMaintenanceWindow::MergeFrom(const DailyMaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.DailyMaintenanceWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
}

void DailyMaintenanceWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.DailyMaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyMaintenanceWindow::CopyFrom(const DailyMaintenanceWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.DailyMaintenanceWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyMaintenanceWindow::IsInitialized() const {
  return true;
}

void DailyMaintenanceWindow::Swap(DailyMaintenanceWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyMaintenanceWindow::InternalSwap(DailyMaintenanceWindow* other) {
  using std::swap;
  start_time_.Swap(&other->start_time_);
  duration_.Swap(&other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyMaintenanceWindow::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolManagementRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetNodePoolManagementRequest_default_instance_._instance.get_mutable()->management_ = const_cast< ::google::container::v1::NodeManagement*>(
      ::google::container::v1::NodeManagement::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolManagementRequest::kProjectIdFieldNumber;
const int SetNodePoolManagementRequest::kZoneFieldNumber;
const int SetNodePoolManagementRequest::kClusterIdFieldNumber;
const int SetNodePoolManagementRequest::kNodePoolIdFieldNumber;
const int SetNodePoolManagementRequest::kManagementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolManagementRequest::SetNodePoolManagementRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNodePoolManagementRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNodePoolManagementRequest)
}
SetNodePoolManagementRequest::SetNodePoolManagementRequest(const SetNodePoolManagementRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.has_management()) {
    management_ = new ::google::container::v1::NodeManagement(*from.management_);
  } else {
    management_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNodePoolManagementRequest)
}

void SetNodePoolManagementRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  management_ = NULL;
  _cached_size_ = 0;
}

SetNodePoolManagementRequest::~SetNodePoolManagementRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNodePoolManagementRequest)
  SharedDtor();
}

void SetNodePoolManagementRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete management_;
}

void SetNodePoolManagementRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetNodePoolManagementRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetNodePoolManagementRequest& SetNodePoolManagementRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNodePoolManagementRequest();
  return *internal_default_instance();
}

SetNodePoolManagementRequest* SetNodePoolManagementRequest::New(::google::protobuf::Arena* arena) const {
  SetNodePoolManagementRequest* n = new SetNodePoolManagementRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetNodePoolManagementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && management_ != NULL) {
    delete management_;
  }
  management_ = NULL;
  _internal_metadata_.Clear();
}

bool SetNodePoolManagementRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNodePoolManagementRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolManagementRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NodeManagement management = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNodePoolManagementRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNodePoolManagementRequest)
  return false;
#undef DO_
}

void SetNodePoolManagementRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->management_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNodePoolManagementRequest)
}

::google::protobuf::uint8* SetNodePoolManagementRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNodePoolManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolManagementRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->management_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNodePoolManagementRequest)
  return target;
}

size_t SetNodePoolManagementRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNodePoolManagementRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // .google.container.v1.NodeManagement management = 5;
  if (this->has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->management_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetNodePoolManagementRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNodePoolManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolManagementRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetNodePoolManagementRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNodePoolManagementRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNodePoolManagementRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolManagementRequest::MergeFrom(const SetNodePoolManagementRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNodePoolManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.has_management()) {
    mutable_management()->::google::container::v1::NodeManagement::MergeFrom(from.management());
  }
}

void SetNodePoolManagementRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNodePoolManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolManagementRequest::CopyFrom(const SetNodePoolManagementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNodePoolManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolManagementRequest::IsInitialized() const {
  return true;
}

void SetNodePoolManagementRequest::Swap(SetNodePoolManagementRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolManagementRequest::InternalSwap(SetNodePoolManagementRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  node_pool_id_.Swap(&other->node_pool_id_);
  swap(management_, other->management_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetNodePoolManagementRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetNodePoolSizeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNodePoolSizeRequest::kProjectIdFieldNumber;
const int SetNodePoolSizeRequest::kZoneFieldNumber;
const int SetNodePoolSizeRequest::kClusterIdFieldNumber;
const int SetNodePoolSizeRequest::kNodePoolIdFieldNumber;
const int SetNodePoolSizeRequest::kNodeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNodePoolSizeRequest::SetNodePoolSizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNodePoolSizeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNodePoolSizeRequest)
}
SetNodePoolSizeRequest::SetNodePoolSizeRequest(const SetNodePoolSizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  node_count_ = from.node_count_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNodePoolSizeRequest)
}

void SetNodePoolSizeRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_count_ = 0;
  _cached_size_ = 0;
}

SetNodePoolSizeRequest::~SetNodePoolSizeRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNodePoolSizeRequest)
  SharedDtor();
}

void SetNodePoolSizeRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetNodePoolSizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetNodePoolSizeRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetNodePoolSizeRequest& SetNodePoolSizeRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNodePoolSizeRequest();
  return *internal_default_instance();
}

SetNodePoolSizeRequest* SetNodePoolSizeRequest::New(::google::protobuf::Arena* arena) const {
  SetNodePoolSizeRequest* n = new SetNodePoolSizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetNodePoolSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_count_ = 0;
  _internal_metadata_.Clear();
}

bool SetNodePoolSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNodePoolSizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNodePoolSizeRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNodePoolSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNodePoolSizeRequest)
  return false;
#undef DO_
}

void SetNodePoolSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->node_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNodePoolSizeRequest)
}

::google::protobuf::uint8* SetNodePoolSizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNodePoolSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNodePoolSizeRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->node_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNodePoolSizeRequest)
  return target;
}

size_t SetNodePoolSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNodePoolSizeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetNodePoolSizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNodePoolSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNodePoolSizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetNodePoolSizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNodePoolSizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNodePoolSizeRequest)
    MergeFrom(*source);
  }
}

void SetNodePoolSizeRequest::MergeFrom(const SetNodePoolSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNodePoolSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  if (from.node_count() != 0) {
    set_node_count(from.node_count());
  }
}

void SetNodePoolSizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNodePoolSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNodePoolSizeRequest::CopyFrom(const SetNodePoolSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNodePoolSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNodePoolSizeRequest::IsInitialized() const {
  return true;
}

void SetNodePoolSizeRequest::Swap(SetNodePoolSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNodePoolSizeRequest::InternalSwap(SetNodePoolSizeRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  node_pool_id_.Swap(&other->node_pool_id_);
  swap(node_count_, other->node_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetNodePoolSizeRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RollbackNodePoolUpgradeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollbackNodePoolUpgradeRequest::kProjectIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kZoneFieldNumber;
const int RollbackNodePoolUpgradeRequest::kClusterIdFieldNumber;
const int RollbackNodePoolUpgradeRequest::kNodePoolIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollbackNodePoolUpgradeRequest::RollbackNodePoolUpgradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsRollbackNodePoolUpgradeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.RollbackNodePoolUpgradeRequest)
}
RollbackNodePoolUpgradeRequest::RollbackNodePoolUpgradeRequest(const RollbackNodePoolUpgradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_pool_id().size() > 0) {
    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.RollbackNodePoolUpgradeRequest)
}

void RollbackNodePoolUpgradeRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RollbackNodePoolUpgradeRequest::~RollbackNodePoolUpgradeRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.RollbackNodePoolUpgradeRequest)
  SharedDtor();
}

void RollbackNodePoolUpgradeRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RollbackNodePoolUpgradeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RollbackNodePoolUpgradeRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RollbackNodePoolUpgradeRequest& RollbackNodePoolUpgradeRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsRollbackNodePoolUpgradeRequest();
  return *internal_default_instance();
}

RollbackNodePoolUpgradeRequest* RollbackNodePoolUpgradeRequest::New(::google::protobuf::Arena* arena) const {
  RollbackNodePoolUpgradeRequest* n = new RollbackNodePoolUpgradeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RollbackNodePoolUpgradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_pool_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RollbackNodePoolUpgradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_pool_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_pool_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.RollbackNodePoolUpgradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.RollbackNodePoolUpgradeRequest)
  return false;
#undef DO_
}

void RollbackNodePoolUpgradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_pool_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.RollbackNodePoolUpgradeRequest)
}

::google::protobuf::uint8* RollbackNodePoolUpgradeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_pool_id().data(), static_cast<int>(this->node_pool_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_pool_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.RollbackNodePoolUpgradeRequest)
  return target;
}

size_t RollbackNodePoolUpgradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string node_pool_id = 4;
  if (this->node_pool_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_pool_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RollbackNodePoolUpgradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RollbackNodePoolUpgradeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RollbackNodePoolUpgradeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.RollbackNodePoolUpgradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.RollbackNodePoolUpgradeRequest)
    MergeFrom(*source);
  }
}

void RollbackNodePoolUpgradeRequest::MergeFrom(const RollbackNodePoolUpgradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.node_pool_id().size() > 0) {

    node_pool_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_pool_id_);
  }
}

void RollbackNodePoolUpgradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollbackNodePoolUpgradeRequest::CopyFrom(const RollbackNodePoolUpgradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.RollbackNodePoolUpgradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackNodePoolUpgradeRequest::IsInitialized() const {
  return true;
}

void RollbackNodePoolUpgradeRequest::Swap(RollbackNodePoolUpgradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollbackNodePoolUpgradeRequest::InternalSwap(RollbackNodePoolUpgradeRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  node_pool_id_.Swap(&other->node_pool_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RollbackNodePoolUpgradeRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNodePoolsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNodePoolsResponse::kNodePoolsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNodePoolsResponse::ListNodePoolsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListNodePoolsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.ListNodePoolsResponse)
}
ListNodePoolsResponse::ListNodePoolsResponse(const ListNodePoolsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      node_pools_(from.node_pools_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.container.v1.ListNodePoolsResponse)
}

void ListNodePoolsResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListNodePoolsResponse::~ListNodePoolsResponse() {
  // @@protoc_insertion_point(destructor:google.container.v1.ListNodePoolsResponse)
  SharedDtor();
}

void ListNodePoolsResponse::SharedDtor() {
}

void ListNodePoolsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListNodePoolsResponse::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNodePoolsResponse& ListNodePoolsResponse::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsListNodePoolsResponse();
  return *internal_default_instance();
}

ListNodePoolsResponse* ListNodePoolsResponse::New(::google::protobuf::Arena* arena) const {
  ListNodePoolsResponse* n = new ListNodePoolsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListNodePoolsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_pools_.Clear();
  _internal_metadata_.Clear();
}

bool ListNodePoolsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.ListNodePoolsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.container.v1.NodePool node_pools = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_node_pools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.ListNodePoolsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.ListNodePoolsResponse)
  return false;
#undef DO_
}

void ListNodePoolsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.NodePool node_pools = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node_pools(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.ListNodePoolsResponse)
}

::google::protobuf::uint8* ListNodePoolsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.ListNodePoolsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.container.v1.NodePool node_pools = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_pools_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->node_pools(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.ListNodePoolsResponse)
  return target;
}

size_t ListNodePoolsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.ListNodePoolsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.container.v1.NodePool node_pools = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->node_pools_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_pools(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListNodePoolsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.ListNodePoolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodePoolsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNodePoolsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.ListNodePoolsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.ListNodePoolsResponse)
    MergeFrom(*source);
  }
}

void ListNodePoolsResponse::MergeFrom(const ListNodePoolsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.ListNodePoolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_pools_.MergeFrom(from.node_pools_);
}

void ListNodePoolsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.ListNodePoolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodePoolsResponse::CopyFrom(const ListNodePoolsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.ListNodePoolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodePoolsResponse::IsInitialized() const {
  return true;
}

void ListNodePoolsResponse::Swap(ListNodePoolsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNodePoolsResponse::InternalSwap(ListNodePoolsResponse* other) {
  using std::swap;
  node_pools_.InternalSwap(&other->node_pools_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListNodePoolsResponse::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodePoolAutoscaling::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodePoolAutoscaling::kEnabledFieldNumber;
const int NodePoolAutoscaling::kMinNodeCountFieldNumber;
const int NodePoolAutoscaling::kMaxNodeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodePoolAutoscaling::NodePoolAutoscaling()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePoolAutoscaling();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.NodePoolAutoscaling)
}
NodePoolAutoscaling::NodePoolAutoscaling(const NodePoolAutoscaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_node_count_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(max_node_count_));
  // @@protoc_insertion_point(copy_constructor:google.container.v1.NodePoolAutoscaling)
}

void NodePoolAutoscaling::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_node_count_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(max_node_count_));
  _cached_size_ = 0;
}

NodePoolAutoscaling::~NodePoolAutoscaling() {
  // @@protoc_insertion_point(destructor:google.container.v1.NodePoolAutoscaling)
  SharedDtor();
}

void NodePoolAutoscaling::SharedDtor() {
}

void NodePoolAutoscaling::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodePoolAutoscaling::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodePoolAutoscaling& NodePoolAutoscaling::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsNodePoolAutoscaling();
  return *internal_default_instance();
}

NodePoolAutoscaling* NodePoolAutoscaling::New(::google::protobuf::Arena* arena) const {
  NodePoolAutoscaling* n = new NodePoolAutoscaling;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodePoolAutoscaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_node_count_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(max_node_count_));
  _internal_metadata_.Clear();
}

bool NodePoolAutoscaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.NodePoolAutoscaling)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 min_node_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_node_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.NodePoolAutoscaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.NodePoolAutoscaling)
  return false;
#undef DO_
}

void NodePoolAutoscaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->min_node_count(), output);
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_node_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.NodePoolAutoscaling)
}

::google::protobuf::uint8* NodePoolAutoscaling::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.NodePoolAutoscaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->min_node_count(), target);
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_node_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.NodePoolAutoscaling)
  return target;
}

size_t NodePoolAutoscaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.NodePoolAutoscaling)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // int32 min_node_count = 2;
  if (this->min_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_node_count());
  }

  // int32 max_node_count = 3;
  if (this->max_node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_node_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodePoolAutoscaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.NodePoolAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  const NodePoolAutoscaling* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodePoolAutoscaling>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.NodePoolAutoscaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.NodePoolAutoscaling)
    MergeFrom(*source);
  }
}

void NodePoolAutoscaling::MergeFrom(const NodePoolAutoscaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.NodePoolAutoscaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.min_node_count() != 0) {
    set_min_node_count(from.min_node_count());
  }
  if (from.max_node_count() != 0) {
    set_max_node_count(from.max_node_count());
  }
}

void NodePoolAutoscaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.NodePoolAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodePoolAutoscaling::CopyFrom(const NodePoolAutoscaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.NodePoolAutoscaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodePoolAutoscaling::IsInitialized() const {
  return true;
}

void NodePoolAutoscaling::Swap(NodePoolAutoscaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodePoolAutoscaling::InternalSwap(NodePoolAutoscaling* other) {
  using std::swap;
  swap(enabled_, other->enabled_);
  swap(min_node_count_, other->min_node_count_);
  swap(max_node_count_, other->max_node_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodePoolAutoscaling::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SetLabelsRequest_ResourceLabelsEntry_DoNotUse::SetLabelsRequest_ResourceLabelsEntry_DoNotUse() {}
SetLabelsRequest_ResourceLabelsEntry_DoNotUse::SetLabelsRequest_ResourceLabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SetLabelsRequest_ResourceLabelsEntry_DoNotUse::MergeFrom(const SetLabelsRequest_ResourceLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SetLabelsRequest_ResourceLabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[54];
}
void SetLabelsRequest_ResourceLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SetLabelsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLabelsRequest::kProjectIdFieldNumber;
const int SetLabelsRequest::kZoneFieldNumber;
const int SetLabelsRequest::kClusterIdFieldNumber;
const int SetLabelsRequest::kResourceLabelsFieldNumber;
const int SetLabelsRequest::kLabelFingerprintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLabelsRequest::SetLabelsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLabelsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLabelsRequest)
}
SetLabelsRequest::SetLabelsRequest(const SetLabelsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_labels_.MergeFrom(from.resource_labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_fingerprint().size() > 0) {
    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLabelsRequest)
}

void SetLabelsRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetLabelsRequest::~SetLabelsRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLabelsRequest)
  SharedDtor();
}

void SetLabelsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLabelsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLabelsRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetLabelsRequest& SetLabelsRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLabelsRequest();
  return *internal_default_instance();
}

SetLabelsRequest* SetLabelsRequest::New(::google::protobuf::Arena* arena) const {
  SetLabelsRequest* n = new SetLabelsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLabelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_labels_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetLabelsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLabelsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> resource_labels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          SetLabelsRequest_ResourceLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SetLabelsRequest_ResourceLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&resource_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_fingerprint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_fingerprint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLabelsRequest.label_fingerprint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLabelsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLabelsRequest)
  return false;
#undef DO_
}

void SetLabelsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // map<string, string> resource_labels = 4;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->resource_labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string label_fingerprint = 5;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.label_fingerprint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label_fingerprint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLabelsRequest)
}

::google::protobuf::uint8* SetLabelsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLabelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // map<string, string> resource_labels = 4;
  if (!this->resource_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value");
      }
    };

    if (deterministic &&
        this->resource_labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->resource_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resource_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->resource_labels().begin();
          it != this->resource_labels().end(); ++it) {
        entry.reset(resource_labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string label_fingerprint = 5;
  if (this->label_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_fingerprint().data(), static_cast<int>(this->label_fingerprint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLabelsRequest.label_fingerprint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->label_fingerprint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLabelsRequest)
  return target;
}

size_t SetLabelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLabelsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> resource_labels = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_labels_size());
  {
    ::google::protobuf::scoped_ptr<SetLabelsRequest_ResourceLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->resource_labels().begin();
        it != this->resource_labels().end(); ++it) {
      entry.reset(resource_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string label_fingerprint = 5;
  if (this->label_fingerprint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_fingerprint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLabelsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLabelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLabelsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLabelsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLabelsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLabelsRequest)
    MergeFrom(*source);
  }
}

void SetLabelsRequest::MergeFrom(const SetLabelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLabelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_labels_.MergeFrom(from.resource_labels_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.label_fingerprint().size() > 0) {

    label_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_fingerprint_);
  }
}

void SetLabelsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLabelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLabelsRequest::CopyFrom(const SetLabelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLabelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLabelsRequest::IsInitialized() const {
  return true;
}

void SetLabelsRequest::Swap(SetLabelsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLabelsRequest::InternalSwap(SetLabelsRequest* other) {
  using std::swap;
  resource_labels_.Swap(&other->resource_labels_);
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  label_fingerprint_.Swap(&other->label_fingerprint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLabelsRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetLegacyAbacRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLegacyAbacRequest::kProjectIdFieldNumber;
const int SetLegacyAbacRequest::kZoneFieldNumber;
const int SetLegacyAbacRequest::kClusterIdFieldNumber;
const int SetLegacyAbacRequest::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLegacyAbacRequest::SetLegacyAbacRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLegacyAbacRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetLegacyAbacRequest)
}
SetLegacyAbacRequest::SetLegacyAbacRequest(const SetLegacyAbacRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetLegacyAbacRequest)
}

void SetLegacyAbacRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
  _cached_size_ = 0;
}

SetLegacyAbacRequest::~SetLegacyAbacRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetLegacyAbacRequest)
  SharedDtor();
}

void SetLegacyAbacRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLegacyAbacRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLegacyAbacRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetLegacyAbacRequest& SetLegacyAbacRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetLegacyAbacRequest();
  return *internal_default_instance();
}

SetLegacyAbacRequest* SetLegacyAbacRequest::New(::google::protobuf::Arena* arena) const {
  SetLegacyAbacRequest* n = new SetLegacyAbacRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLegacyAbacRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
  _internal_metadata_.Clear();
}

bool SetLegacyAbacRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetLegacyAbacRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLegacyAbacRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLegacyAbacRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetLegacyAbacRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetLegacyAbacRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetLegacyAbacRequest)
  return false;
#undef DO_
}

void SetLegacyAbacRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetLegacyAbacRequest)
}

::google::protobuf::uint8* SetLegacyAbacRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetLegacyAbacRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetLegacyAbacRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetLegacyAbacRequest)
  return target;
}

size_t SetLegacyAbacRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetLegacyAbacRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLegacyAbacRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetLegacyAbacRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLegacyAbacRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLegacyAbacRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetLegacyAbacRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetLegacyAbacRequest)
    MergeFrom(*source);
  }
}

void SetLegacyAbacRequest::MergeFrom(const SetLegacyAbacRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetLegacyAbacRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void SetLegacyAbacRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetLegacyAbacRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLegacyAbacRequest::CopyFrom(const SetLegacyAbacRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetLegacyAbacRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLegacyAbacRequest::IsInitialized() const {
  return true;
}

void SetLegacyAbacRequest::Swap(SetLegacyAbacRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLegacyAbacRequest::InternalSwap(SetLegacyAbacRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLegacyAbacRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartIPRotationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartIPRotationRequest::kProjectIdFieldNumber;
const int StartIPRotationRequest::kZoneFieldNumber;
const int StartIPRotationRequest::kClusterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartIPRotationRequest::StartIPRotationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsStartIPRotationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.StartIPRotationRequest)
}
StartIPRotationRequest::StartIPRotationRequest(const StartIPRotationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.StartIPRotationRequest)
}

void StartIPRotationRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StartIPRotationRequest::~StartIPRotationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.StartIPRotationRequest)
  SharedDtor();
}

void StartIPRotationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartIPRotationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartIPRotationRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartIPRotationRequest& StartIPRotationRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsStartIPRotationRequest();
  return *internal_default_instance();
}

StartIPRotationRequest* StartIPRotationRequest::New(::google::protobuf::Arena* arena) const {
  StartIPRotationRequest* n = new StartIPRotationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartIPRotationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StartIPRotationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.StartIPRotationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StartIPRotationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StartIPRotationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.StartIPRotationRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.StartIPRotationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.StartIPRotationRequest)
  return false;
#undef DO_
}

void StartIPRotationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.StartIPRotationRequest)
}

::google::protobuf::uint8* StartIPRotationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.StartIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.StartIPRotationRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.StartIPRotationRequest)
  return target;
}

size_t StartIPRotationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.StartIPRotationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartIPRotationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.StartIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartIPRotationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartIPRotationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.StartIPRotationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.StartIPRotationRequest)
    MergeFrom(*source);
  }
}

void StartIPRotationRequest::MergeFrom(const StartIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.StartIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
}

void StartIPRotationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.StartIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartIPRotationRequest::CopyFrom(const StartIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.StartIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartIPRotationRequest::IsInitialized() const {
  return true;
}

void StartIPRotationRequest::Swap(StartIPRotationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartIPRotationRequest::InternalSwap(StartIPRotationRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartIPRotationRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompleteIPRotationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteIPRotationRequest::kProjectIdFieldNumber;
const int CompleteIPRotationRequest::kZoneFieldNumber;
const int CompleteIPRotationRequest::kClusterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteIPRotationRequest::CompleteIPRotationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCompleteIPRotationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.CompleteIPRotationRequest)
}
CompleteIPRotationRequest::CompleteIPRotationRequest(const CompleteIPRotationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.CompleteIPRotationRequest)
}

void CompleteIPRotationRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CompleteIPRotationRequest::~CompleteIPRotationRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.CompleteIPRotationRequest)
  SharedDtor();
}

void CompleteIPRotationRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompleteIPRotationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompleteIPRotationRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompleteIPRotationRequest& CompleteIPRotationRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsCompleteIPRotationRequest();
  return *internal_default_instance();
}

CompleteIPRotationRequest* CompleteIPRotationRequest::New(::google::protobuf::Arena* arena) const {
  CompleteIPRotationRequest* n = new CompleteIPRotationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompleteIPRotationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CompleteIPRotationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.CompleteIPRotationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CompleteIPRotationRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CompleteIPRotationRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.CompleteIPRotationRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.CompleteIPRotationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.CompleteIPRotationRequest)
  return false;
#undef DO_
}

void CompleteIPRotationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.CompleteIPRotationRequest)
}

::google::protobuf::uint8* CompleteIPRotationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.CompleteIPRotationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.CompleteIPRotationRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.CompleteIPRotationRequest)
  return target;
}

size_t CompleteIPRotationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.CompleteIPRotationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompleteIPRotationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.CompleteIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteIPRotationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteIPRotationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.CompleteIPRotationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.CompleteIPRotationRequest)
    MergeFrom(*source);
  }
}

void CompleteIPRotationRequest::MergeFrom(const CompleteIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.CompleteIPRotationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
}

void CompleteIPRotationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.CompleteIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteIPRotationRequest::CopyFrom(const CompleteIPRotationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.CompleteIPRotationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteIPRotationRequest::IsInitialized() const {
  return true;
}

void CompleteIPRotationRequest::Swap(CompleteIPRotationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompleteIPRotationRequest::InternalSwap(CompleteIPRotationRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompleteIPRotationRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AcceleratorConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceleratorConfig::kAcceleratorCountFieldNumber;
const int AcceleratorConfig::kAcceleratorTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceleratorConfig::AcceleratorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAcceleratorConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.AcceleratorConfig)
}
AcceleratorConfig::AcceleratorConfig(const AcceleratorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accelerator_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accelerator_type().size() > 0) {
    accelerator_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_);
  }
  accelerator_count_ = from.accelerator_count_;
  // @@protoc_insertion_point(copy_constructor:google.container.v1.AcceleratorConfig)
}

void AcceleratorConfig::SharedCtor() {
  accelerator_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

AcceleratorConfig::~AcceleratorConfig() {
  // @@protoc_insertion_point(destructor:google.container.v1.AcceleratorConfig)
  SharedDtor();
}

void AcceleratorConfig::SharedDtor() {
  accelerator_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceleratorConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceleratorConfig::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AcceleratorConfig& AcceleratorConfig::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsAcceleratorConfig();
  return *internal_default_instance();
}

AcceleratorConfig* AcceleratorConfig::New(::google::protobuf::Arena* arena) const {
  AcceleratorConfig* n = new AcceleratorConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceleratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accelerator_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AcceleratorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.AcceleratorConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 accelerator_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accelerator_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string accelerator_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accelerator_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.AcceleratorConfig.accelerator_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.AcceleratorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.AcceleratorConfig)
  return false;
#undef DO_
}

void AcceleratorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accelerator_count(), output);
  }

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AcceleratorConfig.accelerator_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accelerator_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.AcceleratorConfig)
}

::google::protobuf::uint8* AcceleratorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accelerator_count(), target);
  }

  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type().data(), static_cast<int>(this->accelerator_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.AcceleratorConfig.accelerator_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accelerator_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.AcceleratorConfig)
  return target;
}

size_t AcceleratorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.AcceleratorConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string accelerator_type = 2;
  if (this->accelerator_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accelerator_type());
  }

  // int64 accelerator_count = 1;
  if (this->accelerator_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accelerator_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceleratorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceleratorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceleratorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.AcceleratorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.AcceleratorConfig)
    MergeFrom(*source);
  }
}

void AcceleratorConfig::MergeFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accelerator_type().size() > 0) {

    accelerator_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_);
  }
  if (from.accelerator_count() != 0) {
    set_accelerator_count(from.accelerator_count());
  }
}

void AcceleratorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceleratorConfig::CopyFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceleratorConfig::IsInitialized() const {
  return true;
}

void AcceleratorConfig::Swap(AcceleratorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceleratorConfig::InternalSwap(AcceleratorConfig* other) {
  using std::swap;
  accelerator_type_.Swap(&other->accelerator_type_);
  swap(accelerator_count_, other->accelerator_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceleratorConfig::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetNetworkPolicyRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetNetworkPolicyRequest_default_instance_._instance.get_mutable()->network_policy_ = const_cast< ::google::container::v1::NetworkPolicy*>(
      ::google::container::v1::NetworkPolicy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNetworkPolicyRequest::kProjectIdFieldNumber;
const int SetNetworkPolicyRequest::kZoneFieldNumber;
const int SetNetworkPolicyRequest::kClusterIdFieldNumber;
const int SetNetworkPolicyRequest::kNetworkPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNetworkPolicyRequest::SetNetworkPolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNetworkPolicyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetNetworkPolicyRequest)
}
SetNetworkPolicyRequest::SetNetworkPolicyRequest(const SetNetworkPolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_network_policy()) {
    network_policy_ = new ::google::container::v1::NetworkPolicy(*from.network_policy_);
  } else {
    network_policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetNetworkPolicyRequest)
}

void SetNetworkPolicyRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_policy_ = NULL;
  _cached_size_ = 0;
}

SetNetworkPolicyRequest::~SetNetworkPolicyRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetNetworkPolicyRequest)
  SharedDtor();
}

void SetNetworkPolicyRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete network_policy_;
}

void SetNetworkPolicyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetNetworkPolicyRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetNetworkPolicyRequest& SetNetworkPolicyRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetNetworkPolicyRequest();
  return *internal_default_instance();
}

SetNetworkPolicyRequest* SetNetworkPolicyRequest::New(::google::protobuf::Arena* arena) const {
  SetNetworkPolicyRequest* n = new SetNetworkPolicyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetNetworkPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && network_policy_ != NULL) {
    delete network_policy_;
  }
  network_policy_ = NULL;
  _internal_metadata_.Clear();
}

bool SetNetworkPolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetNetworkPolicyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNetworkPolicyRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNetworkPolicyRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetNetworkPolicyRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.NetworkPolicy network_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetNetworkPolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetNetworkPolicyRequest)
  return false;
#undef DO_
}

void SetNetworkPolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.NetworkPolicy network_policy = 4;
  if (this->has_network_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->network_policy_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetNetworkPolicyRequest)
}

::google::protobuf::uint8* SetNetworkPolicyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetNetworkPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetNetworkPolicyRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.NetworkPolicy network_policy = 4;
  if (this->has_network_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->network_policy_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetNetworkPolicyRequest)
  return target;
}

size_t SetNetworkPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetNetworkPolicyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.container.v1.NetworkPolicy network_policy = 4;
  if (this->has_network_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->network_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetNetworkPolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetNetworkPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNetworkPolicyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetNetworkPolicyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetNetworkPolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetNetworkPolicyRequest)
    MergeFrom(*source);
  }
}

void SetNetworkPolicyRequest::MergeFrom(const SetNetworkPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetNetworkPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_network_policy()) {
    mutable_network_policy()->::google::container::v1::NetworkPolicy::MergeFrom(from.network_policy());
  }
}

void SetNetworkPolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetNetworkPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNetworkPolicyRequest::CopyFrom(const SetNetworkPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetNetworkPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNetworkPolicyRequest::IsInitialized() const {
  return true;
}

void SetNetworkPolicyRequest::Swap(SetNetworkPolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNetworkPolicyRequest::InternalSwap(SetNetworkPolicyRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(network_policy_, other->network_policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetNetworkPolicyRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetMaintenancePolicyRequest::InitAsDefaultInstance() {
  ::google::container::v1::_SetMaintenancePolicyRequest_default_instance_._instance.get_mutable()->maintenance_policy_ = const_cast< ::google::container::v1::MaintenancePolicy*>(
      ::google::container::v1::MaintenancePolicy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMaintenancePolicyRequest::kProjectIdFieldNumber;
const int SetMaintenancePolicyRequest::kZoneFieldNumber;
const int SetMaintenancePolicyRequest::kClusterIdFieldNumber;
const int SetMaintenancePolicyRequest::kMaintenancePolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMaintenancePolicyRequest::SetMaintenancePolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetMaintenancePolicyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.container.v1.SetMaintenancePolicyRequest)
}
SetMaintenancePolicyRequest::SetMaintenancePolicyRequest(const SetMaintenancePolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_maintenance_policy()) {
    maintenance_policy_ = new ::google::container::v1::MaintenancePolicy(*from.maintenance_policy_);
  } else {
    maintenance_policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.container.v1.SetMaintenancePolicyRequest)
}

void SetMaintenancePolicyRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maintenance_policy_ = NULL;
  _cached_size_ = 0;
}

SetMaintenancePolicyRequest::~SetMaintenancePolicyRequest() {
  // @@protoc_insertion_point(destructor:google.container.v1.SetMaintenancePolicyRequest)
  SharedDtor();
}

void SetMaintenancePolicyRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete maintenance_policy_;
}

void SetMaintenancePolicyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMaintenancePolicyRequest::descriptor() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMaintenancePolicyRequest& SetMaintenancePolicyRequest::default_instance() {
  ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::InitDefaultsSetMaintenancePolicyRequest();
  return *internal_default_instance();
}

SetMaintenancePolicyRequest* SetMaintenancePolicyRequest::New(::google::protobuf::Arena* arena) const {
  SetMaintenancePolicyRequest* n = new SetMaintenancePolicyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMaintenancePolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.container.v1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && maintenance_policy_ != NULL) {
    delete maintenance_policy_;
  }
  maintenance_policy_ = NULL;
  _internal_metadata_.Clear();
}

bool SetMaintenancePolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.container.v1.SetMaintenancePolicyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMaintenancePolicyRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMaintenancePolicyRequest.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.container.v1.SetMaintenancePolicyRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.container.v1.MaintenancePolicy maintenance_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maintenance_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.container.v1.SetMaintenancePolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.container.v1.SetMaintenancePolicyRequest)
  return false;
#undef DO_
}

void SetMaintenancePolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.container.v1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_id(), output);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 4;
  if (this->has_maintenance_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->maintenance_policy_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.container.v1.SetMaintenancePolicyRequest)
}

::google::protobuf::uint8* SetMaintenancePolicyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.container.v1.SetMaintenancePolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.container.v1.SetMaintenancePolicyRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_id(), target);
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 4;
  if (this->has_maintenance_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->maintenance_policy_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.container.v1.SetMaintenancePolicyRequest)
  return target;
}

size_t SetMaintenancePolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.container.v1.SetMaintenancePolicyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string cluster_id = 3;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.container.v1.MaintenancePolicy maintenance_policy = 4;
  if (this->has_maintenance_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->maintenance_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMaintenancePolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.container.v1.SetMaintenancePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMaintenancePolicyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMaintenancePolicyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.container.v1.SetMaintenancePolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.container.v1.SetMaintenancePolicyRequest)
    MergeFrom(*source);
  }
}

void SetMaintenancePolicyRequest::MergeFrom(const SetMaintenancePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.container.v1.SetMaintenancePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_maintenance_policy()) {
    mutable_maintenance_policy()->::google::container::v1::MaintenancePolicy::MergeFrom(from.maintenance_policy());
  }
}

void SetMaintenancePolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.container.v1.SetMaintenancePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMaintenancePolicyRequest::CopyFrom(const SetMaintenancePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.container.v1.SetMaintenancePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMaintenancePolicyRequest::IsInitialized() const {
  return true;
}

void SetMaintenancePolicyRequest::Swap(SetMaintenancePolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMaintenancePolicyRequest::InternalSwap(SetMaintenancePolicyRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_);
  zone_.Swap(&other->zone_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(maintenance_policy_, other->maintenance_policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMaintenancePolicyRequest::GetMetadata() const {
  protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcontainer_2fv1_2fcluster_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace container
}  // namespace google

// @@protoc_insertion_point(global_scope)
