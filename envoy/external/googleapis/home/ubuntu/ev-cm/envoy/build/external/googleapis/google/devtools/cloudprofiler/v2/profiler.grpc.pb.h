// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/devtools/cloudprofiler/v2/profiler.proto
// Original file comments:
// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto__INCLUDED
#define GRPC_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto__INCLUDED

#include "google/devtools/cloudprofiler/v2/profiler.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace devtools {
namespace cloudprofiler {
namespace v2 {

// Service for recording the profiling data from profiling agents running
// in the cloud or from an offline provider of profiling data.
//
// General guidelines:
// * Profiles for a single deployment must be created in ascending time order.
// * Profiles can be created in either online or offline mode, see below.
class ProfilerService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.devtools.cloudprofiler.v2.ProfilerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // CreateProfile creates a new profile resource.
    //
    // In the online creation mode:
    // * The server ensures that the new profiles are created at a constant rate
    //   per deployment, so the creation request may hang for some time until the
    //   next profile session is available.
    // * The request may fail with ABORTED error if the creation is not
    //   available within ~1m, the response will indicate the duration of the
    //   backoff the client should take before attempting creating a profile
    //   again. The backoff duration is returned in google.rpc.RetryInfo extension
    //   on the response status. To a gRPC client, the extension will be return as
    //   a binary-serialized proto in the trailing metadata item named
    //   "google.rpc.retryinfo-bin".
    //
    // In the offline creation mode:
    // * The client provides the profile to create along with the profile bytes,
    //   the server records it.
    virtual ::grpc::Status CreateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::google::devtools::cloudprofiler::v2::Profile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>> AsyncCreateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>>(AsyncCreateProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>> PrepareAsyncCreateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>>(PrepareAsyncCreateProfileRaw(context, request, cq));
    }
    // UpdateProfile updates the profile bytes and labels on the profile resource
    // created in the online mode.
    virtual ::grpc::Status UpdateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::google::devtools::cloudprofiler::v2::Profile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>> AsyncUpdateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>>(AsyncUpdateProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>> PrepareAsyncUpdateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>>(PrepareAsyncUpdateProfileRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>* AsyncCreateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>* PrepareAsyncCreateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>* AsyncUpdateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::cloudprofiler::v2::Profile>* PrepareAsyncUpdateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::google::devtools::cloudprofiler::v2::Profile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>> AsyncCreateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>>(AsyncCreateProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>> PrepareAsyncCreateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>>(PrepareAsyncCreateProfileRaw(context, request, cq));
    }
    ::grpc::Status UpdateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::google::devtools::cloudprofiler::v2::Profile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>> AsyncUpdateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>>(AsyncUpdateProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>> PrepareAsyncUpdateProfile(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>>(PrepareAsyncUpdateProfileRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>* AsyncCreateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>* PrepareAsyncCreateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>* AsyncUpdateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::cloudprofiler::v2::Profile>* PrepareAsyncUpdateProfileRaw(::grpc::ClientContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProfile_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // CreateProfile creates a new profile resource.
    //
    // In the online creation mode:
    // * The server ensures that the new profiles are created at a constant rate
    //   per deployment, so the creation request may hang for some time until the
    //   next profile session is available.
    // * The request may fail with ABORTED error if the creation is not
    //   available within ~1m, the response will indicate the duration of the
    //   backoff the client should take before attempting creating a profile
    //   again. The backoff duration is returned in google.rpc.RetryInfo extension
    //   on the response status. To a gRPC client, the extension will be return as
    //   a binary-serialized proto in the trailing metadata item named
    //   "google.rpc.retryinfo-bin".
    //
    // In the offline creation mode:
    // * The client provides the profile to create along with the profile bytes,
    //   the server records it.
    virtual ::grpc::Status CreateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response);
    // UpdateProfile updates the profile bytes and labels on the profile resource
    // created in the online mode.
    virtual ::grpc::Status UpdateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateProfile() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProfile(::grpc::ServerContext* context, ::google::devtools::cloudprofiler::v2::CreateProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::cloudprofiler::v2::Profile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateProfile() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UpdateProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProfile(::grpc::ServerContext* context, ::google::devtools::cloudprofiler::v2::UpdateProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::cloudprofiler::v2::Profile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateProfile<WithAsyncMethod_UpdateProfile<Service > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateProfile() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateProfile() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UpdateProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateProfile() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::cloudprofiler::v2::CreateProfileRequest, ::google::devtools::cloudprofiler::v2::Profile>(std::bind(&WithStreamedUnaryMethod_CreateProfile<BaseClass>::StreamedCreateProfile, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::CreateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::cloudprofiler::v2::CreateProfileRequest,::google::devtools::cloudprofiler::v2::Profile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateProfile() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::cloudprofiler::v2::UpdateProfileRequest, ::google::devtools::cloudprofiler::v2::Profile>(std::bind(&WithStreamedUnaryMethod_UpdateProfile<BaseClass>::StreamedUpdateProfile, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* context, const ::google::devtools::cloudprofiler::v2::UpdateProfileRequest* request, ::google::devtools::cloudprofiler::v2::Profile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::cloudprofiler::v2::UpdateProfileRequest,::google::devtools::cloudprofiler::v2::Profile>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateProfile<WithStreamedUnaryMethod_UpdateProfile<Service > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateProfile<WithStreamedUnaryMethod_UpdateProfile<Service > > StreamedService;
};

}  // namespace v2
}  // namespace cloudprofiler
}  // namespace devtools
}  // namespace google


#endif  // GRPC_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto__INCLUDED
