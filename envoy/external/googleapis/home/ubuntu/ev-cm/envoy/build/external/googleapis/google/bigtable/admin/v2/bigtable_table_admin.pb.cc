// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_table_admin.proto

#include "google/bigtable/admin/v2/bigtable_table_admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {
class CreateTableRequest_SplitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest_Split>
      _instance;
} _CreateTableRequest_Split_default_instance_;
class CreateTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest>
      _instance;
} _CreateTableRequest_default_instance_;
class DropRowRangeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DropRowRangeRequest>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr row_key_prefix_;
  bool delete_all_data_from_table_;
} _DropRowRangeRequest_default_instance_;
class ListTablesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTablesRequest>
      _instance;
} _ListTablesRequest_default_instance_;
class ListTablesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTablesResponse>
      _instance;
} _ListTablesResponse_default_instance_;
class GetTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTableRequest>
      _instance;
} _GetTableRequest_default_instance_;
class DeleteTableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTableRequest>
      _instance;
} _DeleteTableRequest_default_instance_;
class ModifyColumnFamiliesRequest_ModificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyColumnFamiliesRequest_Modification>
      _instance;
  const ::google::bigtable::admin::v2::ColumnFamily* create_;
  const ::google::bigtable::admin::v2::ColumnFamily* update_;
  bool drop_;
} _ModifyColumnFamiliesRequest_Modification_default_instance_;
class ModifyColumnFamiliesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyColumnFamiliesRequest>
      _instance;
} _ModifyColumnFamiliesRequest_default_instance_;
}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google
namespace protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto {
void InitDefaultsCreateTableRequest_SplitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::v2::_CreateTableRequest_Split_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::CreateTableRequest_Split();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::CreateTableRequest_Split::InitAsDefaultInstance();
}

void InitDefaultsCreateTableRequest_Split() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateTableRequest_SplitImpl);
}

void InitDefaultsCreateTableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fadmin_2fv2_2ftable_2eproto::InitDefaultsTable();
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsCreateTableRequest_Split();
  {
    void* ptr = &::google::bigtable::admin::v2::_CreateTableRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::CreateTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::CreateTableRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateTableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateTableRequestImpl);
}

void InitDefaultsDropRowRangeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::v2::_DropRowRangeRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::DropRowRangeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::DropRowRangeRequest::InitAsDefaultInstance();
}

void InitDefaultsDropRowRangeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDropRowRangeRequestImpl);
}

void InitDefaultsListTablesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::v2::_ListTablesRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::ListTablesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::ListTablesRequest::InitAsDefaultInstance();
}

void InitDefaultsListTablesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListTablesRequestImpl);
}

void InitDefaultsListTablesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fadmin_2fv2_2ftable_2eproto::InitDefaultsTable();
  {
    void* ptr = &::google::bigtable::admin::v2::_ListTablesResponse_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::ListTablesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::ListTablesResponse::InitAsDefaultInstance();
}

void InitDefaultsListTablesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListTablesResponseImpl);
}

void InitDefaultsGetTableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::v2::_GetTableRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::GetTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::GetTableRequest::InitAsDefaultInstance();
}

void InitDefaultsGetTableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetTableRequestImpl);
}

void InitDefaultsDeleteTableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::admin::v2::_DeleteTableRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::DeleteTableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::DeleteTableRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteTableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteTableRequestImpl);
}

void InitDefaultsModifyColumnFamiliesRequest_ModificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fadmin_2fv2_2ftable_2eproto::InitDefaultsColumnFamily();
  {
    void* ptr = &::google::bigtable::admin::v2::_ModifyColumnFamiliesRequest_Modification_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification::InitAsDefaultInstance();
}

void InitDefaultsModifyColumnFamiliesRequest_Modification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyColumnFamiliesRequest_ModificationImpl);
}

void InitDefaultsModifyColumnFamiliesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsModifyColumnFamiliesRequest_Modification();
  {
    void* ptr = &::google::bigtable::admin::v2::_ModifyColumnFamiliesRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest::InitAsDefaultInstance();
}

void InitDefaultsModifyColumnFamiliesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyColumnFamiliesRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::CreateTableRequest_Split, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::CreateTableRequest_Split, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::CreateTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::CreateTableRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::CreateTableRequest, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::CreateTableRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::CreateTableRequest, initial_splits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::DropRowRangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::DropRowRangeRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::DropRowRangeRequest, name_),
  offsetof(::google::bigtable::admin::v2::DropRowRangeRequestDefaultTypeInternal, row_key_prefix_),
  offsetof(::google::bigtable::admin::v2::DropRowRangeRequestDefaultTypeInternal, delete_all_data_from_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::DropRowRangeRequest, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ListTablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ListTablesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ListTablesRequest, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ListTablesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ListTablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ListTablesResponse, tables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ListTablesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::GetTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::GetTableRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::GetTableRequest, view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::DeleteTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::DeleteTableRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification, id_),
  offsetof(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_ModificationDefaultTypeInternal, create_),
  offsetof(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_ModificationDefaultTypeInternal, update_),
  offsetof(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_ModificationDefaultTypeInternal, drop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification, mod_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest, modifications_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::bigtable::admin::v2::CreateTableRequest_Split)},
  { 6, -1, sizeof(::google::bigtable::admin::v2::CreateTableRequest)},
  { 15, -1, sizeof(::google::bigtable::admin::v2::DropRowRangeRequest)},
  { 24, -1, sizeof(::google::bigtable::admin::v2::ListTablesRequest)},
  { 32, -1, sizeof(::google::bigtable::admin::v2::ListTablesResponse)},
  { 39, -1, sizeof(::google::bigtable::admin::v2::GetTableRequest)},
  { 46, -1, sizeof(::google::bigtable::admin::v2::DeleteTableRequest)},
  { 52, -1, sizeof(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification)},
  { 62, -1, sizeof(::google::bigtable::admin::v2::ModifyColumnFamiliesRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_CreateTableRequest_Split_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_CreateTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_DropRowRangeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_ListTablesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_ListTablesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_GetTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_DeleteTableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_ModifyColumnFamiliesRequest_Modification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_ModifyColumnFamiliesRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/bigtable/admin/v2/bigtable_table_admin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n3google/bigtable/admin/v2/bigtable_tabl"
      "e_admin.proto\022\030google.bigtable.admin.v2\032"
      "\034google/api/annotations.proto\032$google/bi"
      "gtable/admin/v2/table.proto\032#google/long"
      "running/operations.proto\032\036google/protobu"
      "f/duration.proto\032\033google/protobuf/empty."
      "proto\032\037google/protobuf/timestamp.proto\"\310"
      "\001\n\022CreateTableRequest\022\016\n\006parent\030\001 \001(\t\022\020\n"
      "\010table_id\030\002 \001(\t\022.\n\005table\030\003 \001(\0132\037.google."
      "bigtable.admin.v2.Table\022J\n\016initial_split"
      "s\030\004 \003(\01322.google.bigtable.admin.v2.Creat"
      "eTableRequest.Split\032\024\n\005Split\022\013\n\003key\030\001 \001("
      "\014\"m\n\023DropRowRangeRequest\022\014\n\004name\030\001 \001(\t\022\030"
      "\n\016row_key_prefix\030\002 \001(\014H\000\022$\n\032delete_all_d"
      "ata_from_table\030\003 \001(\010H\000B\010\n\006target\"k\n\021List"
      "TablesRequest\022\016\n\006parent\030\001 \001(\t\0222\n\004view\030\002 "
      "\001(\0162$.google.bigtable.admin.v2.Table.Vie"
      "w\022\022\n\npage_token\030\003 \001(\t\"^\n\022ListTablesRespo"
      "nse\022/\n\006tables\030\001 \003(\0132\037.google.bigtable.ad"
      "min.v2.Table\022\027\n\017next_page_token\030\002 \001(\t\"S\n"
      "\017GetTableRequest\022\014\n\004name\030\001 \001(\t\0222\n\004view\030\002"
      " \001(\0162$.google.bigtable.admin.v2.Table.Vi"
      "ew\"\"\n\022DeleteTableRequest\022\014\n\004name\030\001 \001(\t\"\256"
      "\002\n\033ModifyColumnFamiliesRequest\022\014\n\004name\030\001"
      " \001(\t\022Y\n\rmodifications\030\002 \003(\0132B.google.big"
      "table.admin.v2.ModifyColumnFamiliesReque"
      "st.Modification\032\245\001\n\014Modification\022\n\n\002id\030\001"
      " \001(\t\0228\n\006create\030\002 \001(\0132&.google.bigtable.a"
      "dmin.v2.ColumnFamilyH\000\0228\n\006update\030\003 \001(\0132&"
      ".google.bigtable.admin.v2.ColumnFamilyH\000"
      "\022\016\n\004drop\030\004 \001(\010H\000B\005\n\003mod2\270\007\n\022BigtableTabl"
      "eAdmin\022\223\001\n\013CreateTable\022,.google.bigtable"
      ".admin.v2.CreateTableRequest\032\037.google.bi"
      "gtable.admin.v2.Table\"5\202\323\344\223\002/\"*/v2/{pare"
      "nt=projects/*/instances/*}/tables:\001*\022\233\001\n"
      "\nListTables\022+.google.bigtable.admin.v2.L"
      "istTablesRequest\032,.google.bigtable.admin"
      ".v2.ListTablesResponse\"2\202\323\344\223\002,\022*/v2/{par"
      "ent=projects/*/instances/*}/tables\022\212\001\n\010G"
      "etTable\022).google.bigtable.admin.v2.GetTa"
      "bleRequest\032\037.google.bigtable.admin.v2.Ta"
      "ble\"2\202\323\344\223\002,\022*/v2/{name=projects/*/instan"
      "ces/*/tables/*}\022\207\001\n\013DeleteTable\022,.google"
      ".bigtable.admin.v2.DeleteTableRequest\032\026."
      "google.protobuf.Empty\"2\202\323\344\223\002,**/v2/{name"
      "=projects/*/instances/*/tables/*}\022\272\001\n\024Mo"
      "difyColumnFamilies\0225.google.bigtable.adm"
      "in.v2.ModifyColumnFamiliesRequest\032\037.goog"
      "le.bigtable.admin.v2.Table\"J\202\323\344\223\002D\"\?/v2/"
      "{name=projects/*/instances/*/tables/*}:m"
      "odifyColumnFamilies:\001*\022\231\001\n\014DropRowRange\022"
      "-.google.bigtable.admin.v2.DropRowRangeR"
      "equest\032\026.google.protobuf.Empty\"B\202\323\344\223\002<\"7"
      "/v2/{name=projects/*/instances/*/tables/"
      "*}:dropRowRange:\001*B\231\001\n\034com.google.bigtab"
      "le.admin.v2B\027BigtableTableAdminProtoP\001Z="
      "google.golang.org/genproto/googleapis/bi"
      "gtable/admin/v2;admin\252\002\036Google.Cloud.Big"
      "table.Admin.V2b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/admin/v2/bigtable_table_admin.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2ftable_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

// ===================================================================

void CreateTableRequest_Split::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest_Split::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest_Split::CreateTableRequest_Split()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsCreateTableRequest_Split();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateTableRequest.Split)
}
CreateTableRequest_Split::CreateTableRequest_Split(const CreateTableRequest_Split& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateTableRequest.Split)
}

void CreateTableRequest_Split::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateTableRequest_Split::~CreateTableRequest_Split() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateTableRequest.Split)
  SharedDtor();
}

void CreateTableRequest_Split::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTableRequest_Split::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTableRequest_Split::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableRequest_Split& CreateTableRequest_Split::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsCreateTableRequest_Split();
  return *internal_default_instance();
}

CreateTableRequest_Split* CreateTableRequest_Split::New(::google::protobuf::Arena* arena) const {
  CreateTableRequest_Split* n = new CreateTableRequest_Split;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTableRequest_Split::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateTableRequest_Split::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateTableRequest.Split)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateTableRequest.Split)
  return false;
#undef DO_
}

void CreateTableRequest_Split::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateTableRequest.Split)
}

::google::protobuf::uint8* CreateTableRequest_Split::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateTableRequest.Split)
  return target;
}

size_t CreateTableRequest_Split::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTableRequest_Split::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableRequest_Split* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest_Split>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateTableRequest.Split)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateTableRequest.Split)
    MergeFrom(*source);
  }
}

void CreateTableRequest_Split::MergeFrom(const CreateTableRequest_Split& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void CreateTableRequest_Split::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest_Split::CopyFrom(const CreateTableRequest_Split& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest_Split::IsInitialized() const {
  return true;
}

void CreateTableRequest_Split::Swap(CreateTableRequest_Split* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest_Split::InternalSwap(CreateTableRequest_Split* other) {
  using std::swap;
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTableRequest_Split::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTableRequest::InitAsDefaultInstance() {
  ::google::bigtable::admin::v2::_CreateTableRequest_default_instance_._instance.get_mutable()->table_ = const_cast< ::google::bigtable::admin::v2::Table*>(
      ::google::bigtable::admin::v2::Table::internal_default_instance());
}
void CreateTableRequest::clear_table() {
  if (GetArenaNoVirtual() == NULL && table_ != NULL) {
    delete table_;
  }
  table_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest::kParentFieldNumber;
const int CreateTableRequest::kTableIdFieldNumber;
const int CreateTableRequest::kTableFieldNumber;
const int CreateTableRequest::kInitialSplitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest::CreateTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsCreateTableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateTableRequest)
}
CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      initial_splits_(from.initial_splits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  table_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_id().size() > 0) {
    table_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_id_);
  }
  if (from.has_table()) {
    table_ = new ::google::bigtable::admin::v2::Table(*from.table_);
  } else {
    table_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateTableRequest)
}

void CreateTableRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_ = NULL;
  _cached_size_ = 0;
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateTableRequest)
  SharedDtor();
}

void CreateTableRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete table_;
}

void CreateTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTableRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTableRequest& CreateTableRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsCreateTableRequest();
  return *internal_default_instance();
}

CreateTableRequest* CreateTableRequest::New(::google::protobuf::Arena* arena) const {
  CreateTableRequest* n = new CreateTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initial_splits_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && table_ != NULL) {
    delete table_;
  }
  table_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateTableRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_id().data(), static_cast<int>(this->table_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateTableRequest.table_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Table table = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_initial_splits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateTableRequest)
  return false;
#undef DO_
}

void CreateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string table_id = 2;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), static_cast<int>(this->table_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.table_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table_id(), output);
  }

  // .google.bigtable.admin.v2.Table table = 3;
  if (this->has_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->table_, output);
  }

  // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initial_splits_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->initial_splits(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateTableRequest)
}

::google::protobuf::uint8* CreateTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string table_id = 2;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), static_cast<int>(this->table_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.table_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table_id(), target);
  }

  // .google.bigtable.admin.v2.Table table = 3;
  if (this->has_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->table_, deterministic, target);
  }

  // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initial_splits_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->initial_splits(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateTableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->initial_splits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->initial_splits(static_cast<int>(i)));
    }
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string table_id = 2;
  if (this->table_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_id());
  }

  // .google.bigtable.admin.v2.Table table = 3;
  if (this->has_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->table_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateTableRequest)
    MergeFrom(*source);
  }
}

void CreateTableRequest::MergeFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initial_splits_.MergeFrom(from.initial_splits_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.table_id().size() > 0) {

    table_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_id_);
  }
  if (from.has_table()) {
    mutable_table()->::google::bigtable::admin::v2::Table::MergeFrom(from.table());
  }
}

void CreateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  return true;
}

void CreateTableRequest::Swap(CreateTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  using std::swap;
  initial_splits_.InternalSwap(&other->initial_splits_);
  parent_.Swap(&other->parent_);
  table_id_.Swap(&other->table_id_);
  swap(table_, other->table_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DropRowRangeRequest::InitAsDefaultInstance() {
  ::google::bigtable::admin::v2::_DropRowRangeRequest_default_instance_.row_key_prefix_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::admin::v2::_DropRowRangeRequest_default_instance_.delete_all_data_from_table_ = false;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropRowRangeRequest::kNameFieldNumber;
const int DropRowRangeRequest::kRowKeyPrefixFieldNumber;
const int DropRowRangeRequest::kDeleteAllDataFromTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropRowRangeRequest::DropRowRangeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsDropRowRangeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.DropRowRangeRequest)
}
DropRowRangeRequest::DropRowRangeRequest(const DropRowRangeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_target();
  switch (from.target_case()) {
    case kRowKeyPrefix: {
      set_row_key_prefix(from.row_key_prefix());
      break;
    }
    case kDeleteAllDataFromTable: {
      set_delete_all_data_from_table(from.delete_all_data_from_table());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.DropRowRangeRequest)
}

void DropRowRangeRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
  _cached_size_ = 0;
}

DropRowRangeRequest::~DropRowRangeRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.DropRowRangeRequest)
  SharedDtor();
}

void DropRowRangeRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_target()) {
    clear_target();
  }
}

void DropRowRangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropRowRangeRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropRowRangeRequest& DropRowRangeRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsDropRowRangeRequest();
  return *internal_default_instance();
}

DropRowRangeRequest* DropRowRangeRequest::New(::google::protobuf::Arena* arena) const {
  DropRowRangeRequest* n = new DropRowRangeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropRowRangeRequest::clear_target() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.admin.v2.DropRowRangeRequest)
  switch (target_case()) {
    case kRowKeyPrefix: {
      target_.row_key_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDeleteAllDataFromTable: {
      // No need to clear
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_NOT_SET;
}


void DropRowRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.DropRowRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_target();
  _internal_metadata_.Clear();
}

bool DropRowRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.DropRowRangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.DropRowRangeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes row_key_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool delete_all_data_from_table = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &target_.delete_all_data_from_table_)));
          set_has_delete_all_data_from_table();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.DropRowRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.DropRowRangeRequest)
  return false;
#undef DO_
}

void DropRowRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.DropRowRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DropRowRangeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes row_key_prefix = 2;
  if (has_row_key_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->row_key_prefix(), output);
  }

  // bool delete_all_data_from_table = 3;
  if (has_delete_all_data_from_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->delete_all_data_from_table(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.DropRowRangeRequest)
}

::google::protobuf::uint8* DropRowRangeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.DropRowRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DropRowRangeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes row_key_prefix = 2;
  if (has_row_key_prefix()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->row_key_prefix(), target);
  }

  // bool delete_all_data_from_table = 3;
  if (has_delete_all_data_from_table()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->delete_all_data_from_table(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.DropRowRangeRequest)
  return target;
}

size_t DropRowRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.DropRowRangeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (target_case()) {
    // bytes row_key_prefix = 2;
    case kRowKeyPrefix: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->row_key_prefix());
      break;
    }
    // bool delete_all_data_from_table = 3;
    case kDeleteAllDataFromTable: {
      total_size += 1 + 1;
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropRowRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DropRowRangeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropRowRangeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.DropRowRangeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.DropRowRangeRequest)
    MergeFrom(*source);
  }
}

void DropRowRangeRequest::MergeFrom(const DropRowRangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.target_case()) {
    case kRowKeyPrefix: {
      set_row_key_prefix(from.row_key_prefix());
      break;
    }
    case kDeleteAllDataFromTable: {
      set_delete_all_data_from_table(from.delete_all_data_from_table());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
}

void DropRowRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropRowRangeRequest::CopyFrom(const DropRowRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropRowRangeRequest::IsInitialized() const {
  return true;
}

void DropRowRangeRequest::Swap(DropRowRangeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropRowRangeRequest::InternalSwap(DropRowRangeRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(target_, other->target_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropRowRangeRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTablesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTablesRequest::kParentFieldNumber;
const int ListTablesRequest::kViewFieldNumber;
const int ListTablesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTablesRequest::ListTablesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsListTablesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListTablesRequest)
}
ListTablesRequest::ListTablesRequest(const ListTablesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListTablesRequest)
}

void ListTablesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _cached_size_ = 0;
}

ListTablesRequest::~ListTablesRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListTablesRequest)
  SharedDtor();
}

void ListTablesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTablesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTablesRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTablesRequest& ListTablesRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsListTablesRequest();
  return *internal_default_instance();
}

ListTablesRequest* ListTablesRequest::New(::google::protobuf::Arena* arena) const {
  ListTablesRequest* n = new ListTablesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListTablesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _internal_metadata_.Clear();
}

bool ListTablesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListTablesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListTablesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Table.View view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::bigtable::admin::v2::Table_View >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListTablesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListTablesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListTablesRequest)
  return false;
#undef DO_
}

void ListTablesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListTablesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->view(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListTablesRequest)
}

::google::protobuf::uint8* ListTablesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListTablesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->view(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListTablesRequest)
  return target;
}

size_t ListTablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListTablesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTablesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListTablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTablesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTablesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListTablesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListTablesRequest)
    MergeFrom(*source);
  }
}

void ListTablesRequest::MergeFrom(const ListTablesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListTablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
}

void ListTablesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTablesRequest::CopyFrom(const ListTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTablesRequest::IsInitialized() const {
  return true;
}

void ListTablesRequest::Swap(ListTablesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTablesRequest::InternalSwap(ListTablesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  swap(view_, other->view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTablesRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTablesResponse::InitAsDefaultInstance() {
}
void ListTablesResponse::clear_tables() {
  tables_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTablesResponse::kTablesFieldNumber;
const int ListTablesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTablesResponse::ListTablesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsListTablesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListTablesResponse)
}
ListTablesResponse::ListTablesResponse(const ListTablesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tables_(from.tables_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListTablesResponse)
}

void ListTablesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTablesResponse::~ListTablesResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListTablesResponse)
  SharedDtor();
}

void ListTablesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTablesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTablesResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTablesResponse& ListTablesResponse::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsListTablesResponse();
  return *internal_default_instance();
}

ListTablesResponse* ListTablesResponse::New(::google::protobuf::Arena* arena) const {
  ListTablesResponse* n = new ListTablesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListTablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTablesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListTablesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.admin.v2.Table tables = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListTablesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListTablesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListTablesResponse)
  return false;
#undef DO_
}

void ListTablesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListTablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.v2.Table tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListTablesResponse)
}

::google::protobuf::uint8* ListTablesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListTablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.v2.Table tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tables(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListTablesResponse)
  return target;
}

size_t ListTablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListTablesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.admin.v2.Table tables = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tables(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTablesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListTablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTablesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTablesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListTablesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListTablesResponse)
    MergeFrom(*source);
  }
}

void ListTablesResponse::MergeFrom(const ListTablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListTablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTablesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTablesResponse::CopyFrom(const ListTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTablesResponse::IsInitialized() const {
  return true;
}

void ListTablesResponse::Swap(ListTablesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTablesResponse::InternalSwap(ListTablesResponse* other) {
  using std::swap;
  tables_.InternalSwap(&other->tables_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTablesResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableRequest::kNameFieldNumber;
const int GetTableRequest::kViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableRequest::GetTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsGetTableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.GetTableRequest)
}
GetTableRequest::GetTableRequest(const GetTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.GetTableRequest)
}

void GetTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _cached_size_ = 0;
}

GetTableRequest::~GetTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.GetTableRequest)
  SharedDtor();
}

void GetTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTableRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTableRequest& GetTableRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsGetTableRequest();
  return *internal_default_instance();
}

GetTableRequest* GetTableRequest::New(::google::protobuf::Arena* arena) const {
  GetTableRequest* n = new GetTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.GetTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _internal_metadata_.Clear();
}

bool GetTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.GetTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.GetTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Table.View view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::bigtable::admin::v2::Table_View >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.GetTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.GetTableRequest)
  return false;
#undef DO_
}

void GetTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.GetTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.GetTableRequest)
}

::google::protobuf::uint8* GetTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.GetTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.GetTableRequest)
  return target;
}

size_t GetTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.GetTableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.GetTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.GetTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.GetTableRequest)
    MergeFrom(*source);
  }
}

void GetTableRequest::MergeFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.GetTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
}

void GetTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.GetTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableRequest::CopyFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.GetTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableRequest::IsInitialized() const {
  return true;
}

void GetTableRequest::Swap(GetTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableRequest::InternalSwap(GetTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(view_, other->view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTableRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteTableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTableRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTableRequest::DeleteTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsDeleteTableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.DeleteTableRequest)
}
DeleteTableRequest::DeleteTableRequest(const DeleteTableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.DeleteTableRequest)
}

void DeleteTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteTableRequest::~DeleteTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.DeleteTableRequest)
  SharedDtor();
}

void DeleteTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteTableRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteTableRequest& DeleteTableRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsDeleteTableRequest();
  return *internal_default_instance();
}

DeleteTableRequest* DeleteTableRequest::New(::google::protobuf::Arena* arena) const {
  DeleteTableRequest* n = new DeleteTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.DeleteTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.DeleteTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.DeleteTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.DeleteTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.DeleteTableRequest)
  return false;
#undef DO_
}

void DeleteTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.DeleteTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.DeleteTableRequest)
}

::google::protobuf::uint8* DeleteTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.DeleteTableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.DeleteTableRequest)
  return target;
}

size_t DeleteTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.DeleteTableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.DeleteTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.DeleteTableRequest)
    MergeFrom(*source);
  }
}

void DeleteTableRequest::MergeFrom(const DeleteTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTableRequest::CopyFrom(const DeleteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTableRequest::IsInitialized() const {
  return true;
}

void DeleteTableRequest::Swap(DeleteTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTableRequest::InternalSwap(DeleteTableRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteTableRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyColumnFamiliesRequest_Modification::InitAsDefaultInstance() {
  ::google::bigtable::admin::v2::_ModifyColumnFamiliesRequest_Modification_default_instance_.create_ = const_cast< ::google::bigtable::admin::v2::ColumnFamily*>(
      ::google::bigtable::admin::v2::ColumnFamily::internal_default_instance());
  ::google::bigtable::admin::v2::_ModifyColumnFamiliesRequest_Modification_default_instance_.update_ = const_cast< ::google::bigtable::admin::v2::ColumnFamily*>(
      ::google::bigtable::admin::v2::ColumnFamily::internal_default_instance());
  ::google::bigtable::admin::v2::_ModifyColumnFamiliesRequest_Modification_default_instance_.drop_ = false;
}
void ModifyColumnFamiliesRequest_Modification::set_allocated_create(::google::bigtable::admin::v2::ColumnFamily* create) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mod();
  if (create) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      create = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create, submessage_arena);
    }
    set_has_create();
    mod_.create_ = create;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
}
void ModifyColumnFamiliesRequest_Modification::clear_create() {
  if (has_create()) {
    delete mod_.create_;
    clear_has_mod();
  }
}
void ModifyColumnFamiliesRequest_Modification::set_allocated_update(::google::bigtable::admin::v2::ColumnFamily* update) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mod();
  if (update) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    set_has_update();
    mod_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
}
void ModifyColumnFamiliesRequest_Modification::clear_update() {
  if (has_update()) {
    delete mod_.update_;
    clear_has_mod();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyColumnFamiliesRequest_Modification::kIdFieldNumber;
const int ModifyColumnFamiliesRequest_Modification::kCreateFieldNumber;
const int ModifyColumnFamiliesRequest_Modification::kUpdateFieldNumber;
const int ModifyColumnFamiliesRequest_Modification::kDropFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyColumnFamiliesRequest_Modification::ModifyColumnFamiliesRequest_Modification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsModifyColumnFamiliesRequest_Modification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
}
ModifyColumnFamiliesRequest_Modification::ModifyColumnFamiliesRequest_Modification(const ModifyColumnFamiliesRequest_Modification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  clear_has_mod();
  switch (from.mod_case()) {
    case kCreate: {
      mutable_create()->::google::bigtable::admin::v2::ColumnFamily::MergeFrom(from.create());
      break;
    }
    case kUpdate: {
      mutable_update()->::google::bigtable::admin::v2::ColumnFamily::MergeFrom(from.update());
      break;
    }
    case kDrop: {
      set_drop(from.drop());
      break;
    }
    case MOD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
}

void ModifyColumnFamiliesRequest_Modification::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mod();
  _cached_size_ = 0;
}

ModifyColumnFamiliesRequest_Modification::~ModifyColumnFamiliesRequest_Modification() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  SharedDtor();
}

void ModifyColumnFamiliesRequest_Modification::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_mod()) {
    clear_mod();
  }
}

void ModifyColumnFamiliesRequest_Modification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyColumnFamiliesRequest_Modification::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyColumnFamiliesRequest_Modification& ModifyColumnFamiliesRequest_Modification::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsModifyColumnFamiliesRequest_Modification();
  return *internal_default_instance();
}

ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest_Modification::New(::google::protobuf::Arena* arena) const {
  ModifyColumnFamiliesRequest_Modification* n = new ModifyColumnFamiliesRequest_Modification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyColumnFamiliesRequest_Modification::clear_mod() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  switch (mod_case()) {
    case kCreate: {
      delete mod_.create_;
      break;
    }
    case kUpdate: {
      delete mod_.update_;
      break;
    }
    case kDrop: {
      // No need to clear
      break;
    }
    case MOD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MOD_NOT_SET;
}


void ModifyColumnFamiliesRequest_Modification::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_mod();
  _internal_metadata_.Clear();
}

bool ModifyColumnFamiliesRequest_Modification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.ColumnFamily create = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.ColumnFamily update = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool drop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_mod();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mod_.drop_)));
          set_has_drop();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  return false;
#undef DO_
}

void ModifyColumnFamiliesRequest_Modification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .google.bigtable.admin.v2.ColumnFamily create = 2;
  if (has_create()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *mod_.create_, output);
  }

  // .google.bigtable.admin.v2.ColumnFamily update = 3;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *mod_.update_, output);
  }

  // bool drop = 4;
  if (has_drop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->drop(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
}

::google::protobuf::uint8* ModifyColumnFamiliesRequest_Modification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .google.bigtable.admin.v2.ColumnFamily create = 2;
  if (has_create()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *mod_.create_, deterministic, target);
  }

  // .google.bigtable.admin.v2.ColumnFamily update = 3;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *mod_.update_, deterministic, target);
  }

  // bool drop = 4;
  if (has_drop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->drop(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  return target;
}

size_t ModifyColumnFamiliesRequest_Modification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  switch (mod_case()) {
    // .google.bigtable.admin.v2.ColumnFamily create = 2;
    case kCreate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mod_.create_);
      break;
    }
    // .google.bigtable.admin.v2.ColumnFamily update = 3;
    case kUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mod_.update_);
      break;
    }
    // bool drop = 4;
    case kDrop: {
      total_size += 1 + 1;
      break;
    }
    case MOD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyColumnFamiliesRequest_Modification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyColumnFamiliesRequest_Modification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyColumnFamiliesRequest_Modification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
    MergeFrom(*source);
  }
}

void ModifyColumnFamiliesRequest_Modification::MergeFrom(const ModifyColumnFamiliesRequest_Modification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  switch (from.mod_case()) {
    case kCreate: {
      mutable_create()->::google::bigtable::admin::v2::ColumnFamily::MergeFrom(from.create());
      break;
    }
    case kUpdate: {
      mutable_update()->::google::bigtable::admin::v2::ColumnFamily::MergeFrom(from.update());
      break;
    }
    case kDrop: {
      set_drop(from.drop());
      break;
    }
    case MOD_NOT_SET: {
      break;
    }
  }
}

void ModifyColumnFamiliesRequest_Modification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyColumnFamiliesRequest_Modification::CopyFrom(const ModifyColumnFamiliesRequest_Modification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyColumnFamiliesRequest_Modification::IsInitialized() const {
  return true;
}

void ModifyColumnFamiliesRequest_Modification::Swap(ModifyColumnFamiliesRequest_Modification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyColumnFamiliesRequest_Modification::InternalSwap(ModifyColumnFamiliesRequest_Modification* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(mod_, other->mod_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyColumnFamiliesRequest_Modification::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyColumnFamiliesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyColumnFamiliesRequest::kNameFieldNumber;
const int ModifyColumnFamiliesRequest::kModificationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyColumnFamiliesRequest::ModifyColumnFamiliesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsModifyColumnFamiliesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
}
ModifyColumnFamiliesRequest::ModifyColumnFamiliesRequest(const ModifyColumnFamiliesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      modifications_(from.modifications_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
}

void ModifyColumnFamiliesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyColumnFamiliesRequest::~ModifyColumnFamiliesRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  SharedDtor();
}

void ModifyColumnFamiliesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyColumnFamiliesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyColumnFamiliesRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyColumnFamiliesRequest& ModifyColumnFamiliesRequest::default_instance() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::InitDefaultsModifyColumnFamiliesRequest();
  return *internal_default_instance();
}

ModifyColumnFamiliesRequest* ModifyColumnFamiliesRequest::New(::google::protobuf::Arena* arena) const {
  ModifyColumnFamiliesRequest* n = new ModifyColumnFamiliesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyColumnFamiliesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modifications_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ModifyColumnFamiliesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_modifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  return false;
#undef DO_
}

void ModifyColumnFamiliesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifications_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->modifications(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
}

::google::protobuf::uint8* ModifyColumnFamiliesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifications_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->modifications(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  return target;
}

size_t ModifyColumnFamiliesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->modifications_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifications(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyColumnFamiliesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyColumnFamiliesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyColumnFamiliesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
    MergeFrom(*source);
  }
}

void ModifyColumnFamiliesRequest::MergeFrom(const ModifyColumnFamiliesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  modifications_.MergeFrom(from.modifications_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ModifyColumnFamiliesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyColumnFamiliesRequest::CopyFrom(const ModifyColumnFamiliesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyColumnFamiliesRequest::IsInitialized() const {
  return true;
}

void ModifyColumnFamiliesRequest::Swap(ModifyColumnFamiliesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyColumnFamiliesRequest::InternalSwap(ModifyColumnFamiliesRequest* other) {
  using std::swap;
  modifications_.InternalSwap(&other->modifications_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyColumnFamiliesRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)
