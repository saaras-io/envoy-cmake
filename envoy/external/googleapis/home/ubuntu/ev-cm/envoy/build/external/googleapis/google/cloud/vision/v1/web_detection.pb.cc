// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1/web_detection.proto

#include "google/cloud/vision/v1/web_detection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace vision {
namespace v1 {
class WebDetection_WebEntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebDetection_WebEntity>
      _instance;
} _WebDetection_WebEntity_default_instance_;
class WebDetection_WebImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebDetection_WebImage>
      _instance;
} _WebDetection_WebImage_default_instance_;
class WebDetection_WebPageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebDetection_WebPage>
      _instance;
} _WebDetection_WebPage_default_instance_;
class WebDetectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebDetection>
      _instance;
} _WebDetection_default_instance_;
}  // namespace v1
}  // namespace vision
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto {
void InitDefaultsWebDetection_WebEntityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::vision::v1::_WebDetection_WebEntity_default_instance_;
    new (ptr) ::google::cloud::vision::v1::WebDetection_WebEntity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::WebDetection_WebEntity::InitAsDefaultInstance();
}

void InitDefaultsWebDetection_WebEntity() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWebDetection_WebEntityImpl);
}

void InitDefaultsWebDetection_WebImageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::vision::v1::_WebDetection_WebImage_default_instance_;
    new (ptr) ::google::cloud::vision::v1::WebDetection_WebImage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::WebDetection_WebImage::InitAsDefaultInstance();
}

void InitDefaultsWebDetection_WebImage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWebDetection_WebImageImpl);
}

void InitDefaultsWebDetection_WebPageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::vision::v1::_WebDetection_WebPage_default_instance_;
    new (ptr) ::google::cloud::vision::v1::WebDetection_WebPage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::WebDetection_WebPage::InitAsDefaultInstance();
}

void InitDefaultsWebDetection_WebPage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWebDetection_WebPageImpl);
}

void InitDefaultsWebDetectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebEntity();
  protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebImage();
  protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebPage();
  {
    void* ptr = &::google::cloud::vision::v1::_WebDetection_default_instance_;
    new (ptr) ::google::cloud::vision::v1::WebDetection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::WebDetection::InitAsDefaultInstance();
}

void InitDefaultsWebDetection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWebDetectionImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebEntity, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebEntity, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebEntity, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebImage, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebImage, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebPage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebPage, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection_WebPage, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection, web_entities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection, full_matching_images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection, partial_matching_images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetection, pages_with_matching_images_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::vision::v1::WebDetection_WebEntity)},
  { 8, -1, sizeof(::google::cloud::vision::v1::WebDetection_WebImage)},
  { 15, -1, sizeof(::google::cloud::vision::v1::WebDetection_WebPage)},
  { 22, -1, sizeof(::google::cloud::vision::v1::WebDetection)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_WebDetection_WebEntity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_WebDetection_WebImage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_WebDetection_WebPage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_WebDetection_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/vision/v1/web_detection.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*google/cloud/vision/v1/web_detection.p"
      "roto\022\026google.cloud.vision.v1\032\034google/api"
      "/annotations.proto\"\326\003\n\014WebDetection\022D\n\014w"
      "eb_entities\030\001 \003(\0132..google.cloud.vision."
      "v1.WebDetection.WebEntity\022K\n\024full_matchi"
      "ng_images\030\002 \003(\0132-.google.cloud.vision.v1"
      ".WebDetection.WebImage\022N\n\027partial_matchi"
      "ng_images\030\003 \003(\0132-.google.cloud.vision.v1"
      ".WebDetection.WebImage\022P\n\032pages_with_mat"
      "ching_images\030\004 \003(\0132,.google.cloud.vision"
      ".v1.WebDetection.WebPage\032B\n\tWebEntity\022\021\n"
      "\tentity_id\030\001 \001(\t\022\r\n\005score\030\002 \001(\002\022\023\n\013descr"
      "iption\030\003 \001(\t\032&\n\010WebImage\022\013\n\003url\030\001 \001(\t\022\r\n"
      "\005score\030\002 \001(\002\032%\n\007WebPage\022\013\n\003url\030\001 \001(\t\022\r\n\005"
      "score\030\002 \001(\002Br\n\032com.google.cloud.vision.v"
      "1B\021WebDetectionProtoP\001Z<google.golang.or"
      "g/genproto/googleapis/cloud/vision/v1;vi"
      "sion\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 695);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/vision/v1/web_detection.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto
namespace google {
namespace cloud {
namespace vision {
namespace v1 {

// ===================================================================

void WebDetection_WebEntity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebDetection_WebEntity::kEntityIdFieldNumber;
const int WebDetection_WebEntity::kScoreFieldNumber;
const int WebDetection_WebEntity::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebDetection_WebEntity::WebDetection_WebEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebEntity();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.WebDetection.WebEntity)
}
WebDetection_WebEntity::WebDetection_WebEntity(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebEntity();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.WebDetection.WebEntity)
}
WebDetection_WebEntity::WebDetection_WebEntity(const WebDetection_WebEntity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity_id().size() > 0) {
    entity_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_id(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.WebDetection.WebEntity)
}

void WebDetection_WebEntity::SharedCtor() {
  entity_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
  _cached_size_ = 0;
}

WebDetection_WebEntity::~WebDetection_WebEntity() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.WebDetection.WebEntity)
  SharedDtor();
}

void WebDetection_WebEntity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  entity_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WebDetection_WebEntity::ArenaDtor(void* object) {
  WebDetection_WebEntity* _this = reinterpret_cast< WebDetection_WebEntity* >(object);
  (void)_this;
}
void WebDetection_WebEntity::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WebDetection_WebEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WebDetection_WebEntity::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebDetection_WebEntity& WebDetection_WebEntity::default_instance() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebEntity();
  return *internal_default_instance();
}

WebDetection_WebEntity* WebDetection_WebEntity::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WebDetection_WebEntity>(arena);
}

void WebDetection_WebEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.WebDetection.WebEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  score_ = 0;
  _internal_metadata_.Clear();
}

bool WebDetection_WebEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.WebDetection.WebEntity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity_id().data(), static_cast<int>(this->entity_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.WebDetection.WebEntity.entity_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.WebDetection.WebEntity.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.WebDetection.WebEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.WebDetection.WebEntity)
  return false;
#undef DO_
}

void WebDetection_WebEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.WebDetection.WebEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entity_id = 1;
  if (this->entity_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity_id().data(), static_cast<int>(this->entity_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebEntity.entity_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->entity_id(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebEntity.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.WebDetection.WebEntity)
}

::google::protobuf::uint8* WebDetection_WebEntity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.WebDetection.WebEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entity_id = 1;
  if (this->entity_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity_id().data(), static_cast<int>(this->entity_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebEntity.entity_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entity_id(), target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebEntity.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.WebDetection.WebEntity)
  return target;
}

size_t WebDetection_WebEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.WebDetection.WebEntity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string entity_id = 1;
  if (this->entity_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity_id());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WebDetection_WebEntity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.WebDetection.WebEntity)
  GOOGLE_DCHECK_NE(&from, this);
  const WebDetection_WebEntity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebDetection_WebEntity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.WebDetection.WebEntity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.WebDetection.WebEntity)
    MergeFrom(*source);
  }
}

void WebDetection_WebEntity::MergeFrom(const WebDetection_WebEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.WebDetection.WebEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id().size() > 0) {
    set_entity_id(from.entity_id());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void WebDetection_WebEntity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.WebDetection.WebEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebDetection_WebEntity::CopyFrom(const WebDetection_WebEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.WebDetection.WebEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebDetection_WebEntity::IsInitialized() const {
  return true;
}

void WebDetection_WebEntity::Swap(WebDetection_WebEntity* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WebDetection_WebEntity* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WebDetection_WebEntity::UnsafeArenaSwap(WebDetection_WebEntity* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WebDetection_WebEntity::InternalSwap(WebDetection_WebEntity* other) {
  using std::swap;
  entity_id_.Swap(&other->entity_id_);
  description_.Swap(&other->description_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WebDetection_WebEntity::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WebDetection_WebImage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebDetection_WebImage::kUrlFieldNumber;
const int WebDetection_WebImage::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebDetection_WebImage::WebDetection_WebImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebImage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.WebDetection.WebImage)
}
WebDetection_WebImage::WebDetection_WebImage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebImage();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.WebDetection.WebImage)
}
WebDetection_WebImage::WebDetection_WebImage(const WebDetection_WebImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.WebDetection.WebImage)
}

void WebDetection_WebImage::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
  _cached_size_ = 0;
}

WebDetection_WebImage::~WebDetection_WebImage() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.WebDetection.WebImage)
  SharedDtor();
}

void WebDetection_WebImage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WebDetection_WebImage::ArenaDtor(void* object) {
  WebDetection_WebImage* _this = reinterpret_cast< WebDetection_WebImage* >(object);
  (void)_this;
}
void WebDetection_WebImage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WebDetection_WebImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WebDetection_WebImage::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebDetection_WebImage& WebDetection_WebImage::default_instance() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebImage();
  return *internal_default_instance();
}

WebDetection_WebImage* WebDetection_WebImage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WebDetection_WebImage>(arena);
}

void WebDetection_WebImage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.WebDetection.WebImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  score_ = 0;
  _internal_metadata_.Clear();
}

bool WebDetection_WebImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.WebDetection.WebImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.WebDetection.WebImage.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.WebDetection.WebImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.WebDetection.WebImage)
  return false;
#undef DO_
}

void WebDetection_WebImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.WebDetection.WebImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebImage.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.WebDetection.WebImage)
}

::google::protobuf::uint8* WebDetection_WebImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.WebDetection.WebImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebImage.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.WebDetection.WebImage)
  return target;
}

size_t WebDetection_WebImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.WebDetection.WebImage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WebDetection_WebImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.WebDetection.WebImage)
  GOOGLE_DCHECK_NE(&from, this);
  const WebDetection_WebImage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebDetection_WebImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.WebDetection.WebImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.WebDetection.WebImage)
    MergeFrom(*source);
  }
}

void WebDetection_WebImage::MergeFrom(const WebDetection_WebImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.WebDetection.WebImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    set_url(from.url());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void WebDetection_WebImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.WebDetection.WebImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebDetection_WebImage::CopyFrom(const WebDetection_WebImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.WebDetection.WebImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebDetection_WebImage::IsInitialized() const {
  return true;
}

void WebDetection_WebImage::Swap(WebDetection_WebImage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WebDetection_WebImage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WebDetection_WebImage::UnsafeArenaSwap(WebDetection_WebImage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WebDetection_WebImage::InternalSwap(WebDetection_WebImage* other) {
  using std::swap;
  url_.Swap(&other->url_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WebDetection_WebImage::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WebDetection_WebPage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebDetection_WebPage::kUrlFieldNumber;
const int WebDetection_WebPage::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebDetection_WebPage::WebDetection_WebPage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebPage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.WebDetection.WebPage)
}
WebDetection_WebPage::WebDetection_WebPage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebPage();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.WebDetection.WebPage)
}
WebDetection_WebPage::WebDetection_WebPage(const WebDetection_WebPage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.WebDetection.WebPage)
}

void WebDetection_WebPage::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
  _cached_size_ = 0;
}

WebDetection_WebPage::~WebDetection_WebPage() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.WebDetection.WebPage)
  SharedDtor();
}

void WebDetection_WebPage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WebDetection_WebPage::ArenaDtor(void* object) {
  WebDetection_WebPage* _this = reinterpret_cast< WebDetection_WebPage* >(object);
  (void)_this;
}
void WebDetection_WebPage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WebDetection_WebPage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WebDetection_WebPage::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebDetection_WebPage& WebDetection_WebPage::default_instance() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection_WebPage();
  return *internal_default_instance();
}

WebDetection_WebPage* WebDetection_WebPage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WebDetection_WebPage>(arena);
}

void WebDetection_WebPage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.WebDetection.WebPage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  score_ = 0;
  _internal_metadata_.Clear();
}

bool WebDetection_WebPage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.WebDetection.WebPage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.WebDetection.WebPage.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.WebDetection.WebPage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.WebDetection.WebPage)
  return false;
#undef DO_
}

void WebDetection_WebPage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.WebDetection.WebPage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebPage.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.WebDetection.WebPage)
}

::google::protobuf::uint8* WebDetection_WebPage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.WebDetection.WebPage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.WebDetection.WebPage.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.WebDetection.WebPage)
  return target;
}

size_t WebDetection_WebPage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.WebDetection.WebPage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WebDetection_WebPage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.WebDetection.WebPage)
  GOOGLE_DCHECK_NE(&from, this);
  const WebDetection_WebPage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebDetection_WebPage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.WebDetection.WebPage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.WebDetection.WebPage)
    MergeFrom(*source);
  }
}

void WebDetection_WebPage::MergeFrom(const WebDetection_WebPage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.WebDetection.WebPage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    set_url(from.url());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void WebDetection_WebPage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.WebDetection.WebPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebDetection_WebPage::CopyFrom(const WebDetection_WebPage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.WebDetection.WebPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebDetection_WebPage::IsInitialized() const {
  return true;
}

void WebDetection_WebPage::Swap(WebDetection_WebPage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WebDetection_WebPage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WebDetection_WebPage::UnsafeArenaSwap(WebDetection_WebPage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WebDetection_WebPage::InternalSwap(WebDetection_WebPage* other) {
  using std::swap;
  url_.Swap(&other->url_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WebDetection_WebPage::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WebDetection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebDetection::kWebEntitiesFieldNumber;
const int WebDetection::kFullMatchingImagesFieldNumber;
const int WebDetection::kPartialMatchingImagesFieldNumber;
const int WebDetection::kPagesWithMatchingImagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebDetection::WebDetection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.WebDetection)
}
WebDetection::WebDetection(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  web_entities_(arena),
  full_matching_images_(arena),
  partial_matching_images_(arena),
  pages_with_matching_images_(arena) {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.WebDetection)
}
WebDetection::WebDetection(const WebDetection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      web_entities_(from.web_entities_),
      full_matching_images_(from.full_matching_images_),
      partial_matching_images_(from.partial_matching_images_),
      pages_with_matching_images_(from.pages_with_matching_images_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.WebDetection)
}

void WebDetection::SharedCtor() {
  _cached_size_ = 0;
}

WebDetection::~WebDetection() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.WebDetection)
  SharedDtor();
}

void WebDetection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void WebDetection::ArenaDtor(void* object) {
  WebDetection* _this = reinterpret_cast< WebDetection* >(object);
  (void)_this;
}
void WebDetection::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WebDetection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WebDetection::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebDetection& WebDetection::default_instance() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::InitDefaultsWebDetection();
  return *internal_default_instance();
}

WebDetection* WebDetection::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WebDetection>(arena);
}

void WebDetection::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.WebDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  web_entities_.Clear();
  full_matching_images_.Clear();
  partial_matching_images_.Clear();
  pages_with_matching_images_.Clear();
  _internal_metadata_.Clear();
}

bool WebDetection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.WebDetection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.WebDetection.WebEntity web_entities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_web_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.WebDetection.WebImage full_matching_images = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_full_matching_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.WebDetection.WebImage partial_matching_images = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_partial_matching_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.WebDetection.WebPage pages_with_matching_images = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pages_with_matching_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.WebDetection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.WebDetection)
  return false;
#undef DO_
}

void WebDetection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.WebDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.WebDetection.WebEntity web_entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->web_entities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->web_entities(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebImage full_matching_images = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->full_matching_images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->full_matching_images(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebImage partial_matching_images = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partial_matching_images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->partial_matching_images(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebPage pages_with_matching_images = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pages_with_matching_images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pages_with_matching_images(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.WebDetection)
}

::google::protobuf::uint8* WebDetection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.WebDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.WebDetection.WebEntity web_entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->web_entities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->web_entities(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebImage full_matching_images = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->full_matching_images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->full_matching_images(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebImage partial_matching_images = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partial_matching_images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->partial_matching_images(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebPage pages_with_matching_images = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pages_with_matching_images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->pages_with_matching_images(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.WebDetection)
  return target;
}

size_t WebDetection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.WebDetection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.WebDetection.WebEntity web_entities = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->web_entities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->web_entities(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebImage full_matching_images = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->full_matching_images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->full_matching_images(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebImage partial_matching_images = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->partial_matching_images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partial_matching_images(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.WebDetection.WebPage pages_with_matching_images = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->pages_with_matching_images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pages_with_matching_images(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WebDetection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.WebDetection)
  GOOGLE_DCHECK_NE(&from, this);
  const WebDetection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebDetection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.WebDetection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.WebDetection)
    MergeFrom(*source);
  }
}

void WebDetection::MergeFrom(const WebDetection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.WebDetection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  web_entities_.MergeFrom(from.web_entities_);
  full_matching_images_.MergeFrom(from.full_matching_images_);
  partial_matching_images_.MergeFrom(from.partial_matching_images_);
  pages_with_matching_images_.MergeFrom(from.pages_with_matching_images_);
}

void WebDetection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.WebDetection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebDetection::CopyFrom(const WebDetection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.WebDetection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebDetection::IsInitialized() const {
  return true;
}

void WebDetection::Swap(WebDetection* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WebDetection* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WebDetection::UnsafeArenaSwap(WebDetection* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WebDetection::InternalSwap(WebDetection* other) {
  using std::swap;
  web_entities_.InternalSwap(&other->web_entities_);
  full_matching_images_.InternalSwap(&other->full_matching_images_);
  partial_matching_images_.InternalSwap(&other->partial_matching_images_);
  pages_with_matching_images_.InternalSwap(&other->pages_with_matching_images_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WebDetection::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace vision
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
