// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/common.proto

#include "google/monitoring/v3/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace monitoring {
namespace v3 {
class TypedValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TypedValue>
      _instance;
  bool bool_value_;
  ::google::protobuf::int64 int64_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  const ::google::api::Distribution* distribution_value_;
} _TypedValue_default_instance_;
class TimeIntervalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeInterval>
      _instance;
} _TimeInterval_default_instance_;
class AggregationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aggregation>
      _instance;
} _Aggregation_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto {
void InitDefaultsTypedValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fapi_2fdistribution_2eproto::InitDefaultsDistribution();
  {
    void* ptr = &::google::monitoring::v3::_TypedValue_default_instance_;
    new (ptr) ::google::monitoring::v3::TypedValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::TypedValue::InitAsDefaultInstance();
}

void InitDefaultsTypedValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTypedValueImpl);
}

void InitDefaultsTimeIntervalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::monitoring::v3::_TimeInterval_default_instance_;
    new (ptr) ::google::monitoring::v3::TimeInterval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::TimeInterval::InitAsDefaultInstance();
}

void InitDefaultsTimeInterval() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeIntervalImpl);
}

void InitDefaultsAggregationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::google::monitoring::v3::_Aggregation_default_instance_;
    new (ptr) ::google::monitoring::v3::Aggregation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::Aggregation::InitAsDefaultInstance();
}

void InitDefaultsAggregation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAggregationImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::TypedValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::TypedValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::monitoring::v3::TypedValueDefaultTypeInternal, bool_value_),
  offsetof(::google::monitoring::v3::TypedValueDefaultTypeInternal, int64_value_),
  offsetof(::google::monitoring::v3::TypedValueDefaultTypeInternal, double_value_),
  offsetof(::google::monitoring::v3::TypedValueDefaultTypeInternal, string_value_),
  offsetof(::google::monitoring::v3::TypedValueDefaultTypeInternal, distribution_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::TypedValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::TimeInterval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::TimeInterval, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::TimeInterval, start_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::Aggregation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::Aggregation, alignment_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::Aggregation, per_series_aligner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::Aggregation, cross_series_reducer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::Aggregation, group_by_fields_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::monitoring::v3::TypedValue)},
  { 11, -1, sizeof(::google::monitoring::v3::TimeInterval)},
  { 18, -1, sizeof(::google::monitoring::v3::Aggregation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_TypedValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_TimeInterval_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_Aggregation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/monitoring/v3/common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!google/monitoring/v3/common.proto\022\024goo"
      "gle.monitoring.v3\032\035google/api/distributi"
      "on.proto\032\036google/protobuf/duration.proto"
      "\032\037google/protobuf/timestamp.proto\"\252\001\n\nTy"
      "pedValue\022\024\n\nbool_value\030\001 \001(\010H\000\022\025\n\013int64_"
      "value\030\002 \001(\003H\000\022\026\n\014double_value\030\003 \001(\001H\000\022\026\n"
      "\014string_value\030\004 \001(\tH\000\0226\n\022distribution_va"
      "lue\030\005 \001(\0132\030.google.api.DistributionH\000B\007\n"
      "\005value\"l\n\014TimeInterval\022,\n\010end_time\030\002 \001(\013"
      "2\032.google.protobuf.Timestamp\022.\n\nstart_ti"
      "me\030\001 \001(\0132\032.google.protobuf.Timestamp\"\344\006\n"
      "\013Aggregation\0223\n\020alignment_period\030\001 \001(\0132\031"
      ".google.protobuf.Duration\022E\n\022per_series_"
      "aligner\030\002 \001(\0162).google.monitoring.v3.Agg"
      "regation.Aligner\022G\n\024cross_series_reducer"
      "\030\004 \001(\0162).google.monitoring.v3.Aggregatio"
      "n.Reducer\022\027\n\017group_by_fields\030\005 \003(\t\"\332\002\n\007A"
      "ligner\022\016\n\nALIGN_NONE\020\000\022\017\n\013ALIGN_DELTA\020\001\022"
      "\016\n\nALIGN_RATE\020\002\022\025\n\021ALIGN_INTERPOLATE\020\003\022\024"
      "\n\020ALIGN_NEXT_OLDER\020\004\022\r\n\tALIGN_MIN\020\n\022\r\n\tA"
      "LIGN_MAX\020\013\022\016\n\nALIGN_MEAN\020\014\022\017\n\013ALIGN_COUN"
      "T\020\r\022\r\n\tALIGN_SUM\020\016\022\020\n\014ALIGN_STDDEV\020\017\022\024\n\020"
      "ALIGN_COUNT_TRUE\020\020\022\027\n\023ALIGN_FRACTION_TRU"
      "E\020\021\022\027\n\023ALIGN_PERCENTILE_99\020\022\022\027\n\023ALIGN_PE"
      "RCENTILE_95\020\023\022\027\n\023ALIGN_PERCENTILE_50\020\024\022\027"
      "\n\023ALIGN_PERCENTILE_05\020\025\"\231\002\n\007Reducer\022\017\n\013R"
      "EDUCE_NONE\020\000\022\017\n\013REDUCE_MEAN\020\001\022\016\n\nREDUCE_"
      "MIN\020\002\022\016\n\nREDUCE_MAX\020\003\022\016\n\nREDUCE_SUM\020\004\022\021\n"
      "\rREDUCE_STDDEV\020\005\022\020\n\014REDUCE_COUNT\020\006\022\025\n\021RE"
      "DUCE_COUNT_TRUE\020\007\022\030\n\024REDUCE_FRACTION_TRU"
      "E\020\010\022\030\n\024REDUCE_PERCENTILE_99\020\t\022\030\n\024REDUCE_"
      "PERCENTILE_95\020\n\022\030\n\024REDUCE_PERCENTILE_50\020"
      "\013\022\030\n\024REDUCE_PERCENTILE_05\020\014B\206\001\n\030com.goog"
      "le.monitoring.v3B\013CommonProtoP\001Z>google."
      "golang.org/genproto/googleapis/monitorin"
      "g/v3;monitoring\252\002\032Google.Cloud.Monitorin"
      "g.V3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/common.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fdistribution_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto
namespace google {
namespace monitoring {
namespace v3 {
const ::google::protobuf::EnumDescriptor* Aggregation_Aligner_descriptor() {
  protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_enum_descriptors[0];
}
bool Aggregation_Aligner_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Aggregation_Aligner Aggregation::ALIGN_NONE;
const Aggregation_Aligner Aggregation::ALIGN_DELTA;
const Aggregation_Aligner Aggregation::ALIGN_RATE;
const Aggregation_Aligner Aggregation::ALIGN_INTERPOLATE;
const Aggregation_Aligner Aggregation::ALIGN_NEXT_OLDER;
const Aggregation_Aligner Aggregation::ALIGN_MIN;
const Aggregation_Aligner Aggregation::ALIGN_MAX;
const Aggregation_Aligner Aggregation::ALIGN_MEAN;
const Aggregation_Aligner Aggregation::ALIGN_COUNT;
const Aggregation_Aligner Aggregation::ALIGN_SUM;
const Aggregation_Aligner Aggregation::ALIGN_STDDEV;
const Aggregation_Aligner Aggregation::ALIGN_COUNT_TRUE;
const Aggregation_Aligner Aggregation::ALIGN_FRACTION_TRUE;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_99;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_95;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_50;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_05;
const Aggregation_Aligner Aggregation::Aligner_MIN;
const Aggregation_Aligner Aggregation::Aligner_MAX;
const int Aggregation::Aligner_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Aggregation_Reducer_descriptor() {
  protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_enum_descriptors[1];
}
bool Aggregation_Reducer_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Aggregation_Reducer Aggregation::REDUCE_NONE;
const Aggregation_Reducer Aggregation::REDUCE_MEAN;
const Aggregation_Reducer Aggregation::REDUCE_MIN;
const Aggregation_Reducer Aggregation::REDUCE_MAX;
const Aggregation_Reducer Aggregation::REDUCE_SUM;
const Aggregation_Reducer Aggregation::REDUCE_STDDEV;
const Aggregation_Reducer Aggregation::REDUCE_COUNT;
const Aggregation_Reducer Aggregation::REDUCE_COUNT_TRUE;
const Aggregation_Reducer Aggregation::REDUCE_FRACTION_TRUE;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_99;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_95;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_50;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_05;
const Aggregation_Reducer Aggregation::Reducer_MIN;
const Aggregation_Reducer Aggregation::Reducer_MAX;
const int Aggregation::Reducer_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TypedValue::InitAsDefaultInstance() {
  ::google::monitoring::v3::_TypedValue_default_instance_.bool_value_ = false;
  ::google::monitoring::v3::_TypedValue_default_instance_.int64_value_ = GOOGLE_LONGLONG(0);
  ::google::monitoring::v3::_TypedValue_default_instance_.double_value_ = 0;
  ::google::monitoring::v3::_TypedValue_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::monitoring::v3::_TypedValue_default_instance_.distribution_value_ = const_cast< ::google::api::Distribution*>(
      ::google::api::Distribution::internal_default_instance());
}
void TypedValue::set_allocated_distribution_value(::google::api::Distribution* distribution_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (distribution_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distribution_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distribution_value, submessage_arena);
    }
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.TypedValue.distribution_value)
}
void TypedValue::clear_distribution_value() {
  if (has_distribution_value()) {
    delete value_.distribution_value_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypedValue::kBoolValueFieldNumber;
const int TypedValue::kInt64ValueFieldNumber;
const int TypedValue::kDoubleValueFieldNumber;
const int TypedValue::kStringValueFieldNumber;
const int TypedValue::kDistributionValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypedValue::TypedValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsTypedValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.TypedValue)
}
TypedValue::TypedValue(const TypedValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kDistributionValue: {
      mutable_distribution_value()->::google::api::Distribution::MergeFrom(from.distribution_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.TypedValue)
}

void TypedValue::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

TypedValue::~TypedValue() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.TypedValue)
  SharedDtor();
}

void TypedValue::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void TypedValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypedValue::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypedValue& TypedValue::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsTypedValue();
  return *internal_default_instance();
}

TypedValue* TypedValue::New(::google::protobuf::Arena* arena) const {
  TypedValue* n = new TypedValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypedValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.monitoring.v3.TypedValue)
  switch (value_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDistributionValue: {
      delete value_.distribution_value_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypedValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool TypedValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.TypedValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool bool_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.TypedValue.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Distribution distribution_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distribution_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.TypedValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.TypedValue)
  return false;
#undef DO_
}

void TypedValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_value = 1;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bool_value(), output);
  }

  // int64 int64_value = 2;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int64_value(), output);
  }

  // double double_value = 3;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.TypedValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->string_value(), output);
  }

  // .google.api.Distribution distribution_value = 5;
  if (has_distribution_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *value_.distribution_value_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.TypedValue)
}

::google::protobuf::uint8* TypedValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_value = 1;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bool_value(), target);
  }

  // int64 int64_value = 2;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int64_value(), target);
  }

  // double double_value = 3;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.TypedValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string_value(), target);
  }

  // .google.api.Distribution distribution_value = 5;
  if (has_distribution_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *value_.distribution_value_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.TypedValue)
  return target;
}

size_t TypedValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.TypedValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // bool bool_value = 1;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_value = 2;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 4;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // .google.api.Distribution distribution_value = 5;
    case kDistributionValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.distribution_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypedValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.TypedValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TypedValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypedValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.TypedValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.TypedValue)
    MergeFrom(*source);
  }
}

void TypedValue::MergeFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.TypedValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kDistributionValue: {
      mutable_distribution_value()->::google::api::Distribution::MergeFrom(from.distribution_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void TypedValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.TypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypedValue::CopyFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.TypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypedValue::IsInitialized() const {
  return true;
}

void TypedValue::Swap(TypedValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypedValue::InternalSwap(TypedValue* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypedValue::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeInterval::InitAsDefaultInstance() {
  ::google::monitoring::v3::_TimeInterval_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::monitoring::v3::_TimeInterval_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void TimeInterval::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
void TimeInterval::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeInterval::kEndTimeFieldNumber;
const int TimeInterval::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeInterval::TimeInterval()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsTimeInterval();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.TimeInterval)
}
TimeInterval::TimeInterval(const TimeInterval& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.TimeInterval)
}

void TimeInterval::SharedCtor() {
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
  _cached_size_ = 0;
}

TimeInterval::~TimeInterval() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.TimeInterval)
  SharedDtor();
}

void TimeInterval::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void TimeInterval::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeInterval::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeInterval& TimeInterval::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsTimeInterval();
  return *internal_default_instance();
}

TimeInterval* TimeInterval::New(::google::protobuf::Arena* arena) const {
  TimeInterval* n = new TimeInterval;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeInterval::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.TimeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  _internal_metadata_.Clear();
}

bool TimeInterval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.TimeInterval)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.TimeInterval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.TimeInterval)
  return false;
#undef DO_
}

void TimeInterval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.TimeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->end_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.TimeInterval)
}

::google::protobuf::uint8* TimeInterval::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.TimeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->end_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.TimeInterval)
  return target;
}

size_t TimeInterval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.TimeInterval)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeInterval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.TimeInterval)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeInterval* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeInterval>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.TimeInterval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.TimeInterval)
    MergeFrom(*source);
  }
}

void TimeInterval::MergeFrom(const TimeInterval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.TimeInterval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void TimeInterval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.TimeInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeInterval::CopyFrom(const TimeInterval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.TimeInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeInterval::IsInitialized() const {
  return true;
}

void TimeInterval::Swap(TimeInterval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeInterval::InternalSwap(TimeInterval* other) {
  using std::swap;
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeInterval::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Aggregation::InitAsDefaultInstance() {
  ::google::monitoring::v3::_Aggregation_default_instance_._instance.get_mutable()->alignment_period_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void Aggregation::clear_alignment_period() {
  if (GetArenaNoVirtual() == NULL && alignment_period_ != NULL) {
    delete alignment_period_;
  }
  alignment_period_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aggregation::kAlignmentPeriodFieldNumber;
const int Aggregation::kPerSeriesAlignerFieldNumber;
const int Aggregation::kCrossSeriesReducerFieldNumber;
const int Aggregation::kGroupByFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aggregation::Aggregation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsAggregation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.Aggregation)
}
Aggregation::Aggregation(const Aggregation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_by_fields_(from.group_by_fields_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_alignment_period()) {
    alignment_period_ = new ::google::protobuf::Duration(*from.alignment_period_);
  } else {
    alignment_period_ = NULL;
  }
  ::memcpy(&per_series_aligner_, &from.per_series_aligner_,
    static_cast<size_t>(reinterpret_cast<char*>(&cross_series_reducer_) -
    reinterpret_cast<char*>(&per_series_aligner_)) + sizeof(cross_series_reducer_));
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.Aggregation)
}

void Aggregation::SharedCtor() {
  ::memset(&alignment_period_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cross_series_reducer_) -
      reinterpret_cast<char*>(&alignment_period_)) + sizeof(cross_series_reducer_));
  _cached_size_ = 0;
}

Aggregation::~Aggregation() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.Aggregation)
  SharedDtor();
}

void Aggregation::SharedDtor() {
  if (this != internal_default_instance()) delete alignment_period_;
}

void Aggregation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Aggregation::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Aggregation& Aggregation::default_instance() {
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::InitDefaultsAggregation();
  return *internal_default_instance();
}

Aggregation* Aggregation::New(::google::protobuf::Arena* arena) const {
  Aggregation* n = new Aggregation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Aggregation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.Aggregation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_by_fields_.Clear();
  if (GetArenaNoVirtual() == NULL && alignment_period_ != NULL) {
    delete alignment_period_;
  }
  alignment_period_ = NULL;
  ::memset(&per_series_aligner_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cross_series_reducer_) -
      reinterpret_cast<char*>(&per_series_aligner_)) + sizeof(cross_series_reducer_));
  _internal_metadata_.Clear();
}

bool Aggregation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.Aggregation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration alignment_period = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alignment_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_per_series_aligner(static_cast< ::google::monitoring::v3::Aggregation_Aligner >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cross_series_reducer(static_cast< ::google::monitoring::v3::Aggregation_Reducer >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string group_by_fields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_by_fields()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_by_fields(this->group_by_fields_size() - 1).data(),
            static_cast<int>(this->group_by_fields(this->group_by_fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.Aggregation.group_by_fields"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.Aggregation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.Aggregation)
  return false;
#undef DO_
}

void Aggregation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.Aggregation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration alignment_period = 1;
  if (this->has_alignment_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->alignment_period_, output);
  }

  // .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
  if (this->per_series_aligner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->per_series_aligner(), output);
  }

  // .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
  if (this->cross_series_reducer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->cross_series_reducer(), output);
  }

  // repeated string group_by_fields = 5;
  for (int i = 0, n = this->group_by_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_by_fields(i).data(), static_cast<int>(this->group_by_fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.Aggregation.group_by_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->group_by_fields(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.Aggregation)
}

::google::protobuf::uint8* Aggregation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.Aggregation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration alignment_period = 1;
  if (this->has_alignment_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->alignment_period_, deterministic, target);
  }

  // .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
  if (this->per_series_aligner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->per_series_aligner(), target);
  }

  // .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
  if (this->cross_series_reducer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->cross_series_reducer(), target);
  }

  // repeated string group_by_fields = 5;
  for (int i = 0, n = this->group_by_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_by_fields(i).data(), static_cast<int>(this->group_by_fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.Aggregation.group_by_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->group_by_fields(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.Aggregation)
  return target;
}

size_t Aggregation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.Aggregation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string group_by_fields = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_by_fields_size());
  for (int i = 0, n = this->group_by_fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_by_fields(i));
  }

  // .google.protobuf.Duration alignment_period = 1;
  if (this->has_alignment_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->alignment_period_);
  }

  // .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
  if (this->per_series_aligner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->per_series_aligner());
  }

  // .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
  if (this->cross_series_reducer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cross_series_reducer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Aggregation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.Aggregation)
  GOOGLE_DCHECK_NE(&from, this);
  const Aggregation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aggregation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.Aggregation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.Aggregation)
    MergeFrom(*source);
  }
}

void Aggregation::MergeFrom(const Aggregation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.Aggregation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_by_fields_.MergeFrom(from.group_by_fields_);
  if (from.has_alignment_period()) {
    mutable_alignment_period()->::google::protobuf::Duration::MergeFrom(from.alignment_period());
  }
  if (from.per_series_aligner() != 0) {
    set_per_series_aligner(from.per_series_aligner());
  }
  if (from.cross_series_reducer() != 0) {
    set_cross_series_reducer(from.cross_series_reducer());
  }
}

void Aggregation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.Aggregation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aggregation::CopyFrom(const Aggregation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.Aggregation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aggregation::IsInitialized() const {
  return true;
}

void Aggregation::Swap(Aggregation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aggregation::InternalSwap(Aggregation* other) {
  using std::swap;
  group_by_fields_.InternalSwap(&other->group_by_fields_);
  swap(alignment_period_, other->alignment_period_);
  swap(per_series_aligner_, other->per_series_aligner_);
  swap(cross_series_reducer_, other->cross_series_reducer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Aggregation::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google

// @@protoc_insertion_point(global_scope)
