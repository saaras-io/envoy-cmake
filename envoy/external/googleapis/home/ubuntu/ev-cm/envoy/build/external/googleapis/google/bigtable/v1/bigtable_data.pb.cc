// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v1/bigtable_data.proto

#include "google/bigtable/v1/bigtable_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace bigtable {
namespace v1 {
class RowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Row>
      _instance;
} _Row_default_instance_;
class FamilyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Family>
      _instance;
} _Family_default_instance_;
class ColumnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Column>
      _instance;
} _Column_default_instance_;
class CellDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cell>
      _instance;
} _Cell_default_instance_;
class RowRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RowRange>
      _instance;
} _RowRange_default_instance_;
class RowSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RowSet>
      _instance;
} _RowSet_default_instance_;
class ColumnRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColumnRange>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr start_qualifier_inclusive_;
  ::google::protobuf::internal::ArenaStringPtr start_qualifier_exclusive_;
  ::google::protobuf::internal::ArenaStringPtr end_qualifier_inclusive_;
  ::google::protobuf::internal::ArenaStringPtr end_qualifier_exclusive_;
} _ColumnRange_default_instance_;
class TimestampRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimestampRange>
      _instance;
} _TimestampRange_default_instance_;
class ValueRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueRange>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr start_value_inclusive_;
  ::google::protobuf::internal::ArenaStringPtr start_value_exclusive_;
  ::google::protobuf::internal::ArenaStringPtr end_value_inclusive_;
  ::google::protobuf::internal::ArenaStringPtr end_value_exclusive_;
} _ValueRange_default_instance_;
class RowFilter_ChainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RowFilter_Chain>
      _instance;
} _RowFilter_Chain_default_instance_;
class RowFilter_InterleaveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RowFilter_Interleave>
      _instance;
} _RowFilter_Interleave_default_instance_;
class RowFilter_ConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RowFilter_Condition>
      _instance;
} _RowFilter_Condition_default_instance_;
class RowFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RowFilter>
      _instance;
  const ::google::bigtable::v1::RowFilter_Chain* chain_;
  const ::google::bigtable::v1::RowFilter_Interleave* interleave_;
  const ::google::bigtable::v1::RowFilter_Condition* condition_;
  bool sink_;
  bool pass_all_filter_;
  bool block_all_filter_;
  ::google::protobuf::internal::ArenaStringPtr row_key_regex_filter_;
  double row_sample_filter_;
  ::google::protobuf::internal::ArenaStringPtr family_name_regex_filter_;
  ::google::protobuf::internal::ArenaStringPtr column_qualifier_regex_filter_;
  const ::google::bigtable::v1::ColumnRange* column_range_filter_;
  const ::google::bigtable::v1::TimestampRange* timestamp_range_filter_;
  ::google::protobuf::internal::ArenaStringPtr value_regex_filter_;
  const ::google::bigtable::v1::ValueRange* value_range_filter_;
  ::google::protobuf::int32 cells_per_row_offset_filter_;
  ::google::protobuf::int32 cells_per_row_limit_filter_;
  ::google::protobuf::int32 cells_per_column_limit_filter_;
  bool strip_value_transformer_;
  ::google::protobuf::internal::ArenaStringPtr apply_label_transformer_;
} _RowFilter_default_instance_;
class Mutation_SetCellDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation_SetCell>
      _instance;
} _Mutation_SetCell_default_instance_;
class Mutation_DeleteFromColumnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation_DeleteFromColumn>
      _instance;
} _Mutation_DeleteFromColumn_default_instance_;
class Mutation_DeleteFromFamilyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation_DeleteFromFamily>
      _instance;
} _Mutation_DeleteFromFamily_default_instance_;
class Mutation_DeleteFromRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation_DeleteFromRow>
      _instance;
} _Mutation_DeleteFromRow_default_instance_;
class MutationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation>
      _instance;
  const ::google::bigtable::v1::Mutation_SetCell* set_cell_;
  const ::google::bigtable::v1::Mutation_DeleteFromColumn* delete_from_column_;
  const ::google::bigtable::v1::Mutation_DeleteFromFamily* delete_from_family_;
  const ::google::bigtable::v1::Mutation_DeleteFromRow* delete_from_row_;
} _Mutation_default_instance_;
class ReadModifyWriteRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadModifyWriteRule>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr append_value_;
  ::google::protobuf::int64 increment_amount_;
} _ReadModifyWriteRule_default_instance_;
}  // namespace v1
}  // namespace bigtable
}  // namespace google
namespace protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto {
void InitDefaultsRowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsFamily();
  {
    void* ptr = &::google::bigtable::v1::_Row_default_instance_;
    new (ptr) ::google::bigtable::v1::Row();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Row::InitAsDefaultInstance();
}

void InitDefaultsRow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRowImpl);
}

void InitDefaultsFamilyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsColumn();
  {
    void* ptr = &::google::bigtable::v1::_Family_default_instance_;
    new (ptr) ::google::bigtable::v1::Family();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Family::InitAsDefaultInstance();
}

void InitDefaultsFamily() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFamilyImpl);
}

void InitDefaultsColumnImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsCell();
  {
    void* ptr = &::google::bigtable::v1::_Column_default_instance_;
    new (ptr) ::google::bigtable::v1::Column();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Column::InitAsDefaultInstance();
}

void InitDefaultsColumn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsColumnImpl);
}

void InitDefaultsCellImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_Cell_default_instance_;
    new (ptr) ::google::bigtable::v1::Cell();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Cell::InitAsDefaultInstance();
}

void InitDefaultsCell() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCellImpl);
}

void InitDefaultsRowRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_RowRange_default_instance_;
    new (ptr) ::google::bigtable::v1::RowRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::RowRange::InitAsDefaultInstance();
}

void InitDefaultsRowRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRowRangeImpl);
}

void InitDefaultsRowSetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowRange();
  {
    void* ptr = &::google::bigtable::v1::_RowSet_default_instance_;
    new (ptr) ::google::bigtable::v1::RowSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::RowSet::InitAsDefaultInstance();
}

void InitDefaultsRowSet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRowSetImpl);
}

void InitDefaultsColumnRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_ColumnRange_default_instance_;
    new (ptr) ::google::bigtable::v1::ColumnRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::ColumnRange::InitAsDefaultInstance();
}

void InitDefaultsColumnRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsColumnRangeImpl);
}

void InitDefaultsTimestampRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_TimestampRange_default_instance_;
    new (ptr) ::google::bigtable::v1::TimestampRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::TimestampRange::InitAsDefaultInstance();
}

void InitDefaultsTimestampRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimestampRangeImpl);
}

void InitDefaultsValueRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_ValueRange_default_instance_;
    new (ptr) ::google::bigtable::v1::ValueRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::ValueRange::InitAsDefaultInstance();
}

void InitDefaultsValueRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValueRangeImpl);
}

void InitDefaultsRowFilterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsColumnRange();
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsTimestampRange();
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsValueRange();
  {
    void* ptr = &::google::bigtable::v1::_RowFilter_Chain_default_instance_;
    new (ptr) ::google::bigtable::v1::RowFilter_Chain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::bigtable::v1::_RowFilter_Interleave_default_instance_;
    new (ptr) ::google::bigtable::v1::RowFilter_Interleave();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::bigtable::v1::_RowFilter_Condition_default_instance_;
    new (ptr) ::google::bigtable::v1::RowFilter_Condition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::bigtable::v1::_RowFilter_default_instance_;
    new (ptr) ::google::bigtable::v1::RowFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::RowFilter_Chain::InitAsDefaultInstance();
  ::google::bigtable::v1::RowFilter_Interleave::InitAsDefaultInstance();
  ::google::bigtable::v1::RowFilter_Condition::InitAsDefaultInstance();
  ::google::bigtable::v1::RowFilter::InitAsDefaultInstance();
}

void InitDefaultsRowFilter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRowFilterImpl);
}

void InitDefaultsMutation_SetCellImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_Mutation_SetCell_default_instance_;
    new (ptr) ::google::bigtable::v1::Mutation_SetCell();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Mutation_SetCell::InitAsDefaultInstance();
}

void InitDefaultsMutation_SetCell() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutation_SetCellImpl);
}

void InitDefaultsMutation_DeleteFromColumnImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsTimestampRange();
  {
    void* ptr = &::google::bigtable::v1::_Mutation_DeleteFromColumn_default_instance_;
    new (ptr) ::google::bigtable::v1::Mutation_DeleteFromColumn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Mutation_DeleteFromColumn::InitAsDefaultInstance();
}

void InitDefaultsMutation_DeleteFromColumn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutation_DeleteFromColumnImpl);
}

void InitDefaultsMutation_DeleteFromFamilyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_Mutation_DeleteFromFamily_default_instance_;
    new (ptr) ::google::bigtable::v1::Mutation_DeleteFromFamily();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Mutation_DeleteFromFamily::InitAsDefaultInstance();
}

void InitDefaultsMutation_DeleteFromFamily() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutation_DeleteFromFamilyImpl);
}

void InitDefaultsMutation_DeleteFromRowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_Mutation_DeleteFromRow_default_instance_;
    new (ptr) ::google::bigtable::v1::Mutation_DeleteFromRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Mutation_DeleteFromRow::InitAsDefaultInstance();
}

void InitDefaultsMutation_DeleteFromRow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutation_DeleteFromRowImpl);
}

void InitDefaultsMutationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_SetCell();
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromColumn();
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromFamily();
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromRow();
  {
    void* ptr = &::google::bigtable::v1::_Mutation_default_instance_;
    new (ptr) ::google::bigtable::v1::Mutation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::Mutation::InitAsDefaultInstance();
}

void InitDefaultsMutation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutationImpl);
}

void InitDefaultsReadModifyWriteRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::bigtable::v1::_ReadModifyWriteRule_default_instance_;
    new (ptr) ::google::bigtable::v1::ReadModifyWriteRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::v1::ReadModifyWriteRule::InitAsDefaultInstance();
}

void InitDefaultsReadModifyWriteRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadModifyWriteRuleImpl);
}

::google::protobuf::Metadata file_level_metadata[19];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Row, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Row, families_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Family, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Family, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Family, columns_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Column, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Column, qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Column, cells_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Cell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Cell, timestamp_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Cell, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Cell, labels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowRange, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowRange, end_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowSet, row_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowSet, row_ranges_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ColumnRange, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ColumnRange, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ColumnRange, family_name_),
  offsetof(::google::bigtable::v1::ColumnRangeDefaultTypeInternal, start_qualifier_inclusive_),
  offsetof(::google::bigtable::v1::ColumnRangeDefaultTypeInternal, start_qualifier_exclusive_),
  offsetof(::google::bigtable::v1::ColumnRangeDefaultTypeInternal, end_qualifier_inclusive_),
  offsetof(::google::bigtable::v1::ColumnRangeDefaultTypeInternal, end_qualifier_exclusive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ColumnRange, start_qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ColumnRange, end_qualifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::TimestampRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::TimestampRange, start_timestamp_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::TimestampRange, end_timestamp_micros_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ValueRange, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ValueRange, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::bigtable::v1::ValueRangeDefaultTypeInternal, start_value_inclusive_),
  offsetof(::google::bigtable::v1::ValueRangeDefaultTypeInternal, start_value_exclusive_),
  offsetof(::google::bigtable::v1::ValueRangeDefaultTypeInternal, end_value_inclusive_),
  offsetof(::google::bigtable::v1::ValueRangeDefaultTypeInternal, end_value_exclusive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ValueRange, start_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ValueRange, end_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Chain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Chain, filters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Interleave, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Interleave, filters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Condition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Condition, predicate_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Condition, true_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter_Condition, false_filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, chain_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, interleave_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, condition_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, sink_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, pass_all_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, block_all_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, row_key_regex_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, row_sample_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, family_name_regex_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, column_qualifier_regex_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, column_range_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, timestamp_range_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, value_regex_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, value_range_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, cells_per_row_offset_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, cells_per_row_limit_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, cells_per_column_limit_filter_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, strip_value_transformer_),
  offsetof(::google::bigtable::v1::RowFilterDefaultTypeInternal, apply_label_transformer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::RowFilter, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_SetCell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_SetCell, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_SetCell, column_qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_SetCell, timestamp_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_SetCell, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_DeleteFromColumn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_DeleteFromColumn, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_DeleteFromColumn, column_qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_DeleteFromColumn, time_range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_DeleteFromFamily, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_DeleteFromFamily, family_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation_DeleteFromRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::bigtable::v1::MutationDefaultTypeInternal, set_cell_),
  offsetof(::google::bigtable::v1::MutationDefaultTypeInternal, delete_from_column_),
  offsetof(::google::bigtable::v1::MutationDefaultTypeInternal, delete_from_family_),
  offsetof(::google::bigtable::v1::MutationDefaultTypeInternal, delete_from_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::Mutation, mutation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ReadModifyWriteRule, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ReadModifyWriteRule, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ReadModifyWriteRule, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ReadModifyWriteRule, column_qualifier_),
  offsetof(::google::bigtable::v1::ReadModifyWriteRuleDefaultTypeInternal, append_value_),
  offsetof(::google::bigtable::v1::ReadModifyWriteRuleDefaultTypeInternal, increment_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::v1::ReadModifyWriteRule, rule_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::bigtable::v1::Row)},
  { 7, -1, sizeof(::google::bigtable::v1::Family)},
  { 14, -1, sizeof(::google::bigtable::v1::Column)},
  { 21, -1, sizeof(::google::bigtable::v1::Cell)},
  { 29, -1, sizeof(::google::bigtable::v1::RowRange)},
  { 36, -1, sizeof(::google::bigtable::v1::RowSet)},
  { 43, -1, sizeof(::google::bigtable::v1::ColumnRange)},
  { 55, -1, sizeof(::google::bigtable::v1::TimestampRange)},
  { 62, -1, sizeof(::google::bigtable::v1::ValueRange)},
  { 73, -1, sizeof(::google::bigtable::v1::RowFilter_Chain)},
  { 79, -1, sizeof(::google::bigtable::v1::RowFilter_Interleave)},
  { 85, -1, sizeof(::google::bigtable::v1::RowFilter_Condition)},
  { 93, -1, sizeof(::google::bigtable::v1::RowFilter)},
  { 118, -1, sizeof(::google::bigtable::v1::Mutation_SetCell)},
  { 127, -1, sizeof(::google::bigtable::v1::Mutation_DeleteFromColumn)},
  { 135, -1, sizeof(::google::bigtable::v1::Mutation_DeleteFromFamily)},
  { 141, -1, sizeof(::google::bigtable::v1::Mutation_DeleteFromRow)},
  { 146, -1, sizeof(::google::bigtable::v1::Mutation)},
  { 156, -1, sizeof(::google::bigtable::v1::ReadModifyWriteRule)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Row_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Family_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Column_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Cell_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_RowRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_RowSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_ColumnRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_TimestampRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_ValueRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_RowFilter_Chain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_RowFilter_Interleave_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_RowFilter_Condition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_RowFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Mutation_SetCell_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Mutation_DeleteFromColumn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Mutation_DeleteFromFamily_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Mutation_DeleteFromRow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_Mutation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::v1::_ReadModifyWriteRule_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/bigtable/v1/bigtable_data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&google/bigtable/v1/bigtable_data.proto"
      "\022\022google.bigtable.v1\"@\n\003Row\022\013\n\003key\030\001 \001(\014"
      "\022,\n\010families\030\002 \003(\0132\032.google.bigtable.v1."
      "Family\"C\n\006Family\022\014\n\004name\030\001 \001(\t\022+\n\007column"
      "s\030\002 \003(\0132\032.google.bigtable.v1.Column\"D\n\006C"
      "olumn\022\021\n\tqualifier\030\001 \001(\014\022\'\n\005cells\030\002 \003(\0132"
      "\030.google.bigtable.v1.Cell\"\?\n\004Cell\022\030\n\020tim"
      "estamp_micros\030\001 \001(\003\022\r\n\005value\030\002 \001(\014\022\016\n\006la"
      "bels\030\003 \003(\t\".\n\010RowRange\022\021\n\tstart_key\030\002 \001("
      "\014\022\017\n\007end_key\030\003 \001(\014\"L\n\006RowSet\022\020\n\010row_keys"
      "\030\001 \003(\014\0220\n\nrow_ranges\030\002 \003(\0132\034.google.bigt"
      "able.v1.RowRange\"\326\001\n\013ColumnRange\022\023\n\013fami"
      "ly_name\030\001 \001(\t\022#\n\031start_qualifier_inclusi"
      "ve\030\002 \001(\014H\000\022#\n\031start_qualifier_exclusive\030"
      "\003 \001(\014H\000\022!\n\027end_qualifier_inclusive\030\004 \001(\014"
      "H\001\022!\n\027end_qualifier_exclusive\030\005 \001(\014H\001B\021\n"
      "\017start_qualifierB\017\n\rend_qualifier\"N\n\016Tim"
      "estampRange\022\036\n\026start_timestamp_micros\030\001 "
      "\001(\003\022\034\n\024end_timestamp_micros\030\002 \001(\003\"\250\001\n\nVa"
      "lueRange\022\037\n\025start_value_inclusive\030\001 \001(\014H"
      "\000\022\037\n\025start_value_exclusive\030\002 \001(\014H\000\022\035\n\023en"
      "d_value_inclusive\030\003 \001(\014H\001\022\035\n\023end_value_e"
      "xclusive\030\004 \001(\014H\001B\r\n\013start_valueB\013\n\tend_v"
      "alue\"\337\010\n\tRowFilter\0224\n\005chain\030\001 \001(\0132#.goog"
      "le.bigtable.v1.RowFilter.ChainH\000\022>\n\ninte"
      "rleave\030\002 \001(\0132(.google.bigtable.v1.RowFil"
      "ter.InterleaveH\000\022<\n\tcondition\030\003 \001(\0132\'.go"
      "ogle.bigtable.v1.RowFilter.ConditionH\000\022\016"
      "\n\004sink\030\020 \001(\010H\000\022\031\n\017pass_all_filter\030\021 \001(\010H"
      "\000\022\032\n\020block_all_filter\030\022 \001(\010H\000\022\036\n\024row_key"
      "_regex_filter\030\004 \001(\014H\000\022\033\n\021row_sample_filt"
      "er\030\016 \001(\001H\000\022\"\n\030family_name_regex_filter\030\005"
      " \001(\tH\000\022\'\n\035column_qualifier_regex_filter\030"
      "\006 \001(\014H\000\022>\n\023column_range_filter\030\007 \001(\0132\037.g"
      "oogle.bigtable.v1.ColumnRangeH\000\022D\n\026times"
      "tamp_range_filter\030\010 \001(\0132\".google.bigtabl"
      "e.v1.TimestampRangeH\000\022\034\n\022value_regex_fil"
      "ter\030\t \001(\014H\000\022<\n\022value_range_filter\030\017 \001(\0132"
      "\036.google.bigtable.v1.ValueRangeH\000\022%\n\033cel"
      "ls_per_row_offset_filter\030\n \001(\005H\000\022$\n\032cell"
      "s_per_row_limit_filter\030\013 \001(\005H\000\022\'\n\035cells_"
      "per_column_limit_filter\030\014 \001(\005H\000\022!\n\027strip"
      "_value_transformer\030\r \001(\010H\000\022!\n\027apply_labe"
      "l_transformer\030\023 \001(\tH\000\0327\n\005Chain\022.\n\007filter"
      "s\030\001 \003(\0132\035.google.bigtable.v1.RowFilter\032<"
      "\n\nInterleave\022.\n\007filters\030\001 \003(\0132\035.google.b"
      "igtable.v1.RowFilter\032\255\001\n\tCondition\0227\n\020pr"
      "edicate_filter\030\001 \001(\0132\035.google.bigtable.v"
      "1.RowFilter\0222\n\013true_filter\030\002 \001(\0132\035.googl"
      "e.bigtable.v1.RowFilter\0223\n\014false_filter\030"
      "\003 \001(\0132\035.google.bigtable.v1.RowFilterB\010\n\006"
      "filter\"\311\004\n\010Mutation\0228\n\010set_cell\030\001 \001(\0132$."
      "google.bigtable.v1.Mutation.SetCellH\000\022K\n"
      "\022delete_from_column\030\002 \001(\0132-.google.bigta"
      "ble.v1.Mutation.DeleteFromColumnH\000\022K\n\022de"
      "lete_from_family\030\003 \001(\0132-.google.bigtable"
      ".v1.Mutation.DeleteFromFamilyH\000\022E\n\017delet"
      "e_from_row\030\004 \001(\0132*.google.bigtable.v1.Mu"
      "tation.DeleteFromRowH\000\032a\n\007SetCell\022\023\n\013fam"
      "ily_name\030\001 \001(\t\022\030\n\020column_qualifier\030\002 \001(\014"
      "\022\030\n\020timestamp_micros\030\003 \001(\003\022\r\n\005value\030\004 \001("
      "\014\032y\n\020DeleteFromColumn\022\023\n\013family_name\030\001 \001"
      "(\t\022\030\n\020column_qualifier\030\002 \001(\014\0226\n\ntime_ran"
      "ge\030\003 \001(\0132\".google.bigtable.v1.TimestampR"
      "ange\032\'\n\020DeleteFromFamily\022\023\n\013family_name\030"
      "\001 \001(\t\032\017\n\rDeleteFromRowB\n\n\010mutation\"\200\001\n\023R"
      "eadModifyWriteRule\022\023\n\013family_name\030\001 \001(\t\022"
      "\030\n\020column_qualifier\030\002 \001(\014\022\026\n\014append_valu"
      "e\030\003 \001(\014H\000\022\032\n\020increment_amount\030\004 \001(\003H\000B\006\n"
      "\004ruleBi\n\026com.google.bigtable.v1B\021Bigtabl"
      "eDataProtoP\001Z:google.golang.org/genproto"
      "/googleapis/bigtable/v1;bigtableb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2880);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/v1/bigtable_data.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto
namespace google {
namespace bigtable {
namespace v1 {

// ===================================================================

void Row::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Row::kKeyFieldNumber;
const int Row::kFamiliesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Row::Row()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Row)
}
Row::Row(const Row& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      families_(from.families_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Row)
}

void Row::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Row::~Row() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Row)
  SharedDtor();
}

void Row::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Row::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Row& Row::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRow();
  return *internal_default_instance();
}

Row* Row::New(::google::protobuf::Arena* arena) const {
  Row* n = new Row;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Row::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  families_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Row)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v1.Family families = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_families()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Row)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Row)
  return false;
#undef DO_
}

void Row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // repeated .google.bigtable.v1.Family families = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->families_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->families(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Row)
}

::google::protobuf::uint8* Row::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // repeated .google.bigtable.v1.Family families = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->families_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->families(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Row)
  return target;
}

size_t Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Row)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v1.Family families = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->families_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->families(static_cast<int>(i)));
    }
  }

  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Row::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Row)
  GOOGLE_DCHECK_NE(&from, this);
  const Row* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Row>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Row)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Row)
    MergeFrom(*source);
  }
}

void Row::MergeFrom(const Row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Row)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  families_.MergeFrom(from.families_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void Row::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Row::CopyFrom(const Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Row::IsInitialized() const {
  return true;
}

void Row::Swap(Row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Row::InternalSwap(Row* other) {
  using std::swap;
  families_.InternalSwap(&other->families_);
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Row::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Family::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Family::kNameFieldNumber;
const int Family::kColumnsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Family::Family()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsFamily();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Family)
}
Family::Family(const Family& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      columns_(from.columns_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Family)
}

void Family::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Family::~Family() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Family)
  SharedDtor();
}

void Family::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Family::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Family::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Family& Family::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsFamily();
  return *internal_default_instance();
}

Family* Family::New(::google::protobuf::Arena* arena) const {
  Family* n = new Family;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Family::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Family)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  columns_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Family::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Family)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.Family.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v1.Column columns = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_columns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Family)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Family)
  return false;
#undef DO_
}

void Family::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Family)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Family.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .google.bigtable.v1.Column columns = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->columns_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->columns(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Family)
}

::google::protobuf::uint8* Family::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Family)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Family.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .google.bigtable.v1.Column columns = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->columns_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->columns(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Family)
  return target;
}

size_t Family::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Family)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v1.Column columns = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->columns_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->columns(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Family::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Family)
  GOOGLE_DCHECK_NE(&from, this);
  const Family* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Family>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Family)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Family)
    MergeFrom(*source);
  }
}

void Family::MergeFrom(const Family& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Family)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  columns_.MergeFrom(from.columns_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Family::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Family)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Family::CopyFrom(const Family& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Family)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Family::IsInitialized() const {
  return true;
}

void Family::Swap(Family* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Family::InternalSwap(Family* other) {
  using std::swap;
  columns_.InternalSwap(&other->columns_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Family::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Column::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Column::kQualifierFieldNumber;
const int Column::kCellsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Column::Column()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsColumn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Column)
}
Column::Column(const Column& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cells_(from.cells_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.qualifier().size() > 0) {
    qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qualifier_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Column)
}

void Column::SharedCtor() {
  qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Column::~Column() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Column)
  SharedDtor();
}

void Column::SharedDtor() {
  qualifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Column::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Column::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Column& Column::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsColumn();
  return *internal_default_instance();
}

Column* Column::New(::google::protobuf::Arena* arena) const {
  Column* n = new Column;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Column::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cells_.Clear();
  qualifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Column::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Column)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes qualifier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_qualifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v1.Cell cells = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cells()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Column)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Column)
  return false;
#undef DO_
}

void Column::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes qualifier = 1;
  if (this->qualifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->qualifier(), output);
  }

  // repeated .google.bigtable.v1.Cell cells = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cells(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Column)
}

::google::protobuf::uint8* Column::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes qualifier = 1;
  if (this->qualifier().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->qualifier(), target);
  }

  // repeated .google.bigtable.v1.Cell cells = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->cells(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Column)
  return target;
}

size_t Column::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Column)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v1.Cell cells = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cells_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cells(static_cast<int>(i)));
    }
  }

  // bytes qualifier = 1;
  if (this->qualifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->qualifier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Column::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Column)
  GOOGLE_DCHECK_NE(&from, this);
  const Column* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Column>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Column)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Column)
    MergeFrom(*source);
  }
}

void Column::MergeFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Column)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cells_.MergeFrom(from.cells_);
  if (from.qualifier().size() > 0) {

    qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qualifier_);
  }
}

void Column::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Column::CopyFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Column::IsInitialized() const {
  return true;
}

void Column::Swap(Column* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Column::InternalSwap(Column* other) {
  using std::swap;
  cells_.InternalSwap(&other->cells_);
  qualifier_.Swap(&other->qualifier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Column::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Cell::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cell::kTimestampMicrosFieldNumber;
const int Cell::kValueFieldNumber;
const int Cell::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cell::Cell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsCell();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Cell)
}
Cell::Cell(const Cell& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      labels_(from.labels_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  timestamp_micros_ = from.timestamp_micros_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Cell)
}

void Cell::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_micros_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Cell::~Cell() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Cell)
  SharedDtor();
}

void Cell::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Cell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cell::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cell& Cell::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsCell();
  return *internal_default_instance();
}

Cell* Cell::New(::google::protobuf::Arena* arena) const {
  Cell* n = new Cell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cell::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_micros_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Cell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Cell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp_micros = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string labels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->labels(this->labels_size() - 1).data(),
            static_cast<int>(this->labels(this->labels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.Cell.labels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Cell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Cell)
  return false;
#undef DO_
}

void Cell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp_micros = 1;
  if (this->timestamp_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp_micros(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // repeated string labels = 3;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Cell.labels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->labels(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Cell)
}

::google::protobuf::uint8* Cell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp_micros = 1;
  if (this->timestamp_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp_micros(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // repeated string labels = 3;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Cell.labels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->labels(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Cell)
  return target;
}

size_t Cell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Cell)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string labels = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labels(i));
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int64 timestamp_micros = 1;
  if (this->timestamp_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp_micros());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  const Cell* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Cell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Cell)
    MergeFrom(*source);
  }
}

void Cell::MergeFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.timestamp_micros() != 0) {
    set_timestamp_micros(from.timestamp_micros());
  }
}

void Cell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cell::CopyFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cell::IsInitialized() const {
  return true;
}

void Cell::Swap(Cell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cell::InternalSwap(Cell* other) {
  using std::swap;
  labels_.InternalSwap(&other->labels_);
  value_.Swap(&other->value_);
  swap(timestamp_micros_, other->timestamp_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cell::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RowRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowRange::kStartKeyFieldNumber;
const int RowRange::kEndKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowRange::RowRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.RowRange)
}
RowRange::RowRange(const RowRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_key().size() > 0) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_key().size() > 0) {
    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.RowRange)
}

void RowRange::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RowRange::~RowRange() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.RowRange)
  SharedDtor();
}

void RowRange::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RowRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowRange::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RowRange& RowRange::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowRange();
  return *internal_default_instance();
}

RowRange* RowRange::New(::google::protobuf::Arena* arena) const {
  RowRange* n = new RowRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.RowRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RowRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.RowRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes start_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.RowRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.RowRange)
  return false;
#undef DO_
}

void RowRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.RowRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->start_key(), output);
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->end_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.RowRange)
}

::google::protobuf::uint8* RowRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.RowRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->start_key(), target);
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->end_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.RowRange)
  return target;
}

size_t RowRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.RowRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_key());
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.RowRange)
  GOOGLE_DCHECK_NE(&from, this);
  const RowRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.RowRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.RowRange)
    MergeFrom(*source);
  }
}

void RowRange::MergeFrom(const RowRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.RowRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_key().size() > 0) {

    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.end_key().size() > 0) {

    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
}

void RowRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.RowRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowRange::CopyFrom(const RowRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.RowRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowRange::IsInitialized() const {
  return true;
}

void RowRange::Swap(RowRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowRange::InternalSwap(RowRange* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_);
  end_key_.Swap(&other->end_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowRange::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RowSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowSet::kRowKeysFieldNumber;
const int RowSet::kRowRangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowSet::RowSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowSet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.RowSet)
}
RowSet::RowSet(const RowSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      row_keys_(from.row_keys_),
      row_ranges_(from.row_ranges_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.RowSet)
}

void RowSet::SharedCtor() {
  _cached_size_ = 0;
}

RowSet::~RowSet() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.RowSet)
  SharedDtor();
}

void RowSet::SharedDtor() {
}

void RowSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowSet::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RowSet& RowSet::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowSet();
  return *internal_default_instance();
}

RowSet* RowSet::New(::google::protobuf::Arena* arena) const {
  RowSet* n = new RowSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.RowSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_keys_.Clear();
  row_ranges_.Clear();
  _internal_metadata_.Clear();
}

bool RowSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.RowSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes row_keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_row_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.v1.RowRange row_ranges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_row_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.RowSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.RowSet)
  return false;
#undef DO_
}

void RowSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.RowSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes row_keys = 1;
  for (int i = 0, n = this->row_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->row_keys(i), output);
  }

  // repeated .google.bigtable.v1.RowRange row_ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->row_ranges(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.RowSet)
}

::google::protobuf::uint8* RowSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.RowSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes row_keys = 1;
  for (int i = 0, n = this->row_keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->row_keys(i), target);
  }

  // repeated .google.bigtable.v1.RowRange row_ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->row_ranges(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.RowSet)
  return target;
}

size_t RowSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.RowSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes row_keys = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->row_keys_size());
  for (int i = 0, n = this->row_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->row_keys(i));
  }

  // repeated .google.bigtable.v1.RowRange row_ranges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->row_ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row_ranges(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.RowSet)
  GOOGLE_DCHECK_NE(&from, this);
  const RowSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.RowSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.RowSet)
    MergeFrom(*source);
  }
}

void RowSet::MergeFrom(const RowSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.RowSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_keys_.MergeFrom(from.row_keys_);
  row_ranges_.MergeFrom(from.row_ranges_);
}

void RowSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.RowSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowSet::CopyFrom(const RowSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.RowSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowSet::IsInitialized() const {
  return true;
}

void RowSet::Swap(RowSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowSet::InternalSwap(RowSet* other) {
  using std::swap;
  row_keys_.InternalSwap(&other->row_keys_);
  row_ranges_.InternalSwap(&other->row_ranges_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowSet::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ColumnRange::InitAsDefaultInstance() {
  ::google::bigtable::v1::_ColumnRange_default_instance_.start_qualifier_inclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_ColumnRange_default_instance_.start_qualifier_exclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_ColumnRange_default_instance_.end_qualifier_inclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_ColumnRange_default_instance_.end_qualifier_exclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnRange::kFamilyNameFieldNumber;
const int ColumnRange::kStartQualifierInclusiveFieldNumber;
const int ColumnRange::kStartQualifierExclusiveFieldNumber;
const int ColumnRange::kEndQualifierInclusiveFieldNumber;
const int ColumnRange::kEndQualifierExclusiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnRange::ColumnRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsColumnRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.ColumnRange)
}
ColumnRange::ColumnRange(const ColumnRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.family_name().size() > 0) {
    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  clear_has_start_qualifier();
  switch (from.start_qualifier_case()) {
    case kStartQualifierInclusive: {
      set_start_qualifier_inclusive(from.start_qualifier_inclusive());
      break;
    }
    case kStartQualifierExclusive: {
      set_start_qualifier_exclusive(from.start_qualifier_exclusive());
      break;
    }
    case START_QUALIFIER_NOT_SET: {
      break;
    }
  }
  clear_has_end_qualifier();
  switch (from.end_qualifier_case()) {
    case kEndQualifierInclusive: {
      set_end_qualifier_inclusive(from.end_qualifier_inclusive());
      break;
    }
    case kEndQualifierExclusive: {
      set_end_qualifier_exclusive(from.end_qualifier_exclusive());
      break;
    }
    case END_QUALIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.ColumnRange)
}

void ColumnRange::SharedCtor() {
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_qualifier();
  clear_has_end_qualifier();
  _cached_size_ = 0;
}

ColumnRange::~ColumnRange() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.ColumnRange)
  SharedDtor();
}

void ColumnRange::SharedDtor() {
  family_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_start_qualifier()) {
    clear_start_qualifier();
  }
  if (has_end_qualifier()) {
    clear_end_qualifier();
  }
}

void ColumnRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnRange::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ColumnRange& ColumnRange::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsColumnRange();
  return *internal_default_instance();
}

ColumnRange* ColumnRange::New(::google::protobuf::Arena* arena) const {
  ColumnRange* n = new ColumnRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColumnRange::clear_start_qualifier() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v1.ColumnRange)
  switch (start_qualifier_case()) {
    case kStartQualifierInclusive: {
      start_qualifier_.start_qualifier_inclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kStartQualifierExclusive: {
      start_qualifier_.start_qualifier_exclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case START_QUALIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = START_QUALIFIER_NOT_SET;
}

void ColumnRange::clear_end_qualifier() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v1.ColumnRange)
  switch (end_qualifier_case()) {
    case kEndQualifierInclusive: {
      end_qualifier_.end_qualifier_inclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kEndQualifierExclusive: {
      end_qualifier_.end_qualifier_exclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case END_QUALIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = END_QUALIFIER_NOT_SET;
}


void ColumnRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.ColumnRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_start_qualifier();
  clear_end_qualifier();
  _internal_metadata_.Clear();
}

bool ColumnRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.ColumnRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string family_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name().data(), static_cast<int>(this->family_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.ColumnRange.family_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_qualifier_inclusive = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_qualifier_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_qualifier_exclusive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_qualifier_exclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_qualifier_inclusive = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_qualifier_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_qualifier_exclusive = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_qualifier_exclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.ColumnRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.ColumnRange)
  return false;
#undef DO_
}

void ColumnRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.ColumnRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.ColumnRange.family_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->family_name(), output);
  }

  // bytes start_qualifier_inclusive = 2;
  if (has_start_qualifier_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->start_qualifier_inclusive(), output);
  }

  // bytes start_qualifier_exclusive = 3;
  if (has_start_qualifier_exclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->start_qualifier_exclusive(), output);
  }

  // bytes end_qualifier_inclusive = 4;
  if (has_end_qualifier_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->end_qualifier_inclusive(), output);
  }

  // bytes end_qualifier_exclusive = 5;
  if (has_end_qualifier_exclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->end_qualifier_exclusive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.ColumnRange)
}

::google::protobuf::uint8* ColumnRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.ColumnRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.ColumnRange.family_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->family_name(), target);
  }

  // bytes start_qualifier_inclusive = 2;
  if (has_start_qualifier_inclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->start_qualifier_inclusive(), target);
  }

  // bytes start_qualifier_exclusive = 3;
  if (has_start_qualifier_exclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->start_qualifier_exclusive(), target);
  }

  // bytes end_qualifier_inclusive = 4;
  if (has_end_qualifier_inclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->end_qualifier_inclusive(), target);
  }

  // bytes end_qualifier_exclusive = 5;
  if (has_end_qualifier_exclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->end_qualifier_exclusive(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.ColumnRange)
  return target;
}

size_t ColumnRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.ColumnRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string family_name = 1;
  if (this->family_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->family_name());
  }

  switch (start_qualifier_case()) {
    // bytes start_qualifier_inclusive = 2;
    case kStartQualifierInclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->start_qualifier_inclusive());
      break;
    }
    // bytes start_qualifier_exclusive = 3;
    case kStartQualifierExclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->start_qualifier_exclusive());
      break;
    }
    case START_QUALIFIER_NOT_SET: {
      break;
    }
  }
  switch (end_qualifier_case()) {
    // bytes end_qualifier_inclusive = 4;
    case kEndQualifierInclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->end_qualifier_inclusive());
      break;
    }
    // bytes end_qualifier_exclusive = 5;
    case kEndQualifierExclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->end_qualifier_exclusive());
      break;
    }
    case END_QUALIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.ColumnRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ColumnRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColumnRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.ColumnRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.ColumnRange)
    MergeFrom(*source);
  }
}

void ColumnRange::MergeFrom(const ColumnRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.ColumnRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.family_name().size() > 0) {

    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  switch (from.start_qualifier_case()) {
    case kStartQualifierInclusive: {
      set_start_qualifier_inclusive(from.start_qualifier_inclusive());
      break;
    }
    case kStartQualifierExclusive: {
      set_start_qualifier_exclusive(from.start_qualifier_exclusive());
      break;
    }
    case START_QUALIFIER_NOT_SET: {
      break;
    }
  }
  switch (from.end_qualifier_case()) {
    case kEndQualifierInclusive: {
      set_end_qualifier_inclusive(from.end_qualifier_inclusive());
      break;
    }
    case kEndQualifierExclusive: {
      set_end_qualifier_exclusive(from.end_qualifier_exclusive());
      break;
    }
    case END_QUALIFIER_NOT_SET: {
      break;
    }
  }
}

void ColumnRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.ColumnRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnRange::CopyFrom(const ColumnRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.ColumnRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnRange::IsInitialized() const {
  return true;
}

void ColumnRange::Swap(ColumnRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnRange::InternalSwap(ColumnRange* other) {
  using std::swap;
  family_name_.Swap(&other->family_name_);
  swap(start_qualifier_, other->start_qualifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(end_qualifier_, other->end_qualifier_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColumnRange::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimestampRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimestampRange::kStartTimestampMicrosFieldNumber;
const int TimestampRange::kEndTimestampMicrosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimestampRange::TimestampRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsTimestampRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.TimestampRange)
}
TimestampRange::TimestampRange(const TimestampRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_timestamp_micros_, &from.start_timestamp_micros_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_timestamp_micros_) -
    reinterpret_cast<char*>(&start_timestamp_micros_)) + sizeof(end_timestamp_micros_));
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.TimestampRange)
}

void TimestampRange::SharedCtor() {
  ::memset(&start_timestamp_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_timestamp_micros_) -
      reinterpret_cast<char*>(&start_timestamp_micros_)) + sizeof(end_timestamp_micros_));
  _cached_size_ = 0;
}

TimestampRange::~TimestampRange() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.TimestampRange)
  SharedDtor();
}

void TimestampRange::SharedDtor() {
}

void TimestampRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimestampRange::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimestampRange& TimestampRange::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsTimestampRange();
  return *internal_default_instance();
}

TimestampRange* TimestampRange::New(::google::protobuf::Arena* arena) const {
  TimestampRange* n = new TimestampRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimestampRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.TimestampRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_timestamp_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_timestamp_micros_) -
      reinterpret_cast<char*>(&start_timestamp_micros_)) + sizeof(end_timestamp_micros_));
  _internal_metadata_.Clear();
}

bool TimestampRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.TimestampRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 start_timestamp_micros = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_timestamp_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 end_timestamp_micros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_timestamp_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.TimestampRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.TimestampRange)
  return false;
#undef DO_
}

void TimestampRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.TimestampRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_timestamp_micros = 1;
  if (this->start_timestamp_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_timestamp_micros(), output);
  }

  // int64 end_timestamp_micros = 2;
  if (this->end_timestamp_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_timestamp_micros(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.TimestampRange)
}

::google::protobuf::uint8* TimestampRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.TimestampRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_timestamp_micros = 1;
  if (this->start_timestamp_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_timestamp_micros(), target);
  }

  // int64 end_timestamp_micros = 2;
  if (this->end_timestamp_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_timestamp_micros(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.TimestampRange)
  return target;
}

size_t TimestampRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.TimestampRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 start_timestamp_micros = 1;
  if (this->start_timestamp_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_timestamp_micros());
  }

  // int64 end_timestamp_micros = 2;
  if (this->end_timestamp_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_timestamp_micros());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimestampRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.TimestampRange)
  GOOGLE_DCHECK_NE(&from, this);
  const TimestampRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimestampRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.TimestampRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.TimestampRange)
    MergeFrom(*source);
  }
}

void TimestampRange::MergeFrom(const TimestampRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.TimestampRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_timestamp_micros() != 0) {
    set_start_timestamp_micros(from.start_timestamp_micros());
  }
  if (from.end_timestamp_micros() != 0) {
    set_end_timestamp_micros(from.end_timestamp_micros());
  }
}

void TimestampRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.TimestampRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimestampRange::CopyFrom(const TimestampRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.TimestampRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimestampRange::IsInitialized() const {
  return true;
}

void TimestampRange::Swap(TimestampRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimestampRange::InternalSwap(TimestampRange* other) {
  using std::swap;
  swap(start_timestamp_micros_, other->start_timestamp_micros_);
  swap(end_timestamp_micros_, other->end_timestamp_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimestampRange::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueRange::InitAsDefaultInstance() {
  ::google::bigtable::v1::_ValueRange_default_instance_.start_value_inclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_ValueRange_default_instance_.start_value_exclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_ValueRange_default_instance_.end_value_inclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_ValueRange_default_instance_.end_value_exclusive_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueRange::kStartValueInclusiveFieldNumber;
const int ValueRange::kStartValueExclusiveFieldNumber;
const int ValueRange::kEndValueInclusiveFieldNumber;
const int ValueRange::kEndValueExclusiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueRange::ValueRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsValueRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.ValueRange)
}
ValueRange::ValueRange(const ValueRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_start_value();
  switch (from.start_value_case()) {
    case kStartValueInclusive: {
      set_start_value_inclusive(from.start_value_inclusive());
      break;
    }
    case kStartValueExclusive: {
      set_start_value_exclusive(from.start_value_exclusive());
      break;
    }
    case START_VALUE_NOT_SET: {
      break;
    }
  }
  clear_has_end_value();
  switch (from.end_value_case()) {
    case kEndValueInclusive: {
      set_end_value_inclusive(from.end_value_inclusive());
      break;
    }
    case kEndValueExclusive: {
      set_end_value_exclusive(from.end_value_exclusive());
      break;
    }
    case END_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.ValueRange)
}

void ValueRange::SharedCtor() {
  clear_has_start_value();
  clear_has_end_value();
  _cached_size_ = 0;
}

ValueRange::~ValueRange() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.ValueRange)
  SharedDtor();
}

void ValueRange::SharedDtor() {
  if (has_start_value()) {
    clear_start_value();
  }
  if (has_end_value()) {
    clear_end_value();
  }
}

void ValueRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueRange::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueRange& ValueRange::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsValueRange();
  return *internal_default_instance();
}

ValueRange* ValueRange::New(::google::protobuf::Arena* arena) const {
  ValueRange* n = new ValueRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueRange::clear_start_value() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v1.ValueRange)
  switch (start_value_case()) {
    case kStartValueInclusive: {
      start_value_.start_value_inclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kStartValueExclusive: {
      start_value_.start_value_exclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case START_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = START_VALUE_NOT_SET;
}

void ValueRange::clear_end_value() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v1.ValueRange)
  switch (end_value_case()) {
    case kEndValueInclusive: {
      end_value_.end_value_inclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kEndValueExclusive: {
      end_value_.end_value_exclusive_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case END_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = END_VALUE_NOT_SET;
}


void ValueRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.ValueRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_start_value();
  clear_end_value();
  _internal_metadata_.Clear();
}

bool ValueRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.ValueRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes start_value_inclusive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_value_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_value_exclusive = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_value_exclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_value_inclusive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_value_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_value_exclusive = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_value_exclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.ValueRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.ValueRange)
  return false;
#undef DO_
}

void ValueRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.ValueRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start_value_inclusive = 1;
  if (has_start_value_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->start_value_inclusive(), output);
  }

  // bytes start_value_exclusive = 2;
  if (has_start_value_exclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->start_value_exclusive(), output);
  }

  // bytes end_value_inclusive = 3;
  if (has_end_value_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->end_value_inclusive(), output);
  }

  // bytes end_value_exclusive = 4;
  if (has_end_value_exclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->end_value_exclusive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.ValueRange)
}

::google::protobuf::uint8* ValueRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.ValueRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start_value_inclusive = 1;
  if (has_start_value_inclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->start_value_inclusive(), target);
  }

  // bytes start_value_exclusive = 2;
  if (has_start_value_exclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->start_value_exclusive(), target);
  }

  // bytes end_value_inclusive = 3;
  if (has_end_value_inclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->end_value_inclusive(), target);
  }

  // bytes end_value_exclusive = 4;
  if (has_end_value_exclusive()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->end_value_exclusive(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.ValueRange)
  return target;
}

size_t ValueRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.ValueRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (start_value_case()) {
    // bytes start_value_inclusive = 1;
    case kStartValueInclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->start_value_inclusive());
      break;
    }
    // bytes start_value_exclusive = 2;
    case kStartValueExclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->start_value_exclusive());
      break;
    }
    case START_VALUE_NOT_SET: {
      break;
    }
  }
  switch (end_value_case()) {
    // bytes end_value_inclusive = 3;
    case kEndValueInclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->end_value_inclusive());
      break;
    }
    // bytes end_value_exclusive = 4;
    case kEndValueExclusive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->end_value_exclusive());
      break;
    }
    case END_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.ValueRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.ValueRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.ValueRange)
    MergeFrom(*source);
  }
}

void ValueRange::MergeFrom(const ValueRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.ValueRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.start_value_case()) {
    case kStartValueInclusive: {
      set_start_value_inclusive(from.start_value_inclusive());
      break;
    }
    case kStartValueExclusive: {
      set_start_value_exclusive(from.start_value_exclusive());
      break;
    }
    case START_VALUE_NOT_SET: {
      break;
    }
  }
  switch (from.end_value_case()) {
    case kEndValueInclusive: {
      set_end_value_inclusive(from.end_value_inclusive());
      break;
    }
    case kEndValueExclusive: {
      set_end_value_exclusive(from.end_value_exclusive());
      break;
    }
    case END_VALUE_NOT_SET: {
      break;
    }
  }
}

void ValueRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.ValueRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueRange::CopyFrom(const ValueRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.ValueRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueRange::IsInitialized() const {
  return true;
}

void ValueRange::Swap(ValueRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueRange::InternalSwap(ValueRange* other) {
  using std::swap;
  swap(start_value_, other->start_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(end_value_, other->end_value_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueRange::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RowFilter_Chain::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowFilter_Chain::kFiltersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowFilter_Chain::RowFilter_Chain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.RowFilter.Chain)
}
RowFilter_Chain::RowFilter_Chain(const RowFilter_Chain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filters_(from.filters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.RowFilter.Chain)
}

void RowFilter_Chain::SharedCtor() {
  _cached_size_ = 0;
}

RowFilter_Chain::~RowFilter_Chain() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.RowFilter.Chain)
  SharedDtor();
}

void RowFilter_Chain::SharedDtor() {
}

void RowFilter_Chain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowFilter_Chain::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RowFilter_Chain& RowFilter_Chain::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  return *internal_default_instance();
}

RowFilter_Chain* RowFilter_Chain::New(::google::protobuf::Arena* arena) const {
  RowFilter_Chain* n = new RowFilter_Chain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowFilter_Chain::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.RowFilter.Chain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filters_.Clear();
  _internal_metadata_.Clear();
}

bool RowFilter_Chain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.RowFilter.Chain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.v1.RowFilter filters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.RowFilter.Chain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.RowFilter.Chain)
  return false;
#undef DO_
}

void RowFilter_Chain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.RowFilter.Chain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v1.RowFilter filters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->filters(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.RowFilter.Chain)
}

::google::protobuf::uint8* RowFilter_Chain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.RowFilter.Chain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v1.RowFilter filters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->filters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.RowFilter.Chain)
  return target;
}

size_t RowFilter_Chain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.RowFilter.Chain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v1.RowFilter filters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->filters(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowFilter_Chain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.RowFilter.Chain)
  GOOGLE_DCHECK_NE(&from, this);
  const RowFilter_Chain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowFilter_Chain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.RowFilter.Chain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.RowFilter.Chain)
    MergeFrom(*source);
  }
}

void RowFilter_Chain::MergeFrom(const RowFilter_Chain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.RowFilter.Chain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filters_.MergeFrom(from.filters_);
}

void RowFilter_Chain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.RowFilter.Chain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowFilter_Chain::CopyFrom(const RowFilter_Chain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.RowFilter.Chain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowFilter_Chain::IsInitialized() const {
  return true;
}

void RowFilter_Chain::Swap(RowFilter_Chain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowFilter_Chain::InternalSwap(RowFilter_Chain* other) {
  using std::swap;
  filters_.InternalSwap(&other->filters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowFilter_Chain::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RowFilter_Interleave::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowFilter_Interleave::kFiltersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowFilter_Interleave::RowFilter_Interleave()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.RowFilter.Interleave)
}
RowFilter_Interleave::RowFilter_Interleave(const RowFilter_Interleave& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filters_(from.filters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.RowFilter.Interleave)
}

void RowFilter_Interleave::SharedCtor() {
  _cached_size_ = 0;
}

RowFilter_Interleave::~RowFilter_Interleave() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.RowFilter.Interleave)
  SharedDtor();
}

void RowFilter_Interleave::SharedDtor() {
}

void RowFilter_Interleave::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowFilter_Interleave::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RowFilter_Interleave& RowFilter_Interleave::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  return *internal_default_instance();
}

RowFilter_Interleave* RowFilter_Interleave::New(::google::protobuf::Arena* arena) const {
  RowFilter_Interleave* n = new RowFilter_Interleave;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowFilter_Interleave::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.RowFilter.Interleave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filters_.Clear();
  _internal_metadata_.Clear();
}

bool RowFilter_Interleave::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.RowFilter.Interleave)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.v1.RowFilter filters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.RowFilter.Interleave)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.RowFilter.Interleave)
  return false;
#undef DO_
}

void RowFilter_Interleave::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.RowFilter.Interleave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v1.RowFilter filters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->filters(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.RowFilter.Interleave)
}

::google::protobuf::uint8* RowFilter_Interleave::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.RowFilter.Interleave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.v1.RowFilter filters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->filters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.RowFilter.Interleave)
  return target;
}

size_t RowFilter_Interleave::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.RowFilter.Interleave)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.v1.RowFilter filters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->filters(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowFilter_Interleave::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.RowFilter.Interleave)
  GOOGLE_DCHECK_NE(&from, this);
  const RowFilter_Interleave* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowFilter_Interleave>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.RowFilter.Interleave)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.RowFilter.Interleave)
    MergeFrom(*source);
  }
}

void RowFilter_Interleave::MergeFrom(const RowFilter_Interleave& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.RowFilter.Interleave)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filters_.MergeFrom(from.filters_);
}

void RowFilter_Interleave::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.RowFilter.Interleave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowFilter_Interleave::CopyFrom(const RowFilter_Interleave& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.RowFilter.Interleave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowFilter_Interleave::IsInitialized() const {
  return true;
}

void RowFilter_Interleave::Swap(RowFilter_Interleave* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowFilter_Interleave::InternalSwap(RowFilter_Interleave* other) {
  using std::swap;
  filters_.InternalSwap(&other->filters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowFilter_Interleave::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RowFilter_Condition::InitAsDefaultInstance() {
  ::google::bigtable::v1::_RowFilter_Condition_default_instance_._instance.get_mutable()->predicate_filter_ = const_cast< ::google::bigtable::v1::RowFilter*>(
      ::google::bigtable::v1::RowFilter::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_Condition_default_instance_._instance.get_mutable()->true_filter_ = const_cast< ::google::bigtable::v1::RowFilter*>(
      ::google::bigtable::v1::RowFilter::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_Condition_default_instance_._instance.get_mutable()->false_filter_ = const_cast< ::google::bigtable::v1::RowFilter*>(
      ::google::bigtable::v1::RowFilter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowFilter_Condition::kPredicateFilterFieldNumber;
const int RowFilter_Condition::kTrueFilterFieldNumber;
const int RowFilter_Condition::kFalseFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowFilter_Condition::RowFilter_Condition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.RowFilter.Condition)
}
RowFilter_Condition::RowFilter_Condition(const RowFilter_Condition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_predicate_filter()) {
    predicate_filter_ = new ::google::bigtable::v1::RowFilter(*from.predicate_filter_);
  } else {
    predicate_filter_ = NULL;
  }
  if (from.has_true_filter()) {
    true_filter_ = new ::google::bigtable::v1::RowFilter(*from.true_filter_);
  } else {
    true_filter_ = NULL;
  }
  if (from.has_false_filter()) {
    false_filter_ = new ::google::bigtable::v1::RowFilter(*from.false_filter_);
  } else {
    false_filter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.RowFilter.Condition)
}

void RowFilter_Condition::SharedCtor() {
  ::memset(&predicate_filter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&false_filter_) -
      reinterpret_cast<char*>(&predicate_filter_)) + sizeof(false_filter_));
  _cached_size_ = 0;
}

RowFilter_Condition::~RowFilter_Condition() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.RowFilter.Condition)
  SharedDtor();
}

void RowFilter_Condition::SharedDtor() {
  if (this != internal_default_instance()) delete predicate_filter_;
  if (this != internal_default_instance()) delete true_filter_;
  if (this != internal_default_instance()) delete false_filter_;
}

void RowFilter_Condition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowFilter_Condition::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RowFilter_Condition& RowFilter_Condition::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  return *internal_default_instance();
}

RowFilter_Condition* RowFilter_Condition::New(::google::protobuf::Arena* arena) const {
  RowFilter_Condition* n = new RowFilter_Condition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowFilter_Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.RowFilter.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && predicate_filter_ != NULL) {
    delete predicate_filter_;
  }
  predicate_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && true_filter_ != NULL) {
    delete true_filter_;
  }
  true_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && false_filter_ != NULL) {
    delete false_filter_;
  }
  false_filter_ = NULL;
  _internal_metadata_.Clear();
}

bool RowFilter_Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.RowFilter.Condition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.v1.RowFilter predicate_filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_predicate_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.RowFilter true_filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_true_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.RowFilter false_filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_false_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.RowFilter.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.RowFilter.Condition)
  return false;
#undef DO_
}

void RowFilter_Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.RowFilter.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v1.RowFilter predicate_filter = 1;
  if (this->has_predicate_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->predicate_filter_, output);
  }

  // .google.bigtable.v1.RowFilter true_filter = 2;
  if (this->has_true_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->true_filter_, output);
  }

  // .google.bigtable.v1.RowFilter false_filter = 3;
  if (this->has_false_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->false_filter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.RowFilter.Condition)
}

::google::protobuf::uint8* RowFilter_Condition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.RowFilter.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v1.RowFilter predicate_filter = 1;
  if (this->has_predicate_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->predicate_filter_, deterministic, target);
  }

  // .google.bigtable.v1.RowFilter true_filter = 2;
  if (this->has_true_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->true_filter_, deterministic, target);
  }

  // .google.bigtable.v1.RowFilter false_filter = 3;
  if (this->has_false_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->false_filter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.RowFilter.Condition)
  return target;
}

size_t RowFilter_Condition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.RowFilter.Condition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.bigtable.v1.RowFilter predicate_filter = 1;
  if (this->has_predicate_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->predicate_filter_);
  }

  // .google.bigtable.v1.RowFilter true_filter = 2;
  if (this->has_true_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->true_filter_);
  }

  // .google.bigtable.v1.RowFilter false_filter = 3;
  if (this->has_false_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->false_filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowFilter_Condition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.RowFilter.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  const RowFilter_Condition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowFilter_Condition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.RowFilter.Condition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.RowFilter.Condition)
    MergeFrom(*source);
  }
}

void RowFilter_Condition::MergeFrom(const RowFilter_Condition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.RowFilter.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_predicate_filter()) {
    mutable_predicate_filter()->::google::bigtable::v1::RowFilter::MergeFrom(from.predicate_filter());
  }
  if (from.has_true_filter()) {
    mutable_true_filter()->::google::bigtable::v1::RowFilter::MergeFrom(from.true_filter());
  }
  if (from.has_false_filter()) {
    mutable_false_filter()->::google::bigtable::v1::RowFilter::MergeFrom(from.false_filter());
  }
}

void RowFilter_Condition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.RowFilter.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowFilter_Condition::CopyFrom(const RowFilter_Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.RowFilter.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowFilter_Condition::IsInitialized() const {
  return true;
}

void RowFilter_Condition::Swap(RowFilter_Condition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowFilter_Condition::InternalSwap(RowFilter_Condition* other) {
  using std::swap;
  swap(predicate_filter_, other->predicate_filter_);
  swap(true_filter_, other->true_filter_);
  swap(false_filter_, other->false_filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowFilter_Condition::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RowFilter::InitAsDefaultInstance() {
  ::google::bigtable::v1::_RowFilter_default_instance_.chain_ = const_cast< ::google::bigtable::v1::RowFilter_Chain*>(
      ::google::bigtable::v1::RowFilter_Chain::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_default_instance_.interleave_ = const_cast< ::google::bigtable::v1::RowFilter_Interleave*>(
      ::google::bigtable::v1::RowFilter_Interleave::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_default_instance_.condition_ = const_cast< ::google::bigtable::v1::RowFilter_Condition*>(
      ::google::bigtable::v1::RowFilter_Condition::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_default_instance_.sink_ = false;
  ::google::bigtable::v1::_RowFilter_default_instance_.pass_all_filter_ = false;
  ::google::bigtable::v1::_RowFilter_default_instance_.block_all_filter_ = false;
  ::google::bigtable::v1::_RowFilter_default_instance_.row_key_regex_filter_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_RowFilter_default_instance_.row_sample_filter_ = 0;
  ::google::bigtable::v1::_RowFilter_default_instance_.family_name_regex_filter_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_RowFilter_default_instance_.column_qualifier_regex_filter_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_RowFilter_default_instance_.column_range_filter_ = const_cast< ::google::bigtable::v1::ColumnRange*>(
      ::google::bigtable::v1::ColumnRange::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_default_instance_.timestamp_range_filter_ = const_cast< ::google::bigtable::v1::TimestampRange*>(
      ::google::bigtable::v1::TimestampRange::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_default_instance_.value_regex_filter_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_RowFilter_default_instance_.value_range_filter_ = const_cast< ::google::bigtable::v1::ValueRange*>(
      ::google::bigtable::v1::ValueRange::internal_default_instance());
  ::google::bigtable::v1::_RowFilter_default_instance_.cells_per_row_offset_filter_ = 0;
  ::google::bigtable::v1::_RowFilter_default_instance_.cells_per_row_limit_filter_ = 0;
  ::google::bigtable::v1::_RowFilter_default_instance_.cells_per_column_limit_filter_ = 0;
  ::google::bigtable::v1::_RowFilter_default_instance_.strip_value_transformer_ = false;
  ::google::bigtable::v1::_RowFilter_default_instance_.apply_label_transformer_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RowFilter::set_allocated_chain(::google::bigtable::v1::RowFilter_Chain* chain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_filter();
  if (chain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chain, submessage_arena);
    }
    set_has_chain();
    filter_.chain_ = chain;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.RowFilter.chain)
}
void RowFilter::set_allocated_interleave(::google::bigtable::v1::RowFilter_Interleave* interleave) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_filter();
  if (interleave) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interleave = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interleave, submessage_arena);
    }
    set_has_interleave();
    filter_.interleave_ = interleave;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.RowFilter.interleave)
}
void RowFilter::set_allocated_condition(::google::bigtable::v1::RowFilter_Condition* condition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_filter();
  if (condition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      condition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, condition, submessage_arena);
    }
    set_has_condition();
    filter_.condition_ = condition;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.RowFilter.condition)
}
void RowFilter::set_allocated_column_range_filter(::google::bigtable::v1::ColumnRange* column_range_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_filter();
  if (column_range_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      column_range_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, column_range_filter, submessage_arena);
    }
    set_has_column_range_filter();
    filter_.column_range_filter_ = column_range_filter;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.RowFilter.column_range_filter)
}
void RowFilter::set_allocated_timestamp_range_filter(::google::bigtable::v1::TimestampRange* timestamp_range_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_filter();
  if (timestamp_range_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp_range_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_range_filter, submessage_arena);
    }
    set_has_timestamp_range_filter();
    filter_.timestamp_range_filter_ = timestamp_range_filter;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.RowFilter.timestamp_range_filter)
}
void RowFilter::set_allocated_value_range_filter(::google::bigtable::v1::ValueRange* value_range_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_filter();
  if (value_range_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_range_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_range_filter, submessage_arena);
    }
    set_has_value_range_filter();
    filter_.value_range_filter_ = value_range_filter;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.RowFilter.value_range_filter)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowFilter::kChainFieldNumber;
const int RowFilter::kInterleaveFieldNumber;
const int RowFilter::kConditionFieldNumber;
const int RowFilter::kSinkFieldNumber;
const int RowFilter::kPassAllFilterFieldNumber;
const int RowFilter::kBlockAllFilterFieldNumber;
const int RowFilter::kRowKeyRegexFilterFieldNumber;
const int RowFilter::kRowSampleFilterFieldNumber;
const int RowFilter::kFamilyNameRegexFilterFieldNumber;
const int RowFilter::kColumnQualifierRegexFilterFieldNumber;
const int RowFilter::kColumnRangeFilterFieldNumber;
const int RowFilter::kTimestampRangeFilterFieldNumber;
const int RowFilter::kValueRegexFilterFieldNumber;
const int RowFilter::kValueRangeFilterFieldNumber;
const int RowFilter::kCellsPerRowOffsetFilterFieldNumber;
const int RowFilter::kCellsPerRowLimitFilterFieldNumber;
const int RowFilter::kCellsPerColumnLimitFilterFieldNumber;
const int RowFilter::kStripValueTransformerFieldNumber;
const int RowFilter::kApplyLabelTransformerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowFilter::RowFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.RowFilter)
}
RowFilter::RowFilter(const RowFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_filter();
  switch (from.filter_case()) {
    case kChain: {
      mutable_chain()->::google::bigtable::v1::RowFilter_Chain::MergeFrom(from.chain());
      break;
    }
    case kInterleave: {
      mutable_interleave()->::google::bigtable::v1::RowFilter_Interleave::MergeFrom(from.interleave());
      break;
    }
    case kCondition: {
      mutable_condition()->::google::bigtable::v1::RowFilter_Condition::MergeFrom(from.condition());
      break;
    }
    case kSink: {
      set_sink(from.sink());
      break;
    }
    case kPassAllFilter: {
      set_pass_all_filter(from.pass_all_filter());
      break;
    }
    case kBlockAllFilter: {
      set_block_all_filter(from.block_all_filter());
      break;
    }
    case kRowKeyRegexFilter: {
      set_row_key_regex_filter(from.row_key_regex_filter());
      break;
    }
    case kRowSampleFilter: {
      set_row_sample_filter(from.row_sample_filter());
      break;
    }
    case kFamilyNameRegexFilter: {
      set_family_name_regex_filter(from.family_name_regex_filter());
      break;
    }
    case kColumnQualifierRegexFilter: {
      set_column_qualifier_regex_filter(from.column_qualifier_regex_filter());
      break;
    }
    case kColumnRangeFilter: {
      mutable_column_range_filter()->::google::bigtable::v1::ColumnRange::MergeFrom(from.column_range_filter());
      break;
    }
    case kTimestampRangeFilter: {
      mutable_timestamp_range_filter()->::google::bigtable::v1::TimestampRange::MergeFrom(from.timestamp_range_filter());
      break;
    }
    case kValueRegexFilter: {
      set_value_regex_filter(from.value_regex_filter());
      break;
    }
    case kValueRangeFilter: {
      mutable_value_range_filter()->::google::bigtable::v1::ValueRange::MergeFrom(from.value_range_filter());
      break;
    }
    case kCellsPerRowOffsetFilter: {
      set_cells_per_row_offset_filter(from.cells_per_row_offset_filter());
      break;
    }
    case kCellsPerRowLimitFilter: {
      set_cells_per_row_limit_filter(from.cells_per_row_limit_filter());
      break;
    }
    case kCellsPerColumnLimitFilter: {
      set_cells_per_column_limit_filter(from.cells_per_column_limit_filter());
      break;
    }
    case kStripValueTransformer: {
      set_strip_value_transformer(from.strip_value_transformer());
      break;
    }
    case kApplyLabelTransformer: {
      set_apply_label_transformer(from.apply_label_transformer());
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.RowFilter)
}

void RowFilter::SharedCtor() {
  clear_has_filter();
  _cached_size_ = 0;
}

RowFilter::~RowFilter() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.RowFilter)
  SharedDtor();
}

void RowFilter::SharedDtor() {
  if (has_filter()) {
    clear_filter();
  }
}

void RowFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowFilter::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RowFilter& RowFilter::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsRowFilter();
  return *internal_default_instance();
}

RowFilter* RowFilter::New(::google::protobuf::Arena* arena) const {
  RowFilter* n = new RowFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowFilter::clear_filter() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v1.RowFilter)
  switch (filter_case()) {
    case kChain: {
      delete filter_.chain_;
      break;
    }
    case kInterleave: {
      delete filter_.interleave_;
      break;
    }
    case kCondition: {
      delete filter_.condition_;
      break;
    }
    case kSink: {
      // No need to clear
      break;
    }
    case kPassAllFilter: {
      // No need to clear
      break;
    }
    case kBlockAllFilter: {
      // No need to clear
      break;
    }
    case kRowKeyRegexFilter: {
      filter_.row_key_regex_filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRowSampleFilter: {
      // No need to clear
      break;
    }
    case kFamilyNameRegexFilter: {
      filter_.family_name_regex_filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kColumnQualifierRegexFilter: {
      filter_.column_qualifier_regex_filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kColumnRangeFilter: {
      delete filter_.column_range_filter_;
      break;
    }
    case kTimestampRangeFilter: {
      delete filter_.timestamp_range_filter_;
      break;
    }
    case kValueRegexFilter: {
      filter_.value_regex_filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kValueRangeFilter: {
      delete filter_.value_range_filter_;
      break;
    }
    case kCellsPerRowOffsetFilter: {
      // No need to clear
      break;
    }
    case kCellsPerRowLimitFilter: {
      // No need to clear
      break;
    }
    case kCellsPerColumnLimitFilter: {
      // No need to clear
      break;
    }
    case kStripValueTransformer: {
      // No need to clear
      break;
    }
    case kApplyLabelTransformer: {
      filter_.apply_label_transformer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FILTER_NOT_SET;
}


void RowFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.RowFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_filter();
  _internal_metadata_.Clear();
}

bool RowFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.RowFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.v1.RowFilter.Chain chain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.RowFilter.Interleave interleave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interleave()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.RowFilter.Condition condition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes row_key_regex_filter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key_regex_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string family_name_regex_filter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name_regex_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name_regex_filter().data(), static_cast<int>(this->family_name_regex_filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.RowFilter.family_name_regex_filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes column_qualifier_regex_filter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_column_qualifier_regex_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.ColumnRange column_range_filter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_column_range_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.TimestampRange timestamp_range_filter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_range_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value_regex_filter = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_regex_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cells_per_row_offset_filter = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filter_.cells_per_row_offset_filter_)));
          set_has_cells_per_row_offset_filter();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cells_per_row_limit_filter = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filter_.cells_per_row_limit_filter_)));
          set_has_cells_per_row_limit_filter();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cells_per_column_limit_filter = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filter_.cells_per_column_limit_filter_)));
          set_has_cells_per_column_limit_filter();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool strip_value_transformer = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filter_.strip_value_transformer_)));
          set_has_strip_value_transformer();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double row_sample_filter = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &filter_.row_sample_filter_)));
          set_has_row_sample_filter();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.ValueRange value_range_filter = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_range_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sink = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filter_.sink_)));
          set_has_sink();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool pass_all_filter = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filter_.pass_all_filter_)));
          set_has_pass_all_filter();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool block_all_filter = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          clear_filter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filter_.block_all_filter_)));
          set_has_block_all_filter();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string apply_label_transformer = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apply_label_transformer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apply_label_transformer().data(), static_cast<int>(this->apply_label_transformer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.RowFilter.apply_label_transformer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.RowFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.RowFilter)
  return false;
#undef DO_
}

void RowFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.RowFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v1.RowFilter.Chain chain = 1;
  if (has_chain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *filter_.chain_, output);
  }

  // .google.bigtable.v1.RowFilter.Interleave interleave = 2;
  if (has_interleave()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *filter_.interleave_, output);
  }

  // .google.bigtable.v1.RowFilter.Condition condition = 3;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *filter_.condition_, output);
  }

  // bytes row_key_regex_filter = 4;
  if (has_row_key_regex_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->row_key_regex_filter(), output);
  }

  // string family_name_regex_filter = 5;
  if (has_family_name_regex_filter()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name_regex_filter().data(), static_cast<int>(this->family_name_regex_filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.RowFilter.family_name_regex_filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->family_name_regex_filter(), output);
  }

  // bytes column_qualifier_regex_filter = 6;
  if (has_column_qualifier_regex_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->column_qualifier_regex_filter(), output);
  }

  // .google.bigtable.v1.ColumnRange column_range_filter = 7;
  if (has_column_range_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *filter_.column_range_filter_, output);
  }

  // .google.bigtable.v1.TimestampRange timestamp_range_filter = 8;
  if (has_timestamp_range_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *filter_.timestamp_range_filter_, output);
  }

  // bytes value_regex_filter = 9;
  if (has_value_regex_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->value_regex_filter(), output);
  }

  // int32 cells_per_row_offset_filter = 10;
  if (has_cells_per_row_offset_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->cells_per_row_offset_filter(), output);
  }

  // int32 cells_per_row_limit_filter = 11;
  if (has_cells_per_row_limit_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cells_per_row_limit_filter(), output);
  }

  // int32 cells_per_column_limit_filter = 12;
  if (has_cells_per_column_limit_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->cells_per_column_limit_filter(), output);
  }

  // bool strip_value_transformer = 13;
  if (has_strip_value_transformer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->strip_value_transformer(), output);
  }

  // double row_sample_filter = 14;
  if (has_row_sample_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->row_sample_filter(), output);
  }

  // .google.bigtable.v1.ValueRange value_range_filter = 15;
  if (has_value_range_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *filter_.value_range_filter_, output);
  }

  // bool sink = 16;
  if (has_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->sink(), output);
  }

  // bool pass_all_filter = 17;
  if (has_pass_all_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->pass_all_filter(), output);
  }

  // bool block_all_filter = 18;
  if (has_block_all_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->block_all_filter(), output);
  }

  // string apply_label_transformer = 19;
  if (has_apply_label_transformer()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apply_label_transformer().data(), static_cast<int>(this->apply_label_transformer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.RowFilter.apply_label_transformer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->apply_label_transformer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.RowFilter)
}

::google::protobuf::uint8* RowFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.RowFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v1.RowFilter.Chain chain = 1;
  if (has_chain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *filter_.chain_, deterministic, target);
  }

  // .google.bigtable.v1.RowFilter.Interleave interleave = 2;
  if (has_interleave()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *filter_.interleave_, deterministic, target);
  }

  // .google.bigtable.v1.RowFilter.Condition condition = 3;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *filter_.condition_, deterministic, target);
  }

  // bytes row_key_regex_filter = 4;
  if (has_row_key_regex_filter()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->row_key_regex_filter(), target);
  }

  // string family_name_regex_filter = 5;
  if (has_family_name_regex_filter()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name_regex_filter().data(), static_cast<int>(this->family_name_regex_filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.RowFilter.family_name_regex_filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->family_name_regex_filter(), target);
  }

  // bytes column_qualifier_regex_filter = 6;
  if (has_column_qualifier_regex_filter()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->column_qualifier_regex_filter(), target);
  }

  // .google.bigtable.v1.ColumnRange column_range_filter = 7;
  if (has_column_range_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *filter_.column_range_filter_, deterministic, target);
  }

  // .google.bigtable.v1.TimestampRange timestamp_range_filter = 8;
  if (has_timestamp_range_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *filter_.timestamp_range_filter_, deterministic, target);
  }

  // bytes value_regex_filter = 9;
  if (has_value_regex_filter()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->value_regex_filter(), target);
  }

  // int32 cells_per_row_offset_filter = 10;
  if (has_cells_per_row_offset_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->cells_per_row_offset_filter(), target);
  }

  // int32 cells_per_row_limit_filter = 11;
  if (has_cells_per_row_limit_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cells_per_row_limit_filter(), target);
  }

  // int32 cells_per_column_limit_filter = 12;
  if (has_cells_per_column_limit_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->cells_per_column_limit_filter(), target);
  }

  // bool strip_value_transformer = 13;
  if (has_strip_value_transformer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->strip_value_transformer(), target);
  }

  // double row_sample_filter = 14;
  if (has_row_sample_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->row_sample_filter(), target);
  }

  // .google.bigtable.v1.ValueRange value_range_filter = 15;
  if (has_value_range_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *filter_.value_range_filter_, deterministic, target);
  }

  // bool sink = 16;
  if (has_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->sink(), target);
  }

  // bool pass_all_filter = 17;
  if (has_pass_all_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->pass_all_filter(), target);
  }

  // bool block_all_filter = 18;
  if (has_block_all_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->block_all_filter(), target);
  }

  // string apply_label_transformer = 19;
  if (has_apply_label_transformer()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apply_label_transformer().data(), static_cast<int>(this->apply_label_transformer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.RowFilter.apply_label_transformer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->apply_label_transformer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.RowFilter)
  return target;
}

size_t RowFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.RowFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (filter_case()) {
    // .google.bigtable.v1.RowFilter.Chain chain = 1;
    case kChain: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *filter_.chain_);
      break;
    }
    // .google.bigtable.v1.RowFilter.Interleave interleave = 2;
    case kInterleave: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *filter_.interleave_);
      break;
    }
    // .google.bigtable.v1.RowFilter.Condition condition = 3;
    case kCondition: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *filter_.condition_);
      break;
    }
    // bool sink = 16;
    case kSink: {
      total_size += 2 + 1;
      break;
    }
    // bool pass_all_filter = 17;
    case kPassAllFilter: {
      total_size += 2 + 1;
      break;
    }
    // bool block_all_filter = 18;
    case kBlockAllFilter: {
      total_size += 2 + 1;
      break;
    }
    // bytes row_key_regex_filter = 4;
    case kRowKeyRegexFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->row_key_regex_filter());
      break;
    }
    // double row_sample_filter = 14;
    case kRowSampleFilter: {
      total_size += 1 + 8;
      break;
    }
    // string family_name_regex_filter = 5;
    case kFamilyNameRegexFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->family_name_regex_filter());
      break;
    }
    // bytes column_qualifier_regex_filter = 6;
    case kColumnQualifierRegexFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->column_qualifier_regex_filter());
      break;
    }
    // .google.bigtable.v1.ColumnRange column_range_filter = 7;
    case kColumnRangeFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *filter_.column_range_filter_);
      break;
    }
    // .google.bigtable.v1.TimestampRange timestamp_range_filter = 8;
    case kTimestampRangeFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *filter_.timestamp_range_filter_);
      break;
    }
    // bytes value_regex_filter = 9;
    case kValueRegexFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value_regex_filter());
      break;
    }
    // .google.bigtable.v1.ValueRange value_range_filter = 15;
    case kValueRangeFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *filter_.value_range_filter_);
      break;
    }
    // int32 cells_per_row_offset_filter = 10;
    case kCellsPerRowOffsetFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cells_per_row_offset_filter());
      break;
    }
    // int32 cells_per_row_limit_filter = 11;
    case kCellsPerRowLimitFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cells_per_row_limit_filter());
      break;
    }
    // int32 cells_per_column_limit_filter = 12;
    case kCellsPerColumnLimitFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cells_per_column_limit_filter());
      break;
    }
    // bool strip_value_transformer = 13;
    case kStripValueTransformer: {
      total_size += 1 + 1;
      break;
    }
    // string apply_label_transformer = 19;
    case kApplyLabelTransformer: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apply_label_transformer());
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.RowFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const RowFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.RowFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.RowFilter)
    MergeFrom(*source);
  }
}

void RowFilter::MergeFrom(const RowFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.RowFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.filter_case()) {
    case kChain: {
      mutable_chain()->::google::bigtable::v1::RowFilter_Chain::MergeFrom(from.chain());
      break;
    }
    case kInterleave: {
      mutable_interleave()->::google::bigtable::v1::RowFilter_Interleave::MergeFrom(from.interleave());
      break;
    }
    case kCondition: {
      mutable_condition()->::google::bigtable::v1::RowFilter_Condition::MergeFrom(from.condition());
      break;
    }
    case kSink: {
      set_sink(from.sink());
      break;
    }
    case kPassAllFilter: {
      set_pass_all_filter(from.pass_all_filter());
      break;
    }
    case kBlockAllFilter: {
      set_block_all_filter(from.block_all_filter());
      break;
    }
    case kRowKeyRegexFilter: {
      set_row_key_regex_filter(from.row_key_regex_filter());
      break;
    }
    case kRowSampleFilter: {
      set_row_sample_filter(from.row_sample_filter());
      break;
    }
    case kFamilyNameRegexFilter: {
      set_family_name_regex_filter(from.family_name_regex_filter());
      break;
    }
    case kColumnQualifierRegexFilter: {
      set_column_qualifier_regex_filter(from.column_qualifier_regex_filter());
      break;
    }
    case kColumnRangeFilter: {
      mutable_column_range_filter()->::google::bigtable::v1::ColumnRange::MergeFrom(from.column_range_filter());
      break;
    }
    case kTimestampRangeFilter: {
      mutable_timestamp_range_filter()->::google::bigtable::v1::TimestampRange::MergeFrom(from.timestamp_range_filter());
      break;
    }
    case kValueRegexFilter: {
      set_value_regex_filter(from.value_regex_filter());
      break;
    }
    case kValueRangeFilter: {
      mutable_value_range_filter()->::google::bigtable::v1::ValueRange::MergeFrom(from.value_range_filter());
      break;
    }
    case kCellsPerRowOffsetFilter: {
      set_cells_per_row_offset_filter(from.cells_per_row_offset_filter());
      break;
    }
    case kCellsPerRowLimitFilter: {
      set_cells_per_row_limit_filter(from.cells_per_row_limit_filter());
      break;
    }
    case kCellsPerColumnLimitFilter: {
      set_cells_per_column_limit_filter(from.cells_per_column_limit_filter());
      break;
    }
    case kStripValueTransformer: {
      set_strip_value_transformer(from.strip_value_transformer());
      break;
    }
    case kApplyLabelTransformer: {
      set_apply_label_transformer(from.apply_label_transformer());
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
}

void RowFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.RowFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowFilter::CopyFrom(const RowFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.RowFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowFilter::IsInitialized() const {
  return true;
}

void RowFilter::Swap(RowFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowFilter::InternalSwap(RowFilter* other) {
  using std::swap;
  swap(filter_, other->filter_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowFilter::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation_SetCell::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation_SetCell::kFamilyNameFieldNumber;
const int Mutation_SetCell::kColumnQualifierFieldNumber;
const int Mutation_SetCell::kTimestampMicrosFieldNumber;
const int Mutation_SetCell::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation_SetCell::Mutation_SetCell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_SetCell();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Mutation.SetCell)
}
Mutation_SetCell::Mutation_SetCell(const Mutation_SetCell& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.family_name().size() > 0) {
    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  column_qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.column_qualifier().size() > 0) {
    column_qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_qualifier_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  timestamp_micros_ = from.timestamp_micros_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Mutation.SetCell)
}

void Mutation_SetCell::SharedCtor() {
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_micros_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Mutation_SetCell::~Mutation_SetCell() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Mutation.SetCell)
  SharedDtor();
}

void Mutation_SetCell::SharedDtor() {
  family_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mutation_SetCell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation_SetCell::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation_SetCell& Mutation_SetCell::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_SetCell();
  return *internal_default_instance();
}

Mutation_SetCell* Mutation_SetCell::New(::google::protobuf::Arena* arena) const {
  Mutation_SetCell* n = new Mutation_SetCell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation_SetCell::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Mutation.SetCell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_micros_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Mutation_SetCell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Mutation.SetCell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string family_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name().data(), static_cast<int>(this->family_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.Mutation.SetCell.family_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes column_qualifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_column_qualifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp_micros = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Mutation.SetCell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Mutation.SetCell)
  return false;
#undef DO_
}

void Mutation_SetCell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Mutation.SetCell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Mutation.SetCell.family_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->family_name(), output);
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->column_qualifier(), output);
  }

  // int64 timestamp_micros = 3;
  if (this->timestamp_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp_micros(), output);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Mutation.SetCell)
}

::google::protobuf::uint8* Mutation_SetCell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Mutation.SetCell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Mutation.SetCell.family_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->family_name(), target);
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->column_qualifier(), target);
  }

  // int64 timestamp_micros = 3;
  if (this->timestamp_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp_micros(), target);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Mutation.SetCell)
  return target;
}

size_t Mutation_SetCell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Mutation.SetCell)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string family_name = 1;
  if (this->family_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->family_name());
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->column_qualifier());
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int64 timestamp_micros = 3;
  if (this->timestamp_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp_micros());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation_SetCell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Mutation.SetCell)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation_SetCell* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation_SetCell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Mutation.SetCell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Mutation.SetCell)
    MergeFrom(*source);
  }
}

void Mutation_SetCell::MergeFrom(const Mutation_SetCell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Mutation.SetCell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.family_name().size() > 0) {

    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  if (from.column_qualifier().size() > 0) {

    column_qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_qualifier_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.timestamp_micros() != 0) {
    set_timestamp_micros(from.timestamp_micros());
  }
}

void Mutation_SetCell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Mutation.SetCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation_SetCell::CopyFrom(const Mutation_SetCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Mutation.SetCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation_SetCell::IsInitialized() const {
  return true;
}

void Mutation_SetCell::Swap(Mutation_SetCell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation_SetCell::InternalSwap(Mutation_SetCell* other) {
  using std::swap;
  family_name_.Swap(&other->family_name_);
  column_qualifier_.Swap(&other->column_qualifier_);
  value_.Swap(&other->value_);
  swap(timestamp_micros_, other->timestamp_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation_SetCell::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation_DeleteFromColumn::InitAsDefaultInstance() {
  ::google::bigtable::v1::_Mutation_DeleteFromColumn_default_instance_._instance.get_mutable()->time_range_ = const_cast< ::google::bigtable::v1::TimestampRange*>(
      ::google::bigtable::v1::TimestampRange::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation_DeleteFromColumn::kFamilyNameFieldNumber;
const int Mutation_DeleteFromColumn::kColumnQualifierFieldNumber;
const int Mutation_DeleteFromColumn::kTimeRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation_DeleteFromColumn::Mutation_DeleteFromColumn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromColumn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Mutation.DeleteFromColumn)
}
Mutation_DeleteFromColumn::Mutation_DeleteFromColumn(const Mutation_DeleteFromColumn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.family_name().size() > 0) {
    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  column_qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.column_qualifier().size() > 0) {
    column_qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_qualifier_);
  }
  if (from.has_time_range()) {
    time_range_ = new ::google::bigtable::v1::TimestampRange(*from.time_range_);
  } else {
    time_range_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Mutation.DeleteFromColumn)
}

void Mutation_DeleteFromColumn::SharedCtor() {
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_range_ = NULL;
  _cached_size_ = 0;
}

Mutation_DeleteFromColumn::~Mutation_DeleteFromColumn() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Mutation.DeleteFromColumn)
  SharedDtor();
}

void Mutation_DeleteFromColumn::SharedDtor() {
  family_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete time_range_;
}

void Mutation_DeleteFromColumn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation_DeleteFromColumn::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation_DeleteFromColumn& Mutation_DeleteFromColumn::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromColumn();
  return *internal_default_instance();
}

Mutation_DeleteFromColumn* Mutation_DeleteFromColumn::New(::google::protobuf::Arena* arena) const {
  Mutation_DeleteFromColumn* n = new Mutation_DeleteFromColumn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation_DeleteFromColumn::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) {
    delete time_range_;
  }
  time_range_ = NULL;
  _internal_metadata_.Clear();
}

bool Mutation_DeleteFromColumn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string family_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name().data(), static_cast<int>(this->family_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.Mutation.DeleteFromColumn.family_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes column_qualifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_column_qualifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.TimestampRange time_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Mutation.DeleteFromColumn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Mutation.DeleteFromColumn)
  return false;
#undef DO_
}

void Mutation_DeleteFromColumn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Mutation.DeleteFromColumn.family_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->family_name(), output);
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->column_qualifier(), output);
  }

  // .google.bigtable.v1.TimestampRange time_range = 3;
  if (this->has_time_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->time_range_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Mutation.DeleteFromColumn)
}

::google::protobuf::uint8* Mutation_DeleteFromColumn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Mutation.DeleteFromColumn.family_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->family_name(), target);
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->column_qualifier(), target);
  }

  // .google.bigtable.v1.TimestampRange time_range = 3;
  if (this->has_time_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->time_range_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Mutation.DeleteFromColumn)
  return target;
}

size_t Mutation_DeleteFromColumn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string family_name = 1;
  if (this->family_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->family_name());
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->column_qualifier());
  }

  // .google.bigtable.v1.TimestampRange time_range = 3;
  if (this->has_time_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_range_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation_DeleteFromColumn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation_DeleteFromColumn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation_DeleteFromColumn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Mutation.DeleteFromColumn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Mutation.DeleteFromColumn)
    MergeFrom(*source);
  }
}

void Mutation_DeleteFromColumn::MergeFrom(const Mutation_DeleteFromColumn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.family_name().size() > 0) {

    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  if (from.column_qualifier().size() > 0) {

    column_qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_qualifier_);
  }
  if (from.has_time_range()) {
    mutable_time_range()->::google::bigtable::v1::TimestampRange::MergeFrom(from.time_range());
  }
}

void Mutation_DeleteFromColumn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation_DeleteFromColumn::CopyFrom(const Mutation_DeleteFromColumn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Mutation.DeleteFromColumn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation_DeleteFromColumn::IsInitialized() const {
  return true;
}

void Mutation_DeleteFromColumn::Swap(Mutation_DeleteFromColumn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation_DeleteFromColumn::InternalSwap(Mutation_DeleteFromColumn* other) {
  using std::swap;
  family_name_.Swap(&other->family_name_);
  column_qualifier_.Swap(&other->column_qualifier_);
  swap(time_range_, other->time_range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation_DeleteFromColumn::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation_DeleteFromFamily::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation_DeleteFromFamily::kFamilyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation_DeleteFromFamily::Mutation_DeleteFromFamily()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromFamily();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Mutation.DeleteFromFamily)
}
Mutation_DeleteFromFamily::Mutation_DeleteFromFamily(const Mutation_DeleteFromFamily& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.family_name().size() > 0) {
    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Mutation.DeleteFromFamily)
}

void Mutation_DeleteFromFamily::SharedCtor() {
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Mutation_DeleteFromFamily::~Mutation_DeleteFromFamily() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Mutation.DeleteFromFamily)
  SharedDtor();
}

void Mutation_DeleteFromFamily::SharedDtor() {
  family_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mutation_DeleteFromFamily::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation_DeleteFromFamily::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation_DeleteFromFamily& Mutation_DeleteFromFamily::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromFamily();
  return *internal_default_instance();
}

Mutation_DeleteFromFamily* Mutation_DeleteFromFamily::New(::google::protobuf::Arena* arena) const {
  Mutation_DeleteFromFamily* n = new Mutation_DeleteFromFamily;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation_DeleteFromFamily::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Mutation_DeleteFromFamily::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string family_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name().data(), static_cast<int>(this->family_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.Mutation.DeleteFromFamily.family_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Mutation.DeleteFromFamily)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Mutation.DeleteFromFamily)
  return false;
#undef DO_
}

void Mutation_DeleteFromFamily::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Mutation.DeleteFromFamily.family_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->family_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Mutation.DeleteFromFamily)
}

::google::protobuf::uint8* Mutation_DeleteFromFamily::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.Mutation.DeleteFromFamily.family_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->family_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Mutation.DeleteFromFamily)
  return target;
}

size_t Mutation_DeleteFromFamily::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string family_name = 1;
  if (this->family_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->family_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation_DeleteFromFamily::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation_DeleteFromFamily* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation_DeleteFromFamily>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Mutation.DeleteFromFamily)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Mutation.DeleteFromFamily)
    MergeFrom(*source);
  }
}

void Mutation_DeleteFromFamily::MergeFrom(const Mutation_DeleteFromFamily& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.family_name().size() > 0) {

    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
}

void Mutation_DeleteFromFamily::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation_DeleteFromFamily::CopyFrom(const Mutation_DeleteFromFamily& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Mutation.DeleteFromFamily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation_DeleteFromFamily::IsInitialized() const {
  return true;
}

void Mutation_DeleteFromFamily::Swap(Mutation_DeleteFromFamily* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation_DeleteFromFamily::InternalSwap(Mutation_DeleteFromFamily* other) {
  using std::swap;
  family_name_.Swap(&other->family_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation_DeleteFromFamily::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation_DeleteFromRow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation_DeleteFromRow::Mutation_DeleteFromRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromRow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Mutation.DeleteFromRow)
}
Mutation_DeleteFromRow::Mutation_DeleteFromRow(const Mutation_DeleteFromRow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Mutation.DeleteFromRow)
}

void Mutation_DeleteFromRow::SharedCtor() {
  _cached_size_ = 0;
}

Mutation_DeleteFromRow::~Mutation_DeleteFromRow() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Mutation.DeleteFromRow)
  SharedDtor();
}

void Mutation_DeleteFromRow::SharedDtor() {
}

void Mutation_DeleteFromRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation_DeleteFromRow::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation_DeleteFromRow& Mutation_DeleteFromRow::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation_DeleteFromRow();
  return *internal_default_instance();
}

Mutation_DeleteFromRow* Mutation_DeleteFromRow::New(::google::protobuf::Arena* arena) const {
  Mutation_DeleteFromRow* n = new Mutation_DeleteFromRow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation_DeleteFromRow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Mutation.DeleteFromRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Mutation_DeleteFromRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Mutation.DeleteFromRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Mutation.DeleteFromRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Mutation.DeleteFromRow)
  return false;
#undef DO_
}

void Mutation_DeleteFromRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Mutation.DeleteFromRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Mutation.DeleteFromRow)
}

::google::protobuf::uint8* Mutation_DeleteFromRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Mutation.DeleteFromRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Mutation.DeleteFromRow)
  return target;
}

size_t Mutation_DeleteFromRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Mutation.DeleteFromRow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation_DeleteFromRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Mutation.DeleteFromRow)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation_DeleteFromRow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation_DeleteFromRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Mutation.DeleteFromRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Mutation.DeleteFromRow)
    MergeFrom(*source);
  }
}

void Mutation_DeleteFromRow::MergeFrom(const Mutation_DeleteFromRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Mutation.DeleteFromRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Mutation_DeleteFromRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Mutation.DeleteFromRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation_DeleteFromRow::CopyFrom(const Mutation_DeleteFromRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Mutation.DeleteFromRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation_DeleteFromRow::IsInitialized() const {
  return true;
}

void Mutation_DeleteFromRow::Swap(Mutation_DeleteFromRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation_DeleteFromRow::InternalSwap(Mutation_DeleteFromRow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation_DeleteFromRow::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation::InitAsDefaultInstance() {
  ::google::bigtable::v1::_Mutation_default_instance_.set_cell_ = const_cast< ::google::bigtable::v1::Mutation_SetCell*>(
      ::google::bigtable::v1::Mutation_SetCell::internal_default_instance());
  ::google::bigtable::v1::_Mutation_default_instance_.delete_from_column_ = const_cast< ::google::bigtable::v1::Mutation_DeleteFromColumn*>(
      ::google::bigtable::v1::Mutation_DeleteFromColumn::internal_default_instance());
  ::google::bigtable::v1::_Mutation_default_instance_.delete_from_family_ = const_cast< ::google::bigtable::v1::Mutation_DeleteFromFamily*>(
      ::google::bigtable::v1::Mutation_DeleteFromFamily::internal_default_instance());
  ::google::bigtable::v1::_Mutation_default_instance_.delete_from_row_ = const_cast< ::google::bigtable::v1::Mutation_DeleteFromRow*>(
      ::google::bigtable::v1::Mutation_DeleteFromRow::internal_default_instance());
}
void Mutation::set_allocated_set_cell(::google::bigtable::v1::Mutation_SetCell* set_cell) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mutation();
  if (set_cell) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_cell = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_cell, submessage_arena);
    }
    set_has_set_cell();
    mutation_.set_cell_ = set_cell;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.Mutation.set_cell)
}
void Mutation::set_allocated_delete_from_column(::google::bigtable::v1::Mutation_DeleteFromColumn* delete_from_column) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mutation();
  if (delete_from_column) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delete_from_column = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_from_column, submessage_arena);
    }
    set_has_delete_from_column();
    mutation_.delete_from_column_ = delete_from_column;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.Mutation.delete_from_column)
}
void Mutation::set_allocated_delete_from_family(::google::bigtable::v1::Mutation_DeleteFromFamily* delete_from_family) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mutation();
  if (delete_from_family) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delete_from_family = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_from_family, submessage_arena);
    }
    set_has_delete_from_family();
    mutation_.delete_from_family_ = delete_from_family;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.Mutation.delete_from_family)
}
void Mutation::set_allocated_delete_from_row(::google::bigtable::v1::Mutation_DeleteFromRow* delete_from_row) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mutation();
  if (delete_from_row) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delete_from_row = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_from_row, submessage_arena);
    }
    set_has_delete_from_row();
    mutation_.delete_from_row_ = delete_from_row;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.v1.Mutation.delete_from_row)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kSetCellFieldNumber;
const int Mutation::kDeleteFromColumnFieldNumber;
const int Mutation::kDeleteFromFamilyFieldNumber;
const int Mutation::kDeleteFromRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.Mutation)
}
Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_mutation();
  switch (from.mutation_case()) {
    case kSetCell: {
      mutable_set_cell()->::google::bigtable::v1::Mutation_SetCell::MergeFrom(from.set_cell());
      break;
    }
    case kDeleteFromColumn: {
      mutable_delete_from_column()->::google::bigtable::v1::Mutation_DeleteFromColumn::MergeFrom(from.delete_from_column());
      break;
    }
    case kDeleteFromFamily: {
      mutable_delete_from_family()->::google::bigtable::v1::Mutation_DeleteFromFamily::MergeFrom(from.delete_from_family());
      break;
    }
    case kDeleteFromRow: {
      mutable_delete_from_row()->::google::bigtable::v1::Mutation_DeleteFromRow::MergeFrom(from.delete_from_row());
      break;
    }
    case MUTATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.Mutation)
}

void Mutation::SharedCtor() {
  clear_has_mutation();
  _cached_size_ = 0;
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  if (has_mutation()) {
    clear_mutation();
  }
}

void Mutation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation& Mutation::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsMutation();
  return *internal_default_instance();
}

Mutation* Mutation::New(::google::protobuf::Arena* arena) const {
  Mutation* n = new Mutation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation::clear_mutation() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v1.Mutation)
  switch (mutation_case()) {
    case kSetCell: {
      delete mutation_.set_cell_;
      break;
    }
    case kDeleteFromColumn: {
      delete mutation_.delete_from_column_;
      break;
    }
    case kDeleteFromFamily: {
      delete mutation_.delete_from_family_;
      break;
    }
    case kDeleteFromRow: {
      delete mutation_.delete_from_row_;
      break;
    }
    case MUTATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MUTATION_NOT_SET;
}


void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mutation();
  _internal_metadata_.Clear();
}

bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.Mutation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.v1.Mutation.SetCell set_cell = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_cell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_from_column()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_from_family()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_from_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.Mutation)
  return false;
#undef DO_
}

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v1.Mutation.SetCell set_cell = 1;
  if (has_set_cell()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *mutation_.set_cell_, output);
  }

  // .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;
  if (has_delete_from_column()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *mutation_.delete_from_column_, output);
  }

  // .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;
  if (has_delete_from_family()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *mutation_.delete_from_family_, output);
  }

  // .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;
  if (has_delete_from_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *mutation_.delete_from_row_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.Mutation)
}

::google::protobuf::uint8* Mutation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.v1.Mutation.SetCell set_cell = 1;
  if (has_set_cell()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *mutation_.set_cell_, deterministic, target);
  }

  // .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;
  if (has_delete_from_column()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *mutation_.delete_from_column_, deterministic, target);
  }

  // .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;
  if (has_delete_from_family()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *mutation_.delete_from_family_, deterministic, target);
  }

  // .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;
  if (has_delete_from_row()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *mutation_.delete_from_row_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.Mutation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (mutation_case()) {
    // .google.bigtable.v1.Mutation.SetCell set_cell = 1;
    case kSetCell: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mutation_.set_cell_);
      break;
    }
    // .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;
    case kDeleteFromColumn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mutation_.delete_from_column_);
      break;
    }
    // .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;
    case kDeleteFromFamily: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mutation_.delete_from_family_);
      break;
    }
    // .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;
    case kDeleteFromRow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mutation_.delete_from_row_);
      break;
    }
    case MUTATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mutation_case()) {
    case kSetCell: {
      mutable_set_cell()->::google::bigtable::v1::Mutation_SetCell::MergeFrom(from.set_cell());
      break;
    }
    case kDeleteFromColumn: {
      mutable_delete_from_column()->::google::bigtable::v1::Mutation_DeleteFromColumn::MergeFrom(from.delete_from_column());
      break;
    }
    case kDeleteFromFamily: {
      mutable_delete_from_family()->::google::bigtable::v1::Mutation_DeleteFromFamily::MergeFrom(from.delete_from_family());
      break;
    }
    case kDeleteFromRow: {
      mutable_delete_from_row()->::google::bigtable::v1::Mutation_DeleteFromRow::MergeFrom(from.delete_from_row());
      break;
    }
    case MUTATION_NOT_SET: {
      break;
    }
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {
  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  using std::swap;
  swap(mutation_, other->mutation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadModifyWriteRule::InitAsDefaultInstance() {
  ::google::bigtable::v1::_ReadModifyWriteRule_default_instance_.append_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::bigtable::v1::_ReadModifyWriteRule_default_instance_.increment_amount_ = GOOGLE_LONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadModifyWriteRule::kFamilyNameFieldNumber;
const int ReadModifyWriteRule::kColumnQualifierFieldNumber;
const int ReadModifyWriteRule::kAppendValueFieldNumber;
const int ReadModifyWriteRule::kIncrementAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadModifyWriteRule::ReadModifyWriteRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsReadModifyWriteRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.v1.ReadModifyWriteRule)
}
ReadModifyWriteRule::ReadModifyWriteRule(const ReadModifyWriteRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.family_name().size() > 0) {
    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  column_qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.column_qualifier().size() > 0) {
    column_qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_qualifier_);
  }
  clear_has_rule();
  switch (from.rule_case()) {
    case kAppendValue: {
      set_append_value(from.append_value());
      break;
    }
    case kIncrementAmount: {
      set_increment_amount(from.increment_amount());
      break;
    }
    case RULE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.v1.ReadModifyWriteRule)
}

void ReadModifyWriteRule::SharedCtor() {
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rule();
  _cached_size_ = 0;
}

ReadModifyWriteRule::~ReadModifyWriteRule() {
  // @@protoc_insertion_point(destructor:google.bigtable.v1.ReadModifyWriteRule)
  SharedDtor();
}

void ReadModifyWriteRule::SharedDtor() {
  family_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_rule()) {
    clear_rule();
  }
}

void ReadModifyWriteRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadModifyWriteRule::descriptor() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadModifyWriteRule& ReadModifyWriteRule::default_instance() {
  ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::InitDefaultsReadModifyWriteRule();
  return *internal_default_instance();
}

ReadModifyWriteRule* ReadModifyWriteRule::New(::google::protobuf::Arena* arena) const {
  ReadModifyWriteRule* n = new ReadModifyWriteRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadModifyWriteRule::clear_rule() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.v1.ReadModifyWriteRule)
  switch (rule_case()) {
    case kAppendValue: {
      rule_.append_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIncrementAmount: {
      // No need to clear
      break;
    }
    case RULE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RULE_NOT_SET;
}


void ReadModifyWriteRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.v1.ReadModifyWriteRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_qualifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_rule();
  _internal_metadata_.Clear();
}

bool ReadModifyWriteRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.v1.ReadModifyWriteRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string family_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name().data(), static_cast<int>(this->family_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.v1.ReadModifyWriteRule.family_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes column_qualifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_column_qualifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes append_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_append_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 increment_amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_rule();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rule_.increment_amount_)));
          set_has_increment_amount();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.v1.ReadModifyWriteRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.v1.ReadModifyWriteRule)
  return false;
#undef DO_
}

void ReadModifyWriteRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.v1.ReadModifyWriteRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.ReadModifyWriteRule.family_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->family_name(), output);
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->column_qualifier(), output);
  }

  // bytes append_value = 3;
  if (has_append_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->append_value(), output);
  }

  // int64 increment_amount = 4;
  if (has_increment_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->increment_amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.v1.ReadModifyWriteRule)
}

::google::protobuf::uint8* ReadModifyWriteRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.v1.ReadModifyWriteRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string family_name = 1;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.v1.ReadModifyWriteRule.family_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->family_name(), target);
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->column_qualifier(), target);
  }

  // bytes append_value = 3;
  if (has_append_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->append_value(), target);
  }

  // int64 increment_amount = 4;
  if (has_increment_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->increment_amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.v1.ReadModifyWriteRule)
  return target;
}

size_t ReadModifyWriteRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.v1.ReadModifyWriteRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string family_name = 1;
  if (this->family_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->family_name());
  }

  // bytes column_qualifier = 2;
  if (this->column_qualifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->column_qualifier());
  }

  switch (rule_case()) {
    // bytes append_value = 3;
    case kAppendValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->append_value());
      break;
    }
    // int64 increment_amount = 4;
    case kIncrementAmount: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->increment_amount());
      break;
    }
    case RULE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadModifyWriteRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.v1.ReadModifyWriteRule)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadModifyWriteRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadModifyWriteRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.v1.ReadModifyWriteRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.v1.ReadModifyWriteRule)
    MergeFrom(*source);
  }
}

void ReadModifyWriteRule::MergeFrom(const ReadModifyWriteRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.v1.ReadModifyWriteRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.family_name().size() > 0) {

    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  if (from.column_qualifier().size() > 0) {

    column_qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_qualifier_);
  }
  switch (from.rule_case()) {
    case kAppendValue: {
      set_append_value(from.append_value());
      break;
    }
    case kIncrementAmount: {
      set_increment_amount(from.increment_amount());
      break;
    }
    case RULE_NOT_SET: {
      break;
    }
  }
}

void ReadModifyWriteRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.v1.ReadModifyWriteRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadModifyWriteRule::CopyFrom(const ReadModifyWriteRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.v1.ReadModifyWriteRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadModifyWriteRule::IsInitialized() const {
  return true;
}

void ReadModifyWriteRule::Swap(ReadModifyWriteRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadModifyWriteRule::InternalSwap(ReadModifyWriteRule* other) {
  using std::swap;
  family_name_.Swap(&other->family_name_);
  column_qualifier_.Swap(&other->column_qualifier_);
  swap(rule_, other->rule_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadModifyWriteRule::GetMetadata() const {
  protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fv1_2fbigtable_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)
