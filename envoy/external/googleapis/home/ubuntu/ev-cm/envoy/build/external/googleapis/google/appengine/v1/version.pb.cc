// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/version.proto

#include "google/appengine/v1/version.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace appengine {
namespace v1 {
class Version_BetaSettingsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version_BetaSettingsEntry_DoNotUse>
      _instance;
} _Version_BetaSettingsEntry_DoNotUse_default_instance_;
class Version_EnvVariablesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version_EnvVariablesEntry_DoNotUse>
      _instance;
} _Version_EnvVariablesEntry_DoNotUse_default_instance_;
class VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version>
      _instance;
  const ::google::appengine::v1::AutomaticScaling* automatic_scaling_;
  const ::google::appengine::v1::BasicScaling* basic_scaling_;
  const ::google::appengine::v1::ManualScaling* manual_scaling_;
} _Version_default_instance_;
class AutomaticScalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutomaticScaling>
      _instance;
} _AutomaticScaling_default_instance_;
class BasicScalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BasicScaling>
      _instance;
} _BasicScaling_default_instance_;
class ManualScalingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManualScaling>
      _instance;
} _ManualScaling_default_instance_;
class CpuUtilizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CpuUtilization>
      _instance;
} _CpuUtilization_default_instance_;
class RequestUtilizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestUtilization>
      _instance;
} _RequestUtilization_default_instance_;
class DiskUtilizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiskUtilization>
      _instance;
} _DiskUtilization_default_instance_;
class NetworkUtilizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkUtilization>
      _instance;
} _NetworkUtilization_default_instance_;
class NetworkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Network>
      _instance;
} _Network_default_instance_;
class ResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resources>
      _instance;
} _Resources_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace protobuf_google_2fappengine_2fv1_2fversion_2eproto {
void InitDefaultsVersion_BetaSettingsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_Version_BetaSettingsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::appengine::v1::Version_BetaSettingsEntry_DoNotUse();
  }
  ::google::appengine::v1::Version_BetaSettingsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsVersion_BetaSettingsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVersion_BetaSettingsEntry_DoNotUseImpl);
}

void InitDefaultsVersion_EnvVariablesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_Version_EnvVariablesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::appengine::v1::Version_EnvVariablesEntry_DoNotUse();
  }
  ::google::appengine::v1::Version_EnvVariablesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsVersion_EnvVariablesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVersion_EnvVariablesEntry_DoNotUseImpl);
}

void InitDefaultsVersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsAutomaticScaling();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsBasicScaling();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsManualScaling();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetwork();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsResources();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsVersion_BetaSettingsEntry_DoNotUse();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsUrlMap();
  protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsErrorHandler();
  protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsLibrary();
  protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsApiConfigHandler();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsVersion_EnvVariablesEntry_DoNotUse();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsHealthCheck();
  protobuf_google_2fappengine_2fv1_2fdeploy_2eproto::InitDefaultsDeployment();
  {
    void* ptr = &::google::appengine::v1::_Version_default_instance_;
    new (ptr) ::google::appengine::v1::Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::Version::InitAsDefaultInstance();
}

void InitDefaultsVersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVersionImpl);
}

void InitDefaultsAutomaticScalingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsCpuUtilization();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsRequestUtilization();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsDiskUtilization();
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetworkUtilization();
  {
    void* ptr = &::google::appengine::v1::_AutomaticScaling_default_instance_;
    new (ptr) ::google::appengine::v1::AutomaticScaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::AutomaticScaling::InitAsDefaultInstance();
}

void InitDefaultsAutomaticScaling() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAutomaticScalingImpl);
}

void InitDefaultsBasicScalingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::google::appengine::v1::_BasicScaling_default_instance_;
    new (ptr) ::google::appengine::v1::BasicScaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::BasicScaling::InitAsDefaultInstance();
}

void InitDefaultsBasicScaling() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBasicScalingImpl);
}

void InitDefaultsManualScalingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_ManualScaling_default_instance_;
    new (ptr) ::google::appengine::v1::ManualScaling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::ManualScaling::InitAsDefaultInstance();
}

void InitDefaultsManualScaling() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsManualScalingImpl);
}

void InitDefaultsCpuUtilizationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::google::appengine::v1::_CpuUtilization_default_instance_;
    new (ptr) ::google::appengine::v1::CpuUtilization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::CpuUtilization::InitAsDefaultInstance();
}

void InitDefaultsCpuUtilization() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCpuUtilizationImpl);
}

void InitDefaultsRequestUtilizationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_RequestUtilization_default_instance_;
    new (ptr) ::google::appengine::v1::RequestUtilization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::RequestUtilization::InitAsDefaultInstance();
}

void InitDefaultsRequestUtilization() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestUtilizationImpl);
}

void InitDefaultsDiskUtilizationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_DiskUtilization_default_instance_;
    new (ptr) ::google::appengine::v1::DiskUtilization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::DiskUtilization::InitAsDefaultInstance();
}

void InitDefaultsDiskUtilization() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDiskUtilizationImpl);
}

void InitDefaultsNetworkUtilizationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_NetworkUtilization_default_instance_;
    new (ptr) ::google::appengine::v1::NetworkUtilization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::NetworkUtilization::InitAsDefaultInstance();
}

void InitDefaultsNetworkUtilization() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetworkUtilizationImpl);
}

void InitDefaultsNetworkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_Network_default_instance_;
    new (ptr) ::google::appengine::v1::Network();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::Network::InitAsDefaultInstance();
}

void InitDefaultsNetwork() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetworkImpl);
}

void InitDefaultsResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::appengine::v1::_Resources_default_instance_;
    new (ptr) ::google::appengine::v1::Resources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::Resources::InitAsDefaultInstance();
}

void InitDefaultsResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResourcesImpl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_BetaSettingsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_BetaSettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_BetaSettingsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_BetaSettingsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_EnvVariablesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_EnvVariablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_EnvVariablesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version_EnvVariablesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, id_),
  offsetof(::google::appengine::v1::VersionDefaultTypeInternal, automatic_scaling_),
  offsetof(::google::appengine::v1::VersionDefaultTypeInternal, basic_scaling_),
  offsetof(::google::appengine::v1::VersionDefaultTypeInternal, manual_scaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, inbound_services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, instance_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, network_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, runtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, threadsafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, vm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, beta_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, serving_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, created_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, disk_usage_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, handlers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, error_handlers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, libraries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, api_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, env_variables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, default_expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, health_check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, nobuild_files_regex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, deployment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, version_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Version, scaling_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, cool_down_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, cpu_utilization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, max_concurrent_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, max_idle_instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, max_total_instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, max_pending_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, min_idle_instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, min_total_instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, min_pending_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, request_utilization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, disk_utilization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::AutomaticScaling, network_utilization_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::BasicScaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::BasicScaling, idle_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::BasicScaling, max_instances_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::ManualScaling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::ManualScaling, instances_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::CpuUtilization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::CpuUtilization, aggregation_window_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::CpuUtilization, target_utilization_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::RequestUtilization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::RequestUtilization, target_request_count_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::RequestUtilization, target_concurrent_requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::DiskUtilization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::DiskUtilization, target_write_bytes_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::DiskUtilization, target_write_ops_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::DiskUtilization, target_read_bytes_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::DiskUtilization, target_read_ops_per_second_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::NetworkUtilization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::NetworkUtilization, target_sent_bytes_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::NetworkUtilization, target_sent_packets_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::NetworkUtilization, target_received_bytes_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::NetworkUtilization, target_received_packets_per_second_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Network, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Network, forwarded_ports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Network, instance_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Network, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Resources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Resources, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Resources, disk_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Resources, memory_gb_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::appengine::v1::Version_BetaSettingsEntry_DoNotUse)},
  { 9, 16, sizeof(::google::appengine::v1::Version_EnvVariablesEntry_DoNotUse)},
  { 18, -1, sizeof(::google::appengine::v1::Version)},
  { 52, -1, sizeof(::google::appengine::v1::AutomaticScaling)},
  { 69, -1, sizeof(::google::appengine::v1::BasicScaling)},
  { 76, -1, sizeof(::google::appengine::v1::ManualScaling)},
  { 82, -1, sizeof(::google::appengine::v1::CpuUtilization)},
  { 89, -1, sizeof(::google::appengine::v1::RequestUtilization)},
  { 96, -1, sizeof(::google::appengine::v1::DiskUtilization)},
  { 105, -1, sizeof(::google::appengine::v1::NetworkUtilization)},
  { 114, -1, sizeof(::google::appengine::v1::Network)},
  { 122, -1, sizeof(::google::appengine::v1::Resources)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_Version_BetaSettingsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_Version_EnvVariablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_AutomaticScaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_BasicScaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_ManualScaling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_CpuUtilization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_RequestUtilization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_DiskUtilization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_NetworkUtilization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_Network_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_Resources_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/appengine/v1/version.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!google/appengine/v1/version.proto\022\023goo"
      "gle.appengine.v1\032\034google/api/annotations"
      ".proto\032\"google/appengine/v1/app_yaml.pro"
      "to\032 google/appengine/v1/deploy.proto\032\036go"
      "ogle/protobuf/duration.proto\032\037google/pro"
      "tobuf/timestamp.proto\"\246\n\n\007Version\022\014\n\004nam"
      "e\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022B\n\021automatic_scaling"
      "\030\003 \001(\0132%.google.appengine.v1.AutomaticSc"
      "alingH\000\022:\n\rbasic_scaling\030\004 \001(\0132!.google."
      "appengine.v1.BasicScalingH\000\022<\n\016manual_sc"
      "aling\030\005 \001(\0132\".google.appengine.v1.Manual"
      "ScalingH\000\022A\n\020inbound_services\030\006 \003(\0162\'.go"
      "ogle.appengine.v1.InboundServiceType\022\026\n\016"
      "instance_class\030\007 \001(\t\022-\n\007network\030\010 \001(\0132\034."
      "google.appengine.v1.Network\0221\n\tresources"
      "\030\t \001(\0132\036.google.appengine.v1.Resources\022\017"
      "\n\007runtime\030\n \001(\t\022\022\n\nthreadsafe\030\013 \001(\010\022\n\n\002v"
      "m\030\014 \001(\010\022E\n\rbeta_settings\030\r \003(\0132..google."
      "appengine.v1.Version.BetaSettingsEntry\022\013"
      "\n\003env\030\016 \001(\t\022:\n\016serving_status\030\017 \001(\0162\".go"
      "ogle.appengine.v1.ServingStatus\022\022\n\ncreat"
      "ed_by\030\020 \001(\t\022/\n\013create_time\030\021 \001(\0132\032.googl"
      "e.protobuf.Timestamp\022\030\n\020disk_usage_bytes"
      "\030\022 \001(\003\022-\n\010handlers\030d \003(\0132\033.google.appeng"
      "ine.v1.UrlMap\0229\n\016error_handlers\030e \003(\0132!."
      "google.appengine.v1.ErrorHandler\022/\n\tlibr"
      "aries\030f \003(\0132\034.google.appengine.v1.Librar"
      "y\0229\n\napi_config\030g \001(\0132%.google.appengine"
      ".v1.ApiConfigHandler\022E\n\renv_variables\030h "
      "\003(\0132..google.appengine.v1.Version.EnvVar"
      "iablesEntry\0225\n\022default_expiration\030i \001(\0132"
      "\031.google.protobuf.Duration\0226\n\014health_che"
      "ck\030j \001(\0132 .google.appengine.v1.HealthChe"
      "ck\022\033\n\023nobuild_files_regex\030k \001(\t\0223\n\ndeplo"
      "yment\030l \001(\0132\037.google.appengine.v1.Deploy"
      "ment\022\023\n\013version_url\030m \001(\t\0323\n\021BetaSetting"
      "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0323"
      "\n\021EnvVariablesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\t:\0028\001B\t\n\007scaling\"\324\004\n\020AutomaticScal"
      "ing\0223\n\020cool_down_period\030\001 \001(\0132\031.google.p"
      "rotobuf.Duration\022<\n\017cpu_utilization\030\002 \001("
      "\0132#.google.appengine.v1.CpuUtilization\022\037"
      "\n\027max_concurrent_requests\030\003 \001(\005\022\032\n\022max_i"
      "dle_instances\030\004 \001(\005\022\033\n\023max_total_instanc"
      "es\030\005 \001(\005\0226\n\023max_pending_latency\030\006 \001(\0132\031."
      "google.protobuf.Duration\022\032\n\022min_idle_ins"
      "tances\030\007 \001(\005\022\033\n\023min_total_instances\030\010 \001("
      "\005\0226\n\023min_pending_latency\030\t \001(\0132\031.google."
      "protobuf.Duration\022D\n\023request_utilization"
      "\030\n \001(\0132\'.google.appengine.v1.RequestUtil"
      "ization\022>\n\020disk_utilization\030\013 \001(\0132$.goog"
      "le.appengine.v1.DiskUtilization\022D\n\023netwo"
      "rk_utilization\030\014 \001(\0132\'.google.appengine."
      "v1.NetworkUtilization\"V\n\014BasicScaling\022/\n"
      "\014idle_timeout\030\001 \001(\0132\031.google.protobuf.Du"
      "ration\022\025\n\rmax_instances\030\002 \001(\005\"\"\n\rManualS"
      "caling\022\021\n\tinstances\030\001 \001(\005\"j\n\016CpuUtilizat"
      "ion\022<\n\031aggregation_window_length\030\001 \001(\0132\031"
      ".google.protobuf.Duration\022\032\n\022target_util"
      "ization\030\002 \001(\001\"a\n\022RequestUtilization\022\'\n\037t"
      "arget_request_count_per_second\030\001 \001(\005\022\"\n\032"
      "target_concurrent_requests\030\002 \001(\005\"\247\001\n\017Dis"
      "kUtilization\022%\n\035target_write_bytes_per_s"
      "econd\030\016 \001(\005\022#\n\033target_write_ops_per_seco"
      "nd\030\017 \001(\005\022$\n\034target_read_bytes_per_second"
      "\030\020 \001(\005\022\"\n\032target_read_ops_per_second\030\021 \001"
      "(\005\"\270\001\n\022NetworkUtilization\022$\n\034target_sent"
      "_bytes_per_second\030\001 \001(\005\022&\n\036target_sent_p"
      "ackets_per_second\030\013 \001(\005\022(\n target_receiv"
      "ed_bytes_per_second\030\014 \001(\005\022*\n\"target_rece"
      "ived_packets_per_second\030\r \001(\005\"F\n\007Network"
      "\022\027\n\017forwarded_ports\030\001 \003(\t\022\024\n\014instance_ta"
      "g\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\"<\n\tResources\022\013\n\003cp"
      "u\030\001 \001(\001\022\017\n\007disk_gb\030\002 \001(\001\022\021\n\tmemory_gb\030\003 "
      "\001(\001*\273\002\n\022InboundServiceType\022\037\n\033INBOUND_SE"
      "RVICE_UNSPECIFIED\020\000\022\030\n\024INBOUND_SERVICE_M"
      "AIL\020\001\022\037\n\033INBOUND_SERVICE_MAIL_BOUNCE\020\002\022\036"
      "\n\032INBOUND_SERVICE_XMPP_ERROR\020\003\022 \n\034INBOUN"
      "D_SERVICE_XMPP_MESSAGE\020\004\022\"\n\036INBOUND_SERV"
      "ICE_XMPP_SUBSCRIBE\020\005\022!\n\035INBOUND_SERVICE_"
      "XMPP_PRESENCE\020\006\022$\n INBOUND_SERVICE_CHANN"
      "EL_PRESENCE\020\007\022\032\n\026INBOUND_SERVICE_WARMUP\020"
      "\t*I\n\rServingStatus\022\036\n\032SERVING_STATUS_UNS"
      "PECIFIED\020\000\022\013\n\007SERVING\020\001\022\013\n\007STOPPED\020\002Bg\n\027"
      "com.google.appengine.v1B\014VersionProtoP\001Z"
      "<google.golang.org/genproto/googleapis/a"
      "ppengine/v1;appengineb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3469);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/v1/version.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::AddDescriptors();
  ::protobuf_google_2fappengine_2fv1_2fdeploy_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fappengine_2fv1_2fversion_2eproto
namespace google {
namespace appengine {
namespace v1 {
const ::google::protobuf::EnumDescriptor* InboundServiceType_descriptor() {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_enum_descriptors[0];
}
bool InboundServiceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServingStatus_descriptor() {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_enum_descriptors[1];
}
bool ServingStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Version_BetaSettingsEntry_DoNotUse::Version_BetaSettingsEntry_DoNotUse() {}
Version_BetaSettingsEntry_DoNotUse::Version_BetaSettingsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Version_BetaSettingsEntry_DoNotUse::MergeFrom(const Version_BetaSettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Version_BetaSettingsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[0];
}
void Version_BetaSettingsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Version_EnvVariablesEntry_DoNotUse::Version_EnvVariablesEntry_DoNotUse() {}
Version_EnvVariablesEntry_DoNotUse::Version_EnvVariablesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Version_EnvVariablesEntry_DoNotUse::MergeFrom(const Version_EnvVariablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Version_EnvVariablesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[1];
}
void Version_EnvVariablesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Version::InitAsDefaultInstance() {
  ::google::appengine::v1::_Version_default_instance_.automatic_scaling_ = const_cast< ::google::appengine::v1::AutomaticScaling*>(
      ::google::appengine::v1::AutomaticScaling::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_.basic_scaling_ = const_cast< ::google::appengine::v1::BasicScaling*>(
      ::google::appengine::v1::BasicScaling::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_.manual_scaling_ = const_cast< ::google::appengine::v1::ManualScaling*>(
      ::google::appengine::v1::ManualScaling::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_._instance.get_mutable()->network_ = const_cast< ::google::appengine::v1::Network*>(
      ::google::appengine::v1::Network::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_._instance.get_mutable()->resources_ = const_cast< ::google::appengine::v1::Resources*>(
      ::google::appengine::v1::Resources::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_._instance.get_mutable()->api_config_ = const_cast< ::google::appengine::v1::ApiConfigHandler*>(
      ::google::appengine::v1::ApiConfigHandler::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_._instance.get_mutable()->default_expiration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_._instance.get_mutable()->health_check_ = const_cast< ::google::appengine::v1::HealthCheck*>(
      ::google::appengine::v1::HealthCheck::internal_default_instance());
  ::google::appengine::v1::_Version_default_instance_._instance.get_mutable()->deployment_ = const_cast< ::google::appengine::v1::Deployment*>(
      ::google::appengine::v1::Deployment::internal_default_instance());
}
void Version::set_allocated_automatic_scaling(::google::appengine::v1::AutomaticScaling* automatic_scaling) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scaling();
  if (automatic_scaling) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      automatic_scaling = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, automatic_scaling, submessage_arena);
    }
    set_has_automatic_scaling();
    scaling_.automatic_scaling_ = automatic_scaling;
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.automatic_scaling)
}
void Version::set_allocated_basic_scaling(::google::appengine::v1::BasicScaling* basic_scaling) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scaling();
  if (basic_scaling) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      basic_scaling = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, basic_scaling, submessage_arena);
    }
    set_has_basic_scaling();
    scaling_.basic_scaling_ = basic_scaling;
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.basic_scaling)
}
void Version::set_allocated_manual_scaling(::google::appengine::v1::ManualScaling* manual_scaling) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scaling();
  if (manual_scaling) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manual_scaling = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manual_scaling, submessage_arena);
    }
    set_has_manual_scaling();
    scaling_.manual_scaling_ = manual_scaling;
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Version.manual_scaling)
}
void Version::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Version::clear_handlers() {
  handlers_.Clear();
}
void Version::clear_error_handlers() {
  error_handlers_.Clear();
}
void Version::clear_libraries() {
  libraries_.Clear();
}
void Version::clear_api_config() {
  if (GetArenaNoVirtual() == NULL && api_config_ != NULL) {
    delete api_config_;
  }
  api_config_ = NULL;
}
void Version::clear_default_expiration() {
  if (GetArenaNoVirtual() == NULL && default_expiration_ != NULL) {
    delete default_expiration_;
  }
  default_expiration_ = NULL;
}
void Version::clear_health_check() {
  if (GetArenaNoVirtual() == NULL && health_check_ != NULL) {
    delete health_check_;
  }
  health_check_ = NULL;
}
void Version::clear_deployment() {
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) {
    delete deployment_;
  }
  deployment_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version::kNameFieldNumber;
const int Version::kIdFieldNumber;
const int Version::kAutomaticScalingFieldNumber;
const int Version::kBasicScalingFieldNumber;
const int Version::kManualScalingFieldNumber;
const int Version::kInboundServicesFieldNumber;
const int Version::kInstanceClassFieldNumber;
const int Version::kNetworkFieldNumber;
const int Version::kResourcesFieldNumber;
const int Version::kRuntimeFieldNumber;
const int Version::kThreadsafeFieldNumber;
const int Version::kVmFieldNumber;
const int Version::kBetaSettingsFieldNumber;
const int Version::kEnvFieldNumber;
const int Version::kServingStatusFieldNumber;
const int Version::kCreatedByFieldNumber;
const int Version::kCreateTimeFieldNumber;
const int Version::kDiskUsageBytesFieldNumber;
const int Version::kHandlersFieldNumber;
const int Version::kErrorHandlersFieldNumber;
const int Version::kLibrariesFieldNumber;
const int Version::kApiConfigFieldNumber;
const int Version::kEnvVariablesFieldNumber;
const int Version::kDefaultExpirationFieldNumber;
const int Version::kHealthCheckFieldNumber;
const int Version::kNobuildFilesRegexFieldNumber;
const int Version::kDeploymentFieldNumber;
const int Version::kVersionUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version::Version()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsVersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Version)
}
Version::Version(const Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inbound_services_(from.inbound_services_),
      handlers_(from.handlers_),
      error_handlers_(from.error_handlers_),
      libraries_(from.libraries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  beta_settings_.MergeFrom(from.beta_settings_);
  env_variables_.MergeFrom(from.env_variables_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  instance_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_class().size() > 0) {
    instance_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_class_);
  }
  runtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime().size() > 0) {
    runtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_);
  }
  env_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.env().size() > 0) {
    env_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.env_);
  }
  created_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.created_by().size() > 0) {
    created_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_by_);
  }
  nobuild_files_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nobuild_files_regex().size() > 0) {
    nobuild_files_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nobuild_files_regex_);
  }
  version_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_url().size() > 0) {
    version_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_url_);
  }
  if (from.has_network()) {
    network_ = new ::google::appengine::v1::Network(*from.network_);
  } else {
    network_ = NULL;
  }
  if (from.has_resources()) {
    resources_ = new ::google::appengine::v1::Resources(*from.resources_);
  } else {
    resources_ = NULL;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_api_config()) {
    api_config_ = new ::google::appengine::v1::ApiConfigHandler(*from.api_config_);
  } else {
    api_config_ = NULL;
  }
  if (from.has_default_expiration()) {
    default_expiration_ = new ::google::protobuf::Duration(*from.default_expiration_);
  } else {
    default_expiration_ = NULL;
  }
  if (from.has_health_check()) {
    health_check_ = new ::google::appengine::v1::HealthCheck(*from.health_check_);
  } else {
    health_check_ = NULL;
  }
  if (from.has_deployment()) {
    deployment_ = new ::google::appengine::v1::Deployment(*from.deployment_);
  } else {
    deployment_ = NULL;
  }
  ::memcpy(&threadsafe_, &from.threadsafe_,
    static_cast<size_t>(reinterpret_cast<char*>(&disk_usage_bytes_) -
    reinterpret_cast<char*>(&threadsafe_)) + sizeof(disk_usage_bytes_));
  clear_has_scaling();
  switch (from.scaling_case()) {
    case kAutomaticScaling: {
      mutable_automatic_scaling()->::google::appengine::v1::AutomaticScaling::MergeFrom(from.automatic_scaling());
      break;
    }
    case kBasicScaling: {
      mutable_basic_scaling()->::google::appengine::v1::BasicScaling::MergeFrom(from.basic_scaling());
      break;
    }
    case kManualScaling: {
      mutable_manual_scaling()->::google::appengine::v1::ManualScaling::MergeFrom(from.manual_scaling());
      break;
    }
    case SCALING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Version)
}

void Version::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  env_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nobuild_files_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&network_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disk_usage_bytes_) -
      reinterpret_cast<char*>(&network_)) + sizeof(disk_usage_bytes_));
  clear_has_scaling();
  _cached_size_ = 0;
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Version)
  SharedDtor();
}

void Version::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  env_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nobuild_files_regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete network_;
  if (this != internal_default_instance()) delete resources_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete api_config_;
  if (this != internal_default_instance()) delete default_expiration_;
  if (this != internal_default_instance()) delete health_check_;
  if (this != internal_default_instance()) delete deployment_;
  if (has_scaling()) {
    clear_scaling();
  }
}

void Version::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Version::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Version& Version::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsVersion();
  return *internal_default_instance();
}

Version* Version::New(::google::protobuf::Arena* arena) const {
  Version* n = new Version;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Version::clear_scaling() {
// @@protoc_insertion_point(one_of_clear_start:google.appengine.v1.Version)
  switch (scaling_case()) {
    case kAutomaticScaling: {
      delete scaling_.automatic_scaling_;
      break;
    }
    case kBasicScaling: {
      delete scaling_.basic_scaling_;
      break;
    }
    case kManualScaling: {
      delete scaling_.manual_scaling_;
      break;
    }
    case SCALING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCALING_NOT_SET;
}


void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inbound_services_.Clear();
  beta_settings_.Clear();
  handlers_.Clear();
  error_handlers_.Clear();
  libraries_.Clear();
  env_variables_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  env_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nobuild_files_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && network_ != NULL) {
    delete network_;
  }
  network_ = NULL;
  if (GetArenaNoVirtual() == NULL && resources_ != NULL) {
    delete resources_;
  }
  resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && api_config_ != NULL) {
    delete api_config_;
  }
  api_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_expiration_ != NULL) {
    delete default_expiration_;
  }
  default_expiration_ = NULL;
  if (GetArenaNoVirtual() == NULL && health_check_ != NULL) {
    delete health_check_;
  }
  health_check_ = NULL;
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) {
    delete deployment_;
  }
  deployment_ = NULL;
  ::memset(&threadsafe_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disk_usage_bytes_) -
      reinterpret_cast<char*>(&threadsafe_)) + sizeof(disk_usage_bytes_));
  clear_scaling();
  _internal_metadata_.Clear();
}

bool Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Version)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.AutomaticScaling automatic_scaling = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_automatic_scaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.BasicScaling basic_scaling = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic_scaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.ManualScaling manual_scaling = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manual_scaling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.appengine.v1.InboundServiceType inbound_services = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_inbound_services(static_cast< ::google::appengine::v1::InboundServiceType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_inbound_services(static_cast< ::google::appengine::v1::InboundServiceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_class = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_class()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_class().data(), static_cast<int>(this->instance_class().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.instance_class"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.Network network = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.Resources resources = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime().data(), static_cast<int>(this->runtime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.runtime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool threadsafe = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &threadsafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vm = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> beta_settings = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          Version_BetaSettingsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Version_BetaSettingsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&beta_settings_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.BetaSettingsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.BetaSettingsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string env = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_env()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->env().data(), static_cast<int>(this->env().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.env"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.ServingStatus serving_status = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_serving_status(static_cast< ::google::appengine::v1::ServingStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string created_by = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_created_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->created_by().data(), static_cast<int>(this->created_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.created_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 disk_usage_bytes = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &disk_usage_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.appengine.v1.UrlMap handlers = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_handlers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.appengine.v1.ErrorHandler error_handlers = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_error_handlers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.appengine.v1.Library libraries = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_libraries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.ApiConfigHandler api_config = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_api_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> env_variables = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          Version_EnvVariablesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Version_EnvVariablesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&env_variables_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.EnvVariablesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.EnvVariablesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration default_expiration = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_expiration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.HealthCheck health_check = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_health_check()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nobuild_files_regex = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nobuild_files_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nobuild_files_regex().data(), static_cast<int>(this->nobuild_files_regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.nobuild_files_regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.Deployment deployment = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deployment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version_url = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_url().data(), static_cast<int>(this->version_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Version.version_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Version)
  return false;
#undef DO_
}

void Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // .google.appengine.v1.AutomaticScaling automatic_scaling = 3;
  if (has_automatic_scaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *scaling_.automatic_scaling_, output);
  }

  // .google.appengine.v1.BasicScaling basic_scaling = 4;
  if (has_basic_scaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *scaling_.basic_scaling_, output);
  }

  // .google.appengine.v1.ManualScaling manual_scaling = 5;
  if (has_manual_scaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *scaling_.manual_scaling_, output);
  }

  // repeated .google.appengine.v1.InboundServiceType inbound_services = 6;
  if (this->inbound_services_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_inbound_services_cached_byte_size_));
  }
  for (int i = 0, n = this->inbound_services_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->inbound_services(i), output);
  }

  // string instance_class = 7;
  if (this->instance_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_class().data(), static_cast<int>(this->instance_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.instance_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->instance_class(), output);
  }

  // .google.appengine.v1.Network network = 8;
  if (this->has_network()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->network_, output);
  }

  // .google.appengine.v1.Resources resources = 9;
  if (this->has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->resources_, output);
  }

  // string runtime = 10;
  if (this->runtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime().data(), static_cast<int>(this->runtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.runtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->runtime(), output);
  }

  // bool threadsafe = 11;
  if (this->threadsafe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->threadsafe(), output);
  }

  // bool vm = 12;
  if (this->vm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->vm(), output);
  }

  // map<string, string> beta_settings = 13;
  if (!this->beta_settings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.BetaSettingsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.BetaSettingsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->beta_settings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->beta_settings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->beta_settings().begin();
          it != this->beta_settings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Version_BetaSettingsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(beta_settings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Version_BetaSettingsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->beta_settings().begin();
          it != this->beta_settings().end(); ++it) {
        entry.reset(beta_settings_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string env = 14;
  if (this->env().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env().data(), static_cast<int>(this->env().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.env");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->env(), output);
  }

  // .google.appengine.v1.ServingStatus serving_status = 15;
  if (this->serving_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->serving_status(), output);
  }

  // string created_by = 16;
  if (this->created_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_by().data(), static_cast<int>(this->created_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.created_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->created_by(), output);
  }

  // .google.protobuf.Timestamp create_time = 17;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->create_time_, output);
  }

  // int64 disk_usage_bytes = 18;
  if (this->disk_usage_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->disk_usage_bytes(), output);
  }

  // repeated .google.appengine.v1.UrlMap handlers = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->handlers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->handlers(static_cast<int>(i)), output);
  }

  // repeated .google.appengine.v1.ErrorHandler error_handlers = 101;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_handlers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, this->error_handlers(static_cast<int>(i)), output);
  }

  // repeated .google.appengine.v1.Library libraries = 102;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->libraries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, this->libraries(static_cast<int>(i)), output);
  }

  // .google.appengine.v1.ApiConfigHandler api_config = 103;
  if (this->has_api_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, *this->api_config_, output);
  }

  // map<string, string> env_variables = 104;
  if (!this->env_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.EnvVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.EnvVariablesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->env_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->env_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->env_variables().begin();
          it != this->env_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Version_EnvVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(env_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            104, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Version_EnvVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->env_variables().begin();
          it != this->env_variables().end(); ++it) {
        entry.reset(env_variables_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            104, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.Duration default_expiration = 105;
  if (this->has_default_expiration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105, *this->default_expiration_, output);
  }

  // .google.appengine.v1.HealthCheck health_check = 106;
  if (this->has_health_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      106, *this->health_check_, output);
  }

  // string nobuild_files_regex = 107;
  if (this->nobuild_files_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nobuild_files_regex().data(), static_cast<int>(this->nobuild_files_regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.nobuild_files_regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      107, this->nobuild_files_regex(), output);
  }

  // .google.appengine.v1.Deployment deployment = 108;
  if (this->has_deployment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      108, *this->deployment_, output);
  }

  // string version_url = 109;
  if (this->version_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_url().data(), static_cast<int>(this->version_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.version_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      109, this->version_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Version)
}

::google::protobuf::uint8* Version::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // .google.appengine.v1.AutomaticScaling automatic_scaling = 3;
  if (has_automatic_scaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *scaling_.automatic_scaling_, deterministic, target);
  }

  // .google.appengine.v1.BasicScaling basic_scaling = 4;
  if (has_basic_scaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *scaling_.basic_scaling_, deterministic, target);
  }

  // .google.appengine.v1.ManualScaling manual_scaling = 5;
  if (has_manual_scaling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *scaling_.manual_scaling_, deterministic, target);
  }

  // repeated .google.appengine.v1.InboundServiceType inbound_services = 6;
  if (this->inbound_services_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _inbound_services_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->inbound_services_, target);
  }

  // string instance_class = 7;
  if (this->instance_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_class().data(), static_cast<int>(this->instance_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.instance_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->instance_class(), target);
  }

  // .google.appengine.v1.Network network = 8;
  if (this->has_network()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->network_, deterministic, target);
  }

  // .google.appengine.v1.Resources resources = 9;
  if (this->has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->resources_, deterministic, target);
  }

  // string runtime = 10;
  if (this->runtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime().data(), static_cast<int>(this->runtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.runtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->runtime(), target);
  }

  // bool threadsafe = 11;
  if (this->threadsafe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->threadsafe(), target);
  }

  // bool vm = 12;
  if (this->vm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->vm(), target);
  }

  // map<string, string> beta_settings = 13;
  if (!this->beta_settings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.BetaSettingsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.BetaSettingsEntry.value");
      }
    };

    if (deterministic &&
        this->beta_settings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->beta_settings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->beta_settings().begin();
          it != this->beta_settings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Version_BetaSettingsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(beta_settings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Version_BetaSettingsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->beta_settings().begin();
          it != this->beta_settings().end(); ++it) {
        entry.reset(beta_settings_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string env = 14;
  if (this->env().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env().data(), static_cast<int>(this->env().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.env");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->env(), target);
  }

  // .google.appengine.v1.ServingStatus serving_status = 15;
  if (this->serving_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->serving_status(), target);
  }

  // string created_by = 16;
  if (this->created_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_by().data(), static_cast<int>(this->created_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.created_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->created_by(), target);
  }

  // .google.protobuf.Timestamp create_time = 17;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->create_time_, deterministic, target);
  }

  // int64 disk_usage_bytes = 18;
  if (this->disk_usage_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->disk_usage_bytes(), target);
  }

  // repeated .google.appengine.v1.UrlMap handlers = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->handlers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->handlers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.appengine.v1.ErrorHandler error_handlers = 101;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_handlers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, this->error_handlers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.appengine.v1.Library libraries = 102;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->libraries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, this->libraries(static_cast<int>(i)), deterministic, target);
  }

  // .google.appengine.v1.ApiConfigHandler api_config = 103;
  if (this->has_api_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        103, *this->api_config_, deterministic, target);
  }

  // map<string, string> env_variables = 104;
  if (!this->env_variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.EnvVariablesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Version.EnvVariablesEntry.value");
      }
    };

    if (deterministic &&
        this->env_variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->env_variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->env_variables().begin();
          it != this->env_variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Version_EnvVariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(env_variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       104, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Version_EnvVariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->env_variables().begin();
          it != this->env_variables().end(); ++it) {
        entry.reset(env_variables_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       104, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.Duration default_expiration = 105;
  if (this->has_default_expiration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        105, *this->default_expiration_, deterministic, target);
  }

  // .google.appengine.v1.HealthCheck health_check = 106;
  if (this->has_health_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        106, *this->health_check_, deterministic, target);
  }

  // string nobuild_files_regex = 107;
  if (this->nobuild_files_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nobuild_files_regex().data(), static_cast<int>(this->nobuild_files_regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.nobuild_files_regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        107, this->nobuild_files_regex(), target);
  }

  // .google.appengine.v1.Deployment deployment = 108;
  if (this->has_deployment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        108, *this->deployment_, deterministic, target);
  }

  // string version_url = 109;
  if (this->version_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_url().data(), static_cast<int>(this->version_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Version.version_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        109, this->version_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Version)
  return target;
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Version)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.appengine.v1.InboundServiceType inbound_services = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->inbound_services_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->inbound_services(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _inbound_services_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<string, string> beta_settings = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->beta_settings_size());
  {
    ::google::protobuf::scoped_ptr<Version_BetaSettingsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->beta_settings().begin();
        it != this->beta_settings().end(); ++it) {
      entry.reset(beta_settings_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .google.appengine.v1.UrlMap handlers = 100;
  {
    unsigned int count = static_cast<unsigned int>(this->handlers_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->handlers(static_cast<int>(i)));
    }
  }

  // repeated .google.appengine.v1.ErrorHandler error_handlers = 101;
  {
    unsigned int count = static_cast<unsigned int>(this->error_handlers_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error_handlers(static_cast<int>(i)));
    }
  }

  // repeated .google.appengine.v1.Library libraries = 102;
  {
    unsigned int count = static_cast<unsigned int>(this->libraries_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->libraries(static_cast<int>(i)));
    }
  }

  // map<string, string> env_variables = 104;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->env_variables_size());
  {
    ::google::protobuf::scoped_ptr<Version_EnvVariablesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->env_variables().begin();
        it != this->env_variables().end(); ++it) {
      entry.reset(env_variables_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string instance_class = 7;
  if (this->instance_class().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_class());
  }

  // string runtime = 10;
  if (this->runtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime());
  }

  // string env = 14;
  if (this->env().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->env());
  }

  // string created_by = 16;
  if (this->created_by().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->created_by());
  }

  // string nobuild_files_regex = 107;
  if (this->nobuild_files_regex().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nobuild_files_regex());
  }

  // string version_url = 109;
  if (this->version_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_url());
  }

  // .google.appengine.v1.Network network = 8;
  if (this->has_network()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->network_);
  }

  // .google.appengine.v1.Resources resources = 9;
  if (this->has_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resources_);
  }

  // .google.protobuf.Timestamp create_time = 17;
  if (this->has_create_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->create_time_);
  }

  // .google.appengine.v1.ApiConfigHandler api_config = 103;
  if (this->has_api_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->api_config_);
  }

  // .google.protobuf.Duration default_expiration = 105;
  if (this->has_default_expiration()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->default_expiration_);
  }

  // .google.appengine.v1.HealthCheck health_check = 106;
  if (this->has_health_check()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->health_check_);
  }

  // .google.appengine.v1.Deployment deployment = 108;
  if (this->has_deployment()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deployment_);
  }

  // bool threadsafe = 11;
  if (this->threadsafe() != 0) {
    total_size += 1 + 1;
  }

  // bool vm = 12;
  if (this->vm() != 0) {
    total_size += 1 + 1;
  }

  // .google.appengine.v1.ServingStatus serving_status = 15;
  if (this->serving_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->serving_status());
  }

  // int64 disk_usage_bytes = 18;
  if (this->disk_usage_bytes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->disk_usage_bytes());
  }

  switch (scaling_case()) {
    // .google.appengine.v1.AutomaticScaling automatic_scaling = 3;
    case kAutomaticScaling: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scaling_.automatic_scaling_);
      break;
    }
    // .google.appengine.v1.BasicScaling basic_scaling = 4;
    case kBasicScaling: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scaling_.basic_scaling_);
      break;
    }
    // .google.appengine.v1.ManualScaling manual_scaling = 5;
    case kManualScaling: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scaling_.manual_scaling_);
      break;
    }
    case SCALING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Version* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Version>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Version)
    MergeFrom(*source);
  }
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inbound_services_.MergeFrom(from.inbound_services_);
  beta_settings_.MergeFrom(from.beta_settings_);
  handlers_.MergeFrom(from.handlers_);
  error_handlers_.MergeFrom(from.error_handlers_);
  libraries_.MergeFrom(from.libraries_);
  env_variables_.MergeFrom(from.env_variables_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.instance_class().size() > 0) {

    instance_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_class_);
  }
  if (from.runtime().size() > 0) {

    runtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_);
  }
  if (from.env().size() > 0) {

    env_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.env_);
  }
  if (from.created_by().size() > 0) {

    created_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_by_);
  }
  if (from.nobuild_files_regex().size() > 0) {

    nobuild_files_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nobuild_files_regex_);
  }
  if (from.version_url().size() > 0) {

    version_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_url_);
  }
  if (from.has_network()) {
    mutable_network()->::google::appengine::v1::Network::MergeFrom(from.network());
  }
  if (from.has_resources()) {
    mutable_resources()->::google::appengine::v1::Resources::MergeFrom(from.resources());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_api_config()) {
    mutable_api_config()->::google::appengine::v1::ApiConfigHandler::MergeFrom(from.api_config());
  }
  if (from.has_default_expiration()) {
    mutable_default_expiration()->::google::protobuf::Duration::MergeFrom(from.default_expiration());
  }
  if (from.has_health_check()) {
    mutable_health_check()->::google::appengine::v1::HealthCheck::MergeFrom(from.health_check());
  }
  if (from.has_deployment()) {
    mutable_deployment()->::google::appengine::v1::Deployment::MergeFrom(from.deployment());
  }
  if (from.threadsafe() != 0) {
    set_threadsafe(from.threadsafe());
  }
  if (from.vm() != 0) {
    set_vm(from.vm());
  }
  if (from.serving_status() != 0) {
    set_serving_status(from.serving_status());
  }
  if (from.disk_usage_bytes() != 0) {
    set_disk_usage_bytes(from.disk_usage_bytes());
  }
  switch (from.scaling_case()) {
    case kAutomaticScaling: {
      mutable_automatic_scaling()->::google::appengine::v1::AutomaticScaling::MergeFrom(from.automatic_scaling());
      break;
    }
    case kBasicScaling: {
      mutable_basic_scaling()->::google::appengine::v1::BasicScaling::MergeFrom(from.basic_scaling());
      break;
    }
    case kManualScaling: {
      mutable_manual_scaling()->::google::appengine::v1::ManualScaling::MergeFrom(from.manual_scaling());
      break;
    }
    case SCALING_NOT_SET: {
      break;
    }
  }
}

void Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version::IsInitialized() const {
  return true;
}

void Version::Swap(Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version::InternalSwap(Version* other) {
  using std::swap;
  inbound_services_.InternalSwap(&other->inbound_services_);
  beta_settings_.Swap(&other->beta_settings_);
  handlers_.InternalSwap(&other->handlers_);
  error_handlers_.InternalSwap(&other->error_handlers_);
  libraries_.InternalSwap(&other->libraries_);
  env_variables_.Swap(&other->env_variables_);
  name_.Swap(&other->name_);
  id_.Swap(&other->id_);
  instance_class_.Swap(&other->instance_class_);
  runtime_.Swap(&other->runtime_);
  env_.Swap(&other->env_);
  created_by_.Swap(&other->created_by_);
  nobuild_files_regex_.Swap(&other->nobuild_files_regex_);
  version_url_.Swap(&other->version_url_);
  swap(network_, other->network_);
  swap(resources_, other->resources_);
  swap(create_time_, other->create_time_);
  swap(api_config_, other->api_config_);
  swap(default_expiration_, other->default_expiration_);
  swap(health_check_, other->health_check_);
  swap(deployment_, other->deployment_);
  swap(threadsafe_, other->threadsafe_);
  swap(vm_, other->vm_);
  swap(serving_status_, other->serving_status_);
  swap(disk_usage_bytes_, other->disk_usage_bytes_);
  swap(scaling_, other->scaling_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Version::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutomaticScaling::InitAsDefaultInstance() {
  ::google::appengine::v1::_AutomaticScaling_default_instance_._instance.get_mutable()->cool_down_period_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::appengine::v1::_AutomaticScaling_default_instance_._instance.get_mutable()->cpu_utilization_ = const_cast< ::google::appengine::v1::CpuUtilization*>(
      ::google::appengine::v1::CpuUtilization::internal_default_instance());
  ::google::appengine::v1::_AutomaticScaling_default_instance_._instance.get_mutable()->max_pending_latency_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::appengine::v1::_AutomaticScaling_default_instance_._instance.get_mutable()->min_pending_latency_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::appengine::v1::_AutomaticScaling_default_instance_._instance.get_mutable()->request_utilization_ = const_cast< ::google::appengine::v1::RequestUtilization*>(
      ::google::appengine::v1::RequestUtilization::internal_default_instance());
  ::google::appengine::v1::_AutomaticScaling_default_instance_._instance.get_mutable()->disk_utilization_ = const_cast< ::google::appengine::v1::DiskUtilization*>(
      ::google::appengine::v1::DiskUtilization::internal_default_instance());
  ::google::appengine::v1::_AutomaticScaling_default_instance_._instance.get_mutable()->network_utilization_ = const_cast< ::google::appengine::v1::NetworkUtilization*>(
      ::google::appengine::v1::NetworkUtilization::internal_default_instance());
}
void AutomaticScaling::clear_cool_down_period() {
  if (GetArenaNoVirtual() == NULL && cool_down_period_ != NULL) {
    delete cool_down_period_;
  }
  cool_down_period_ = NULL;
}
void AutomaticScaling::clear_max_pending_latency() {
  if (GetArenaNoVirtual() == NULL && max_pending_latency_ != NULL) {
    delete max_pending_latency_;
  }
  max_pending_latency_ = NULL;
}
void AutomaticScaling::clear_min_pending_latency() {
  if (GetArenaNoVirtual() == NULL && min_pending_latency_ != NULL) {
    delete min_pending_latency_;
  }
  min_pending_latency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutomaticScaling::kCoolDownPeriodFieldNumber;
const int AutomaticScaling::kCpuUtilizationFieldNumber;
const int AutomaticScaling::kMaxConcurrentRequestsFieldNumber;
const int AutomaticScaling::kMaxIdleInstancesFieldNumber;
const int AutomaticScaling::kMaxTotalInstancesFieldNumber;
const int AutomaticScaling::kMaxPendingLatencyFieldNumber;
const int AutomaticScaling::kMinIdleInstancesFieldNumber;
const int AutomaticScaling::kMinTotalInstancesFieldNumber;
const int AutomaticScaling::kMinPendingLatencyFieldNumber;
const int AutomaticScaling::kRequestUtilizationFieldNumber;
const int AutomaticScaling::kDiskUtilizationFieldNumber;
const int AutomaticScaling::kNetworkUtilizationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutomaticScaling::AutomaticScaling()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsAutomaticScaling();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.AutomaticScaling)
}
AutomaticScaling::AutomaticScaling(const AutomaticScaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cool_down_period()) {
    cool_down_period_ = new ::google::protobuf::Duration(*from.cool_down_period_);
  } else {
    cool_down_period_ = NULL;
  }
  if (from.has_cpu_utilization()) {
    cpu_utilization_ = new ::google::appengine::v1::CpuUtilization(*from.cpu_utilization_);
  } else {
    cpu_utilization_ = NULL;
  }
  if (from.has_max_pending_latency()) {
    max_pending_latency_ = new ::google::protobuf::Duration(*from.max_pending_latency_);
  } else {
    max_pending_latency_ = NULL;
  }
  if (from.has_min_pending_latency()) {
    min_pending_latency_ = new ::google::protobuf::Duration(*from.min_pending_latency_);
  } else {
    min_pending_latency_ = NULL;
  }
  if (from.has_request_utilization()) {
    request_utilization_ = new ::google::appengine::v1::RequestUtilization(*from.request_utilization_);
  } else {
    request_utilization_ = NULL;
  }
  if (from.has_disk_utilization()) {
    disk_utilization_ = new ::google::appengine::v1::DiskUtilization(*from.disk_utilization_);
  } else {
    disk_utilization_ = NULL;
  }
  if (from.has_network_utilization()) {
    network_utilization_ = new ::google::appengine::v1::NetworkUtilization(*from.network_utilization_);
  } else {
    network_utilization_ = NULL;
  }
  ::memcpy(&max_concurrent_requests_, &from.max_concurrent_requests_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_total_instances_) -
    reinterpret_cast<char*>(&max_concurrent_requests_)) + sizeof(min_total_instances_));
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.AutomaticScaling)
}

void AutomaticScaling::SharedCtor() {
  ::memset(&cool_down_period_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_total_instances_) -
      reinterpret_cast<char*>(&cool_down_period_)) + sizeof(min_total_instances_));
  _cached_size_ = 0;
}

AutomaticScaling::~AutomaticScaling() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.AutomaticScaling)
  SharedDtor();
}

void AutomaticScaling::SharedDtor() {
  if (this != internal_default_instance()) delete cool_down_period_;
  if (this != internal_default_instance()) delete cpu_utilization_;
  if (this != internal_default_instance()) delete max_pending_latency_;
  if (this != internal_default_instance()) delete min_pending_latency_;
  if (this != internal_default_instance()) delete request_utilization_;
  if (this != internal_default_instance()) delete disk_utilization_;
  if (this != internal_default_instance()) delete network_utilization_;
}

void AutomaticScaling::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutomaticScaling::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutomaticScaling& AutomaticScaling::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsAutomaticScaling();
  return *internal_default_instance();
}

AutomaticScaling* AutomaticScaling::New(::google::protobuf::Arena* arena) const {
  AutomaticScaling* n = new AutomaticScaling;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutomaticScaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.AutomaticScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cool_down_period_ != NULL) {
    delete cool_down_period_;
  }
  cool_down_period_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpu_utilization_ != NULL) {
    delete cpu_utilization_;
  }
  cpu_utilization_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_pending_latency_ != NULL) {
    delete max_pending_latency_;
  }
  max_pending_latency_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_pending_latency_ != NULL) {
    delete min_pending_latency_;
  }
  min_pending_latency_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_utilization_ != NULL) {
    delete request_utilization_;
  }
  request_utilization_ = NULL;
  if (GetArenaNoVirtual() == NULL && disk_utilization_ != NULL) {
    delete disk_utilization_;
  }
  disk_utilization_ = NULL;
  if (GetArenaNoVirtual() == NULL && network_utilization_ != NULL) {
    delete network_utilization_;
  }
  network_utilization_ = NULL;
  ::memset(&max_concurrent_requests_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_total_instances_) -
      reinterpret_cast<char*>(&max_concurrent_requests_)) + sizeof(min_total_instances_));
  _internal_metadata_.Clear();
}

bool AutomaticScaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.AutomaticScaling)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration cool_down_period = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cool_down_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.CpuUtilization cpu_utilization = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpu_utilization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_concurrent_requests = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_concurrent_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_idle_instances = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_idle_instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_total_instances = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_total_instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration max_pending_latency = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_pending_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 min_idle_instances = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_idle_instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 min_total_instances = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_total_instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration min_pending_latency = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_pending_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.RequestUtilization request_utilization = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_utilization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.DiskUtilization disk_utilization = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disk_utilization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.NetworkUtilization network_utilization = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_utilization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.AutomaticScaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.AutomaticScaling)
  return false;
#undef DO_
}

void AutomaticScaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.AutomaticScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration cool_down_period = 1;
  if (this->has_cool_down_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cool_down_period_, output);
  }

  // .google.appengine.v1.CpuUtilization cpu_utilization = 2;
  if (this->has_cpu_utilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cpu_utilization_, output);
  }

  // int32 max_concurrent_requests = 3;
  if (this->max_concurrent_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_concurrent_requests(), output);
  }

  // int32 max_idle_instances = 4;
  if (this->max_idle_instances() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_idle_instances(), output);
  }

  // int32 max_total_instances = 5;
  if (this->max_total_instances() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_total_instances(), output);
  }

  // .google.protobuf.Duration max_pending_latency = 6;
  if (this->has_max_pending_latency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->max_pending_latency_, output);
  }

  // int32 min_idle_instances = 7;
  if (this->min_idle_instances() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->min_idle_instances(), output);
  }

  // int32 min_total_instances = 8;
  if (this->min_total_instances() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->min_total_instances(), output);
  }

  // .google.protobuf.Duration min_pending_latency = 9;
  if (this->has_min_pending_latency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->min_pending_latency_, output);
  }

  // .google.appengine.v1.RequestUtilization request_utilization = 10;
  if (this->has_request_utilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->request_utilization_, output);
  }

  // .google.appengine.v1.DiskUtilization disk_utilization = 11;
  if (this->has_disk_utilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->disk_utilization_, output);
  }

  // .google.appengine.v1.NetworkUtilization network_utilization = 12;
  if (this->has_network_utilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->network_utilization_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.AutomaticScaling)
}

::google::protobuf::uint8* AutomaticScaling::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.AutomaticScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration cool_down_period = 1;
  if (this->has_cool_down_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->cool_down_period_, deterministic, target);
  }

  // .google.appengine.v1.CpuUtilization cpu_utilization = 2;
  if (this->has_cpu_utilization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->cpu_utilization_, deterministic, target);
  }

  // int32 max_concurrent_requests = 3;
  if (this->max_concurrent_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_concurrent_requests(), target);
  }

  // int32 max_idle_instances = 4;
  if (this->max_idle_instances() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_idle_instances(), target);
  }

  // int32 max_total_instances = 5;
  if (this->max_total_instances() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_total_instances(), target);
  }

  // .google.protobuf.Duration max_pending_latency = 6;
  if (this->has_max_pending_latency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->max_pending_latency_, deterministic, target);
  }

  // int32 min_idle_instances = 7;
  if (this->min_idle_instances() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->min_idle_instances(), target);
  }

  // int32 min_total_instances = 8;
  if (this->min_total_instances() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->min_total_instances(), target);
  }

  // .google.protobuf.Duration min_pending_latency = 9;
  if (this->has_min_pending_latency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->min_pending_latency_, deterministic, target);
  }

  // .google.appengine.v1.RequestUtilization request_utilization = 10;
  if (this->has_request_utilization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->request_utilization_, deterministic, target);
  }

  // .google.appengine.v1.DiskUtilization disk_utilization = 11;
  if (this->has_disk_utilization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->disk_utilization_, deterministic, target);
  }

  // .google.appengine.v1.NetworkUtilization network_utilization = 12;
  if (this->has_network_utilization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->network_utilization_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.AutomaticScaling)
  return target;
}

size_t AutomaticScaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.AutomaticScaling)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration cool_down_period = 1;
  if (this->has_cool_down_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cool_down_period_);
  }

  // .google.appengine.v1.CpuUtilization cpu_utilization = 2;
  if (this->has_cpu_utilization()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cpu_utilization_);
  }

  // .google.protobuf.Duration max_pending_latency = 6;
  if (this->has_max_pending_latency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_pending_latency_);
  }

  // .google.protobuf.Duration min_pending_latency = 9;
  if (this->has_min_pending_latency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_pending_latency_);
  }

  // .google.appengine.v1.RequestUtilization request_utilization = 10;
  if (this->has_request_utilization()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->request_utilization_);
  }

  // .google.appengine.v1.DiskUtilization disk_utilization = 11;
  if (this->has_disk_utilization()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->disk_utilization_);
  }

  // .google.appengine.v1.NetworkUtilization network_utilization = 12;
  if (this->has_network_utilization()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->network_utilization_);
  }

  // int32 max_concurrent_requests = 3;
  if (this->max_concurrent_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrent_requests());
  }

  // int32 max_idle_instances = 4;
  if (this->max_idle_instances() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_idle_instances());
  }

  // int32 max_total_instances = 5;
  if (this->max_total_instances() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_total_instances());
  }

  // int32 min_idle_instances = 7;
  if (this->min_idle_instances() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_idle_instances());
  }

  // int32 min_total_instances = 8;
  if (this->min_total_instances() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_total_instances());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutomaticScaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.AutomaticScaling)
  GOOGLE_DCHECK_NE(&from, this);
  const AutomaticScaling* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutomaticScaling>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.AutomaticScaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.AutomaticScaling)
    MergeFrom(*source);
  }
}

void AutomaticScaling::MergeFrom(const AutomaticScaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.AutomaticScaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cool_down_period()) {
    mutable_cool_down_period()->::google::protobuf::Duration::MergeFrom(from.cool_down_period());
  }
  if (from.has_cpu_utilization()) {
    mutable_cpu_utilization()->::google::appengine::v1::CpuUtilization::MergeFrom(from.cpu_utilization());
  }
  if (from.has_max_pending_latency()) {
    mutable_max_pending_latency()->::google::protobuf::Duration::MergeFrom(from.max_pending_latency());
  }
  if (from.has_min_pending_latency()) {
    mutable_min_pending_latency()->::google::protobuf::Duration::MergeFrom(from.min_pending_latency());
  }
  if (from.has_request_utilization()) {
    mutable_request_utilization()->::google::appengine::v1::RequestUtilization::MergeFrom(from.request_utilization());
  }
  if (from.has_disk_utilization()) {
    mutable_disk_utilization()->::google::appengine::v1::DiskUtilization::MergeFrom(from.disk_utilization());
  }
  if (from.has_network_utilization()) {
    mutable_network_utilization()->::google::appengine::v1::NetworkUtilization::MergeFrom(from.network_utilization());
  }
  if (from.max_concurrent_requests() != 0) {
    set_max_concurrent_requests(from.max_concurrent_requests());
  }
  if (from.max_idle_instances() != 0) {
    set_max_idle_instances(from.max_idle_instances());
  }
  if (from.max_total_instances() != 0) {
    set_max_total_instances(from.max_total_instances());
  }
  if (from.min_idle_instances() != 0) {
    set_min_idle_instances(from.min_idle_instances());
  }
  if (from.min_total_instances() != 0) {
    set_min_total_instances(from.min_total_instances());
  }
}

void AutomaticScaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.AutomaticScaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutomaticScaling::CopyFrom(const AutomaticScaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.AutomaticScaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutomaticScaling::IsInitialized() const {
  return true;
}

void AutomaticScaling::Swap(AutomaticScaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutomaticScaling::InternalSwap(AutomaticScaling* other) {
  using std::swap;
  swap(cool_down_period_, other->cool_down_period_);
  swap(cpu_utilization_, other->cpu_utilization_);
  swap(max_pending_latency_, other->max_pending_latency_);
  swap(min_pending_latency_, other->min_pending_latency_);
  swap(request_utilization_, other->request_utilization_);
  swap(disk_utilization_, other->disk_utilization_);
  swap(network_utilization_, other->network_utilization_);
  swap(max_concurrent_requests_, other->max_concurrent_requests_);
  swap(max_idle_instances_, other->max_idle_instances_);
  swap(max_total_instances_, other->max_total_instances_);
  swap(min_idle_instances_, other->min_idle_instances_);
  swap(min_total_instances_, other->min_total_instances_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AutomaticScaling::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BasicScaling::InitAsDefaultInstance() {
  ::google::appengine::v1::_BasicScaling_default_instance_._instance.get_mutable()->idle_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void BasicScaling::clear_idle_timeout() {
  if (GetArenaNoVirtual() == NULL && idle_timeout_ != NULL) {
    delete idle_timeout_;
  }
  idle_timeout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicScaling::kIdleTimeoutFieldNumber;
const int BasicScaling::kMaxInstancesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicScaling::BasicScaling()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsBasicScaling();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.BasicScaling)
}
BasicScaling::BasicScaling(const BasicScaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_idle_timeout()) {
    idle_timeout_ = new ::google::protobuf::Duration(*from.idle_timeout_);
  } else {
    idle_timeout_ = NULL;
  }
  max_instances_ = from.max_instances_;
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.BasicScaling)
}

void BasicScaling::SharedCtor() {
  ::memset(&idle_timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_instances_) -
      reinterpret_cast<char*>(&idle_timeout_)) + sizeof(max_instances_));
  _cached_size_ = 0;
}

BasicScaling::~BasicScaling() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.BasicScaling)
  SharedDtor();
}

void BasicScaling::SharedDtor() {
  if (this != internal_default_instance()) delete idle_timeout_;
}

void BasicScaling::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicScaling::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BasicScaling& BasicScaling::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsBasicScaling();
  return *internal_default_instance();
}

BasicScaling* BasicScaling::New(::google::protobuf::Arena* arena) const {
  BasicScaling* n = new BasicScaling;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicScaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.BasicScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && idle_timeout_ != NULL) {
    delete idle_timeout_;
  }
  idle_timeout_ = NULL;
  max_instances_ = 0;
  _internal_metadata_.Clear();
}

bool BasicScaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.BasicScaling)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration idle_timeout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_idle_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_instances = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.BasicScaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.BasicScaling)
  return false;
#undef DO_
}

void BasicScaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.BasicScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration idle_timeout = 1;
  if (this->has_idle_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->idle_timeout_, output);
  }

  // int32 max_instances = 2;
  if (this->max_instances() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_instances(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.BasicScaling)
}

::google::protobuf::uint8* BasicScaling::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.BasicScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration idle_timeout = 1;
  if (this->has_idle_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->idle_timeout_, deterministic, target);
  }

  // int32 max_instances = 2;
  if (this->max_instances() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_instances(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.BasicScaling)
  return target;
}

size_t BasicScaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.BasicScaling)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration idle_timeout = 1;
  if (this->has_idle_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->idle_timeout_);
  }

  // int32 max_instances = 2;
  if (this->max_instances() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_instances());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicScaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.BasicScaling)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicScaling* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicScaling>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.BasicScaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.BasicScaling)
    MergeFrom(*source);
  }
}

void BasicScaling::MergeFrom(const BasicScaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.BasicScaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_idle_timeout()) {
    mutable_idle_timeout()->::google::protobuf::Duration::MergeFrom(from.idle_timeout());
  }
  if (from.max_instances() != 0) {
    set_max_instances(from.max_instances());
  }
}

void BasicScaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.BasicScaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicScaling::CopyFrom(const BasicScaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.BasicScaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicScaling::IsInitialized() const {
  return true;
}

void BasicScaling::Swap(BasicScaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicScaling::InternalSwap(BasicScaling* other) {
  using std::swap;
  swap(idle_timeout_, other->idle_timeout_);
  swap(max_instances_, other->max_instances_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicScaling::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManualScaling::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManualScaling::kInstancesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManualScaling::ManualScaling()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsManualScaling();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.ManualScaling)
}
ManualScaling::ManualScaling(const ManualScaling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instances_ = from.instances_;
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.ManualScaling)
}

void ManualScaling::SharedCtor() {
  instances_ = 0;
  _cached_size_ = 0;
}

ManualScaling::~ManualScaling() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.ManualScaling)
  SharedDtor();
}

void ManualScaling::SharedDtor() {
}

void ManualScaling::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManualScaling::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManualScaling& ManualScaling::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsManualScaling();
  return *internal_default_instance();
}

ManualScaling* ManualScaling::New(::google::protobuf::Arena* arena) const {
  ManualScaling* n = new ManualScaling;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ManualScaling::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.ManualScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instances_ = 0;
  _internal_metadata_.Clear();
}

bool ManualScaling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.ManualScaling)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 instances = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.ManualScaling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.ManualScaling)
  return false;
#undef DO_
}

void ManualScaling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.ManualScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instances = 1;
  if (this->instances() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instances(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.ManualScaling)
}

::google::protobuf::uint8* ManualScaling::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.ManualScaling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instances = 1;
  if (this->instances() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instances(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.ManualScaling)
  return target;
}

size_t ManualScaling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.ManualScaling)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 instances = 1;
  if (this->instances() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instances());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManualScaling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.ManualScaling)
  GOOGLE_DCHECK_NE(&from, this);
  const ManualScaling* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManualScaling>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.ManualScaling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.ManualScaling)
    MergeFrom(*source);
  }
}

void ManualScaling::MergeFrom(const ManualScaling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.ManualScaling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instances() != 0) {
    set_instances(from.instances());
  }
}

void ManualScaling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.ManualScaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManualScaling::CopyFrom(const ManualScaling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.ManualScaling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManualScaling::IsInitialized() const {
  return true;
}

void ManualScaling::Swap(ManualScaling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManualScaling::InternalSwap(ManualScaling* other) {
  using std::swap;
  swap(instances_, other->instances_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ManualScaling::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CpuUtilization::InitAsDefaultInstance() {
  ::google::appengine::v1::_CpuUtilization_default_instance_._instance.get_mutable()->aggregation_window_length_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void CpuUtilization::clear_aggregation_window_length() {
  if (GetArenaNoVirtual() == NULL && aggregation_window_length_ != NULL) {
    delete aggregation_window_length_;
  }
  aggregation_window_length_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CpuUtilization::kAggregationWindowLengthFieldNumber;
const int CpuUtilization::kTargetUtilizationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CpuUtilization::CpuUtilization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsCpuUtilization();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.CpuUtilization)
}
CpuUtilization::CpuUtilization(const CpuUtilization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_aggregation_window_length()) {
    aggregation_window_length_ = new ::google::protobuf::Duration(*from.aggregation_window_length_);
  } else {
    aggregation_window_length_ = NULL;
  }
  target_utilization_ = from.target_utilization_;
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.CpuUtilization)
}

void CpuUtilization::SharedCtor() {
  ::memset(&aggregation_window_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_utilization_) -
      reinterpret_cast<char*>(&aggregation_window_length_)) + sizeof(target_utilization_));
  _cached_size_ = 0;
}

CpuUtilization::~CpuUtilization() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.CpuUtilization)
  SharedDtor();
}

void CpuUtilization::SharedDtor() {
  if (this != internal_default_instance()) delete aggregation_window_length_;
}

void CpuUtilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CpuUtilization::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CpuUtilization& CpuUtilization::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsCpuUtilization();
  return *internal_default_instance();
}

CpuUtilization* CpuUtilization::New(::google::protobuf::Arena* arena) const {
  CpuUtilization* n = new CpuUtilization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CpuUtilization::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.CpuUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && aggregation_window_length_ != NULL) {
    delete aggregation_window_length_;
  }
  aggregation_window_length_ = NULL;
  target_utilization_ = 0;
  _internal_metadata_.Clear();
}

bool CpuUtilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.CpuUtilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration aggregation_window_length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aggregation_window_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double target_utilization = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &target_utilization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.CpuUtilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.CpuUtilization)
  return false;
#undef DO_
}

void CpuUtilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.CpuUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration aggregation_window_length = 1;
  if (this->has_aggregation_window_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->aggregation_window_length_, output);
  }

  // double target_utilization = 2;
  if (this->target_utilization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->target_utilization(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.CpuUtilization)
}

::google::protobuf::uint8* CpuUtilization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.CpuUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration aggregation_window_length = 1;
  if (this->has_aggregation_window_length()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->aggregation_window_length_, deterministic, target);
  }

  // double target_utilization = 2;
  if (this->target_utilization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->target_utilization(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.CpuUtilization)
  return target;
}

size_t CpuUtilization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.CpuUtilization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration aggregation_window_length = 1;
  if (this->has_aggregation_window_length()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->aggregation_window_length_);
  }

  // double target_utilization = 2;
  if (this->target_utilization() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CpuUtilization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.CpuUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  const CpuUtilization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CpuUtilization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.CpuUtilization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.CpuUtilization)
    MergeFrom(*source);
  }
}

void CpuUtilization::MergeFrom(const CpuUtilization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.CpuUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_aggregation_window_length()) {
    mutable_aggregation_window_length()->::google::protobuf::Duration::MergeFrom(from.aggregation_window_length());
  }
  if (from.target_utilization() != 0) {
    set_target_utilization(from.target_utilization());
  }
}

void CpuUtilization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.CpuUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuUtilization::CopyFrom(const CpuUtilization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.CpuUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuUtilization::IsInitialized() const {
  return true;
}

void CpuUtilization::Swap(CpuUtilization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuUtilization::InternalSwap(CpuUtilization* other) {
  using std::swap;
  swap(aggregation_window_length_, other->aggregation_window_length_);
  swap(target_utilization_, other->target_utilization_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CpuUtilization::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestUtilization::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestUtilization::kTargetRequestCountPerSecondFieldNumber;
const int RequestUtilization::kTargetConcurrentRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestUtilization::RequestUtilization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsRequestUtilization();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.RequestUtilization)
}
RequestUtilization::RequestUtilization(const RequestUtilization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_request_count_per_second_, &from.target_request_count_per_second_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_concurrent_requests_) -
    reinterpret_cast<char*>(&target_request_count_per_second_)) + sizeof(target_concurrent_requests_));
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.RequestUtilization)
}

void RequestUtilization::SharedCtor() {
  ::memset(&target_request_count_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_concurrent_requests_) -
      reinterpret_cast<char*>(&target_request_count_per_second_)) + sizeof(target_concurrent_requests_));
  _cached_size_ = 0;
}

RequestUtilization::~RequestUtilization() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.RequestUtilization)
  SharedDtor();
}

void RequestUtilization::SharedDtor() {
}

void RequestUtilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestUtilization::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestUtilization& RequestUtilization::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsRequestUtilization();
  return *internal_default_instance();
}

RequestUtilization* RequestUtilization::New(::google::protobuf::Arena* arena) const {
  RequestUtilization* n = new RequestUtilization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestUtilization::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.RequestUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_request_count_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_concurrent_requests_) -
      reinterpret_cast<char*>(&target_request_count_per_second_)) + sizeof(target_concurrent_requests_));
  _internal_metadata_.Clear();
}

bool RequestUtilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.RequestUtilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 target_request_count_per_second = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_request_count_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_concurrent_requests = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_concurrent_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.RequestUtilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.RequestUtilization)
  return false;
#undef DO_
}

void RequestUtilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.RequestUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 target_request_count_per_second = 1;
  if (this->target_request_count_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target_request_count_per_second(), output);
  }

  // int32 target_concurrent_requests = 2;
  if (this->target_concurrent_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target_concurrent_requests(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.RequestUtilization)
}

::google::protobuf::uint8* RequestUtilization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.RequestUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 target_request_count_per_second = 1;
  if (this->target_request_count_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target_request_count_per_second(), target);
  }

  // int32 target_concurrent_requests = 2;
  if (this->target_concurrent_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target_concurrent_requests(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.RequestUtilization)
  return target;
}

size_t RequestUtilization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.RequestUtilization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 target_request_count_per_second = 1;
  if (this->target_request_count_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_request_count_per_second());
  }

  // int32 target_concurrent_requests = 2;
  if (this->target_concurrent_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_concurrent_requests());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestUtilization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.RequestUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestUtilization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestUtilization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.RequestUtilization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.RequestUtilization)
    MergeFrom(*source);
  }
}

void RequestUtilization::MergeFrom(const RequestUtilization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.RequestUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_request_count_per_second() != 0) {
    set_target_request_count_per_second(from.target_request_count_per_second());
  }
  if (from.target_concurrent_requests() != 0) {
    set_target_concurrent_requests(from.target_concurrent_requests());
  }
}

void RequestUtilization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.RequestUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestUtilization::CopyFrom(const RequestUtilization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.RequestUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestUtilization::IsInitialized() const {
  return true;
}

void RequestUtilization::Swap(RequestUtilization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestUtilization::InternalSwap(RequestUtilization* other) {
  using std::swap;
  swap(target_request_count_per_second_, other->target_request_count_per_second_);
  swap(target_concurrent_requests_, other->target_concurrent_requests_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestUtilization::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiskUtilization::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiskUtilization::kTargetWriteBytesPerSecondFieldNumber;
const int DiskUtilization::kTargetWriteOpsPerSecondFieldNumber;
const int DiskUtilization::kTargetReadBytesPerSecondFieldNumber;
const int DiskUtilization::kTargetReadOpsPerSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiskUtilization::DiskUtilization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsDiskUtilization();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.DiskUtilization)
}
DiskUtilization::DiskUtilization(const DiskUtilization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_write_bytes_per_second_, &from.target_write_bytes_per_second_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_read_ops_per_second_) -
    reinterpret_cast<char*>(&target_write_bytes_per_second_)) + sizeof(target_read_ops_per_second_));
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.DiskUtilization)
}

void DiskUtilization::SharedCtor() {
  ::memset(&target_write_bytes_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_read_ops_per_second_) -
      reinterpret_cast<char*>(&target_write_bytes_per_second_)) + sizeof(target_read_ops_per_second_));
  _cached_size_ = 0;
}

DiskUtilization::~DiskUtilization() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.DiskUtilization)
  SharedDtor();
}

void DiskUtilization::SharedDtor() {
}

void DiskUtilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiskUtilization::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiskUtilization& DiskUtilization::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsDiskUtilization();
  return *internal_default_instance();
}

DiskUtilization* DiskUtilization::New(::google::protobuf::Arena* arena) const {
  DiskUtilization* n = new DiskUtilization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DiskUtilization::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.DiskUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_write_bytes_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_read_ops_per_second_) -
      reinterpret_cast<char*>(&target_write_bytes_per_second_)) + sizeof(target_read_ops_per_second_));
  _internal_metadata_.Clear();
}

bool DiskUtilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.DiskUtilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 target_write_bytes_per_second = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_write_bytes_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_write_ops_per_second = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_write_ops_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_read_bytes_per_second = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_read_bytes_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_read_ops_per_second = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_read_ops_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.DiskUtilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.DiskUtilization)
  return false;
#undef DO_
}

void DiskUtilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.DiskUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 target_write_bytes_per_second = 14;
  if (this->target_write_bytes_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->target_write_bytes_per_second(), output);
  }

  // int32 target_write_ops_per_second = 15;
  if (this->target_write_ops_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->target_write_ops_per_second(), output);
  }

  // int32 target_read_bytes_per_second = 16;
  if (this->target_read_bytes_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->target_read_bytes_per_second(), output);
  }

  // int32 target_read_ops_per_second = 17;
  if (this->target_read_ops_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->target_read_ops_per_second(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.DiskUtilization)
}

::google::protobuf::uint8* DiskUtilization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.DiskUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 target_write_bytes_per_second = 14;
  if (this->target_write_bytes_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->target_write_bytes_per_second(), target);
  }

  // int32 target_write_ops_per_second = 15;
  if (this->target_write_ops_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->target_write_ops_per_second(), target);
  }

  // int32 target_read_bytes_per_second = 16;
  if (this->target_read_bytes_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->target_read_bytes_per_second(), target);
  }

  // int32 target_read_ops_per_second = 17;
  if (this->target_read_ops_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->target_read_ops_per_second(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.DiskUtilization)
  return target;
}

size_t DiskUtilization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.DiskUtilization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 target_write_bytes_per_second = 14;
  if (this->target_write_bytes_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_write_bytes_per_second());
  }

  // int32 target_write_ops_per_second = 15;
  if (this->target_write_ops_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_write_ops_per_second());
  }

  // int32 target_read_bytes_per_second = 16;
  if (this->target_read_bytes_per_second() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_read_bytes_per_second());
  }

  // int32 target_read_ops_per_second = 17;
  if (this->target_read_ops_per_second() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_read_ops_per_second());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiskUtilization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.DiskUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  const DiskUtilization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiskUtilization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.DiskUtilization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.DiskUtilization)
    MergeFrom(*source);
  }
}

void DiskUtilization::MergeFrom(const DiskUtilization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.DiskUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_write_bytes_per_second() != 0) {
    set_target_write_bytes_per_second(from.target_write_bytes_per_second());
  }
  if (from.target_write_ops_per_second() != 0) {
    set_target_write_ops_per_second(from.target_write_ops_per_second());
  }
  if (from.target_read_bytes_per_second() != 0) {
    set_target_read_bytes_per_second(from.target_read_bytes_per_second());
  }
  if (from.target_read_ops_per_second() != 0) {
    set_target_read_ops_per_second(from.target_read_ops_per_second());
  }
}

void DiskUtilization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.DiskUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiskUtilization::CopyFrom(const DiskUtilization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.DiskUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiskUtilization::IsInitialized() const {
  return true;
}

void DiskUtilization::Swap(DiskUtilization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiskUtilization::InternalSwap(DiskUtilization* other) {
  using std::swap;
  swap(target_write_bytes_per_second_, other->target_write_bytes_per_second_);
  swap(target_write_ops_per_second_, other->target_write_ops_per_second_);
  swap(target_read_bytes_per_second_, other->target_read_bytes_per_second_);
  swap(target_read_ops_per_second_, other->target_read_ops_per_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DiskUtilization::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetworkUtilization::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkUtilization::kTargetSentBytesPerSecondFieldNumber;
const int NetworkUtilization::kTargetSentPacketsPerSecondFieldNumber;
const int NetworkUtilization::kTargetReceivedBytesPerSecondFieldNumber;
const int NetworkUtilization::kTargetReceivedPacketsPerSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkUtilization::NetworkUtilization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetworkUtilization();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.NetworkUtilization)
}
NetworkUtilization::NetworkUtilization(const NetworkUtilization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_sent_bytes_per_second_, &from.target_sent_bytes_per_second_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_received_packets_per_second_) -
    reinterpret_cast<char*>(&target_sent_bytes_per_second_)) + sizeof(target_received_packets_per_second_));
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.NetworkUtilization)
}

void NetworkUtilization::SharedCtor() {
  ::memset(&target_sent_bytes_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_received_packets_per_second_) -
      reinterpret_cast<char*>(&target_sent_bytes_per_second_)) + sizeof(target_received_packets_per_second_));
  _cached_size_ = 0;
}

NetworkUtilization::~NetworkUtilization() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.NetworkUtilization)
  SharedDtor();
}

void NetworkUtilization::SharedDtor() {
}

void NetworkUtilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkUtilization::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetworkUtilization& NetworkUtilization::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetworkUtilization();
  return *internal_default_instance();
}

NetworkUtilization* NetworkUtilization::New(::google::protobuf::Arena* arena) const {
  NetworkUtilization* n = new NetworkUtilization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkUtilization::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.NetworkUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_sent_bytes_per_second_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_received_packets_per_second_) -
      reinterpret_cast<char*>(&target_sent_bytes_per_second_)) + sizeof(target_received_packets_per_second_));
  _internal_metadata_.Clear();
}

bool NetworkUtilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.NetworkUtilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 target_sent_bytes_per_second = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_sent_bytes_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_sent_packets_per_second = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_sent_packets_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_received_bytes_per_second = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_received_bytes_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_received_packets_per_second = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_received_packets_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.NetworkUtilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.NetworkUtilization)
  return false;
#undef DO_
}

void NetworkUtilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.NetworkUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 target_sent_bytes_per_second = 1;
  if (this->target_sent_bytes_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target_sent_bytes_per_second(), output);
  }

  // int32 target_sent_packets_per_second = 11;
  if (this->target_sent_packets_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->target_sent_packets_per_second(), output);
  }

  // int32 target_received_bytes_per_second = 12;
  if (this->target_received_bytes_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->target_received_bytes_per_second(), output);
  }

  // int32 target_received_packets_per_second = 13;
  if (this->target_received_packets_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->target_received_packets_per_second(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.NetworkUtilization)
}

::google::protobuf::uint8* NetworkUtilization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.NetworkUtilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 target_sent_bytes_per_second = 1;
  if (this->target_sent_bytes_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target_sent_bytes_per_second(), target);
  }

  // int32 target_sent_packets_per_second = 11;
  if (this->target_sent_packets_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->target_sent_packets_per_second(), target);
  }

  // int32 target_received_bytes_per_second = 12;
  if (this->target_received_bytes_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->target_received_bytes_per_second(), target);
  }

  // int32 target_received_packets_per_second = 13;
  if (this->target_received_packets_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->target_received_packets_per_second(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.NetworkUtilization)
  return target;
}

size_t NetworkUtilization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.NetworkUtilization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 target_sent_bytes_per_second = 1;
  if (this->target_sent_bytes_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_sent_bytes_per_second());
  }

  // int32 target_sent_packets_per_second = 11;
  if (this->target_sent_packets_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_sent_packets_per_second());
  }

  // int32 target_received_bytes_per_second = 12;
  if (this->target_received_bytes_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_received_bytes_per_second());
  }

  // int32 target_received_packets_per_second = 13;
  if (this->target_received_packets_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_received_packets_per_second());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkUtilization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.NetworkUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkUtilization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkUtilization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.NetworkUtilization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.NetworkUtilization)
    MergeFrom(*source);
  }
}

void NetworkUtilization::MergeFrom(const NetworkUtilization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.NetworkUtilization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_sent_bytes_per_second() != 0) {
    set_target_sent_bytes_per_second(from.target_sent_bytes_per_second());
  }
  if (from.target_sent_packets_per_second() != 0) {
    set_target_sent_packets_per_second(from.target_sent_packets_per_second());
  }
  if (from.target_received_bytes_per_second() != 0) {
    set_target_received_bytes_per_second(from.target_received_bytes_per_second());
  }
  if (from.target_received_packets_per_second() != 0) {
    set_target_received_packets_per_second(from.target_received_packets_per_second());
  }
}

void NetworkUtilization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.NetworkUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkUtilization::CopyFrom(const NetworkUtilization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.NetworkUtilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkUtilization::IsInitialized() const {
  return true;
}

void NetworkUtilization::Swap(NetworkUtilization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkUtilization::InternalSwap(NetworkUtilization* other) {
  using std::swap;
  swap(target_sent_bytes_per_second_, other->target_sent_bytes_per_second_);
  swap(target_sent_packets_per_second_, other->target_sent_packets_per_second_);
  swap(target_received_bytes_per_second_, other->target_received_bytes_per_second_);
  swap(target_received_packets_per_second_, other->target_received_packets_per_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkUtilization::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Network::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Network::kForwardedPortsFieldNumber;
const int Network::kInstanceTagFieldNumber;
const int Network::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Network::Network()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetwork();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Network)
}
Network::Network(const Network& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      forwarded_ports_(from.forwarded_ports_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_tag().size() > 0) {
    instance_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_tag_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Network)
}

void Network::SharedCtor() {
  instance_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Network::~Network() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Network)
  SharedDtor();
}

void Network::SharedDtor() {
  instance_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Network::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Network::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Network& Network::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsNetwork();
  return *internal_default_instance();
}

Network* Network::New(::google::protobuf::Arena* arena) const {
  Network* n = new Network;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Network::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  forwarded_ports_.Clear();
  instance_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Network::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Network)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string forwarded_ports = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_forwarded_ports()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->forwarded_ports(this->forwarded_ports_size() - 1).data(),
            static_cast<int>(this->forwarded_ports(this->forwarded_ports_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Network.forwarded_ports"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_tag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_tag().data(), static_cast<int>(this->instance_tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Network.instance_tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Network.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Network)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Network)
  return false;
#undef DO_
}

void Network::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string forwarded_ports = 1;
  for (int i = 0, n = this->forwarded_ports_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forwarded_ports(i).data(), static_cast<int>(this->forwarded_ports(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Network.forwarded_ports");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->forwarded_ports(i), output);
  }

  // string instance_tag = 2;
  if (this->instance_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_tag().data(), static_cast<int>(this->instance_tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Network.instance_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_tag(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Network.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Network)
}

::google::protobuf::uint8* Network::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string forwarded_ports = 1;
  for (int i = 0, n = this->forwarded_ports_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forwarded_ports(i).data(), static_cast<int>(this->forwarded_ports(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Network.forwarded_ports");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->forwarded_ports(i), target);
  }

  // string instance_tag = 2;
  if (this->instance_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_tag().data(), static_cast<int>(this->instance_tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Network.instance_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_tag(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Network.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Network)
  return target;
}

size_t Network::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Network)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string forwarded_ports = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->forwarded_ports_size());
  for (int i = 0, n = this->forwarded_ports_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->forwarded_ports(i));
  }

  // string instance_tag = 2;
  if (this->instance_tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_tag());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Network::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Network)
  GOOGLE_DCHECK_NE(&from, this);
  const Network* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Network>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Network)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Network)
    MergeFrom(*source);
  }
}

void Network::MergeFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Network)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  forwarded_ports_.MergeFrom(from.forwarded_ports_);
  if (from.instance_tag().size() > 0) {

    instance_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_tag_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Network::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Network::CopyFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Network::IsInitialized() const {
  return true;
}

void Network::Swap(Network* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Network::InternalSwap(Network* other) {
  using std::swap;
  forwarded_ports_.InternalSwap(&other->forwarded_ports_);
  instance_tag_.Swap(&other->instance_tag_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Network::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resources::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resources::kCpuFieldNumber;
const int Resources::kDiskGbFieldNumber;
const int Resources::kMemoryGbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resources::Resources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Resources)
}
Resources::Resources(const Resources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cpu_, &from.cpu_,
    static_cast<size_t>(reinterpret_cast<char*>(&memory_gb_) -
    reinterpret_cast<char*>(&cpu_)) + sizeof(memory_gb_));
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Resources)
}

void Resources::SharedCtor() {
  ::memset(&cpu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_gb_) -
      reinterpret_cast<char*>(&cpu_)) + sizeof(memory_gb_));
  _cached_size_ = 0;
}

Resources::~Resources() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Resources)
  SharedDtor();
}

void Resources::SharedDtor() {
}

void Resources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Resources::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resources& Resources::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::InitDefaultsResources();
  return *internal_default_instance();
}

Resources* Resources::New(::google::protobuf::Arena* arena) const {
  Resources* n = new Resources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Resources::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cpu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_gb_) -
      reinterpret_cast<char*>(&cpu_)) + sizeof(memory_gb_));
  _internal_metadata_.Clear();
}

bool Resources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Resources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double cpu = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double disk_gb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &disk_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double memory_gb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &memory_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Resources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Resources)
  return false;
#undef DO_
}

void Resources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double cpu = 1;
  if (this->cpu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->cpu(), output);
  }

  // double disk_gb = 2;
  if (this->disk_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->disk_gb(), output);
  }

  // double memory_gb = 3;
  if (this->memory_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->memory_gb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Resources)
}

::google::protobuf::uint8* Resources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double cpu = 1;
  if (this->cpu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->cpu(), target);
  }

  // double disk_gb = 2;
  if (this->disk_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->disk_gb(), target);
  }

  // double memory_gb = 3;
  if (this->memory_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->memory_gb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Resources)
  return target;
}

size_t Resources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Resources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double cpu = 1;
  if (this->cpu() != 0) {
    total_size += 1 + 8;
  }

  // double disk_gb = 2;
  if (this->disk_gb() != 0) {
    total_size += 1 + 8;
  }

  // double memory_gb = 3;
  if (this->memory_gb() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Resources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Resources)
  GOOGLE_DCHECK_NE(&from, this);
  const Resources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Resources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Resources)
    MergeFrom(*source);
  }
}

void Resources::MergeFrom(const Resources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Resources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpu() != 0) {
    set_cpu(from.cpu());
  }
  if (from.disk_gb() != 0) {
    set_disk_gb(from.disk_gb());
  }
  if (from.memory_gb() != 0) {
    set_memory_gb(from.memory_gb());
  }
}

void Resources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Resources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resources::CopyFrom(const Resources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Resources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resources::IsInitialized() const {
  return true;
}

void Resources::Swap(Resources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resources::InternalSwap(Resources* other) {
  using std::swap;
  swap(cpu_, other->cpu_);
  swap(disk_gb_, other->disk_gb_);
  swap(memory_gb_, other->memory_gb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Resources::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
