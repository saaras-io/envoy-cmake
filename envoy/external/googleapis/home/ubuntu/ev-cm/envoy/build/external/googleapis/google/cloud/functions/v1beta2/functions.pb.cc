// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/functions/v1beta2/functions.proto

#include "google/cloud/functions/v1beta2/functions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace functions {
namespace v1beta2 {
class CloudFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloudFunction>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr source_archive_url_;
  const ::google::cloud::functions::v1beta2::SourceRepository* source_repository_;
  const ::google::cloud::functions::v1beta2::HTTPSTrigger* https_trigger_;
  const ::google::cloud::functions::v1beta2::EventTrigger* event_trigger_;
} _CloudFunction_default_instance_;
class HTTPSTriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPSTrigger>
      _instance;
} _HTTPSTrigger_default_instance_;
class EventTriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventTrigger>
      _instance;
} _EventTrigger_default_instance_;
class SourceRepositoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceRepository>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr branch_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr revision_;
} _SourceRepository_default_instance_;
class CreateFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionRequest>
      _instance;
} _CreateFunctionRequest_default_instance_;
class UpdateFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateFunctionRequest>
      _instance;
} _UpdateFunctionRequest_default_instance_;
class GetFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFunctionRequest>
      _instance;
} _GetFunctionRequest_default_instance_;
class ListFunctionsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFunctionsRequest>
      _instance;
} _ListFunctionsRequest_default_instance_;
class ListFunctionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFunctionsResponse>
      _instance;
} _ListFunctionsResponse_default_instance_;
class DeleteFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteFunctionRequest>
      _instance;
} _DeleteFunctionRequest_default_instance_;
class CallFunctionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallFunctionRequest>
      _instance;
} _CallFunctionRequest_default_instance_;
class CallFunctionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallFunctionResponse>
      _instance;
} _CallFunctionResponse_default_instance_;
}  // namespace v1beta2
}  // namespace functions
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto {
void InitDefaultsCloudFunctionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsSourceRepository();
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsHTTPSTrigger();
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsEventTrigger();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::cloud::functions::v1beta2::_CloudFunction_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::CloudFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::CloudFunction::InitAsDefaultInstance();
}

void InitDefaultsCloudFunction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloudFunctionImpl);
}

void InitDefaultsHTTPSTriggerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_HTTPSTrigger_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::HTTPSTrigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::HTTPSTrigger::InitAsDefaultInstance();
}

void InitDefaultsHTTPSTrigger() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHTTPSTriggerImpl);
}

void InitDefaultsEventTriggerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_EventTrigger_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::EventTrigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::EventTrigger::InitAsDefaultInstance();
}

void InitDefaultsEventTrigger() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventTriggerImpl);
}

void InitDefaultsSourceRepositoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_SourceRepository_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::SourceRepository();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::SourceRepository::InitAsDefaultInstance();
}

void InitDefaultsSourceRepository() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSourceRepositoryImpl);
}

void InitDefaultsCreateFunctionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCloudFunction();
  {
    void* ptr = &::google::cloud::functions::v1beta2::_CreateFunctionRequest_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::CreateFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::CreateFunctionRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateFunctionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateFunctionRequestImpl);
}

void InitDefaultsUpdateFunctionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCloudFunction();
  {
    void* ptr = &::google::cloud::functions::v1beta2::_UpdateFunctionRequest_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::UpdateFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::UpdateFunctionRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateFunctionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateFunctionRequestImpl);
}

void InitDefaultsGetFunctionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_GetFunctionRequest_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::GetFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::GetFunctionRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFunctionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFunctionRequestImpl);
}

void InitDefaultsListFunctionsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_ListFunctionsRequest_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::ListFunctionsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::ListFunctionsRequest::InitAsDefaultInstance();
}

void InitDefaultsListFunctionsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListFunctionsRequestImpl);
}

void InitDefaultsListFunctionsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCloudFunction();
  {
    void* ptr = &::google::cloud::functions::v1beta2::_ListFunctionsResponse_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::ListFunctionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::ListFunctionsResponse::InitAsDefaultInstance();
}

void InitDefaultsListFunctionsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListFunctionsResponseImpl);
}

void InitDefaultsDeleteFunctionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_DeleteFunctionRequest_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::DeleteFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::DeleteFunctionRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteFunctionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteFunctionRequestImpl);
}

void InitDefaultsCallFunctionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_CallFunctionRequest_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::CallFunctionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::CallFunctionRequest::InitAsDefaultInstance();
}

void InitDefaultsCallFunctionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCallFunctionRequestImpl);
}

void InitDefaultsCallFunctionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::functions::v1beta2::_CallFunctionResponse_default_instance_;
    new (ptr) ::google::cloud::functions::v1beta2::CallFunctionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::functions::v1beta2::CallFunctionResponse::InitAsDefaultInstance();
}

void InitDefaultsCallFunctionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCallFunctionResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, name_),
  offsetof(::google::cloud::functions::v1beta2::CloudFunctionDefaultTypeInternal, source_archive_url_),
  offsetof(::google::cloud::functions::v1beta2::CloudFunctionDefaultTypeInternal, source_repository_),
  offsetof(::google::cloud::functions::v1beta2::CloudFunctionDefaultTypeInternal, https_trigger_),
  offsetof(::google::cloud::functions::v1beta2::CloudFunctionDefaultTypeInternal, event_trigger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, latest_operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, entry_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, available_memory_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, service_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, source_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CloudFunction, trigger_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::HTTPSTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::HTTPSTrigger, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::EventTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::EventTrigger, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::EventTrigger, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::SourceRepository, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::SourceRepository, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::SourceRepository, repository_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::SourceRepository, source_path_),
  offsetof(::google::cloud::functions::v1beta2::SourceRepositoryDefaultTypeInternal, branch_),
  offsetof(::google::cloud::functions::v1beta2::SourceRepositoryDefaultTypeInternal, tag_),
  offsetof(::google::cloud::functions::v1beta2::SourceRepositoryDefaultTypeInternal, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::SourceRepository, deployed_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::SourceRepository, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CreateFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CreateFunctionRequest, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CreateFunctionRequest, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::UpdateFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::UpdateFunctionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::UpdateFunctionRequest, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::GetFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::GetFunctionRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::ListFunctionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::ListFunctionsRequest, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::ListFunctionsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::ListFunctionsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::ListFunctionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::ListFunctionsResponse, functions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::ListFunctionsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::DeleteFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::DeleteFunctionRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CallFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CallFunctionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CallFunctionRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CallFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CallFunctionResponse, execution_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CallFunctionResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::functions::v1beta2::CallFunctionResponse, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::functions::v1beta2::CloudFunction)},
  { 19, -1, sizeof(::google::cloud::functions::v1beta2::HTTPSTrigger)},
  { 25, -1, sizeof(::google::cloud::functions::v1beta2::EventTrigger)},
  { 32, -1, sizeof(::google::cloud::functions::v1beta2::SourceRepository)},
  { 44, -1, sizeof(::google::cloud::functions::v1beta2::CreateFunctionRequest)},
  { 51, -1, sizeof(::google::cloud::functions::v1beta2::UpdateFunctionRequest)},
  { 58, -1, sizeof(::google::cloud::functions::v1beta2::GetFunctionRequest)},
  { 64, -1, sizeof(::google::cloud::functions::v1beta2::ListFunctionsRequest)},
  { 72, -1, sizeof(::google::cloud::functions::v1beta2::ListFunctionsResponse)},
  { 79, -1, sizeof(::google::cloud::functions::v1beta2::DeleteFunctionRequest)},
  { 85, -1, sizeof(::google::cloud::functions::v1beta2::CallFunctionRequest)},
  { 92, -1, sizeof(::google::cloud::functions::v1beta2::CallFunctionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_CloudFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_HTTPSTrigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_EventTrigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_SourceRepository_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_CreateFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_UpdateFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_GetFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_ListFunctionsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_ListFunctionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_DeleteFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_CallFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::functions::v1beta2::_CallFunctionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/functions/v1beta2/functions.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.google/cloud/functions/v1beta2/functio"
      "ns.proto\022\036google.cloud.functions.v1beta2"
      "\032\034google/api/annotations.proto\032\025google/a"
      "pi/auth.proto\032/google/cloud/functions/v1"
      "beta2/operations.proto\032#google/longrunni"
      "ng/operations.proto\032\036google/protobuf/dur"
      "ation.proto\032\037google/protobuf/timestamp.p"
      "roto\"\271\004\n\rCloudFunction\022\014\n\004name\030\001 \001(\t\022\034\n\022"
      "source_archive_url\030\016 \001(\tH\000\022M\n\021source_rep"
      "ository\030\003 \001(\01320.google.cloud.functions.v"
      "1beta2.SourceRepositoryH\000\022E\n\rhttps_trigg"
      "er\030\006 \001(\0132,.google.cloud.functions.v1beta"
      "2.HTTPSTriggerH\001\022E\n\revent_trigger\030\014 \001(\0132"
      ",.google.cloud.functions.v1beta2.EventTr"
      "iggerH\001\022C\n\006status\030\007 \001(\01623.google.cloud.f"
      "unctions.v1beta2.CloudFunctionStatus\022\030\n\020"
      "latest_operation\030\010 \001(\t\022\023\n\013entry_point\030\t "
      "\001(\t\022*\n\007timeout\030\n \001(\0132\031.google.protobuf.D"
      "uration\022\033\n\023available_memory_mb\030\013 \001(\005\022\027\n\017"
      "service_account\030\r \001(\t\022/\n\013update_time\030\017 \001"
      "(\0132\032.google.protobuf.TimestampB\r\n\013source"
      "_codeB\t\n\007trigger\"\033\n\014HTTPSTrigger\022\013\n\003url\030"
      "\001 \001(\t\"4\n\014EventTrigger\022\022\n\nevent_type\030\001 \001("
      "\t\022\020\n\010resource\030\002 \001(\t\"\232\001\n\020SourceRepository"
      "\022\026\n\016repository_url\030\001 \001(\t\022\023\n\013source_path\030"
      "\002 \001(\t\022\020\n\006branch\030\003 \001(\tH\000\022\r\n\003tag\030\004 \001(\tH\000\022\022"
      "\n\010revision\030\005 \001(\tH\000\022\031\n\021deployed_revision\030"
      "\006 \001(\tB\t\n\007version\"j\n\025CreateFunctionReques"
      "t\022\020\n\010location\030\001 \001(\t\022\?\n\010function\030\002 \001(\0132-."
      "google.cloud.functions.v1beta2.CloudFunc"
      "tion\"f\n\025UpdateFunctionRequest\022\014\n\004name\030\001 "
      "\001(\t\022\?\n\010function\030\002 \001(\0132-.google.cloud.fun"
      "ctions.v1beta2.CloudFunction\"\"\n\022GetFunct"
      "ionRequest\022\014\n\004name\030\001 \001(\t\"O\n\024ListFunction"
      "sRequest\022\020\n\010location\030\001 \001(\t\022\021\n\tpage_size\030"
      "\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"r\n\025ListFunctio"
      "nsResponse\022@\n\tfunctions\030\001 \003(\0132-.google.c"
      "loud.functions.v1beta2.CloudFunction\022\027\n\017"
      "next_page_token\030\002 \001(\t\"%\n\025DeleteFunctionR"
      "equest\022\014\n\004name\030\001 \001(\t\"1\n\023CallFunctionRequ"
      "est\022\014\n\004name\030\001 \001(\t\022\014\n\004data\030\002 \001(\t\"K\n\024CallF"
      "unctionResponse\022\024\n\014execution_id\030\001 \001(\t\022\016\n"
      "\006result\030\002 \001(\t\022\r\n\005error\030\003 \001(\t*a\n\023CloudFun"
      "ctionStatus\022\026\n\022STATUS_UNSPECIFIED\020\000\022\t\n\005R"
      "EADY\020\001\022\n\n\006FAILED\020\002\022\r\n\tDEPLOYING\020\003\022\014\n\010DEL"
      "ETING\020\0042\310\010\n\025CloudFunctionsService\022\272\001\n\rLi"
      "stFunctions\0224.google.cloud.functions.v1b"
      "eta2.ListFunctionsRequest\0325.google.cloud"
      ".functions.v1beta2.ListFunctionsResponse"
      "\"<\202\323\344\223\0026\0224/v1beta2/{location=projects/*/"
      "locations/*}/functions\022\254\001\n\013GetFunction\0222"
      ".google.cloud.functions.v1beta2.GetFunct"
      "ionRequest\032-.google.cloud.functions.v1be"
      "ta2.CloudFunction\":\202\323\344\223\0024\0222/v1beta2/{nam"
      "e=projects/*/locations/*/functions/*}\022\256\001"
      "\n\016CreateFunction\0225.google.cloud.function"
      "s.v1beta2.CreateFunctionRequest\032\035.google"
      ".longrunning.Operation\"F\202\323\344\223\002@\"4/v1beta2"
      "/{location=projects/*/locations/*}/funct"
      "ions:\010function\022\254\001\n\016UpdateFunction\0225.goog"
      "le.cloud.functions.v1beta2.UpdateFunctio"
      "nRequest\032\035.google.longrunning.Operation\""
      "D\202\323\344\223\002>\0322/v1beta2/{name=projects/*/locat"
      "ions/*/functions/*}:\010function\022\242\001\n\016Delete"
      "Function\0225.google.cloud.functions.v1beta"
      "2.DeleteFunctionRequest\032\035.google.longrun"
      "ning.Operation\":\202\323\344\223\0024*2/v1beta2/{name=p"
      "rojects/*/locations/*/functions/*}\022\275\001\n\014C"
      "allFunction\0223.google.cloud.functions.v1b"
      "eta2.CallFunctionRequest\0324.google.cloud."
      "functions.v1beta2.CallFunctionResponse\"B"
      "\202\323\344\223\002<\"7/v1beta2/{name=projects/*/locati"
      "ons/*/functions/*}:call:\001*B\205\001\n\"com.googl"
      "e.cloud.functions.v1beta2B\016FunctionsProt"
      "oP\001ZGgoogle.golang.org/genproto/googleap"
      "is/cloud/functions/v1beta2;functions\242\002\003G"
      "CFb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3050);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/functions/v1beta2/functions.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fauth_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto
namespace google {
namespace cloud {
namespace functions {
namespace v1beta2 {
const ::google::protobuf::EnumDescriptor* CloudFunctionStatus_descriptor() {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_enum_descriptors[0];
}
bool CloudFunctionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CloudFunction::InitAsDefaultInstance() {
  ::google::cloud::functions::v1beta2::_CloudFunction_default_instance_.source_archive_url_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::functions::v1beta2::_CloudFunction_default_instance_.source_repository_ = const_cast< ::google::cloud::functions::v1beta2::SourceRepository*>(
      ::google::cloud::functions::v1beta2::SourceRepository::internal_default_instance());
  ::google::cloud::functions::v1beta2::_CloudFunction_default_instance_.https_trigger_ = const_cast< ::google::cloud::functions::v1beta2::HTTPSTrigger*>(
      ::google::cloud::functions::v1beta2::HTTPSTrigger::internal_default_instance());
  ::google::cloud::functions::v1beta2::_CloudFunction_default_instance_.event_trigger_ = const_cast< ::google::cloud::functions::v1beta2::EventTrigger*>(
      ::google::cloud::functions::v1beta2::EventTrigger::internal_default_instance());
  ::google::cloud::functions::v1beta2::_CloudFunction_default_instance_._instance.get_mutable()->timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::cloud::functions::v1beta2::_CloudFunction_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void CloudFunction::set_allocated_source_repository(::google::cloud::functions::v1beta2::SourceRepository* source_repository) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source_code();
  if (source_repository) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_repository = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_repository, submessage_arena);
    }
    set_has_source_repository();
    source_code_.source_repository_ = source_repository;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.source_repository)
}
void CloudFunction::set_allocated_https_trigger(::google::cloud::functions::v1beta2::HTTPSTrigger* https_trigger) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_trigger();
  if (https_trigger) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      https_trigger = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, https_trigger, submessage_arena);
    }
    set_has_https_trigger();
    trigger_.https_trigger_ = https_trigger;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.https_trigger)
}
void CloudFunction::set_allocated_event_trigger(::google::cloud::functions::v1beta2::EventTrigger* event_trigger) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_trigger();
  if (event_trigger) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_trigger = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_trigger, submessage_arena);
    }
    set_has_event_trigger();
    trigger_.event_trigger_ = event_trigger;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.event_trigger)
}
void CloudFunction::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
}
void CloudFunction::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudFunction::kNameFieldNumber;
const int CloudFunction::kSourceArchiveUrlFieldNumber;
const int CloudFunction::kSourceRepositoryFieldNumber;
const int CloudFunction::kHttpsTriggerFieldNumber;
const int CloudFunction::kEventTriggerFieldNumber;
const int CloudFunction::kStatusFieldNumber;
const int CloudFunction::kLatestOperationFieldNumber;
const int CloudFunction::kEntryPointFieldNumber;
const int CloudFunction::kTimeoutFieldNumber;
const int CloudFunction::kAvailableMemoryMbFieldNumber;
const int CloudFunction::kServiceAccountFieldNumber;
const int CloudFunction::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudFunction::CloudFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCloudFunction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CloudFunction)
}
CloudFunction::CloudFunction(const CloudFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  latest_operation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.latest_operation().size() > 0) {
    latest_operation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_operation_);
  }
  entry_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entry_point().size() > 0) {
    entry_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_point_);
  }
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_account().size() > 0) {
    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  if (from.has_timeout()) {
    timeout_ = new ::google::protobuf::Duration(*from.timeout_);
  } else {
    timeout_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&available_memory_mb_) -
    reinterpret_cast<char*>(&status_)) + sizeof(available_memory_mb_));
  clear_has_source_code();
  switch (from.source_code_case()) {
    case kSourceArchiveUrl: {
      set_source_archive_url(from.source_archive_url());
      break;
    }
    case kSourceRepository: {
      mutable_source_repository()->::google::cloud::functions::v1beta2::SourceRepository::MergeFrom(from.source_repository());
      break;
    }
    case SOURCE_CODE_NOT_SET: {
      break;
    }
  }
  clear_has_trigger();
  switch (from.trigger_case()) {
    case kHttpsTrigger: {
      mutable_https_trigger()->::google::cloud::functions::v1beta2::HTTPSTrigger::MergeFrom(from.https_trigger());
      break;
    }
    case kEventTrigger: {
      mutable_event_trigger()->::google::cloud::functions::v1beta2::EventTrigger::MergeFrom(from.event_trigger());
      break;
    }
    case TRIGGER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CloudFunction)
}

void CloudFunction::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_operation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_memory_mb_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(available_memory_mb_));
  clear_has_source_code();
  clear_has_trigger();
  _cached_size_ = 0;
}

CloudFunction::~CloudFunction() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CloudFunction)
  SharedDtor();
}

void CloudFunction::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_operation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timeout_;
  if (this != internal_default_instance()) delete update_time_;
  if (has_source_code()) {
    clear_source_code();
  }
  if (has_trigger()) {
    clear_trigger();
  }
}

void CloudFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloudFunction::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloudFunction& CloudFunction::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCloudFunction();
  return *internal_default_instance();
}

CloudFunction* CloudFunction::New(::google::protobuf::Arena* arena) const {
  CloudFunction* n = new CloudFunction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloudFunction::clear_source_code() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.functions.v1beta2.CloudFunction)
  switch (source_code_case()) {
    case kSourceArchiveUrl: {
      source_code_.source_archive_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSourceRepository: {
      delete source_code_.source_repository_;
      break;
    }
    case SOURCE_CODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_CODE_NOT_SET;
}

void CloudFunction::clear_trigger() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.functions.v1beta2.CloudFunction)
  switch (trigger_case()) {
    case kHttpsTrigger: {
      delete trigger_.https_trigger_;
      break;
    }
    case kEventTrigger: {
      delete trigger_.event_trigger_;
      break;
    }
    case TRIGGER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = TRIGGER_NOT_SET;
}


void CloudFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CloudFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_operation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_memory_mb_) -
      reinterpret_cast<char*>(&status_)) + sizeof(available_memory_mb_));
  clear_source_code();
  clear_trigger();
  _internal_metadata_.Clear();
}

bool CloudFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CloudFunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_repository()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_https_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::cloud::functions::v1beta2::CloudFunctionStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string latest_operation = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latest_operation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latest_operation().data(), static_cast<int>(this->latest_operation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.latest_operation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entry_point = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entry_point()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entry_point().data(), static_cast<int>(this->entry_point().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.entry_point"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration timeout = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 available_memory_mb = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &available_memory_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_account = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account().data(), static_cast<int>(this->service_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.service_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_archive_url = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_archive_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_archive_url().data(), static_cast<int>(this->source_archive_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.source_archive_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CloudFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CloudFunction)
  return false;
#undef DO_
}

void CloudFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CloudFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
  if (has_source_repository()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *source_code_.source_repository_, output);
  }

  // .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
  if (has_https_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *trigger_.https_trigger_, output);
  }

  // .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // string latest_operation = 8;
  if (this->latest_operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_operation().data(), static_cast<int>(this->latest_operation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.latest_operation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->latest_operation(), output);
  }

  // string entry_point = 9;
  if (this->entry_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_point().data(), static_cast<int>(this->entry_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.entry_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->entry_point(), output);
  }

  // .google.protobuf.Duration timeout = 10;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->timeout_, output);
  }

  // int32 available_memory_mb = 11;
  if (this->available_memory_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->available_memory_mb(), output);
  }

  // .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
  if (has_event_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *trigger_.event_trigger_, output);
  }

  // string service_account = 13;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.service_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->service_account(), output);
  }

  // string source_archive_url = 14;
  if (has_source_archive_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_archive_url().data(), static_cast<int>(this->source_archive_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.source_archive_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->source_archive_url(), output);
  }

  // .google.protobuf.Timestamp update_time = 15;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->update_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CloudFunction)
}

::google::protobuf::uint8* CloudFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CloudFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
  if (has_source_repository()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *source_code_.source_repository_, deterministic, target);
  }

  // .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
  if (has_https_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *trigger_.https_trigger_, deterministic, target);
  }

  // .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // string latest_operation = 8;
  if (this->latest_operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_operation().data(), static_cast<int>(this->latest_operation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.latest_operation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->latest_operation(), target);
  }

  // string entry_point = 9;
  if (this->entry_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_point().data(), static_cast<int>(this->entry_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.entry_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entry_point(), target);
  }

  // .google.protobuf.Duration timeout = 10;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->timeout_, deterministic, target);
  }

  // int32 available_memory_mb = 11;
  if (this->available_memory_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->available_memory_mb(), target);
  }

  // .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
  if (has_event_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *trigger_.event_trigger_, deterministic, target);
  }

  // string service_account = 13;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.service_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->service_account(), target);
  }

  // string source_archive_url = 14;
  if (has_source_archive_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_archive_url().data(), static_cast<int>(this->source_archive_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.source_archive_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->source_archive_url(), target);
  }

  // .google.protobuf.Timestamp update_time = 15;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->update_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CloudFunction)
  return target;
}

size_t CloudFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CloudFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string latest_operation = 8;
  if (this->latest_operation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latest_operation());
  }

  // string entry_point = 9;
  if (this->entry_point().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entry_point());
  }

  // string service_account = 13;
  if (this->service_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account());
  }

  // .google.protobuf.Duration timeout = 10;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timeout_);
  }

  // .google.protobuf.Timestamp update_time = 15;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_time_);
  }

  // .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 available_memory_mb = 11;
  if (this->available_memory_mb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->available_memory_mb());
  }

  switch (source_code_case()) {
    // string source_archive_url = 14;
    case kSourceArchiveUrl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_archive_url());
      break;
    }
    // .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
    case kSourceRepository: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_code_.source_repository_);
      break;
    }
    case SOURCE_CODE_NOT_SET: {
      break;
    }
  }
  switch (trigger_case()) {
    // .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
    case kHttpsTrigger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *trigger_.https_trigger_);
      break;
    }
    // .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
    case kEventTrigger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *trigger_.event_trigger_);
      break;
    }
    case TRIGGER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloudFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CloudFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CloudFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CloudFunction)
    MergeFrom(*source);
  }
}

void CloudFunction::MergeFrom(const CloudFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CloudFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.latest_operation().size() > 0) {

    latest_operation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_operation_);
  }
  if (from.entry_point().size() > 0) {

    entry_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_point_);
  }
  if (from.service_account().size() > 0) {

    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.available_memory_mb() != 0) {
    set_available_memory_mb(from.available_memory_mb());
  }
  switch (from.source_code_case()) {
    case kSourceArchiveUrl: {
      set_source_archive_url(from.source_archive_url());
      break;
    }
    case kSourceRepository: {
      mutable_source_repository()->::google::cloud::functions::v1beta2::SourceRepository::MergeFrom(from.source_repository());
      break;
    }
    case SOURCE_CODE_NOT_SET: {
      break;
    }
  }
  switch (from.trigger_case()) {
    case kHttpsTrigger: {
      mutable_https_trigger()->::google::cloud::functions::v1beta2::HTTPSTrigger::MergeFrom(from.https_trigger());
      break;
    }
    case kEventTrigger: {
      mutable_event_trigger()->::google::cloud::functions::v1beta2::EventTrigger::MergeFrom(from.event_trigger());
      break;
    }
    case TRIGGER_NOT_SET: {
      break;
    }
  }
}

void CloudFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CloudFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudFunction::CopyFrom(const CloudFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CloudFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudFunction::IsInitialized() const {
  return true;
}

void CloudFunction::Swap(CloudFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudFunction::InternalSwap(CloudFunction* other) {
  using std::swap;
  name_.Swap(&other->name_);
  latest_operation_.Swap(&other->latest_operation_);
  entry_point_.Swap(&other->entry_point_);
  service_account_.Swap(&other->service_account_);
  swap(timeout_, other->timeout_);
  swap(update_time_, other->update_time_);
  swap(status_, other->status_);
  swap(available_memory_mb_, other->available_memory_mb_);
  swap(source_code_, other->source_code_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(trigger_, other->trigger_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloudFunction::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HTTPSTrigger::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPSTrigger::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPSTrigger::HTTPSTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsHTTPSTrigger();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.HTTPSTrigger)
}
HTTPSTrigger::HTTPSTrigger(const HTTPSTrigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.HTTPSTrigger)
}

void HTTPSTrigger::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HTTPSTrigger::~HTTPSTrigger() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.HTTPSTrigger)
  SharedDtor();
}

void HTTPSTrigger::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HTTPSTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HTTPSTrigger::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HTTPSTrigger& HTTPSTrigger::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsHTTPSTrigger();
  return *internal_default_instance();
}

HTTPSTrigger* HTTPSTrigger::New(::google::protobuf::Arena* arena) const {
  HTTPSTrigger* n = new HTTPSTrigger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HTTPSTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HTTPSTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.HTTPSTrigger.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.HTTPSTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.HTTPSTrigger)
  return false;
#undef DO_
}

void HTTPSTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.HTTPSTrigger.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.HTTPSTrigger)
}

::google::protobuf::uint8* HTTPSTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.HTTPSTrigger.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.HTTPSTrigger)
  return target;
}

size_t HTTPSTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HTTPSTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPSTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPSTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.HTTPSTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.HTTPSTrigger)
    MergeFrom(*source);
  }
}

void HTTPSTrigger::MergeFrom(const HTTPSTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void HTTPSTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTTPSTrigger::CopyFrom(const HTTPSTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTTPSTrigger::IsInitialized() const {
  return true;
}

void HTTPSTrigger::Swap(HTTPSTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTTPSTrigger::InternalSwap(HTTPSTrigger* other) {
  using std::swap;
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HTTPSTrigger::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventTrigger::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventTrigger::kEventTypeFieldNumber;
const int EventTrigger::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventTrigger::EventTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsEventTrigger();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.EventTrigger)
}
EventTrigger::EventTrigger(const EventTrigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_type().size() > 0) {
    event_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_type_);
  }
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource().size() > 0) {
    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.EventTrigger)
}

void EventTrigger::SharedCtor() {
  event_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EventTrigger::~EventTrigger() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.EventTrigger)
  SharedDtor();
}

void EventTrigger::SharedDtor() {
  event_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventTrigger::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventTrigger& EventTrigger::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsEventTrigger();
  return *internal_default_instance();
}

EventTrigger* EventTrigger::New(::google::protobuf::Arena* arena) const {
  EventTrigger* n = new EventTrigger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.EventTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EventTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.EventTrigger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_type().data(), static_cast<int>(this->event_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.EventTrigger.event_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource().data(), static_cast<int>(this->resource().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.EventTrigger.resource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.EventTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.EventTrigger)
  return false;
#undef DO_
}

void EventTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.EventTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_type = 1;
  if (this->event_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_type().data(), static_cast<int>(this->event_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.event_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_type(), output);
  }

  // string resource = 2;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.resource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resource(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.EventTrigger)
}

::google::protobuf::uint8* EventTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.EventTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_type = 1;
  if (this->event_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_type().data(), static_cast<int>(this->event_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.event_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_type(), target);
  }

  // string resource = 2;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.resource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resource(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.EventTrigger)
  return target;
}

size_t EventTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.EventTrigger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string event_type = 1;
  if (this->event_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_type());
  }

  // string resource = 2;
  if (this->resource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.EventTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.EventTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.EventTrigger)
    MergeFrom(*source);
  }
}

void EventTrigger::MergeFrom(const EventTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.EventTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_type().size() > 0) {

    event_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_type_);
  }
  if (from.resource().size() > 0) {

    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
}

void EventTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.EventTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTrigger::CopyFrom(const EventTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.EventTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTrigger::IsInitialized() const {
  return true;
}

void EventTrigger::Swap(EventTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventTrigger::InternalSwap(EventTrigger* other) {
  using std::swap;
  event_type_.Swap(&other->event_type_);
  resource_.Swap(&other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventTrigger::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SourceRepository::InitAsDefaultInstance() {
  ::google::cloud::functions::v1beta2::_SourceRepository_default_instance_.branch_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::functions::v1beta2::_SourceRepository_default_instance_.tag_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::functions::v1beta2::_SourceRepository_default_instance_.revision_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceRepository::kRepositoryUrlFieldNumber;
const int SourceRepository::kSourcePathFieldNumber;
const int SourceRepository::kBranchFieldNumber;
const int SourceRepository::kTagFieldNumber;
const int SourceRepository::kRevisionFieldNumber;
const int SourceRepository::kDeployedRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceRepository::SourceRepository()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsSourceRepository();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.SourceRepository)
}
SourceRepository::SourceRepository(const SourceRepository& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  repository_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repository_url().size() > 0) {
    repository_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_url_);
  }
  source_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_path().size() > 0) {
    source_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_path_);
  }
  deployed_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deployed_revision().size() > 0) {
    deployed_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deployed_revision_);
  }
  clear_has_version();
  switch (from.version_case()) {
    case kBranch: {
      set_branch(from.branch());
      break;
    }
    case kTag: {
      set_tag(from.tag());
      break;
    }
    case kRevision: {
      set_revision(from.revision());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.SourceRepository)
}

void SourceRepository::SharedCtor() {
  repository_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deployed_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
  _cached_size_ = 0;
}

SourceRepository::~SourceRepository() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.SourceRepository)
  SharedDtor();
}

void SourceRepository::SharedDtor() {
  repository_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deployed_revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_version()) {
    clear_version();
  }
}

void SourceRepository::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceRepository::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourceRepository& SourceRepository::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsSourceRepository();
  return *internal_default_instance();
}

SourceRepository* SourceRepository::New(::google::protobuf::Arena* arena) const {
  SourceRepository* n = new SourceRepository;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceRepository::clear_version() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.functions.v1beta2.SourceRepository)
  switch (version_case()) {
    case kBranch: {
      version_.branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTag: {
      version_.tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRevision: {
      version_.revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VERSION_NOT_SET;
}


void SourceRepository::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.SourceRepository)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repository_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deployed_revision_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_version();
  _internal_metadata_.Clear();
}

bool SourceRepository::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.SourceRepository)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string repository_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repository_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repository_url().data(), static_cast<int>(this->repository_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.repository_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_path().data(), static_cast<int>(this->source_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.source_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch().data(), static_cast<int>(this->branch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.branch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string revision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revision()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->revision().data(), static_cast<int>(this->revision().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.revision"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deployed_revision = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deployed_revision()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deployed_revision().data(), static_cast<int>(this->deployed_revision().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.deployed_revision"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.SourceRepository)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.SourceRepository)
  return false;
#undef DO_
}

void SourceRepository::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.SourceRepository)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_url = 1;
  if (this->repository_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_url().data(), static_cast<int>(this->repository_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.repository_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->repository_url(), output);
  }

  // string source_path = 2;
  if (this->source_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_path().data(), static_cast<int>(this->source_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.source_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_path(), output);
  }

  // string branch = 3;
  if (has_branch()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->branch(), output);
  }

  // string tag = 4;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tag(), output);
  }

  // string revision = 5;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->revision(), output);
  }

  // string deployed_revision = 6;
  if (this->deployed_revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deployed_revision().data(), static_cast<int>(this->deployed_revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.deployed_revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->deployed_revision(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.SourceRepository)
}

::google::protobuf::uint8* SourceRepository::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.SourceRepository)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_url = 1;
  if (this->repository_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_url().data(), static_cast<int>(this->repository_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.repository_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->repository_url(), target);
  }

  // string source_path = 2;
  if (this->source_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_path().data(), static_cast<int>(this->source_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.source_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_path(), target);
  }

  // string branch = 3;
  if (has_branch()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->branch(), target);
  }

  // string tag = 4;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tag(), target);
  }

  // string revision = 5;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->revision(), target);
  }

  // string deployed_revision = 6;
  if (this->deployed_revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deployed_revision().data(), static_cast<int>(this->deployed_revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.deployed_revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->deployed_revision(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.SourceRepository)
  return target;
}

size_t SourceRepository::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.SourceRepository)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string repository_url = 1;
  if (this->repository_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repository_url());
  }

  // string source_path = 2;
  if (this->source_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_path());
  }

  // string deployed_revision = 6;
  if (this->deployed_revision().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deployed_revision());
  }

  switch (version_case()) {
    // string branch = 3;
    case kBranch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch());
      break;
    }
    // string tag = 4;
    case kTag: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag());
      break;
    }
    // string revision = 5;
    case kRevision: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revision());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceRepository::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.SourceRepository)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceRepository* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceRepository>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.SourceRepository)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.SourceRepository)
    MergeFrom(*source);
  }
}

void SourceRepository::MergeFrom(const SourceRepository& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.SourceRepository)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.repository_url().size() > 0) {

    repository_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_url_);
  }
  if (from.source_path().size() > 0) {

    source_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_path_);
  }
  if (from.deployed_revision().size() > 0) {

    deployed_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deployed_revision_);
  }
  switch (from.version_case()) {
    case kBranch: {
      set_branch(from.branch());
      break;
    }
    case kTag: {
      set_tag(from.tag());
      break;
    }
    case kRevision: {
      set_revision(from.revision());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
}

void SourceRepository::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.SourceRepository)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceRepository::CopyFrom(const SourceRepository& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.SourceRepository)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceRepository::IsInitialized() const {
  return true;
}

void SourceRepository::Swap(SourceRepository* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceRepository::InternalSwap(SourceRepository* other) {
  using std::swap;
  repository_url_.Swap(&other->repository_url_);
  source_path_.Swap(&other->source_path_);
  deployed_revision_.Swap(&other->deployed_revision_);
  swap(version_, other->version_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceRepository::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFunctionRequest::InitAsDefaultInstance() {
  ::google::cloud::functions::v1beta2::_CreateFunctionRequest_default_instance_._instance.get_mutable()->function_ = const_cast< ::google::cloud::functions::v1beta2::CloudFunction*>(
      ::google::cloud::functions::v1beta2::CloudFunction::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionRequest::kLocationFieldNumber;
const int CreateFunctionRequest::kFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionRequest::CreateFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCreateFunctionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CreateFunctionRequest)
}
CreateFunctionRequest::CreateFunctionRequest(const CreateFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.has_function()) {
    function_ = new ::google::cloud::functions::v1beta2::CloudFunction(*from.function_);
  } else {
    function_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CreateFunctionRequest)
}

void CreateFunctionRequest::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_ = NULL;
  _cached_size_ = 0;
}

CreateFunctionRequest::~CreateFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CreateFunctionRequest)
  SharedDtor();
}

void CreateFunctionRequest::SharedDtor() {
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete function_;
}

void CreateFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateFunctionRequest::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFunctionRequest& CreateFunctionRequest::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCreateFunctionRequest();
  return *internal_default_instance();
}

CreateFunctionRequest* CreateFunctionRequest::New(::google::protobuf::Arena* arena) const {
  CreateFunctionRequest* n = new CreateFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && function_ != NULL) {
    delete function_;
  }
  function_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CreateFunctionRequest.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.functions.v1beta2.CloudFunction function = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CreateFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CreateFunctionRequest)
  return false;
#undef DO_
}

void CreateFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CreateFunctionRequest.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->location(), output);
  }

  // .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->function_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CreateFunctionRequest)
}

::google::protobuf::uint8* CreateFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CreateFunctionRequest.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->location(), target);
  }

  // .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->function_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CreateFunctionRequest)
  return target;
}

size_t CreateFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->function_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CreateFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CreateFunctionRequest)
    MergeFrom(*source);
  }
}

void CreateFunctionRequest::MergeFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.has_function()) {
    mutable_function()->::google::cloud::functions::v1beta2::CloudFunction::MergeFrom(from.function());
  }
}

void CreateFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionRequest::CopyFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFunctionRequest::IsInitialized() const {
  return true;
}

void CreateFunctionRequest::Swap(CreateFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionRequest::InternalSwap(CreateFunctionRequest* other) {
  using std::swap;
  location_.Swap(&other->location_);
  swap(function_, other->function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateFunctionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateFunctionRequest::InitAsDefaultInstance() {
  ::google::cloud::functions::v1beta2::_UpdateFunctionRequest_default_instance_._instance.get_mutable()->function_ = const_cast< ::google::cloud::functions::v1beta2::CloudFunction*>(
      ::google::cloud::functions::v1beta2::CloudFunction::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateFunctionRequest::kNameFieldNumber;
const int UpdateFunctionRequest::kFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateFunctionRequest::UpdateFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsUpdateFunctionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.UpdateFunctionRequest)
}
UpdateFunctionRequest::UpdateFunctionRequest(const UpdateFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_function()) {
    function_ = new ::google::cloud::functions::v1beta2::CloudFunction(*from.function_);
  } else {
    function_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.UpdateFunctionRequest)
}

void UpdateFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_ = NULL;
  _cached_size_ = 0;
}

UpdateFunctionRequest::~UpdateFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  SharedDtor();
}

void UpdateFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete function_;
}

void UpdateFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFunctionRequest::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateFunctionRequest& UpdateFunctionRequest::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsUpdateFunctionRequest();
  return *internal_default_instance();
}

UpdateFunctionRequest* UpdateFunctionRequest::New(::google::protobuf::Arena* arena) const {
  UpdateFunctionRequest* n = new UpdateFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && function_ != NULL) {
    delete function_;
  }
  function_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.UpdateFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.functions.v1beta2.CloudFunction function = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  return false;
#undef DO_
}

void UpdateFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.UpdateFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->function_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.UpdateFunctionRequest)
}

::google::protobuf::uint8* UpdateFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.UpdateFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->function_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  return target;
}

size_t UpdateFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->function_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.UpdateFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.UpdateFunctionRequest)
    MergeFrom(*source);
  }
}

void UpdateFunctionRequest::MergeFrom(const UpdateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_function()) {
    mutable_function()->::google::cloud::functions::v1beta2::CloudFunction::MergeFrom(from.function());
  }
}

void UpdateFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFunctionRequest::CopyFrom(const UpdateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFunctionRequest::IsInitialized() const {
  return true;
}

void UpdateFunctionRequest::Swap(UpdateFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateFunctionRequest::InternalSwap(UpdateFunctionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(function_, other->function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateFunctionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFunctionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFunctionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFunctionRequest::GetFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsGetFunctionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.GetFunctionRequest)
}
GetFunctionRequest::GetFunctionRequest(const GetFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.GetFunctionRequest)
}

void GetFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetFunctionRequest::~GetFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.GetFunctionRequest)
  SharedDtor();
}

void GetFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFunctionRequest::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFunctionRequest& GetFunctionRequest::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsGetFunctionRequest();
  return *internal_default_instance();
}

GetFunctionRequest* GetFunctionRequest::New(::google::protobuf::Arena* arena) const {
  GetFunctionRequest* n = new GetFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.GetFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.GetFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.GetFunctionRequest)
  return false;
#undef DO_
}

void GetFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.GetFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.GetFunctionRequest)
}

::google::protobuf::uint8* GetFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.GetFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.GetFunctionRequest)
  return target;
}

size_t GetFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.GetFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.GetFunctionRequest)
    MergeFrom(*source);
  }
}

void GetFunctionRequest::MergeFrom(const GetFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFunctionRequest::CopyFrom(const GetFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFunctionRequest::IsInitialized() const {
  return true;
}

void GetFunctionRequest::Swap(GetFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFunctionRequest::InternalSwap(GetFunctionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFunctionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFunctionsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFunctionsRequest::kLocationFieldNumber;
const int ListFunctionsRequest::kPageSizeFieldNumber;
const int ListFunctionsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFunctionsRequest::ListFunctionsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsListFunctionsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.ListFunctionsRequest)
}
ListFunctionsRequest::ListFunctionsRequest(const ListFunctionsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.ListFunctionsRequest)
}

void ListFunctionsRequest::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListFunctionsRequest::~ListFunctionsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.ListFunctionsRequest)
  SharedDtor();
}

void ListFunctionsRequest::SharedDtor() {
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListFunctionsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListFunctionsRequest::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFunctionsRequest& ListFunctionsRequest::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsListFunctionsRequest();
  return *internal_default_instance();
}

ListFunctionsRequest* ListFunctionsRequest::New(::google::protobuf::Arena* arena) const {
  ListFunctionsRequest* n = new ListFunctionsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListFunctionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListFunctionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.ListFunctionsRequest.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.ListFunctionsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.ListFunctionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.ListFunctionsRequest)
  return false;
#undef DO_
}

void ListFunctionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->location(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.ListFunctionsRequest)
}

::google::protobuf::uint8* ListFunctionsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->location(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.ListFunctionsRequest)
  return target;
}

size_t ListFunctionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListFunctionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFunctionsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFunctionsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.ListFunctionsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.ListFunctionsRequest)
    MergeFrom(*source);
  }
}

void ListFunctionsRequest::MergeFrom(const ListFunctionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListFunctionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFunctionsRequest::CopyFrom(const ListFunctionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFunctionsRequest::IsInitialized() const {
  return true;
}

void ListFunctionsRequest::Swap(ListFunctionsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFunctionsRequest::InternalSwap(ListFunctionsRequest* other) {
  using std::swap;
  location_.Swap(&other->location_);
  page_token_.Swap(&other->page_token_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListFunctionsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFunctionsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFunctionsResponse::kFunctionsFieldNumber;
const int ListFunctionsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFunctionsResponse::ListFunctionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsListFunctionsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.ListFunctionsResponse)
}
ListFunctionsResponse::ListFunctionsResponse(const ListFunctionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      functions_(from.functions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.ListFunctionsResponse)
}

void ListFunctionsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListFunctionsResponse::~ListFunctionsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.ListFunctionsResponse)
  SharedDtor();
}

void ListFunctionsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListFunctionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListFunctionsResponse::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFunctionsResponse& ListFunctionsResponse::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsListFunctionsResponse();
  return *internal_default_instance();
}

ListFunctionsResponse* ListFunctionsResponse::New(::google::protobuf::Arena* arena) const {
  ListFunctionsResponse* n = new ListFunctionsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListFunctionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  functions_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListFunctionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_functions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.ListFunctionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.ListFunctionsResponse)
  return false;
#undef DO_
}

void ListFunctionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->functions(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.ListFunctionsResponse)
}

::google::protobuf::uint8* ListFunctionsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->functions(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.ListFunctionsResponse)
  return target;
}

size_t ListFunctionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->functions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->functions(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListFunctionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFunctionsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFunctionsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.ListFunctionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.ListFunctionsResponse)
    MergeFrom(*source);
  }
}

void ListFunctionsResponse::MergeFrom(const ListFunctionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  functions_.MergeFrom(from.functions_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListFunctionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFunctionsResponse::CopyFrom(const ListFunctionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFunctionsResponse::IsInitialized() const {
  return true;
}

void ListFunctionsResponse::Swap(ListFunctionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFunctionsResponse::InternalSwap(ListFunctionsResponse* other) {
  using std::swap;
  functions_.InternalSwap(&other->functions_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListFunctionsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteFunctionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFunctionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFunctionRequest::DeleteFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsDeleteFunctionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.DeleteFunctionRequest)
}
DeleteFunctionRequest::DeleteFunctionRequest(const DeleteFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.DeleteFunctionRequest)
}

void DeleteFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteFunctionRequest::~DeleteFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  SharedDtor();
}

void DeleteFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFunctionRequest::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFunctionRequest& DeleteFunctionRequest::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsDeleteFunctionRequest();
  return *internal_default_instance();
}

DeleteFunctionRequest* DeleteFunctionRequest::New(::google::protobuf::Arena* arena) const {
  DeleteFunctionRequest* n = new DeleteFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.DeleteFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  return false;
#undef DO_
}

void DeleteFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.DeleteFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.DeleteFunctionRequest)
}

::google::protobuf::uint8* DeleteFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.DeleteFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  return target;
}

size_t DeleteFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.DeleteFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.DeleteFunctionRequest)
    MergeFrom(*source);
  }
}

void DeleteFunctionRequest::MergeFrom(const DeleteFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFunctionRequest::CopyFrom(const DeleteFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFunctionRequest::IsInitialized() const {
  return true;
}

void DeleteFunctionRequest::Swap(DeleteFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFunctionRequest::InternalSwap(DeleteFunctionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFunctionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallFunctionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallFunctionRequest::kNameFieldNumber;
const int CallFunctionRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallFunctionRequest::CallFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCallFunctionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CallFunctionRequest)
}
CallFunctionRequest::CallFunctionRequest(const CallFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CallFunctionRequest)
}

void CallFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CallFunctionRequest::~CallFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CallFunctionRequest)
  SharedDtor();
}

void CallFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallFunctionRequest::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallFunctionRequest& CallFunctionRequest::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCallFunctionRequest();
  return *internal_default_instance();
}

CallFunctionRequest* CallFunctionRequest::New(::google::protobuf::Arena* arena) const {
  CallFunctionRequest* n = new CallFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CallFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionRequest.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CallFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CallFunctionRequest)
  return false;
#undef DO_
}

void CallFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CallFunctionRequest)
}

::google::protobuf::uint8* CallFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CallFunctionRequest)
  return target;
}

size_t CallFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CallFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CallFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CallFunctionRequest)
    MergeFrom(*source);
  }
}

void CallFunctionRequest::MergeFrom(const CallFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CallFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallFunctionRequest::CopyFrom(const CallFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallFunctionRequest::IsInitialized() const {
  return true;
}

void CallFunctionRequest::Swap(CallFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallFunctionRequest::InternalSwap(CallFunctionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallFunctionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallFunctionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallFunctionResponse::kExecutionIdFieldNumber;
const int CallFunctionResponse::kResultFieldNumber;
const int CallFunctionResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallFunctionResponse::CallFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCallFunctionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CallFunctionResponse)
}
CallFunctionResponse::CallFunctionResponse(const CallFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  execution_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.execution_id().size() > 0) {
    execution_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_id_);
  }
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CallFunctionResponse)
}

void CallFunctionResponse::SharedCtor() {
  execution_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CallFunctionResponse::~CallFunctionResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CallFunctionResponse)
  SharedDtor();
}

void CallFunctionResponse::SharedDtor() {
  execution_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallFunctionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallFunctionResponse::descriptor() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallFunctionResponse& CallFunctionResponse::default_instance() {
  ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::InitDefaultsCallFunctionResponse();
  return *internal_default_instance();
}

CallFunctionResponse* CallFunctionResponse::New(::google::protobuf::Arena* arena) const {
  CallFunctionResponse* n = new CallFunctionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  execution_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CallFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string execution_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execution_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execution_id().data(), static_cast<int>(this->execution_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionResponse.execution_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionResponse.result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CallFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CallFunctionResponse)
  return false;
#undef DO_
}

void CallFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string execution_id = 1;
  if (this->execution_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_id().data(), static_cast<int>(this->execution_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.execution_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->execution_id(), output);
  }

  // string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CallFunctionResponse)
}

::google::protobuf::uint8* CallFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string execution_id = 1;
  if (this->execution_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_id().data(), static_cast<int>(this->execution_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.execution_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->execution_id(), target);
  }

  // string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CallFunctionResponse)
  return target;
}

size_t CallFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string execution_id = 1;
  if (this->execution_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execution_id());
  }

  // string result = 2;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CallFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CallFunctionResponse)
    MergeFrom(*source);
  }
}

void CallFunctionResponse::MergeFrom(const CallFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.execution_id().size() > 0) {

    execution_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_id_);
  }
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void CallFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallFunctionResponse::CopyFrom(const CallFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallFunctionResponse::IsInitialized() const {
  return true;
}

void CallFunctionResponse::Swap(CallFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallFunctionResponse::InternalSwap(CallFunctionResponse* other) {
  using std::swap;
  execution_id_.Swap(&other->execution_id_);
  result_.Swap(&other->result_);
  error_.Swap(&other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallFunctionResponse::GetMetadata() const {
  protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta2
}  // namespace functions
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
