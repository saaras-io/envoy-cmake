// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/readgroup.proto

#include "google/genomics/v1/readgroup.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace genomics {
namespace v1 {
class ReadGroup_ExperimentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup_Experiment>
      _instance;
} _ReadGroup_Experiment_default_instance_;
class ReadGroup_ProgramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup_Program>
      _instance;
} _ReadGroup_Program_default_instance_;
class ReadGroup_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup_InfoEntry_DoNotUse>
      _instance;
} _ReadGroup_InfoEntry_DoNotUse_default_instance_;
class ReadGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup>
      _instance;
} _ReadGroup_default_instance_;
}  // namespace v1
}  // namespace genomics
}  // namespace google
namespace protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto {
void InitDefaultsReadGroup_ExperimentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1::_ReadGroup_Experiment_default_instance_;
    new (ptr) ::google::genomics::v1::ReadGroup_Experiment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1::ReadGroup_Experiment::InitAsDefaultInstance();
}

void InitDefaultsReadGroup_Experiment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadGroup_ExperimentImpl);
}

void InitDefaultsReadGroup_ProgramImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::genomics::v1::_ReadGroup_Program_default_instance_;
    new (ptr) ::google::genomics::v1::ReadGroup_Program();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1::ReadGroup_Program::InitAsDefaultInstance();
}

void InitDefaultsReadGroup_Program() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadGroup_ProgramImpl);
}

void InitDefaultsReadGroup_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  {
    void* ptr = &::google::genomics::v1::_ReadGroup_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::google::genomics::v1::ReadGroup_InfoEntry_DoNotUse();
  }
  ::google::genomics::v1::ReadGroup_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsReadGroup_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadGroup_InfoEntry_DoNotUseImpl);
}

void InitDefaultsReadGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Experiment();
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Program();
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_InfoEntry_DoNotUse();
  {
    void* ptr = &::google::genomics::v1::_ReadGroup_default_instance_;
    new (ptr) ::google::genomics::v1::ReadGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::genomics::v1::ReadGroup::InitAsDefaultInstance();
}

void InitDefaultsReadGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadGroupImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Experiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Experiment, library_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Experiment, platform_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Experiment, sequencing_center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Experiment, instrument_model_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Program, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Program, command_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Program, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Program, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Program, prev_program_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_Program, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, dataset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, sample_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, experiment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, predicted_insert_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, programs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, reference_set_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::genomics::v1::ReadGroup, info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::genomics::v1::ReadGroup_Experiment)},
  { 9, -1, sizeof(::google::genomics::v1::ReadGroup_Program)},
  { 19, 26, sizeof(::google::genomics::v1::ReadGroup_InfoEntry_DoNotUse)},
  { 28, -1, sizeof(::google::genomics::v1::ReadGroup)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1::_ReadGroup_Experiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1::_ReadGroup_Program_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1::_ReadGroup_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::genomics::v1::_ReadGroup_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/genomics/v1/readgroup.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"google/genomics/v1/readgroup.proto\022\022go"
      "ogle.genomics.v1\032\034google/api/annotations"
      ".proto\032\034google/protobuf/struct.proto\"\344\004\n"
      "\tReadGroup\022\n\n\002id\030\001 \001(\t\022\022\n\ndataset_id\030\002 \001"
      "(\t\022\014\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\021\n"
      "\tsample_id\030\005 \001(\t\022<\n\nexperiment\030\006 \001(\0132(.g"
      "oogle.genomics.v1.ReadGroup.Experiment\022\035"
      "\n\025predicted_insert_size\030\007 \001(\005\0227\n\010program"
      "s\030\n \003(\0132%.google.genomics.v1.ReadGroup.P"
      "rogram\022\030\n\020reference_set_id\030\013 \001(\t\0225\n\004info"
      "\030\014 \003(\0132\'.google.genomics.v1.ReadGroup.In"
      "foEntry\032l\n\nExperiment\022\022\n\nlibrary_id\030\001 \001("
      "\t\022\025\n\rplatform_unit\030\002 \001(\t\022\031\n\021sequencing_c"
      "enter\030\003 \001(\t\022\030\n\020instrument_model\030\004 \001(\t\032c\n"
      "\007Program\022\024\n\014command_line\030\001 \001(\t\022\n\n\002id\030\002 \001"
      "(\t\022\014\n\004name\030\003 \001(\t\022\027\n\017prev_program_id\030\004 \001("
      "\t\022\017\n\007version\030\005 \001(\t\032G\n\tInfoEntry\022\013\n\003key\030\001"
      " \001(\t\022)\n\005value\030\002 \001(\0132\032.google.protobuf.Li"
      "stValue:\0028\001Bi\n\026com.google.genomics.v1B\016R"
      "eadGroupProtoP\001Z:google.golang.org/genpr"
      "oto/googleapis/genomics/v1;genomics\370\001\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 846);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/genomics/v1/readgroup.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto
namespace google {
namespace genomics {
namespace v1 {

// ===================================================================

void ReadGroup_Experiment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadGroup_Experiment::kLibraryIdFieldNumber;
const int ReadGroup_Experiment::kPlatformUnitFieldNumber;
const int ReadGroup_Experiment::kSequencingCenterFieldNumber;
const int ReadGroup_Experiment::kInstrumentModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadGroup_Experiment::ReadGroup_Experiment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Experiment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.ReadGroup.Experiment)
}
ReadGroup_Experiment::ReadGroup_Experiment(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Experiment();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.ReadGroup.Experiment)
}
ReadGroup_Experiment::ReadGroup_Experiment(const ReadGroup_Experiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  library_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.library_id().size() > 0) {
    library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.library_id(),
      GetArenaNoVirtual());
  }
  platform_unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform_unit().size() > 0) {
    platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_unit(),
      GetArenaNoVirtual());
  }
  sequencing_center_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequencing_center().size() > 0) {
    sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequencing_center(),
      GetArenaNoVirtual());
  }
  instrument_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_model().size() > 0) {
    instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_model(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.ReadGroup.Experiment)
}

void ReadGroup_Experiment::SharedCtor() {
  library_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequencing_center_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadGroup_Experiment::~ReadGroup_Experiment() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.ReadGroup.Experiment)
  SharedDtor();
}

void ReadGroup_Experiment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  library_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequencing_center_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadGroup_Experiment::ArenaDtor(void* object) {
  ReadGroup_Experiment* _this = reinterpret_cast< ReadGroup_Experiment* >(object);
  (void)_this;
}
void ReadGroup_Experiment::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadGroup_Experiment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadGroup_Experiment::descriptor() {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadGroup_Experiment& ReadGroup_Experiment::default_instance() {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Experiment();
  return *internal_default_instance();
}

ReadGroup_Experiment* ReadGroup_Experiment::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReadGroup_Experiment>(arena);
}

void ReadGroup_Experiment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.ReadGroup.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  library_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  platform_unit_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sequencing_center_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  instrument_model_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ReadGroup_Experiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.ReadGroup.Experiment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string library_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_library_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->library_id().data(), static_cast<int>(this->library_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.library_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform_unit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform_unit().data(), static_cast<int>(this->platform_unit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.platform_unit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequencing_center = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequencing_center()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequencing_center().data(), static_cast<int>(this->sequencing_center().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.sequencing_center"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_model = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_model().data(), static_cast<int>(this->instrument_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.instrument_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.ReadGroup.Experiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.ReadGroup.Experiment)
  return false;
#undef DO_
}

void ReadGroup_Experiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.ReadGroup.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string library_id = 1;
  if (this->library_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->library_id().data(), static_cast<int>(this->library_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.library_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->library_id(), output);
  }

  // string platform_unit = 2;
  if (this->platform_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform_unit().data(), static_cast<int>(this->platform_unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.platform_unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platform_unit(), output);
  }

  // string sequencing_center = 3;
  if (this->sequencing_center().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequencing_center().data(), static_cast<int>(this->sequencing_center().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.sequencing_center");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sequencing_center(), output);
  }

  // string instrument_model = 4;
  if (this->instrument_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_model().data(), static_cast<int>(this->instrument_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.instrument_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->instrument_model(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1.ReadGroup.Experiment)
}

::google::protobuf::uint8* ReadGroup_Experiment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.ReadGroup.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string library_id = 1;
  if (this->library_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->library_id().data(), static_cast<int>(this->library_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.library_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->library_id(), target);
  }

  // string platform_unit = 2;
  if (this->platform_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform_unit().data(), static_cast<int>(this->platform_unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.platform_unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platform_unit(), target);
  }

  // string sequencing_center = 3;
  if (this->sequencing_center().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequencing_center().data(), static_cast<int>(this->sequencing_center().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.sequencing_center");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sequencing_center(), target);
  }

  // string instrument_model = 4;
  if (this->instrument_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_model().data(), static_cast<int>(this->instrument_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.instrument_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->instrument_model(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.ReadGroup.Experiment)
  return target;
}

size_t ReadGroup_Experiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.ReadGroup.Experiment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string library_id = 1;
  if (this->library_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->library_id());
  }

  // string platform_unit = 2;
  if (this->platform_unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform_unit());
  }

  // string sequencing_center = 3;
  if (this->sequencing_center().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequencing_center());
  }

  // string instrument_model = 4;
  if (this->instrument_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_model());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadGroup_Experiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.ReadGroup.Experiment)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadGroup_Experiment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadGroup_Experiment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.ReadGroup.Experiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.ReadGroup.Experiment)
    MergeFrom(*source);
  }
}

void ReadGroup_Experiment::MergeFrom(const ReadGroup_Experiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.ReadGroup.Experiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.library_id().size() > 0) {
    set_library_id(from.library_id());
  }
  if (from.platform_unit().size() > 0) {
    set_platform_unit(from.platform_unit());
  }
  if (from.sequencing_center().size() > 0) {
    set_sequencing_center(from.sequencing_center());
  }
  if (from.instrument_model().size() > 0) {
    set_instrument_model(from.instrument_model());
  }
}

void ReadGroup_Experiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.ReadGroup.Experiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadGroup_Experiment::CopyFrom(const ReadGroup_Experiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.ReadGroup.Experiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadGroup_Experiment::IsInitialized() const {
  return true;
}

void ReadGroup_Experiment::Swap(ReadGroup_Experiment* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadGroup_Experiment* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadGroup_Experiment::UnsafeArenaSwap(ReadGroup_Experiment* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadGroup_Experiment::InternalSwap(ReadGroup_Experiment* other) {
  using std::swap;
  library_id_.Swap(&other->library_id_);
  platform_unit_.Swap(&other->platform_unit_);
  sequencing_center_.Swap(&other->sequencing_center_);
  instrument_model_.Swap(&other->instrument_model_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadGroup_Experiment::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadGroup_Program::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadGroup_Program::kCommandLineFieldNumber;
const int ReadGroup_Program::kIdFieldNumber;
const int ReadGroup_Program::kNameFieldNumber;
const int ReadGroup_Program::kPrevProgramIdFieldNumber;
const int ReadGroup_Program::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadGroup_Program::ReadGroup_Program()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Program();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.ReadGroup.Program)
}
ReadGroup_Program::ReadGroup_Program(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Program();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.ReadGroup.Program)
}
ReadGroup_Program::ReadGroup_Program(const ReadGroup_Program& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_line().size() > 0) {
    command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line(),
      GetArenaNoVirtual());
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  prev_program_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prev_program_id().size() > 0) {
    prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_program_id(),
      GetArenaNoVirtual());
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.ReadGroup.Program)
}

void ReadGroup_Program::SharedCtor() {
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_program_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadGroup_Program::~ReadGroup_Program() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.ReadGroup.Program)
  SharedDtor();
}

void ReadGroup_Program::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  command_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_program_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadGroup_Program::ArenaDtor(void* object) {
  ReadGroup_Program* _this = reinterpret_cast< ReadGroup_Program* >(object);
  (void)_this;
}
void ReadGroup_Program::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadGroup_Program::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadGroup_Program::descriptor() {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadGroup_Program& ReadGroup_Program::default_instance() {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup_Program();
  return *internal_default_instance();
}

ReadGroup_Program* ReadGroup_Program::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReadGroup_Program>(arena);
}

void ReadGroup_Program::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.ReadGroup.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_line_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  prev_program_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ReadGroup_Program::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.ReadGroup.Program)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string command_line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command_line().data(), static_cast<int>(this->command_line().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.command_line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prev_program_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prev_program_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prev_program_id().data(), static_cast<int>(this->prev_program_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.prev_program_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.ReadGroup.Program)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.ReadGroup.Program)
  return false;
#undef DO_
}

void ReadGroup_Program::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.ReadGroup.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_line = 1;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.command_line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command_line(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string prev_program_id = 4;
  if (this->prev_program_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prev_program_id().data(), static_cast<int>(this->prev_program_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.prev_program_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->prev_program_id(), output);
  }

  // string version = 5;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1.ReadGroup.Program)
}

::google::protobuf::uint8* ReadGroup_Program::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.ReadGroup.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_line = 1;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.command_line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command_line(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string prev_program_id = 4;
  if (this->prev_program_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prev_program_id().data(), static_cast<int>(this->prev_program_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.prev_program_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->prev_program_id(), target);
  }

  // string version = 5;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.ReadGroup.Program)
  return target;
}

size_t ReadGroup_Program::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.ReadGroup.Program)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string command_line = 1;
  if (this->command_line().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command_line());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string prev_program_id = 4;
  if (this->prev_program_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prev_program_id());
  }

  // string version = 5;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadGroup_Program::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.ReadGroup.Program)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadGroup_Program* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadGroup_Program>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.ReadGroup.Program)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.ReadGroup.Program)
    MergeFrom(*source);
  }
}

void ReadGroup_Program::MergeFrom(const ReadGroup_Program& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.ReadGroup.Program)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command_line().size() > 0) {
    set_command_line(from.command_line());
  }
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.prev_program_id().size() > 0) {
    set_prev_program_id(from.prev_program_id());
  }
  if (from.version().size() > 0) {
    set_version(from.version());
  }
}

void ReadGroup_Program::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.ReadGroup.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadGroup_Program::CopyFrom(const ReadGroup_Program& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.ReadGroup.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadGroup_Program::IsInitialized() const {
  return true;
}

void ReadGroup_Program::Swap(ReadGroup_Program* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadGroup_Program* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadGroup_Program::UnsafeArenaSwap(ReadGroup_Program* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadGroup_Program::InternalSwap(ReadGroup_Program* other) {
  using std::swap;
  command_line_.Swap(&other->command_line_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  prev_program_id_.Swap(&other->prev_program_id_);
  version_.Swap(&other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadGroup_Program::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ReadGroup_InfoEntry_DoNotUse::ReadGroup_InfoEntry_DoNotUse() {}
ReadGroup_InfoEntry_DoNotUse::ReadGroup_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ReadGroup_InfoEntry_DoNotUse::MergeFrom(const ReadGroup_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ReadGroup_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[2];
}
void ReadGroup_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ReadGroup::InitAsDefaultInstance() {
  ::google::genomics::v1::_ReadGroup_default_instance_._instance.get_mutable()->experiment_ = const_cast< ::google::genomics::v1::ReadGroup_Experiment*>(
      ::google::genomics::v1::ReadGroup_Experiment::internal_default_instance());
}
void ReadGroup::_slow_mutable_experiment() {
  experiment_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1::ReadGroup_Experiment >(
      GetArenaNoVirtual());
}
void ReadGroup::unsafe_arena_set_allocated_experiment(
    ::google::genomics::v1::ReadGroup_Experiment* experiment) {
  if (GetArenaNoVirtual() == NULL) {
    delete experiment_;
  }
  experiment_ = experiment;
  if (experiment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.experiment)
}
void ReadGroup::clear_info() {
  info_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadGroup::kIdFieldNumber;
const int ReadGroup::kDatasetIdFieldNumber;
const int ReadGroup::kNameFieldNumber;
const int ReadGroup::kDescriptionFieldNumber;
const int ReadGroup::kSampleIdFieldNumber;
const int ReadGroup::kExperimentFieldNumber;
const int ReadGroup::kPredictedInsertSizeFieldNumber;
const int ReadGroup::kProgramsFieldNumber;
const int ReadGroup::kReferenceSetIdFieldNumber;
const int ReadGroup::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadGroup::ReadGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.ReadGroup)
}
ReadGroup::ReadGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  programs_(arena),
  info_(arena) {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.ReadGroup)
}
ReadGroup::ReadGroup(const ReadGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      programs_(from.programs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataset_id().size() > 0) {
    dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  sample_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sample_id().size() > 0) {
    sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sample_id(),
      GetArenaNoVirtual());
  }
  reference_set_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reference_set_id().size() > 0) {
    reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reference_set_id(),
      GetArenaNoVirtual());
  }
  if (from.has_experiment()) {
    experiment_ = new ::google::genomics::v1::ReadGroup_Experiment(*from.experiment_);
  } else {
    experiment_ = NULL;
  }
  predicted_insert_size_ = from.predicted_insert_size_;
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.ReadGroup)
}

void ReadGroup::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sample_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_set_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&experiment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&predicted_insert_size_) -
      reinterpret_cast<char*>(&experiment_)) + sizeof(predicted_insert_size_));
  _cached_size_ = 0;
}

ReadGroup::~ReadGroup() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.ReadGroup)
  SharedDtor();
}

void ReadGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sample_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_set_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete experiment_;
}

void ReadGroup::ArenaDtor(void* object) {
  ReadGroup* _this = reinterpret_cast< ReadGroup* >(object);
  (void)_this;
}
void ReadGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadGroup::descriptor() {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadGroup& ReadGroup::default_instance() {
  ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaultsReadGroup();
  return *internal_default_instance();
}

ReadGroup* ReadGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReadGroup>(arena);
}

void ReadGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.ReadGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  programs_.Clear();
  info_.Clear();
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  dataset_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sample_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && experiment_ != NULL) {
    delete experiment_;
  }
  experiment_ = NULL;
  predicted_insert_size_ = 0;
  _internal_metadata_.Clear();
}

bool ReadGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.ReadGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dataset_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataset_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.dataset_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sample_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sample_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sample_id().data(), static_cast<int>(this->sample_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.sample_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_experiment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 predicted_insert_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &predicted_insert_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_programs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reference_set_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference_set_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reference_set_id().data(), static_cast<int>(this->reference_set_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.reference_set_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.ListValue> info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          ReadGroup_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ReadGroup_InfoEntry_DoNotUse,
              ::std::string, ::google::protobuf::ListValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.InfoEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.ReadGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.ReadGroup)
  return false;
#undef DO_
}

void ReadGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.ReadGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.dataset_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dataset_id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // string sample_id = 5;
  if (this->sample_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sample_id().data(), static_cast<int>(this->sample_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.sample_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sample_id(), output);
  }

  // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
  if (this->has_experiment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->experiment_, output);
  }

  // int32 predicted_insert_size = 7;
  if (this->predicted_insert_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->predicted_insert_size(), output);
  }

  // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->programs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->programs(static_cast<int>(i)), output);
  }

  // string reference_set_id = 11;
  if (this->reference_set_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference_set_id().data(), static_cast<int>(this->reference_set_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.reference_set_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->reference_set_id(), output);
  }

  // map<string, .google.protobuf.ListValue> info = 12;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1.ReadGroup.InfoEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.genomics.v1.ReadGroup)
}

::google::protobuf::uint8* ReadGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.ReadGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), static_cast<int>(this->dataset_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.dataset_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dataset_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // string sample_id = 5;
  if (this->sample_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sample_id().data(), static_cast<int>(this->sample_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.sample_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sample_id(), target);
  }

  // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
  if (this->has_experiment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->experiment_, deterministic, target);
  }

  // int32 predicted_insert_size = 7;
  if (this->predicted_insert_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->predicted_insert_size(), target);
  }

  // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->programs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->programs(static_cast<int>(i)), deterministic, target);
  }

  // string reference_set_id = 11;
  if (this->reference_set_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference_set_id().data(), static_cast<int>(this->reference_set_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.reference_set_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->reference_set_id(), target);
  }

  // map<string, .google.protobuf.ListValue> info = 12;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1.ReadGroup.InfoEntry.key");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.ReadGroup)
  return target;
}

size_t ReadGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.ReadGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->programs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->programs(static_cast<int>(i)));
    }
  }

  // map<string, .google.protobuf.ListValue> info = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dataset_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string sample_id = 5;
  if (this->sample_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sample_id());
  }

  // string reference_set_id = 11;
  if (this->reference_set_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reference_set_id());
  }

  // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
  if (this->has_experiment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->experiment_);
  }

  // int32 predicted_insert_size = 7;
  if (this->predicted_insert_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->predicted_insert_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.ReadGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.ReadGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.ReadGroup)
    MergeFrom(*source);
  }
}

void ReadGroup::MergeFrom(const ReadGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.ReadGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  programs_.MergeFrom(from.programs_);
  info_.MergeFrom(from.info_);
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.dataset_id().size() > 0) {
    set_dataset_id(from.dataset_id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.sample_id().size() > 0) {
    set_sample_id(from.sample_id());
  }
  if (from.reference_set_id().size() > 0) {
    set_reference_set_id(from.reference_set_id());
  }
  if (from.has_experiment()) {
    mutable_experiment()->::google::genomics::v1::ReadGroup_Experiment::MergeFrom(from.experiment());
  }
  if (from.predicted_insert_size() != 0) {
    set_predicted_insert_size(from.predicted_insert_size());
  }
}

void ReadGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.ReadGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadGroup::CopyFrom(const ReadGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.ReadGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadGroup::IsInitialized() const {
  return true;
}

void ReadGroup::Swap(ReadGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadGroup* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadGroup::UnsafeArenaSwap(ReadGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadGroup::InternalSwap(ReadGroup* other) {
  using std::swap;
  programs_.InternalSwap(&other->programs_);
  info_.Swap(&other->info_);
  id_.Swap(&other->id_);
  dataset_id_.Swap(&other->dataset_id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  sample_id_.Swap(&other->sample_id_);
  reference_set_id_.Swap(&other->reference_set_id_);
  swap(experiment_, other->experiment_);
  swap(predicted_insert_size_, other->predicted_insert_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadGroup::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace genomics
}  // namespace google

// @@protoc_insertion_point(global_scope)
