// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/application.proto

#ifndef PROTOBUF_google_2fappengine_2fv1_2fapplication_2eproto__INCLUDED
#define PROTOBUF_google_2fappengine_2fv1_2fapplication_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fappengine_2fv1_2fapplication_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsApplicationImpl();
void InitDefaultsApplication();
void InitDefaultsUrlDispatchRuleImpl();
void InitDefaultsUrlDispatchRule();
inline void InitDefaults() {
  InitDefaultsApplication();
  InitDefaultsUrlDispatchRule();
}
}  // namespace protobuf_google_2fappengine_2fv1_2fapplication_2eproto
namespace google {
namespace appengine {
namespace v1 {
class Application;
class ApplicationDefaultTypeInternal;
extern ApplicationDefaultTypeInternal _Application_default_instance_;
class UrlDispatchRule;
class UrlDispatchRuleDefaultTypeInternal;
extern UrlDispatchRuleDefaultTypeInternal _UrlDispatchRule_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace google {
namespace appengine {
namespace v1 {

// ===================================================================

class Application : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.Application) */ {
 public:
  Application();
  virtual ~Application();

  Application(const Application& from);

  inline Application& operator=(const Application& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Application(Application&& from) noexcept
    : Application() {
    *this = ::std::move(from);
  }

  inline Application& operator=(Application&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Application& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Application* internal_default_instance() {
    return reinterpret_cast<const Application*>(
               &_Application_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Application* other);
  friend void swap(Application& a, Application& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Application* New() const PROTOBUF_FINAL { return New(NULL); }

  Application* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Application& from);
  void MergeFrom(const Application& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Application* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.appengine.v1.UrlDispatchRule dispatch_rules = 3;
  int dispatch_rules_size() const;
  void clear_dispatch_rules();
  static const int kDispatchRulesFieldNumber = 3;
  const ::google::appengine::v1::UrlDispatchRule& dispatch_rules(int index) const;
  ::google::appengine::v1::UrlDispatchRule* mutable_dispatch_rules(int index);
  ::google::appengine::v1::UrlDispatchRule* add_dispatch_rules();
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlDispatchRule >*
      mutable_dispatch_rules();
  const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlDispatchRule >&
      dispatch_rules() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string auth_domain = 6;
  void clear_auth_domain();
  static const int kAuthDomainFieldNumber = 6;
  const ::std::string& auth_domain() const;
  void set_auth_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_auth_domain(::std::string&& value);
  #endif
  void set_auth_domain(const char* value);
  void set_auth_domain(const char* value, size_t size);
  ::std::string* mutable_auth_domain();
  ::std::string* release_auth_domain();
  void set_allocated_auth_domain(::std::string* auth_domain);

  // string location_id = 7;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 7;
  const ::std::string& location_id() const;
  void set_location_id(const ::std::string& value);
  #if LANG_CXX11
  void set_location_id(::std::string&& value);
  #endif
  void set_location_id(const char* value);
  void set_location_id(const char* value, size_t size);
  ::std::string* mutable_location_id();
  ::std::string* release_location_id();
  void set_allocated_location_id(::std::string* location_id);

  // string code_bucket = 8;
  void clear_code_bucket();
  static const int kCodeBucketFieldNumber = 8;
  const ::std::string& code_bucket() const;
  void set_code_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_code_bucket(::std::string&& value);
  #endif
  void set_code_bucket(const char* value);
  void set_code_bucket(const char* value, size_t size);
  ::std::string* mutable_code_bucket();
  ::std::string* release_code_bucket();
  void set_allocated_code_bucket(::std::string* code_bucket);

  // string default_hostname = 11;
  void clear_default_hostname();
  static const int kDefaultHostnameFieldNumber = 11;
  const ::std::string& default_hostname() const;
  void set_default_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_default_hostname(::std::string&& value);
  #endif
  void set_default_hostname(const char* value);
  void set_default_hostname(const char* value, size_t size);
  ::std::string* mutable_default_hostname();
  ::std::string* release_default_hostname();
  void set_allocated_default_hostname(::std::string* default_hostname);

  // string default_bucket = 12;
  void clear_default_bucket();
  static const int kDefaultBucketFieldNumber = 12;
  const ::std::string& default_bucket() const;
  void set_default_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_default_bucket(::std::string&& value);
  #endif
  void set_default_bucket(const char* value);
  void set_default_bucket(const char* value, size_t size);
  ::std::string* mutable_default_bucket();
  ::std::string* release_default_bucket();
  void set_allocated_default_bucket(::std::string* default_bucket);

  // .google.protobuf.Duration default_cookie_expiration = 9;
  bool has_default_cookie_expiration() const;
  void clear_default_cookie_expiration();
  static const int kDefaultCookieExpirationFieldNumber = 9;
  const ::google::protobuf::Duration& default_cookie_expiration() const;
  ::google::protobuf::Duration* release_default_cookie_expiration();
  ::google::protobuf::Duration* mutable_default_cookie_expiration();
  void set_allocated_default_cookie_expiration(::google::protobuf::Duration* default_cookie_expiration);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.Application)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlDispatchRule > dispatch_rules_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr auth_domain_;
  ::google::protobuf::internal::ArenaStringPtr location_id_;
  ::google::protobuf::internal::ArenaStringPtr code_bucket_;
  ::google::protobuf::internal::ArenaStringPtr default_hostname_;
  ::google::protobuf::internal::ArenaStringPtr default_bucket_;
  ::google::protobuf::Duration* default_cookie_expiration_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapplication_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapplication_2eproto::InitDefaultsApplicationImpl();
};
// -------------------------------------------------------------------

class UrlDispatchRule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.UrlDispatchRule) */ {
 public:
  UrlDispatchRule();
  virtual ~UrlDispatchRule();

  UrlDispatchRule(const UrlDispatchRule& from);

  inline UrlDispatchRule& operator=(const UrlDispatchRule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UrlDispatchRule(UrlDispatchRule&& from) noexcept
    : UrlDispatchRule() {
    *this = ::std::move(from);
  }

  inline UrlDispatchRule& operator=(UrlDispatchRule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrlDispatchRule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UrlDispatchRule* internal_default_instance() {
    return reinterpret_cast<const UrlDispatchRule*>(
               &_UrlDispatchRule_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UrlDispatchRule* other);
  friend void swap(UrlDispatchRule& a, UrlDispatchRule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UrlDispatchRule* New() const PROTOBUF_FINAL { return New(NULL); }

  UrlDispatchRule* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UrlDispatchRule& from);
  void MergeFrom(const UrlDispatchRule& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UrlDispatchRule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string domain = 1;
  void clear_domain();
  static const int kDomainFieldNumber = 1;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string service = 3;
  void clear_service();
  static const int kServiceFieldNumber = 3;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.UrlDispatchRule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapplication_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapplication_2eproto::InitDefaultsUrlDispatchRuleImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Application

// string name = 1;
inline void Application::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.name)
  return name_.GetNoArena();
}
inline void Application::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Application.name)
}
#if LANG_CXX11
inline void Application::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Application.name)
}
#endif
inline void Application::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Application.name)
}
inline void Application::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Application.name)
}
inline ::std::string* Application::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.name)
}

// string id = 2;
inline void Application::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application::id() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.id)
  return id_.GetNoArena();
}
inline void Application::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Application.id)
}
#if LANG_CXX11
inline void Application::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Application.id)
}
#endif
inline void Application::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Application.id)
}
inline void Application::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Application.id)
}
inline ::std::string* Application::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application::release_id() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.id)
}

// repeated .google.appengine.v1.UrlDispatchRule dispatch_rules = 3;
inline int Application::dispatch_rules_size() const {
  return dispatch_rules_.size();
}
inline void Application::clear_dispatch_rules() {
  dispatch_rules_.Clear();
}
inline const ::google::appengine::v1::UrlDispatchRule& Application::dispatch_rules(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.dispatch_rules)
  return dispatch_rules_.Get(index);
}
inline ::google::appengine::v1::UrlDispatchRule* Application::mutable_dispatch_rules(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.dispatch_rules)
  return dispatch_rules_.Mutable(index);
}
inline ::google::appengine::v1::UrlDispatchRule* Application::add_dispatch_rules() {
  // @@protoc_insertion_point(field_add:google.appengine.v1.Application.dispatch_rules)
  return dispatch_rules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlDispatchRule >*
Application::mutable_dispatch_rules() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.Application.dispatch_rules)
  return &dispatch_rules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::UrlDispatchRule >&
Application::dispatch_rules() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.Application.dispatch_rules)
  return dispatch_rules_;
}

// string auth_domain = 6;
inline void Application::clear_auth_domain() {
  auth_domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application::auth_domain() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.auth_domain)
  return auth_domain_.GetNoArena();
}
inline void Application::set_auth_domain(const ::std::string& value) {
  
  auth_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Application.auth_domain)
}
#if LANG_CXX11
inline void Application::set_auth_domain(::std::string&& value) {
  
  auth_domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Application.auth_domain)
}
#endif
inline void Application::set_auth_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Application.auth_domain)
}
inline void Application::set_auth_domain(const char* value, size_t size) {
  
  auth_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Application.auth_domain)
}
inline ::std::string* Application::mutable_auth_domain() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.auth_domain)
  return auth_domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application::release_auth_domain() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.auth_domain)
  
  return auth_domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application::set_allocated_auth_domain(::std::string* auth_domain) {
  if (auth_domain != NULL) {
    
  } else {
    
  }
  auth_domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_domain);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.auth_domain)
}

// string location_id = 7;
inline void Application::clear_location_id() {
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application::location_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.location_id)
  return location_id_.GetNoArena();
}
inline void Application::set_location_id(const ::std::string& value) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Application.location_id)
}
#if LANG_CXX11
inline void Application::set_location_id(::std::string&& value) {
  
  location_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Application.location_id)
}
#endif
inline void Application::set_location_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Application.location_id)
}
inline void Application::set_location_id(const char* value, size_t size) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Application.location_id)
}
inline ::std::string* Application::mutable_location_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.location_id)
  return location_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application::release_location_id() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.location_id)
  
  return location_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application::set_allocated_location_id(::std::string* location_id) {
  if (location_id != NULL) {
    
  } else {
    
  }
  location_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.location_id)
}

// string code_bucket = 8;
inline void Application::clear_code_bucket() {
  code_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application::code_bucket() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.code_bucket)
  return code_bucket_.GetNoArena();
}
inline void Application::set_code_bucket(const ::std::string& value) {
  
  code_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Application.code_bucket)
}
#if LANG_CXX11
inline void Application::set_code_bucket(::std::string&& value) {
  
  code_bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Application.code_bucket)
}
#endif
inline void Application::set_code_bucket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Application.code_bucket)
}
inline void Application::set_code_bucket(const char* value, size_t size) {
  
  code_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Application.code_bucket)
}
inline ::std::string* Application::mutable_code_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.code_bucket)
  return code_bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application::release_code_bucket() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.code_bucket)
  
  return code_bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application::set_allocated_code_bucket(::std::string* code_bucket) {
  if (code_bucket != NULL) {
    
  } else {
    
  }
  code_bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_bucket);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.code_bucket)
}

// .google.protobuf.Duration default_cookie_expiration = 9;
inline bool Application::has_default_cookie_expiration() const {
  return this != internal_default_instance() && default_cookie_expiration_ != NULL;
}
inline const ::google::protobuf::Duration& Application::default_cookie_expiration() const {
  const ::google::protobuf::Duration* p = default_cookie_expiration_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.default_cookie_expiration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* Application::release_default_cookie_expiration() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.default_cookie_expiration)
  
  ::google::protobuf::Duration* temp = default_cookie_expiration_;
  default_cookie_expiration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* Application::mutable_default_cookie_expiration() {
  
  if (default_cookie_expiration_ == NULL) {
    default_cookie_expiration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.default_cookie_expiration)
  return default_cookie_expiration_;
}
inline void Application::set_allocated_default_cookie_expiration(::google::protobuf::Duration* default_cookie_expiration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(default_cookie_expiration_);
  }
  if (default_cookie_expiration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(default_cookie_expiration)->GetArena();
    if (message_arena != submessage_arena) {
      default_cookie_expiration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_cookie_expiration, submessage_arena);
    }
    
  } else {
    
  }
  default_cookie_expiration_ = default_cookie_expiration;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.default_cookie_expiration)
}

// string default_hostname = 11;
inline void Application::clear_default_hostname() {
  default_hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application::default_hostname() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.default_hostname)
  return default_hostname_.GetNoArena();
}
inline void Application::set_default_hostname(const ::std::string& value) {
  
  default_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Application.default_hostname)
}
#if LANG_CXX11
inline void Application::set_default_hostname(::std::string&& value) {
  
  default_hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Application.default_hostname)
}
#endif
inline void Application::set_default_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  default_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Application.default_hostname)
}
inline void Application::set_default_hostname(const char* value, size_t size) {
  
  default_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Application.default_hostname)
}
inline ::std::string* Application::mutable_default_hostname() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.default_hostname)
  return default_hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application::release_default_hostname() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.default_hostname)
  
  return default_hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application::set_allocated_default_hostname(::std::string* default_hostname) {
  if (default_hostname != NULL) {
    
  } else {
    
  }
  default_hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_hostname);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.default_hostname)
}

// string default_bucket = 12;
inline void Application::clear_default_bucket() {
  default_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Application::default_bucket() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Application.default_bucket)
  return default_bucket_.GetNoArena();
}
inline void Application::set_default_bucket(const ::std::string& value) {
  
  default_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Application.default_bucket)
}
#if LANG_CXX11
inline void Application::set_default_bucket(::std::string&& value) {
  
  default_bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Application.default_bucket)
}
#endif
inline void Application::set_default_bucket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  default_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Application.default_bucket)
}
inline void Application::set_default_bucket(const char* value, size_t size) {
  
  default_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Application.default_bucket)
}
inline ::std::string* Application::mutable_default_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Application.default_bucket)
  return default_bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Application::release_default_bucket() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Application.default_bucket)
  
  return default_bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Application::set_allocated_default_bucket(::std::string* default_bucket) {
  if (default_bucket != NULL) {
    
  } else {
    
  }
  default_bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_bucket);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Application.default_bucket)
}

// -------------------------------------------------------------------

// UrlDispatchRule

// string domain = 1;
inline void UrlDispatchRule::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlDispatchRule::domain() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlDispatchRule.domain)
  return domain_.GetNoArena();
}
inline void UrlDispatchRule::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlDispatchRule.domain)
}
#if LANG_CXX11
inline void UrlDispatchRule::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.UrlDispatchRule.domain)
}
#endif
inline void UrlDispatchRule::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.UrlDispatchRule.domain)
}
inline void UrlDispatchRule::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.UrlDispatchRule.domain)
}
inline ::std::string* UrlDispatchRule::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlDispatchRule.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlDispatchRule::release_domain() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlDispatchRule.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlDispatchRule::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlDispatchRule.domain)
}

// string path = 2;
inline void UrlDispatchRule::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlDispatchRule::path() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlDispatchRule.path)
  return path_.GetNoArena();
}
inline void UrlDispatchRule::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlDispatchRule.path)
}
#if LANG_CXX11
inline void UrlDispatchRule::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.UrlDispatchRule.path)
}
#endif
inline void UrlDispatchRule::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.UrlDispatchRule.path)
}
inline void UrlDispatchRule::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.UrlDispatchRule.path)
}
inline ::std::string* UrlDispatchRule::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlDispatchRule.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlDispatchRule::release_path() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlDispatchRule.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlDispatchRule::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlDispatchRule.path)
}

// string service = 3;
inline void UrlDispatchRule::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlDispatchRule::service() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlDispatchRule.service)
  return service_.GetNoArena();
}
inline void UrlDispatchRule::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlDispatchRule.service)
}
#if LANG_CXX11
inline void UrlDispatchRule::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.UrlDispatchRule.service)
}
#endif
inline void UrlDispatchRule::set_service(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.UrlDispatchRule.service)
}
inline void UrlDispatchRule::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.UrlDispatchRule.service)
}
inline ::std::string* UrlDispatchRule::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlDispatchRule.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlDispatchRule::release_service() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlDispatchRule.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlDispatchRule::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlDispatchRule.service)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fappengine_2fv1_2fapplication_2eproto__INCLUDED
