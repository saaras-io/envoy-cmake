static_resources:
  listeners:
  - address:
      socket_address:
        address: "{{ ip_loopback_address }}"
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          value:
            drain_timeout_ms: 5000
            route_config:
              virtual_hosts:
              - require_ssl: all
                routes:
                - cluster: cluster_1
                  prefix: "/"
                domains:
                - www.redirect.com
                name: redirect
              - routes:
                - prefix: "/"
                  cluster: cluster_1
                  runtime:
                    key: some_key
                    default: 0
                - prefix: "/test/long/url"
                  rate_limits:
                  - actions:
                    - type: destination_cluster
                  cluster: cluster_1
                - prefix: "/test/"
                  cluster: cluster_2
                - prefix: "/websocket/test"
                  prefix_rewrite: "/websocket"
                  cluster: cluster_1
                  use_websocket: true
                domains:
                - "*"
                name: integration
            codec_type: http1
            stat_prefix: router
            filters:
            - type: both
              name: health_check
              config:
                endpoint: "/healthcheck"
                pass_through_mode: false
            - type: decoder
              name: rate_limit
              config:
                domain: foo
            - type: decoder
              name: router
              config: {}
            access_log:
            - format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                "%REQUEST_DURATION%" "%RESPONSE_DURATION%"'
              path: "/dev/null"
              filter:
                filters:
                - type: status_code
                  op: ">="
                  value: 500
                - type: duration
                  op: ">="
                  value: 1000000
                type: logical_or
            - path: "/dev/null"
          deprecated_v1: true
        deprecated_v1:
          type: read
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          value:
            filters:
            - type: both
              name: health_check
              config:
                endpoint: "/healthcheck"
                pass_through_mode: false
            - name: rate_limit
              config:
                domain: foo
              type: decoder
            - type: decoder
              name: router
              config: {}
            access_log:
            - filter:
                type: logical_or
                filters:
                - value: 500
                  type: status_code
                  op: ">="
                - type: duration
                  op: ">="
                  value: 1555500
              format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                "%REQUEST_DURATION%" "%RESPONSE_DURATION%"'
              path: "/dev/null"
            - path: "/dev/null"
            drain_timeout_ms: 5000
            route_config:
              virtual_hosts:
              - routes:
                - prefix: "/"
                  cluster: cluster_1
                domains:
                - www.redirect.com
                name: redirect
                require_ssl: all
              - routes:
                - prefix: "/"
                  cluster: cluster_1
                domains:
                - www.namewithport.com:1234
                name: redirect
                require_ssl: all
              - routes:
                - cluster: cluster_1
                  runtime:
                    key: some_key
                    default: 0
                  prefix: "/"
                - rate_limits:
                  - actions:
                    - type: destination_cluster
                  cluster: cluster_1
                  prefix: "/test/long/url"
                - prefix: "/test/"
                  cluster: cluster_2
                - cluster: cluster_1
                  use_websocket: true
                  prefix: "/websocket/test"
                  prefix_rewrite: "/websocket"
                domains:
                - "*"
                name: integration
            codec_type: http1
            stat_prefix: router
            http1_settings:
              allow_absolute_url: true
          deprecated_v1: true
        deprecated_v1:
          type: read
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          value:
            route_config:
              virtual_hosts:
              - routes:
                - cluster: cluster_3
                  prefix: "/test/long/url"
                domains:
                - "*"
                name: integration
            filters:
            - name: router
              config: {}
              type: decoder
            codec_type: http1
            stat_prefix: router
          deprecated_v1: true
        deprecated_v1:
          type: read
    per_connection_buffer_limit_bytes: 1024
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          value:
            filters:
            - type: both
              name: http_dynamo_filter
              config: {}
            - name: router
              config: {}
              type: decoder
            codec_type: http1
            stat_prefix: router
            route_config:
              virtual_hosts:
              - routes:
                - cluster: cluster_3
                  prefix: "/dynamo/url"
                domains:
                - "*"
                name: integration
          deprecated_v1: true
        deprecated_v1:
          type: read
    per_connection_buffer_limit_bytes: 1024
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          value:
            route_config:
              virtual_hosts:
              - domains:
                - "*"
                name: integration
                routes:
                - prefix: "/test/long/url"
                  cluster: cluster_3
            filters:
            - type: both
              name: grpc_http1_bridge
              config: {}
            - type: decoder
              name: router
              config: {}
            codec_type: http1
            stat_prefix: router
          deprecated_v1: true
        deprecated_v1:
          type: read
    per_connection_buffer_limit_bytes: 1024
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          value:
            drain_timeout_ms: 5000
            route_config:
              virtual_hosts:
              - routes:
                - cluster: cluster_1
                  prefix: "/"
                domains:
                - www.redirect.com
                name: redirect
                require_ssl: all
              - routes:
                - cluster: cluster_1
                  runtime:
                    key: some_key
                    default: 0
                  prefix: "/"
                - prefix: "/test/long/url"
                  rate_limits:
                  - actions:
                    - type: destination_cluster
                  cluster: cluster_1
                - prefix: "/test/"
                  cluster: cluster_2
                - prefix: "/websocket/test"
                  prefix_rewrite: "/websocket"
                  cluster: cluster_1
                  use_websocket: true
                domains:
                - "*"
                name: integration
            codec_type: http1
            stat_prefix: router
            filters:
            - type: both
              name: health_check
              config:
                endpoint: "/healthcheck"
                pass_through_mode: false
            - name: rate_limit
              config:
                domain: foo
              type: decoder
            - name: buffer
              config:
                max_request_time_s: 120
                max_request_bytes: 5242880
              type: decoder
            - config: {}
              type: decoder
              name: router
            access_log:
            - filter:
                filters:
                - op: ">="
                  value: 500
                  type: status_code
                - type: duration
                  op: ">="
                  value: 1555500
                type: logical_or
              format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                "%REQUEST_DURATION%" "%RESPONSE_DURATION%"'
              path: "/dev/null"
            - path: "/dev/null"
          deprecated_v1: true
        deprecated_v1:
          type: read
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          value:
            filters:
            - type: decoder
              name: router
              config: {}
            codec_type: http1
            stat_prefix: rds_dummy
            rds:
              route_config_name: foo
              cluster: rds
          deprecated_v1: true
        deprecated_v1:
          type: read
  - address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 0
    filter_chains:
    - filters:
      - name: envoy.redis_proxy
        config:
          value:
            conn_pool:
              op_timeout_ms: 400
            stat_prefix: redis
            cluster_name: redis
          deprecated_v1: true
        deprecated_v1:
          type: read
  clusters:
  - name: cds
    connect_timeout: 5s
    hosts:
    - socket_address:
        address: {{ ip_loopback_address }}
        port_value: 4
    dns_lookup_family: "{{ dns_lookup_family }}"
  - name: rds
    connect_timeout: 5s
    hosts:
    - socket_address:
        address: {{ ip_loopback_address }}
        port_value: 4
    dns_lookup_family: "{{ dns_lookup_family }}"
  - name: lds
    connect_timeout: 5s
    hosts:
    - socket_address:
        address: {{ ip_loopback_address }}
        port_value: 4
    dns_lookup_family: "{{ dns_lookup_family }}"
  - name: cluster_1
    connect_timeout: 5s
    hosts:
    - socket_address:
        address: {{ ip_loopback_address }}
        port_value: {{ upstream_0 }}
    dns_lookup_family: "{{ dns_lookup_family }}"
  - name: cluster_2
    type: STRICT_DNS
    connect_timeout: 5s
    hosts:
    - socket_address:
        address: localhost
        port_value: {{ upstream_1 }}
    dns_lookup_family: "{{ dns_lookup_family }}"
  - name: cluster_3
    connect_timeout: 5s
    per_connection_buffer_limit_bytes: 1024
    hosts:
    - socket_address:
        address: {{ ip_loopback_address }}
        port_value: {{ upstream_0 }}
    dns_lookup_family: "{{ dns_lookup_family }}"
  - name: statsd
    type: STRICT_DNS
    connect_timeout: 5s
    hosts:
    - socket_address:
        address: localhost
        port_value: 4
    dns_lookup_family: "{{ dns_lookup_family }}"
  - name: redis
    type: STRICT_DNS
    connect_timeout: 5s
    lb_policy: RING_HASH
    hosts:
    - socket_address:
        address: localhost
        port_value: 4
    dns_lookup_family: "{{ dns_lookup_family }}"
    outlier_detection: {}
dynamic_resources:
  lds_config:
    api_config_source:
      cluster_names:
      - lds
      refresh_delay: 30s
  cds_config:
    api_config_source:
      cluster_names:
      - cds
      refresh_delay: 30s
cluster_manager: {}
flags_path: "/invalid_flags"
stats_sinks:
- name: envoy.statsd
  config:
    address:
      socket_address:
        address: {{ ip_loopback_address }}
        port_value: 8125
- name: envoy.statsd
  config:
    tcp_cluster_name: statsd
watchdog: {}
runtime:
  symlink_root: "{{ test_rundir }}/test/common/runtime/test_data/current"
  subdirectory: envoy
  override_subdirectory: envoy_override
admin:
  access_log_path: "/dev/null"
  profile_path: "{{ test_tmpdir }}/envoy.prof"
  address:
    socket_address:
      address: {{ ip_loopback_address }}
      port_value: 0
