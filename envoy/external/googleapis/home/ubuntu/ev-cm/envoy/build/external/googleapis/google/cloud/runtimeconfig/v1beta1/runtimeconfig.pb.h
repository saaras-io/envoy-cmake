// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto

#ifndef PROTOBUF_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/runtimeconfig/v1beta1/resources.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsListConfigsRequestImpl();
void InitDefaultsListConfigsRequest();
void InitDefaultsListConfigsResponseImpl();
void InitDefaultsListConfigsResponse();
void InitDefaultsGetConfigRequestImpl();
void InitDefaultsGetConfigRequest();
void InitDefaultsCreateConfigRequestImpl();
void InitDefaultsCreateConfigRequest();
void InitDefaultsUpdateConfigRequestImpl();
void InitDefaultsUpdateConfigRequest();
void InitDefaultsDeleteConfigRequestImpl();
void InitDefaultsDeleteConfigRequest();
void InitDefaultsListVariablesRequestImpl();
void InitDefaultsListVariablesRequest();
void InitDefaultsListVariablesResponseImpl();
void InitDefaultsListVariablesResponse();
void InitDefaultsWatchVariableRequestImpl();
void InitDefaultsWatchVariableRequest();
void InitDefaultsGetVariableRequestImpl();
void InitDefaultsGetVariableRequest();
void InitDefaultsCreateVariableRequestImpl();
void InitDefaultsCreateVariableRequest();
void InitDefaultsUpdateVariableRequestImpl();
void InitDefaultsUpdateVariableRequest();
void InitDefaultsDeleteVariableRequestImpl();
void InitDefaultsDeleteVariableRequest();
void InitDefaultsListWaitersRequestImpl();
void InitDefaultsListWaitersRequest();
void InitDefaultsListWaitersResponseImpl();
void InitDefaultsListWaitersResponse();
void InitDefaultsGetWaiterRequestImpl();
void InitDefaultsGetWaiterRequest();
void InitDefaultsCreateWaiterRequestImpl();
void InitDefaultsCreateWaiterRequest();
void InitDefaultsDeleteWaiterRequestImpl();
void InitDefaultsDeleteWaiterRequest();
inline void InitDefaults() {
  InitDefaultsListConfigsRequest();
  InitDefaultsListConfigsResponse();
  InitDefaultsGetConfigRequest();
  InitDefaultsCreateConfigRequest();
  InitDefaultsUpdateConfigRequest();
  InitDefaultsDeleteConfigRequest();
  InitDefaultsListVariablesRequest();
  InitDefaultsListVariablesResponse();
  InitDefaultsWatchVariableRequest();
  InitDefaultsGetVariableRequest();
  InitDefaultsCreateVariableRequest();
  InitDefaultsUpdateVariableRequest();
  InitDefaultsDeleteVariableRequest();
  InitDefaultsListWaitersRequest();
  InitDefaultsListWaitersResponse();
  InitDefaultsGetWaiterRequest();
  InitDefaultsCreateWaiterRequest();
  InitDefaultsDeleteWaiterRequest();
}
}  // namespace protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto
namespace google {
namespace cloud {
namespace runtimeconfig {
namespace v1beta1 {
class CreateConfigRequest;
class CreateConfigRequestDefaultTypeInternal;
extern CreateConfigRequestDefaultTypeInternal _CreateConfigRequest_default_instance_;
class CreateVariableRequest;
class CreateVariableRequestDefaultTypeInternal;
extern CreateVariableRequestDefaultTypeInternal _CreateVariableRequest_default_instance_;
class CreateWaiterRequest;
class CreateWaiterRequestDefaultTypeInternal;
extern CreateWaiterRequestDefaultTypeInternal _CreateWaiterRequest_default_instance_;
class DeleteConfigRequest;
class DeleteConfigRequestDefaultTypeInternal;
extern DeleteConfigRequestDefaultTypeInternal _DeleteConfigRequest_default_instance_;
class DeleteVariableRequest;
class DeleteVariableRequestDefaultTypeInternal;
extern DeleteVariableRequestDefaultTypeInternal _DeleteVariableRequest_default_instance_;
class DeleteWaiterRequest;
class DeleteWaiterRequestDefaultTypeInternal;
extern DeleteWaiterRequestDefaultTypeInternal _DeleteWaiterRequest_default_instance_;
class GetConfigRequest;
class GetConfigRequestDefaultTypeInternal;
extern GetConfigRequestDefaultTypeInternal _GetConfigRequest_default_instance_;
class GetVariableRequest;
class GetVariableRequestDefaultTypeInternal;
extern GetVariableRequestDefaultTypeInternal _GetVariableRequest_default_instance_;
class GetWaiterRequest;
class GetWaiterRequestDefaultTypeInternal;
extern GetWaiterRequestDefaultTypeInternal _GetWaiterRequest_default_instance_;
class ListConfigsRequest;
class ListConfigsRequestDefaultTypeInternal;
extern ListConfigsRequestDefaultTypeInternal _ListConfigsRequest_default_instance_;
class ListConfigsResponse;
class ListConfigsResponseDefaultTypeInternal;
extern ListConfigsResponseDefaultTypeInternal _ListConfigsResponse_default_instance_;
class ListVariablesRequest;
class ListVariablesRequestDefaultTypeInternal;
extern ListVariablesRequestDefaultTypeInternal _ListVariablesRequest_default_instance_;
class ListVariablesResponse;
class ListVariablesResponseDefaultTypeInternal;
extern ListVariablesResponseDefaultTypeInternal _ListVariablesResponse_default_instance_;
class ListWaitersRequest;
class ListWaitersRequestDefaultTypeInternal;
extern ListWaitersRequestDefaultTypeInternal _ListWaitersRequest_default_instance_;
class ListWaitersResponse;
class ListWaitersResponseDefaultTypeInternal;
extern ListWaitersResponseDefaultTypeInternal _ListWaitersResponse_default_instance_;
class UpdateConfigRequest;
class UpdateConfigRequestDefaultTypeInternal;
extern UpdateConfigRequestDefaultTypeInternal _UpdateConfigRequest_default_instance_;
class UpdateVariableRequest;
class UpdateVariableRequestDefaultTypeInternal;
extern UpdateVariableRequestDefaultTypeInternal _UpdateVariableRequest_default_instance_;
class WatchVariableRequest;
class WatchVariableRequestDefaultTypeInternal;
extern WatchVariableRequestDefaultTypeInternal _WatchVariableRequest_default_instance_;
}  // namespace v1beta1
}  // namespace runtimeconfig
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace runtimeconfig {
namespace v1beta1 {

// ===================================================================

class ListConfigsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest) */ {
 public:
  ListConfigsRequest();
  virtual ~ListConfigsRequest();

  ListConfigsRequest(const ListConfigsRequest& from);

  inline ListConfigsRequest& operator=(const ListConfigsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListConfigsRequest(ListConfigsRequest&& from) noexcept
    : ListConfigsRequest() {
    *this = ::std::move(from);
  }

  inline ListConfigsRequest& operator=(ListConfigsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListConfigsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListConfigsRequest* internal_default_instance() {
    return reinterpret_cast<const ListConfigsRequest*>(
               &_ListConfigsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ListConfigsRequest* other);
  friend void swap(ListConfigsRequest& a, ListConfigsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListConfigsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListConfigsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListConfigsRequest& from);
  void MergeFrom(const ListConfigsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListConfigsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsListConfigsRequestImpl();
};
// -------------------------------------------------------------------

class ListConfigsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse) */ {
 public:
  ListConfigsResponse();
  virtual ~ListConfigsResponse();

  ListConfigsResponse(const ListConfigsResponse& from);

  inline ListConfigsResponse& operator=(const ListConfigsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListConfigsResponse(ListConfigsResponse&& from) noexcept
    : ListConfigsResponse() {
    *this = ::std::move(from);
  }

  inline ListConfigsResponse& operator=(ListConfigsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListConfigsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListConfigsResponse* internal_default_instance() {
    return reinterpret_cast<const ListConfigsResponse*>(
               &_ListConfigsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ListConfigsResponse* other);
  friend void swap(ListConfigsResponse& a, ListConfigsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListConfigsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListConfigsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListConfigsResponse& from);
  void MergeFrom(const ListConfigsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListConfigsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.runtimeconfig.v1beta1.RuntimeConfig configs = 1;
  int configs_size() const;
  void clear_configs();
  static const int kConfigsFieldNumber = 1;
  const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig& configs(int index) const;
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* mutable_configs(int index);
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* add_configs();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig >*
      mutable_configs();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig >&
      configs() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig > configs_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsListConfigsResponseImpl();
};
// -------------------------------------------------------------------

class GetConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.GetConfigRequest) */ {
 public:
  GetConfigRequest();
  virtual ~GetConfigRequest();

  GetConfigRequest(const GetConfigRequest& from);

  inline GetConfigRequest& operator=(const GetConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetConfigRequest(GetConfigRequest&& from) noexcept
    : GetConfigRequest() {
    *this = ::std::move(from);
  }

  inline GetConfigRequest& operator=(GetConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetConfigRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfigRequest*>(
               &_GetConfigRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetConfigRequest* other);
  friend void swap(GetConfigRequest& a, GetConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetConfigRequest& from);
  void MergeFrom(const GetConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.GetConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsGetConfigRequestImpl();
};
// -------------------------------------------------------------------

class CreateConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest) */ {
 public:
  CreateConfigRequest();
  virtual ~CreateConfigRequest();

  CreateConfigRequest(const CreateConfigRequest& from);

  inline CreateConfigRequest& operator=(const CreateConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateConfigRequest(CreateConfigRequest&& from) noexcept
    : CreateConfigRequest() {
    *this = ::std::move(from);
  }

  inline CreateConfigRequest& operator=(CreateConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateConfigRequest* internal_default_instance() {
    return reinterpret_cast<const CreateConfigRequest*>(
               &_CreateConfigRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CreateConfigRequest* other);
  friend void swap(CreateConfigRequest& a, CreateConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateConfigRequest& from);
  void MergeFrom(const CreateConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // .google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig& config() const;
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* release_config();
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* mutable_config();
  void set_allocated_config(::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* config);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsCreateConfigRequestImpl();
};
// -------------------------------------------------------------------

class UpdateConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest) */ {
 public:
  UpdateConfigRequest();
  virtual ~UpdateConfigRequest();

  UpdateConfigRequest(const UpdateConfigRequest& from);

  inline UpdateConfigRequest& operator=(const UpdateConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateConfigRequest(UpdateConfigRequest&& from) noexcept
    : UpdateConfigRequest() {
    *this = ::std::move(from);
  }

  inline UpdateConfigRequest& operator=(UpdateConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateConfigRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateConfigRequest*>(
               &_UpdateConfigRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UpdateConfigRequest* other);
  friend void swap(UpdateConfigRequest& a, UpdateConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateConfigRequest& from);
  void MergeFrom(const UpdateConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig& config() const;
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* release_config();
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* mutable_config();
  void set_allocated_config(::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* config);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsUpdateConfigRequestImpl();
};
// -------------------------------------------------------------------

class DeleteConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest) */ {
 public:
  DeleteConfigRequest();
  virtual ~DeleteConfigRequest();

  DeleteConfigRequest(const DeleteConfigRequest& from);

  inline DeleteConfigRequest& operator=(const DeleteConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteConfigRequest(DeleteConfigRequest&& from) noexcept
    : DeleteConfigRequest() {
    *this = ::std::move(from);
  }

  inline DeleteConfigRequest& operator=(DeleteConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteConfigRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteConfigRequest*>(
               &_DeleteConfigRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DeleteConfigRequest* other);
  friend void swap(DeleteConfigRequest& a, DeleteConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteConfigRequest& from);
  void MergeFrom(const DeleteConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsDeleteConfigRequestImpl();
};
// -------------------------------------------------------------------

class ListVariablesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest) */ {
 public:
  ListVariablesRequest();
  virtual ~ListVariablesRequest();

  ListVariablesRequest(const ListVariablesRequest& from);

  inline ListVariablesRequest& operator=(const ListVariablesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVariablesRequest(ListVariablesRequest&& from) noexcept
    : ListVariablesRequest() {
    *this = ::std::move(from);
  }

  inline ListVariablesRequest& operator=(ListVariablesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVariablesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVariablesRequest* internal_default_instance() {
    return reinterpret_cast<const ListVariablesRequest*>(
               &_ListVariablesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ListVariablesRequest* other);
  friend void swap(ListVariablesRequest& a, ListVariablesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVariablesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVariablesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVariablesRequest& from);
  void MergeFrom(const ListVariablesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVariablesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // bool return_values = 5;
  void clear_return_values();
  static const int kReturnValuesFieldNumber = 5;
  bool return_values() const;
  void set_return_values(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  bool return_values_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsListVariablesRequestImpl();
};
// -------------------------------------------------------------------

class ListVariablesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse) */ {
 public:
  ListVariablesResponse();
  virtual ~ListVariablesResponse();

  ListVariablesResponse(const ListVariablesResponse& from);

  inline ListVariablesResponse& operator=(const ListVariablesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVariablesResponse(ListVariablesResponse&& from) noexcept
    : ListVariablesResponse() {
    *this = ::std::move(from);
  }

  inline ListVariablesResponse& operator=(ListVariablesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVariablesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVariablesResponse* internal_default_instance() {
    return reinterpret_cast<const ListVariablesResponse*>(
               &_ListVariablesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ListVariablesResponse* other);
  friend void swap(ListVariablesResponse& a, ListVariablesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVariablesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVariablesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVariablesResponse& from);
  void MergeFrom(const ListVariablesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVariablesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.runtimeconfig.v1beta1.Variable variables = 1;
  int variables_size() const;
  void clear_variables();
  static const int kVariablesFieldNumber = 1;
  const ::google::cloud::runtimeconfig::v1beta1::Variable& variables(int index) const;
  ::google::cloud::runtimeconfig::v1beta1::Variable* mutable_variables(int index);
  ::google::cloud::runtimeconfig::v1beta1::Variable* add_variables();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Variable >*
      mutable_variables();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Variable >&
      variables() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Variable > variables_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsListVariablesResponseImpl();
};
// -------------------------------------------------------------------

class WatchVariableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest) */ {
 public:
  WatchVariableRequest();
  virtual ~WatchVariableRequest();

  WatchVariableRequest(const WatchVariableRequest& from);

  inline WatchVariableRequest& operator=(const WatchVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WatchVariableRequest(WatchVariableRequest&& from) noexcept
    : WatchVariableRequest() {
    *this = ::std::move(from);
  }

  inline WatchVariableRequest& operator=(WatchVariableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WatchVariableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WatchVariableRequest* internal_default_instance() {
    return reinterpret_cast<const WatchVariableRequest*>(
               &_WatchVariableRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(WatchVariableRequest* other);
  friend void swap(WatchVariableRequest& a, WatchVariableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WatchVariableRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  WatchVariableRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WatchVariableRequest& from);
  void MergeFrom(const WatchVariableRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WatchVariableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.protobuf.Timestamp newer_than = 4;
  bool has_newer_than() const;
  void clear_newer_than();
  static const int kNewerThanFieldNumber = 4;
  const ::google::protobuf::Timestamp& newer_than() const;
  ::google::protobuf::Timestamp* release_newer_than();
  ::google::protobuf::Timestamp* mutable_newer_than();
  void set_allocated_newer_than(::google::protobuf::Timestamp* newer_than);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Timestamp* newer_than_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsWatchVariableRequestImpl();
};
// -------------------------------------------------------------------

class GetVariableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.GetVariableRequest) */ {
 public:
  GetVariableRequest();
  virtual ~GetVariableRequest();

  GetVariableRequest(const GetVariableRequest& from);

  inline GetVariableRequest& operator=(const GetVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVariableRequest(GetVariableRequest&& from) noexcept
    : GetVariableRequest() {
    *this = ::std::move(from);
  }

  inline GetVariableRequest& operator=(GetVariableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVariableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVariableRequest* internal_default_instance() {
    return reinterpret_cast<const GetVariableRequest*>(
               &_GetVariableRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetVariableRequest* other);
  friend void swap(GetVariableRequest& a, GetVariableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVariableRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVariableRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVariableRequest& from);
  void MergeFrom(const GetVariableRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVariableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.GetVariableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsGetVariableRequestImpl();
};
// -------------------------------------------------------------------

class CreateVariableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest) */ {
 public:
  CreateVariableRequest();
  virtual ~CreateVariableRequest();

  CreateVariableRequest(const CreateVariableRequest& from);

  inline CreateVariableRequest& operator=(const CreateVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateVariableRequest(CreateVariableRequest&& from) noexcept
    : CreateVariableRequest() {
    *this = ::std::move(from);
  }

  inline CreateVariableRequest& operator=(CreateVariableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVariableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateVariableRequest* internal_default_instance() {
    return reinterpret_cast<const CreateVariableRequest*>(
               &_CreateVariableRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CreateVariableRequest* other);
  friend void swap(CreateVariableRequest& a, CreateVariableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateVariableRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVariableRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVariableRequest& from);
  void MergeFrom(const CreateVariableRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVariableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // .google.cloud.runtimeconfig.v1beta1.Variable variable = 2;
  bool has_variable() const;
  void clear_variable();
  static const int kVariableFieldNumber = 2;
  const ::google::cloud::runtimeconfig::v1beta1::Variable& variable() const;
  ::google::cloud::runtimeconfig::v1beta1::Variable* release_variable();
  ::google::cloud::runtimeconfig::v1beta1::Variable* mutable_variable();
  void set_allocated_variable(::google::cloud::runtimeconfig::v1beta1::Variable* variable);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::cloud::runtimeconfig::v1beta1::Variable* variable_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsCreateVariableRequestImpl();
};
// -------------------------------------------------------------------

class UpdateVariableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest) */ {
 public:
  UpdateVariableRequest();
  virtual ~UpdateVariableRequest();

  UpdateVariableRequest(const UpdateVariableRequest& from);

  inline UpdateVariableRequest& operator=(const UpdateVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateVariableRequest(UpdateVariableRequest&& from) noexcept
    : UpdateVariableRequest() {
    *this = ::std::move(from);
  }

  inline UpdateVariableRequest& operator=(UpdateVariableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateVariableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateVariableRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateVariableRequest*>(
               &_UpdateVariableRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(UpdateVariableRequest* other);
  friend void swap(UpdateVariableRequest& a, UpdateVariableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateVariableRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateVariableRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateVariableRequest& from);
  void MergeFrom(const UpdateVariableRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateVariableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.cloud.runtimeconfig.v1beta1.Variable variable = 2;
  bool has_variable() const;
  void clear_variable();
  static const int kVariableFieldNumber = 2;
  const ::google::cloud::runtimeconfig::v1beta1::Variable& variable() const;
  ::google::cloud::runtimeconfig::v1beta1::Variable* release_variable();
  ::google::cloud::runtimeconfig::v1beta1::Variable* mutable_variable();
  void set_allocated_variable(::google::cloud::runtimeconfig::v1beta1::Variable* variable);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::cloud::runtimeconfig::v1beta1::Variable* variable_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsUpdateVariableRequestImpl();
};
// -------------------------------------------------------------------

class DeleteVariableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest) */ {
 public:
  DeleteVariableRequest();
  virtual ~DeleteVariableRequest();

  DeleteVariableRequest(const DeleteVariableRequest& from);

  inline DeleteVariableRequest& operator=(const DeleteVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteVariableRequest(DeleteVariableRequest&& from) noexcept
    : DeleteVariableRequest() {
    *this = ::std::move(from);
  }

  inline DeleteVariableRequest& operator=(DeleteVariableRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVariableRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteVariableRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteVariableRequest*>(
               &_DeleteVariableRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DeleteVariableRequest* other);
  friend void swap(DeleteVariableRequest& a, DeleteVariableRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteVariableRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVariableRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVariableRequest& from);
  void MergeFrom(const DeleteVariableRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVariableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bool recursive = 2;
  void clear_recursive();
  static const int kRecursiveFieldNumber = 2;
  bool recursive() const;
  void set_recursive(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool recursive_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsDeleteVariableRequestImpl();
};
// -------------------------------------------------------------------

class ListWaitersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest) */ {
 public:
  ListWaitersRequest();
  virtual ~ListWaitersRequest();

  ListWaitersRequest(const ListWaitersRequest& from);

  inline ListWaitersRequest& operator=(const ListWaitersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListWaitersRequest(ListWaitersRequest&& from) noexcept
    : ListWaitersRequest() {
    *this = ::std::move(from);
  }

  inline ListWaitersRequest& operator=(ListWaitersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListWaitersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListWaitersRequest* internal_default_instance() {
    return reinterpret_cast<const ListWaitersRequest*>(
               &_ListWaitersRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ListWaitersRequest* other);
  friend void swap(ListWaitersRequest& a, ListWaitersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListWaitersRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListWaitersRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListWaitersRequest& from);
  void MergeFrom(const ListWaitersRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListWaitersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsListWaitersRequestImpl();
};
// -------------------------------------------------------------------

class ListWaitersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse) */ {
 public:
  ListWaitersResponse();
  virtual ~ListWaitersResponse();

  ListWaitersResponse(const ListWaitersResponse& from);

  inline ListWaitersResponse& operator=(const ListWaitersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListWaitersResponse(ListWaitersResponse&& from) noexcept
    : ListWaitersResponse() {
    *this = ::std::move(from);
  }

  inline ListWaitersResponse& operator=(ListWaitersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListWaitersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListWaitersResponse* internal_default_instance() {
    return reinterpret_cast<const ListWaitersResponse*>(
               &_ListWaitersResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ListWaitersResponse* other);
  friend void swap(ListWaitersResponse& a, ListWaitersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListWaitersResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListWaitersResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListWaitersResponse& from);
  void MergeFrom(const ListWaitersResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListWaitersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.runtimeconfig.v1beta1.Waiter waiters = 1;
  int waiters_size() const;
  void clear_waiters();
  static const int kWaitersFieldNumber = 1;
  const ::google::cloud::runtimeconfig::v1beta1::Waiter& waiters(int index) const;
  ::google::cloud::runtimeconfig::v1beta1::Waiter* mutable_waiters(int index);
  ::google::cloud::runtimeconfig::v1beta1::Waiter* add_waiters();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Waiter >*
      mutable_waiters();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Waiter >&
      waiters() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Waiter > waiters_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsListWaitersResponseImpl();
};
// -------------------------------------------------------------------

class GetWaiterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest) */ {
 public:
  GetWaiterRequest();
  virtual ~GetWaiterRequest();

  GetWaiterRequest(const GetWaiterRequest& from);

  inline GetWaiterRequest& operator=(const GetWaiterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWaiterRequest(GetWaiterRequest&& from) noexcept
    : GetWaiterRequest() {
    *this = ::std::move(from);
  }

  inline GetWaiterRequest& operator=(GetWaiterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWaiterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWaiterRequest* internal_default_instance() {
    return reinterpret_cast<const GetWaiterRequest*>(
               &_GetWaiterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetWaiterRequest* other);
  friend void swap(GetWaiterRequest& a, GetWaiterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWaiterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWaiterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWaiterRequest& from);
  void MergeFrom(const GetWaiterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWaiterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsGetWaiterRequestImpl();
};
// -------------------------------------------------------------------

class CreateWaiterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest) */ {
 public:
  CreateWaiterRequest();
  virtual ~CreateWaiterRequest();

  CreateWaiterRequest(const CreateWaiterRequest& from);

  inline CreateWaiterRequest& operator=(const CreateWaiterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateWaiterRequest(CreateWaiterRequest&& from) noexcept
    : CreateWaiterRequest() {
    *this = ::std::move(from);
  }

  inline CreateWaiterRequest& operator=(CreateWaiterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateWaiterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateWaiterRequest* internal_default_instance() {
    return reinterpret_cast<const CreateWaiterRequest*>(
               &_CreateWaiterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CreateWaiterRequest* other);
  friend void swap(CreateWaiterRequest& a, CreateWaiterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateWaiterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateWaiterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateWaiterRequest& from);
  void MergeFrom(const CreateWaiterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateWaiterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // .google.cloud.runtimeconfig.v1beta1.Waiter waiter = 2;
  bool has_waiter() const;
  void clear_waiter();
  static const int kWaiterFieldNumber = 2;
  const ::google::cloud::runtimeconfig::v1beta1::Waiter& waiter() const;
  ::google::cloud::runtimeconfig::v1beta1::Waiter* release_waiter();
  ::google::cloud::runtimeconfig::v1beta1::Waiter* mutable_waiter();
  void set_allocated_waiter(::google::cloud::runtimeconfig::v1beta1::Waiter* waiter);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::cloud::runtimeconfig::v1beta1::Waiter* waiter_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsCreateWaiterRequestImpl();
};
// -------------------------------------------------------------------

class DeleteWaiterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest) */ {
 public:
  DeleteWaiterRequest();
  virtual ~DeleteWaiterRequest();

  DeleteWaiterRequest(const DeleteWaiterRequest& from);

  inline DeleteWaiterRequest& operator=(const DeleteWaiterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteWaiterRequest(DeleteWaiterRequest&& from) noexcept
    : DeleteWaiterRequest() {
    *this = ::std::move(from);
  }

  inline DeleteWaiterRequest& operator=(DeleteWaiterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteWaiterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteWaiterRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteWaiterRequest*>(
               &_DeleteWaiterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(DeleteWaiterRequest* other);
  friend void swap(DeleteWaiterRequest& a, DeleteWaiterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteWaiterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteWaiterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteWaiterRequest& from);
  void MergeFrom(const DeleteWaiterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteWaiterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto::InitDefaultsDeleteWaiterRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListConfigsRequest

// string parent = 1;
inline void ListConfigsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListConfigsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListConfigsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
}
#if LANG_CXX11
inline void ListConfigsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
}
#endif
inline void ListConfigsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
}
inline void ListConfigsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
}
inline ::std::string* ListConfigsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfigsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListConfigsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.parent)
}

// int32 page_size = 2;
inline void ListConfigsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListConfigsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_size)
  return page_size_;
}
inline void ListConfigsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_size)
}

// string page_token = 3;
inline void ListConfigsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListConfigsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListConfigsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
}
#if LANG_CXX11
inline void ListConfigsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
}
#endif
inline void ListConfigsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
}
inline void ListConfigsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
}
inline ::std::string* ListConfigsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfigsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListConfigsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListConfigsRequest.page_token)
}

// -------------------------------------------------------------------

// ListConfigsResponse

// repeated .google.cloud.runtimeconfig.v1beta1.RuntimeConfig configs = 1;
inline int ListConfigsResponse::configs_size() const {
  return configs_.size();
}
inline const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig& ListConfigsResponse::configs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.configs)
  return configs_.Get(index);
}
inline ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* ListConfigsResponse::mutable_configs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.configs)
  return configs_.Mutable(index);
}
inline ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* ListConfigsResponse::add_configs() {
  // @@protoc_insertion_point(field_add:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.configs)
  return configs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig >*
ListConfigsResponse::mutable_configs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.configs)
  return &configs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig >&
ListConfigsResponse::configs() const {
  // @@protoc_insertion_point(field_list:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.configs)
  return configs_;
}

// string next_page_token = 2;
inline void ListConfigsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListConfigsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListConfigsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListConfigsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
}
#endif
inline void ListConfigsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
}
inline void ListConfigsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
}
inline ::std::string* ListConfigsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfigsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListConfigsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListConfigsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetConfigRequest

// string name = 2;
inline void GetConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
  return name_.GetNoArena();
}
inline void GetConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
}
#if LANG_CXX11
inline void GetConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
}
#endif
inline void GetConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
}
inline void GetConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
}
inline ::std::string* GetConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.GetConfigRequest.name)
}

// -------------------------------------------------------------------

// CreateConfigRequest

// string parent = 1;
inline void CreateConfigRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateConfigRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateConfigRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
}
#if LANG_CXX11
inline void CreateConfigRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
}
#endif
inline void CreateConfigRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
}
inline void CreateConfigRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
}
inline ::std::string* CreateConfigRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateConfigRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateConfigRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.parent)
}

// .google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;
inline bool CreateConfigRequest::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig& CreateConfigRequest::config() const {
  const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* p = config_;
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig*>(
      &::google::cloud::runtimeconfig::v1beta1::_RuntimeConfig_default_instance_);
}
inline ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* CreateConfigRequest::release_config() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.config)
  
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* CreateConfigRequest::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.config)
  return config_;
}
inline void CreateConfigRequest::set_allocated_config(::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_);
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.config)
}

// string request_id = 3;
inline void CreateConfigRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateConfigRequest::request_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
  return request_id_.GetNoArena();
}
inline void CreateConfigRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
}
#if LANG_CXX11
inline void CreateConfigRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
}
#endif
inline void CreateConfigRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
}
inline void CreateConfigRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
}
inline ::std::string* CreateConfigRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateConfigRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateConfigRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest.request_id)
}

// -------------------------------------------------------------------

// UpdateConfigRequest

// string name = 1;
inline void UpdateConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
  return name_.GetNoArena();
}
inline void UpdateConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
}
#if LANG_CXX11
inline void UpdateConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
}
#endif
inline void UpdateConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
}
inline void UpdateConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
}
inline ::std::string* UpdateConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.name)
}

// .google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;
inline bool UpdateConfigRequest::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig& UpdateConfigRequest::config() const {
  const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* p = config_;
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig*>(
      &::google::cloud::runtimeconfig::v1beta1::_RuntimeConfig_default_instance_);
}
inline ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* UpdateConfigRequest::release_config() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.config)
  
  ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* UpdateConfigRequest::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::google::cloud::runtimeconfig::v1beta1::RuntimeConfig;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.config)
  return config_;
}
inline void UpdateConfigRequest::set_allocated_config(::google::cloud::runtimeconfig::v1beta1::RuntimeConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_);
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest.config)
}

// -------------------------------------------------------------------

// DeleteConfigRequest

// string name = 1;
inline void DeleteConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
  return name_.GetNoArena();
}
inline void DeleteConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
}
#if LANG_CXX11
inline void DeleteConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
}
#endif
inline void DeleteConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
}
inline void DeleteConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
}
inline ::std::string* DeleteConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest.name)
}

// -------------------------------------------------------------------

// ListVariablesRequest

// string parent = 1;
inline void ListVariablesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVariablesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListVariablesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
}
#if LANG_CXX11
inline void ListVariablesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
}
#endif
inline void ListVariablesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
}
inline void ListVariablesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
}
inline ::std::string* ListVariablesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVariablesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVariablesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.parent)
}

// string filter = 2;
inline void ListVariablesRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVariablesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
  return filter_.GetNoArena();
}
inline void ListVariablesRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
}
#if LANG_CXX11
inline void ListVariablesRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
}
#endif
inline void ListVariablesRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
}
inline void ListVariablesRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
}
inline ::std::string* ListVariablesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVariablesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVariablesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.filter)
}

// int32 page_size = 3;
inline void ListVariablesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListVariablesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_size)
  return page_size_;
}
inline void ListVariablesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_size)
}

// string page_token = 4;
inline void ListVariablesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVariablesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListVariablesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
}
#if LANG_CXX11
inline void ListVariablesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
}
#endif
inline void ListVariablesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
}
inline void ListVariablesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
}
inline ::std::string* ListVariablesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVariablesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVariablesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.page_token)
}

// bool return_values = 5;
inline void ListVariablesRequest::clear_return_values() {
  return_values_ = false;
}
inline bool ListVariablesRequest::return_values() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.return_values)
  return return_values_;
}
inline void ListVariablesRequest::set_return_values(bool value) {
  
  return_values_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListVariablesRequest.return_values)
}

// -------------------------------------------------------------------

// ListVariablesResponse

// repeated .google.cloud.runtimeconfig.v1beta1.Variable variables = 1;
inline int ListVariablesResponse::variables_size() const {
  return variables_.size();
}
inline const ::google::cloud::runtimeconfig::v1beta1::Variable& ListVariablesResponse::variables(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.variables)
  return variables_.Get(index);
}
inline ::google::cloud::runtimeconfig::v1beta1::Variable* ListVariablesResponse::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.variables)
  return variables_.Mutable(index);
}
inline ::google::cloud::runtimeconfig::v1beta1::Variable* ListVariablesResponse::add_variables() {
  // @@protoc_insertion_point(field_add:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.variables)
  return variables_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Variable >*
ListVariablesResponse::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.variables)
  return &variables_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Variable >&
ListVariablesResponse::variables() const {
  // @@protoc_insertion_point(field_list:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.variables)
  return variables_;
}

// string next_page_token = 2;
inline void ListVariablesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVariablesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListVariablesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListVariablesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
}
#endif
inline void ListVariablesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
}
inline void ListVariablesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
}
inline ::std::string* ListVariablesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVariablesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVariablesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListVariablesResponse.next_page_token)
}

// -------------------------------------------------------------------

// WatchVariableRequest

// string name = 1;
inline void WatchVariableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WatchVariableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
  return name_.GetNoArena();
}
inline void WatchVariableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
}
#if LANG_CXX11
inline void WatchVariableRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
}
#endif
inline void WatchVariableRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
}
inline void WatchVariableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
}
inline ::std::string* WatchVariableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WatchVariableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WatchVariableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.name)
}

// .google.protobuf.Timestamp newer_than = 4;
inline bool WatchVariableRequest::has_newer_than() const {
  return this != internal_default_instance() && newer_than_ != NULL;
}
inline const ::google::protobuf::Timestamp& WatchVariableRequest::newer_than() const {
  const ::google::protobuf::Timestamp* p = newer_than_;
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.newer_than)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* WatchVariableRequest::release_newer_than() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.newer_than)
  
  ::google::protobuf::Timestamp* temp = newer_than_;
  newer_than_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* WatchVariableRequest::mutable_newer_than() {
  
  if (newer_than_ == NULL) {
    newer_than_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.newer_than)
  return newer_than_;
}
inline void WatchVariableRequest::set_allocated_newer_than(::google::protobuf::Timestamp* newer_than) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(newer_than_);
  }
  if (newer_than) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(newer_than)->GetArena();
    if (message_arena != submessage_arena) {
      newer_than = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, newer_than, submessage_arena);
    }
    
  } else {
    
  }
  newer_than_ = newer_than;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.WatchVariableRequest.newer_than)
}

// -------------------------------------------------------------------

// GetVariableRequest

// string name = 1;
inline void GetVariableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVariableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
  return name_.GetNoArena();
}
inline void GetVariableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
}
#if LANG_CXX11
inline void GetVariableRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
}
#endif
inline void GetVariableRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
}
inline void GetVariableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
}
inline ::std::string* GetVariableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVariableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVariableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.GetVariableRequest.name)
}

// -------------------------------------------------------------------

// CreateVariableRequest

// string parent = 1;
inline void CreateVariableRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateVariableRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateVariableRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
}
#if LANG_CXX11
inline void CreateVariableRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
}
#endif
inline void CreateVariableRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
}
inline void CreateVariableRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
}
inline ::std::string* CreateVariableRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateVariableRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateVariableRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.parent)
}

// .google.cloud.runtimeconfig.v1beta1.Variable variable = 2;
inline bool CreateVariableRequest::has_variable() const {
  return this != internal_default_instance() && variable_ != NULL;
}
inline const ::google::cloud::runtimeconfig::v1beta1::Variable& CreateVariableRequest::variable() const {
  const ::google::cloud::runtimeconfig::v1beta1::Variable* p = variable_;
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.variable)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::runtimeconfig::v1beta1::Variable*>(
      &::google::cloud::runtimeconfig::v1beta1::_Variable_default_instance_);
}
inline ::google::cloud::runtimeconfig::v1beta1::Variable* CreateVariableRequest::release_variable() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.variable)
  
  ::google::cloud::runtimeconfig::v1beta1::Variable* temp = variable_;
  variable_ = NULL;
  return temp;
}
inline ::google::cloud::runtimeconfig::v1beta1::Variable* CreateVariableRequest::mutable_variable() {
  
  if (variable_ == NULL) {
    variable_ = new ::google::cloud::runtimeconfig::v1beta1::Variable;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.variable)
  return variable_;
}
inline void CreateVariableRequest::set_allocated_variable(::google::cloud::runtimeconfig::v1beta1::Variable* variable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(variable_);
  }
  if (variable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      variable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, variable, submessage_arena);
    }
    
  } else {
    
  }
  variable_ = variable;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.variable)
}

// string request_id = 3;
inline void CreateVariableRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateVariableRequest::request_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
  return request_id_.GetNoArena();
}
inline void CreateVariableRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
}
#if LANG_CXX11
inline void CreateVariableRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
}
#endif
inline void CreateVariableRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
}
inline void CreateVariableRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
}
inline ::std::string* CreateVariableRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateVariableRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateVariableRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateVariableRequest.request_id)
}

// -------------------------------------------------------------------

// UpdateVariableRequest

// string name = 1;
inline void UpdateVariableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateVariableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
  return name_.GetNoArena();
}
inline void UpdateVariableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
}
#if LANG_CXX11
inline void UpdateVariableRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
}
#endif
inline void UpdateVariableRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
}
inline void UpdateVariableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
}
inline ::std::string* UpdateVariableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateVariableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateVariableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.name)
}

// .google.cloud.runtimeconfig.v1beta1.Variable variable = 2;
inline bool UpdateVariableRequest::has_variable() const {
  return this != internal_default_instance() && variable_ != NULL;
}
inline const ::google::cloud::runtimeconfig::v1beta1::Variable& UpdateVariableRequest::variable() const {
  const ::google::cloud::runtimeconfig::v1beta1::Variable* p = variable_;
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.variable)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::runtimeconfig::v1beta1::Variable*>(
      &::google::cloud::runtimeconfig::v1beta1::_Variable_default_instance_);
}
inline ::google::cloud::runtimeconfig::v1beta1::Variable* UpdateVariableRequest::release_variable() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.variable)
  
  ::google::cloud::runtimeconfig::v1beta1::Variable* temp = variable_;
  variable_ = NULL;
  return temp;
}
inline ::google::cloud::runtimeconfig::v1beta1::Variable* UpdateVariableRequest::mutable_variable() {
  
  if (variable_ == NULL) {
    variable_ = new ::google::cloud::runtimeconfig::v1beta1::Variable;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.variable)
  return variable_;
}
inline void UpdateVariableRequest::set_allocated_variable(::google::cloud::runtimeconfig::v1beta1::Variable* variable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(variable_);
  }
  if (variable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      variable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, variable, submessage_arena);
    }
    
  } else {
    
  }
  variable_ = variable;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest.variable)
}

// -------------------------------------------------------------------

// DeleteVariableRequest

// string name = 1;
inline void DeleteVariableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVariableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
  return name_.GetNoArena();
}
inline void DeleteVariableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
}
#if LANG_CXX11
inline void DeleteVariableRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
}
#endif
inline void DeleteVariableRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
}
inline void DeleteVariableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
}
inline ::std::string* DeleteVariableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVariableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVariableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.name)
}

// bool recursive = 2;
inline void DeleteVariableRequest::clear_recursive() {
  recursive_ = false;
}
inline bool DeleteVariableRequest::recursive() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.recursive)
  return recursive_;
}
inline void DeleteVariableRequest::set_recursive(bool value) {
  
  recursive_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest.recursive)
}

// -------------------------------------------------------------------

// ListWaitersRequest

// string parent = 1;
inline void ListWaitersRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListWaitersRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
  return parent_.GetNoArena();
}
inline void ListWaitersRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
}
#if LANG_CXX11
inline void ListWaitersRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
}
#endif
inline void ListWaitersRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
}
inline void ListWaitersRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
}
inline ::std::string* ListWaitersRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListWaitersRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListWaitersRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.parent)
}

// int32 page_size = 2;
inline void ListWaitersRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListWaitersRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_size)
  return page_size_;
}
inline void ListWaitersRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_size)
}

// string page_token = 3;
inline void ListWaitersRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListWaitersRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListWaitersRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
}
#if LANG_CXX11
inline void ListWaitersRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
}
#endif
inline void ListWaitersRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
}
inline void ListWaitersRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
}
inline ::std::string* ListWaitersRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListWaitersRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListWaitersRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListWaitersRequest.page_token)
}

// -------------------------------------------------------------------

// ListWaitersResponse

// repeated .google.cloud.runtimeconfig.v1beta1.Waiter waiters = 1;
inline int ListWaitersResponse::waiters_size() const {
  return waiters_.size();
}
inline const ::google::cloud::runtimeconfig::v1beta1::Waiter& ListWaitersResponse::waiters(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.waiters)
  return waiters_.Get(index);
}
inline ::google::cloud::runtimeconfig::v1beta1::Waiter* ListWaitersResponse::mutable_waiters(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.waiters)
  return waiters_.Mutable(index);
}
inline ::google::cloud::runtimeconfig::v1beta1::Waiter* ListWaitersResponse::add_waiters() {
  // @@protoc_insertion_point(field_add:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.waiters)
  return waiters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Waiter >*
ListWaitersResponse::mutable_waiters() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.waiters)
  return &waiters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::runtimeconfig::v1beta1::Waiter >&
ListWaitersResponse::waiters() const {
  // @@protoc_insertion_point(field_list:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.waiters)
  return waiters_;
}

// string next_page_token = 2;
inline void ListWaitersResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListWaitersResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListWaitersResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
}
#if LANG_CXX11
inline void ListWaitersResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
}
#endif
inline void ListWaitersResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
}
inline void ListWaitersResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
}
inline ::std::string* ListWaitersResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListWaitersResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListWaitersResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.ListWaitersResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetWaiterRequest

// string name = 1;
inline void GetWaiterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetWaiterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
  return name_.GetNoArena();
}
inline void GetWaiterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
}
#if LANG_CXX11
inline void GetWaiterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
}
#endif
inline void GetWaiterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
}
inline void GetWaiterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
}
inline ::std::string* GetWaiterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWaiterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWaiterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.GetWaiterRequest.name)
}

// -------------------------------------------------------------------

// CreateWaiterRequest

// string parent = 1;
inline void CreateWaiterRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateWaiterRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateWaiterRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
}
#if LANG_CXX11
inline void CreateWaiterRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
}
#endif
inline void CreateWaiterRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
}
inline void CreateWaiterRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
}
inline ::std::string* CreateWaiterRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateWaiterRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateWaiterRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.parent)
}

// .google.cloud.runtimeconfig.v1beta1.Waiter waiter = 2;
inline bool CreateWaiterRequest::has_waiter() const {
  return this != internal_default_instance() && waiter_ != NULL;
}
inline const ::google::cloud::runtimeconfig::v1beta1::Waiter& CreateWaiterRequest::waiter() const {
  const ::google::cloud::runtimeconfig::v1beta1::Waiter* p = waiter_;
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.waiter)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::runtimeconfig::v1beta1::Waiter*>(
      &::google::cloud::runtimeconfig::v1beta1::_Waiter_default_instance_);
}
inline ::google::cloud::runtimeconfig::v1beta1::Waiter* CreateWaiterRequest::release_waiter() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.waiter)
  
  ::google::cloud::runtimeconfig::v1beta1::Waiter* temp = waiter_;
  waiter_ = NULL;
  return temp;
}
inline ::google::cloud::runtimeconfig::v1beta1::Waiter* CreateWaiterRequest::mutable_waiter() {
  
  if (waiter_ == NULL) {
    waiter_ = new ::google::cloud::runtimeconfig::v1beta1::Waiter;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.waiter)
  return waiter_;
}
inline void CreateWaiterRequest::set_allocated_waiter(::google::cloud::runtimeconfig::v1beta1::Waiter* waiter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(waiter_);
  }
  if (waiter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      waiter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, waiter, submessage_arena);
    }
    
  } else {
    
  }
  waiter_ = waiter;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.waiter)
}

// string request_id = 3;
inline void CreateWaiterRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateWaiterRequest::request_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
  return request_id_.GetNoArena();
}
inline void CreateWaiterRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
}
#if LANG_CXX11
inline void CreateWaiterRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
}
#endif
inline void CreateWaiterRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
}
inline void CreateWaiterRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
}
inline ::std::string* CreateWaiterRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateWaiterRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateWaiterRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest.request_id)
}

// -------------------------------------------------------------------

// DeleteWaiterRequest

// string name = 1;
inline void DeleteWaiterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteWaiterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
  return name_.GetNoArena();
}
inline void DeleteWaiterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
}
#if LANG_CXX11
inline void DeleteWaiterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
}
#endif
inline void DeleteWaiterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
}
inline void DeleteWaiterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
}
inline ::std::string* DeleteWaiterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteWaiterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteWaiterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace runtimeconfig
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fruntimeconfig_2fv1beta1_2fruntimeconfig_2eproto__INCLUDED
