// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/appengine.proto

#ifndef PROTOBUF_google_2fappengine_2fv1_2fappengine_2eproto__INCLUDED
#define PROTOBUF_google_2fappengine_2fv1_2fappengine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/appengine/v1/application.pb.h"
#include "google/appengine/v1/instance.pb.h"
#include "google/appengine/v1/service.pb.h"
#include "google/appengine/v1/version.pb.h"
#include "google/iam/v1/iam_policy.pb.h"
#include "google/iam/v1/policy.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fappengine_2fv1_2fappengine_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGetApplicationRequestImpl();
void InitDefaultsGetApplicationRequest();
void InitDefaultsRepairApplicationRequestImpl();
void InitDefaultsRepairApplicationRequest();
void InitDefaultsListServicesRequestImpl();
void InitDefaultsListServicesRequest();
void InitDefaultsListServicesResponseImpl();
void InitDefaultsListServicesResponse();
void InitDefaultsGetServiceRequestImpl();
void InitDefaultsGetServiceRequest();
void InitDefaultsUpdateServiceRequestImpl();
void InitDefaultsUpdateServiceRequest();
void InitDefaultsDeleteServiceRequestImpl();
void InitDefaultsDeleteServiceRequest();
void InitDefaultsListVersionsRequestImpl();
void InitDefaultsListVersionsRequest();
void InitDefaultsListVersionsResponseImpl();
void InitDefaultsListVersionsResponse();
void InitDefaultsGetVersionRequestImpl();
void InitDefaultsGetVersionRequest();
void InitDefaultsCreateVersionRequestImpl();
void InitDefaultsCreateVersionRequest();
void InitDefaultsUpdateVersionRequestImpl();
void InitDefaultsUpdateVersionRequest();
void InitDefaultsDeleteVersionRequestImpl();
void InitDefaultsDeleteVersionRequest();
void InitDefaultsListInstancesRequestImpl();
void InitDefaultsListInstancesRequest();
void InitDefaultsListInstancesResponseImpl();
void InitDefaultsListInstancesResponse();
void InitDefaultsGetInstanceRequestImpl();
void InitDefaultsGetInstanceRequest();
void InitDefaultsDeleteInstanceRequestImpl();
void InitDefaultsDeleteInstanceRequest();
void InitDefaultsDebugInstanceRequestImpl();
void InitDefaultsDebugInstanceRequest();
inline void InitDefaults() {
  InitDefaultsGetApplicationRequest();
  InitDefaultsRepairApplicationRequest();
  InitDefaultsListServicesRequest();
  InitDefaultsListServicesResponse();
  InitDefaultsGetServiceRequest();
  InitDefaultsUpdateServiceRequest();
  InitDefaultsDeleteServiceRequest();
  InitDefaultsListVersionsRequest();
  InitDefaultsListVersionsResponse();
  InitDefaultsGetVersionRequest();
  InitDefaultsCreateVersionRequest();
  InitDefaultsUpdateVersionRequest();
  InitDefaultsDeleteVersionRequest();
  InitDefaultsListInstancesRequest();
  InitDefaultsListInstancesResponse();
  InitDefaultsGetInstanceRequest();
  InitDefaultsDeleteInstanceRequest();
  InitDefaultsDebugInstanceRequest();
}
}  // namespace protobuf_google_2fappengine_2fv1_2fappengine_2eproto
namespace google {
namespace appengine {
namespace v1 {
class CreateVersionRequest;
class CreateVersionRequestDefaultTypeInternal;
extern CreateVersionRequestDefaultTypeInternal _CreateVersionRequest_default_instance_;
class DebugInstanceRequest;
class DebugInstanceRequestDefaultTypeInternal;
extern DebugInstanceRequestDefaultTypeInternal _DebugInstanceRequest_default_instance_;
class DeleteInstanceRequest;
class DeleteInstanceRequestDefaultTypeInternal;
extern DeleteInstanceRequestDefaultTypeInternal _DeleteInstanceRequest_default_instance_;
class DeleteServiceRequest;
class DeleteServiceRequestDefaultTypeInternal;
extern DeleteServiceRequestDefaultTypeInternal _DeleteServiceRequest_default_instance_;
class DeleteVersionRequest;
class DeleteVersionRequestDefaultTypeInternal;
extern DeleteVersionRequestDefaultTypeInternal _DeleteVersionRequest_default_instance_;
class GetApplicationRequest;
class GetApplicationRequestDefaultTypeInternal;
extern GetApplicationRequestDefaultTypeInternal _GetApplicationRequest_default_instance_;
class GetInstanceRequest;
class GetInstanceRequestDefaultTypeInternal;
extern GetInstanceRequestDefaultTypeInternal _GetInstanceRequest_default_instance_;
class GetServiceRequest;
class GetServiceRequestDefaultTypeInternal;
extern GetServiceRequestDefaultTypeInternal _GetServiceRequest_default_instance_;
class GetVersionRequest;
class GetVersionRequestDefaultTypeInternal;
extern GetVersionRequestDefaultTypeInternal _GetVersionRequest_default_instance_;
class ListInstancesRequest;
class ListInstancesRequestDefaultTypeInternal;
extern ListInstancesRequestDefaultTypeInternal _ListInstancesRequest_default_instance_;
class ListInstancesResponse;
class ListInstancesResponseDefaultTypeInternal;
extern ListInstancesResponseDefaultTypeInternal _ListInstancesResponse_default_instance_;
class ListServicesRequest;
class ListServicesRequestDefaultTypeInternal;
extern ListServicesRequestDefaultTypeInternal _ListServicesRequest_default_instance_;
class ListServicesResponse;
class ListServicesResponseDefaultTypeInternal;
extern ListServicesResponseDefaultTypeInternal _ListServicesResponse_default_instance_;
class ListVersionsRequest;
class ListVersionsRequestDefaultTypeInternal;
extern ListVersionsRequestDefaultTypeInternal _ListVersionsRequest_default_instance_;
class ListVersionsResponse;
class ListVersionsResponseDefaultTypeInternal;
extern ListVersionsResponseDefaultTypeInternal _ListVersionsResponse_default_instance_;
class RepairApplicationRequest;
class RepairApplicationRequestDefaultTypeInternal;
extern RepairApplicationRequestDefaultTypeInternal _RepairApplicationRequest_default_instance_;
class UpdateServiceRequest;
class UpdateServiceRequestDefaultTypeInternal;
extern UpdateServiceRequestDefaultTypeInternal _UpdateServiceRequest_default_instance_;
class UpdateVersionRequest;
class UpdateVersionRequestDefaultTypeInternal;
extern UpdateVersionRequestDefaultTypeInternal _UpdateVersionRequest_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace google {
namespace appengine {
namespace v1 {

enum VersionView {
  BASIC = 0,
  FULL = 1,
  VersionView_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VersionView_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VersionView_IsValid(int value);
const VersionView VersionView_MIN = BASIC;
const VersionView VersionView_MAX = FULL;
const int VersionView_ARRAYSIZE = VersionView_MAX + 1;

const ::google::protobuf::EnumDescriptor* VersionView_descriptor();
inline const ::std::string& VersionView_Name(VersionView value) {
  return ::google::protobuf::internal::NameOfEnum(
    VersionView_descriptor(), value);
}
inline bool VersionView_Parse(
    const ::std::string& name, VersionView* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VersionView>(
    VersionView_descriptor(), name, value);
}
// ===================================================================

class GetApplicationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.GetApplicationRequest) */ {
 public:
  GetApplicationRequest();
  virtual ~GetApplicationRequest();

  GetApplicationRequest(const GetApplicationRequest& from);

  inline GetApplicationRequest& operator=(const GetApplicationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetApplicationRequest(GetApplicationRequest&& from) noexcept
    : GetApplicationRequest() {
    *this = ::std::move(from);
  }

  inline GetApplicationRequest& operator=(GetApplicationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetApplicationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetApplicationRequest* internal_default_instance() {
    return reinterpret_cast<const GetApplicationRequest*>(
               &_GetApplicationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetApplicationRequest* other);
  friend void swap(GetApplicationRequest& a, GetApplicationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetApplicationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetApplicationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetApplicationRequest& from);
  void MergeFrom(const GetApplicationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetApplicationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.GetApplicationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsGetApplicationRequestImpl();
};
// -------------------------------------------------------------------

class RepairApplicationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.RepairApplicationRequest) */ {
 public:
  RepairApplicationRequest();
  virtual ~RepairApplicationRequest();

  RepairApplicationRequest(const RepairApplicationRequest& from);

  inline RepairApplicationRequest& operator=(const RepairApplicationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RepairApplicationRequest(RepairApplicationRequest&& from) noexcept
    : RepairApplicationRequest() {
    *this = ::std::move(from);
  }

  inline RepairApplicationRequest& operator=(RepairApplicationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RepairApplicationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RepairApplicationRequest* internal_default_instance() {
    return reinterpret_cast<const RepairApplicationRequest*>(
               &_RepairApplicationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RepairApplicationRequest* other);
  friend void swap(RepairApplicationRequest& a, RepairApplicationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RepairApplicationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RepairApplicationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RepairApplicationRequest& from);
  void MergeFrom(const RepairApplicationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RepairApplicationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.RepairApplicationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsRepairApplicationRequestImpl();
};
// -------------------------------------------------------------------

class ListServicesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ListServicesRequest) */ {
 public:
  ListServicesRequest();
  virtual ~ListServicesRequest();

  ListServicesRequest(const ListServicesRequest& from);

  inline ListServicesRequest& operator=(const ListServicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListServicesRequest(ListServicesRequest&& from) noexcept
    : ListServicesRequest() {
    *this = ::std::move(from);
  }

  inline ListServicesRequest& operator=(ListServicesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServicesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListServicesRequest* internal_default_instance() {
    return reinterpret_cast<const ListServicesRequest*>(
               &_ListServicesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ListServicesRequest* other);
  friend void swap(ListServicesRequest& a, ListServicesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListServicesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListServicesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListServicesRequest& from);
  void MergeFrom(const ListServicesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListServicesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ListServicesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsListServicesRequestImpl();
};
// -------------------------------------------------------------------

class ListServicesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ListServicesResponse) */ {
 public:
  ListServicesResponse();
  virtual ~ListServicesResponse();

  ListServicesResponse(const ListServicesResponse& from);

  inline ListServicesResponse& operator=(const ListServicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListServicesResponse(ListServicesResponse&& from) noexcept
    : ListServicesResponse() {
    *this = ::std::move(from);
  }

  inline ListServicesResponse& operator=(ListServicesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServicesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListServicesResponse* internal_default_instance() {
    return reinterpret_cast<const ListServicesResponse*>(
               &_ListServicesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListServicesResponse* other);
  friend void swap(ListServicesResponse& a, ListServicesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListServicesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListServicesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListServicesResponse& from);
  void MergeFrom(const ListServicesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListServicesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.appengine.v1.Service services = 1;
  int services_size() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  const ::google::appengine::v1::Service& services(int index) const;
  ::google::appengine::v1::Service* mutable_services(int index);
  ::google::appengine::v1::Service* add_services();
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Service >*
      mutable_services();
  const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Service >&
      services() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ListServicesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Service > services_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsListServicesResponseImpl();
};
// -------------------------------------------------------------------

class GetServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.GetServiceRequest) */ {
 public:
  GetServiceRequest();
  virtual ~GetServiceRequest();

  GetServiceRequest(const GetServiceRequest& from);

  inline GetServiceRequest& operator=(const GetServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetServiceRequest(GetServiceRequest&& from) noexcept
    : GetServiceRequest() {
    *this = ::std::move(from);
  }

  inline GetServiceRequest& operator=(GetServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetServiceRequest* internal_default_instance() {
    return reinterpret_cast<const GetServiceRequest*>(
               &_GetServiceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetServiceRequest* other);
  friend void swap(GetServiceRequest& a, GetServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetServiceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetServiceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetServiceRequest& from);
  void MergeFrom(const GetServiceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.GetServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsGetServiceRequestImpl();
};
// -------------------------------------------------------------------

class UpdateServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.UpdateServiceRequest) */ {
 public:
  UpdateServiceRequest();
  virtual ~UpdateServiceRequest();

  UpdateServiceRequest(const UpdateServiceRequest& from);

  inline UpdateServiceRequest& operator=(const UpdateServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateServiceRequest(UpdateServiceRequest&& from) noexcept
    : UpdateServiceRequest() {
    *this = ::std::move(from);
  }

  inline UpdateServiceRequest& operator=(UpdateServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateServiceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateServiceRequest*>(
               &_UpdateServiceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(UpdateServiceRequest* other);
  friend void swap(UpdateServiceRequest& a, UpdateServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateServiceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateServiceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateServiceRequest& from);
  void MergeFrom(const UpdateServiceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.appengine.v1.Service service = 2;
  bool has_service() const;
  void clear_service();
  static const int kServiceFieldNumber = 2;
  const ::google::appengine::v1::Service& service() const;
  ::google::appengine::v1::Service* release_service();
  ::google::appengine::v1::Service* mutable_service();
  void set_allocated_service(::google::appengine::v1::Service* service);

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);

  // bool migrate_traffic = 4;
  void clear_migrate_traffic();
  static const int kMigrateTrafficFieldNumber = 4;
  bool migrate_traffic() const;
  void set_migrate_traffic(bool value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.UpdateServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::appengine::v1::Service* service_;
  ::google::protobuf::FieldMask* update_mask_;
  bool migrate_traffic_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsUpdateServiceRequestImpl();
};
// -------------------------------------------------------------------

class DeleteServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.DeleteServiceRequest) */ {
 public:
  DeleteServiceRequest();
  virtual ~DeleteServiceRequest();

  DeleteServiceRequest(const DeleteServiceRequest& from);

  inline DeleteServiceRequest& operator=(const DeleteServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteServiceRequest(DeleteServiceRequest&& from) noexcept
    : DeleteServiceRequest() {
    *this = ::std::move(from);
  }

  inline DeleteServiceRequest& operator=(DeleteServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteServiceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteServiceRequest*>(
               &_DeleteServiceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DeleteServiceRequest* other);
  friend void swap(DeleteServiceRequest& a, DeleteServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteServiceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteServiceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteServiceRequest& from);
  void MergeFrom(const DeleteServiceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.DeleteServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsDeleteServiceRequestImpl();
};
// -------------------------------------------------------------------

class ListVersionsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ListVersionsRequest) */ {
 public:
  ListVersionsRequest();
  virtual ~ListVersionsRequest();

  ListVersionsRequest(const ListVersionsRequest& from);

  inline ListVersionsRequest& operator=(const ListVersionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVersionsRequest(ListVersionsRequest&& from) noexcept
    : ListVersionsRequest() {
    *this = ::std::move(from);
  }

  inline ListVersionsRequest& operator=(ListVersionsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVersionsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVersionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListVersionsRequest*>(
               &_ListVersionsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ListVersionsRequest* other);
  friend void swap(ListVersionsRequest& a, ListVersionsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVersionsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVersionsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVersionsRequest& from);
  void MergeFrom(const ListVersionsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVersionsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // .google.appengine.v1.VersionView view = 2;
  void clear_view();
  static const int kViewFieldNumber = 2;
  ::google::appengine::v1::VersionView view() const;
  void set_view(::google::appengine::v1::VersionView value);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ListVersionsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  int view_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsListVersionsRequestImpl();
};
// -------------------------------------------------------------------

class ListVersionsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ListVersionsResponse) */ {
 public:
  ListVersionsResponse();
  virtual ~ListVersionsResponse();

  ListVersionsResponse(const ListVersionsResponse& from);

  inline ListVersionsResponse& operator=(const ListVersionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVersionsResponse(ListVersionsResponse&& from) noexcept
    : ListVersionsResponse() {
    *this = ::std::move(from);
  }

  inline ListVersionsResponse& operator=(ListVersionsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVersionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVersionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListVersionsResponse*>(
               &_ListVersionsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ListVersionsResponse* other);
  friend void swap(ListVersionsResponse& a, ListVersionsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVersionsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVersionsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVersionsResponse& from);
  void MergeFrom(const ListVersionsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVersionsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.appengine.v1.Version versions = 1;
  int versions_size() const;
  void clear_versions();
  static const int kVersionsFieldNumber = 1;
  const ::google::appengine::v1::Version& versions(int index) const;
  ::google::appengine::v1::Version* mutable_versions(int index);
  ::google::appengine::v1::Version* add_versions();
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Version >*
      mutable_versions();
  const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Version >&
      versions() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ListVersionsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Version > versions_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsListVersionsResponseImpl();
};
// -------------------------------------------------------------------

class GetVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.GetVersionRequest) */ {
 public:
  GetVersionRequest();
  virtual ~GetVersionRequest();

  GetVersionRequest(const GetVersionRequest& from);

  inline GetVersionRequest& operator=(const GetVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVersionRequest(GetVersionRequest&& from) noexcept
    : GetVersionRequest() {
    *this = ::std::move(from);
  }

  inline GetVersionRequest& operator=(GetVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVersionRequest* internal_default_instance() {
    return reinterpret_cast<const GetVersionRequest*>(
               &_GetVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetVersionRequest* other);
  friend void swap(GetVersionRequest& a, GetVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVersionRequest& from);
  void MergeFrom(const GetVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.appengine.v1.VersionView view = 2;
  void clear_view();
  static const int kViewFieldNumber = 2;
  ::google::appengine::v1::VersionView view() const;
  void set_view(::google::appengine::v1::VersionView value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.GetVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int view_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsGetVersionRequestImpl();
};
// -------------------------------------------------------------------

class CreateVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.CreateVersionRequest) */ {
 public:
  CreateVersionRequest();
  virtual ~CreateVersionRequest();

  CreateVersionRequest(const CreateVersionRequest& from);

  inline CreateVersionRequest& operator=(const CreateVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateVersionRequest(CreateVersionRequest&& from) noexcept
    : CreateVersionRequest() {
    *this = ::std::move(from);
  }

  inline CreateVersionRequest& operator=(CreateVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateVersionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateVersionRequest*>(
               &_CreateVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CreateVersionRequest* other);
  friend void swap(CreateVersionRequest& a, CreateVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVersionRequest& from);
  void MergeFrom(const CreateVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.appengine.v1.Version version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::google::appengine::v1::Version& version() const;
  ::google::appengine::v1::Version* release_version();
  ::google::appengine::v1::Version* mutable_version();
  void set_allocated_version(::google::appengine::v1::Version* version);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.CreateVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::appengine::v1::Version* version_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsCreateVersionRequestImpl();
};
// -------------------------------------------------------------------

class UpdateVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.UpdateVersionRequest) */ {
 public:
  UpdateVersionRequest();
  virtual ~UpdateVersionRequest();

  UpdateVersionRequest(const UpdateVersionRequest& from);

  inline UpdateVersionRequest& operator=(const UpdateVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateVersionRequest(UpdateVersionRequest&& from) noexcept
    : UpdateVersionRequest() {
    *this = ::std::move(from);
  }

  inline UpdateVersionRequest& operator=(UpdateVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateVersionRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateVersionRequest*>(
               &_UpdateVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(UpdateVersionRequest* other);
  friend void swap(UpdateVersionRequest& a, UpdateVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateVersionRequest& from);
  void MergeFrom(const UpdateVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.appengine.v1.Version version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::google::appengine::v1::Version& version() const;
  ::google::appengine::v1::Version* release_version();
  ::google::appengine::v1::Version* mutable_version();
  void set_allocated_version(::google::appengine::v1::Version* version);

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.UpdateVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::appengine::v1::Version* version_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsUpdateVersionRequestImpl();
};
// -------------------------------------------------------------------

class DeleteVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.DeleteVersionRequest) */ {
 public:
  DeleteVersionRequest();
  virtual ~DeleteVersionRequest();

  DeleteVersionRequest(const DeleteVersionRequest& from);

  inline DeleteVersionRequest& operator=(const DeleteVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteVersionRequest(DeleteVersionRequest&& from) noexcept
    : DeleteVersionRequest() {
    *this = ::std::move(from);
  }

  inline DeleteVersionRequest& operator=(DeleteVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteVersionRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteVersionRequest*>(
               &_DeleteVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DeleteVersionRequest* other);
  friend void swap(DeleteVersionRequest& a, DeleteVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVersionRequest& from);
  void MergeFrom(const DeleteVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.DeleteVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsDeleteVersionRequestImpl();
};
// -------------------------------------------------------------------

class ListInstancesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ListInstancesRequest) */ {
 public:
  ListInstancesRequest();
  virtual ~ListInstancesRequest();

  ListInstancesRequest(const ListInstancesRequest& from);

  inline ListInstancesRequest& operator=(const ListInstancesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInstancesRequest(ListInstancesRequest&& from) noexcept
    : ListInstancesRequest() {
    *this = ::std::move(from);
  }

  inline ListInstancesRequest& operator=(ListInstancesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstancesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInstancesRequest* internal_default_instance() {
    return reinterpret_cast<const ListInstancesRequest*>(
               &_ListInstancesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ListInstancesRequest* other);
  friend void swap(ListInstancesRequest& a, ListInstancesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInstancesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListInstancesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListInstancesRequest& from);
  void MergeFrom(const ListInstancesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListInstancesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ListInstancesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsListInstancesRequestImpl();
};
// -------------------------------------------------------------------

class ListInstancesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ListInstancesResponse) */ {
 public:
  ListInstancesResponse();
  virtual ~ListInstancesResponse();

  ListInstancesResponse(const ListInstancesResponse& from);

  inline ListInstancesResponse& operator=(const ListInstancesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInstancesResponse(ListInstancesResponse&& from) noexcept
    : ListInstancesResponse() {
    *this = ::std::move(from);
  }

  inline ListInstancesResponse& operator=(ListInstancesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstancesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInstancesResponse* internal_default_instance() {
    return reinterpret_cast<const ListInstancesResponse*>(
               &_ListInstancesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ListInstancesResponse* other);
  friend void swap(ListInstancesResponse& a, ListInstancesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInstancesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListInstancesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListInstancesResponse& from);
  void MergeFrom(const ListInstancesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListInstancesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.appengine.v1.Instance instances = 1;
  int instances_size() const;
  void clear_instances();
  static const int kInstancesFieldNumber = 1;
  const ::google::appengine::v1::Instance& instances(int index) const;
  ::google::appengine::v1::Instance* mutable_instances(int index);
  ::google::appengine::v1::Instance* add_instances();
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Instance >*
      mutable_instances();
  const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Instance >&
      instances() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ListInstancesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Instance > instances_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsListInstancesResponseImpl();
};
// -------------------------------------------------------------------

class GetInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.GetInstanceRequest) */ {
 public:
  GetInstanceRequest();
  virtual ~GetInstanceRequest();

  GetInstanceRequest(const GetInstanceRequest& from);

  inline GetInstanceRequest& operator=(const GetInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInstanceRequest(GetInstanceRequest&& from) noexcept
    : GetInstanceRequest() {
    *this = ::std::move(from);
  }

  inline GetInstanceRequest& operator=(GetInstanceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInstanceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const GetInstanceRequest*>(
               &_GetInstanceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetInstanceRequest* other);
  friend void swap(GetInstanceRequest& a, GetInstanceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInstanceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetInstanceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetInstanceRequest& from);
  void MergeFrom(const GetInstanceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.GetInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsGetInstanceRequestImpl();
};
// -------------------------------------------------------------------

class DeleteInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.DeleteInstanceRequest) */ {
 public:
  DeleteInstanceRequest();
  virtual ~DeleteInstanceRequest();

  DeleteInstanceRequest(const DeleteInstanceRequest& from);

  inline DeleteInstanceRequest& operator=(const DeleteInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInstanceRequest(DeleteInstanceRequest&& from) noexcept
    : DeleteInstanceRequest() {
    *this = ::std::move(from);
  }

  inline DeleteInstanceRequest& operator=(DeleteInstanceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInstanceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteInstanceRequest*>(
               &_DeleteInstanceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(DeleteInstanceRequest* other);
  friend void swap(DeleteInstanceRequest& a, DeleteInstanceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInstanceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteInstanceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteInstanceRequest& from);
  void MergeFrom(const DeleteInstanceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.DeleteInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsDeleteInstanceRequestImpl();
};
// -------------------------------------------------------------------

class DebugInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.DebugInstanceRequest) */ {
 public:
  DebugInstanceRequest();
  virtual ~DebugInstanceRequest();

  DebugInstanceRequest(const DebugInstanceRequest& from);

  inline DebugInstanceRequest& operator=(const DebugInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DebugInstanceRequest(DebugInstanceRequest&& from) noexcept
    : DebugInstanceRequest() {
    *this = ::std::move(from);
  }

  inline DebugInstanceRequest& operator=(DebugInstanceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugInstanceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DebugInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const DebugInstanceRequest*>(
               &_DebugInstanceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(DebugInstanceRequest* other);
  friend void swap(DebugInstanceRequest& a, DebugInstanceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DebugInstanceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DebugInstanceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DebugInstanceRequest& from);
  void MergeFrom(const DebugInstanceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DebugInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.DebugInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fappengine_2eproto::InitDefaultsDebugInstanceRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetApplicationRequest

// string name = 1;
inline void GetApplicationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetApplicationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.GetApplicationRequest.name)
  return name_.GetNoArena();
}
inline void GetApplicationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.GetApplicationRequest.name)
}
#if LANG_CXX11
inline void GetApplicationRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.GetApplicationRequest.name)
}
#endif
inline void GetApplicationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.GetApplicationRequest.name)
}
inline void GetApplicationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.GetApplicationRequest.name)
}
inline ::std::string* GetApplicationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.GetApplicationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetApplicationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.GetApplicationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetApplicationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.GetApplicationRequest.name)
}

// -------------------------------------------------------------------

// RepairApplicationRequest

// string name = 1;
inline void RepairApplicationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RepairApplicationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.RepairApplicationRequest.name)
  return name_.GetNoArena();
}
inline void RepairApplicationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.RepairApplicationRequest.name)
}
#if LANG_CXX11
inline void RepairApplicationRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.RepairApplicationRequest.name)
}
#endif
inline void RepairApplicationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.RepairApplicationRequest.name)
}
inline void RepairApplicationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.RepairApplicationRequest.name)
}
inline ::std::string* RepairApplicationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.RepairApplicationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepairApplicationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.RepairApplicationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RepairApplicationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.RepairApplicationRequest.name)
}

// -------------------------------------------------------------------

// ListServicesRequest

// string parent = 1;
inline void ListServicesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServicesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListServicesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListServicesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListServicesRequest.parent)
}
#if LANG_CXX11
inline void ListServicesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListServicesRequest.parent)
}
#endif
inline void ListServicesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListServicesRequest.parent)
}
inline void ListServicesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListServicesRequest.parent)
}
inline ::std::string* ListServicesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListServicesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServicesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListServicesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListServicesRequest.parent)
}

// int32 page_size = 2;
inline void ListServicesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListServicesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListServicesRequest.page_size)
  return page_size_;
}
inline void ListServicesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListServicesRequest.page_size)
}

// string page_token = 3;
inline void ListServicesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServicesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListServicesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListServicesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListServicesRequest.page_token)
}
#if LANG_CXX11
inline void ListServicesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListServicesRequest.page_token)
}
#endif
inline void ListServicesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListServicesRequest.page_token)
}
inline void ListServicesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListServicesRequest.page_token)
}
inline ::std::string* ListServicesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListServicesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServicesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListServicesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListServicesRequest.page_token)
}

// -------------------------------------------------------------------

// ListServicesResponse

// repeated .google.appengine.v1.Service services = 1;
inline int ListServicesResponse::services_size() const {
  return services_.size();
}
inline const ::google::appengine::v1::Service& ListServicesResponse::services(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListServicesResponse.services)
  return services_.Get(index);
}
inline ::google::appengine::v1::Service* ListServicesResponse::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListServicesResponse.services)
  return services_.Mutable(index);
}
inline ::google::appengine::v1::Service* ListServicesResponse::add_services() {
  // @@protoc_insertion_point(field_add:google.appengine.v1.ListServicesResponse.services)
  return services_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Service >*
ListServicesResponse::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.ListServicesResponse.services)
  return &services_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Service >&
ListServicesResponse::services() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.ListServicesResponse.services)
  return services_;
}

// string next_page_token = 2;
inline void ListServicesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServicesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListServicesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListServicesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListServicesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListServicesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListServicesResponse.next_page_token)
}
#endif
inline void ListServicesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListServicesResponse.next_page_token)
}
inline void ListServicesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListServicesResponse.next_page_token)
}
inline ::std::string* ListServicesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListServicesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServicesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListServicesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListServicesResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetServiceRequest

// string name = 1;
inline void GetServiceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.GetServiceRequest.name)
  return name_.GetNoArena();
}
inline void GetServiceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.GetServiceRequest.name)
}
#if LANG_CXX11
inline void GetServiceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.GetServiceRequest.name)
}
#endif
inline void GetServiceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.GetServiceRequest.name)
}
inline void GetServiceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.GetServiceRequest.name)
}
inline ::std::string* GetServiceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.GetServiceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.GetServiceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.GetServiceRequest.name)
}

// -------------------------------------------------------------------

// UpdateServiceRequest

// string name = 1;
inline void UpdateServiceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateServiceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateServiceRequest.name)
  return name_.GetNoArena();
}
inline void UpdateServiceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.UpdateServiceRequest.name)
}
#if LANG_CXX11
inline void UpdateServiceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.UpdateServiceRequest.name)
}
#endif
inline void UpdateServiceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.UpdateServiceRequest.name)
}
inline void UpdateServiceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.UpdateServiceRequest.name)
}
inline ::std::string* UpdateServiceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UpdateServiceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateServiceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UpdateServiceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateServiceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UpdateServiceRequest.name)
}

// .google.appengine.v1.Service service = 2;
inline bool UpdateServiceRequest::has_service() const {
  return this != internal_default_instance() && service_ != NULL;
}
inline const ::google::appengine::v1::Service& UpdateServiceRequest::service() const {
  const ::google::appengine::v1::Service* p = service_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateServiceRequest.service)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::Service*>(
      &::google::appengine::v1::_Service_default_instance_);
}
inline ::google::appengine::v1::Service* UpdateServiceRequest::release_service() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UpdateServiceRequest.service)
  
  ::google::appengine::v1::Service* temp = service_;
  service_ = NULL;
  return temp;
}
inline ::google::appengine::v1::Service* UpdateServiceRequest::mutable_service() {
  
  if (service_ == NULL) {
    service_ = new ::google::appengine::v1::Service;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UpdateServiceRequest.service)
  return service_;
}
inline void UpdateServiceRequest::set_allocated_service(::google::appengine::v1::Service* service) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(service_);
  }
  if (service) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      service = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, service, submessage_arena);
    }
    
  } else {
    
  }
  service_ = service;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UpdateServiceRequest.service)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateServiceRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateServiceRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateServiceRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateServiceRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UpdateServiceRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateServiceRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    update_mask_ = new ::google::protobuf::FieldMask;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UpdateServiceRequest.update_mask)
  return update_mask_;
}
inline void UpdateServiceRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UpdateServiceRequest.update_mask)
}

// bool migrate_traffic = 4;
inline void UpdateServiceRequest::clear_migrate_traffic() {
  migrate_traffic_ = false;
}
inline bool UpdateServiceRequest::migrate_traffic() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateServiceRequest.migrate_traffic)
  return migrate_traffic_;
}
inline void UpdateServiceRequest::set_migrate_traffic(bool value) {
  
  migrate_traffic_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UpdateServiceRequest.migrate_traffic)
}

// -------------------------------------------------------------------

// DeleteServiceRequest

// string name = 1;
inline void DeleteServiceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteServiceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DeleteServiceRequest.name)
  return name_.GetNoArena();
}
inline void DeleteServiceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.DeleteServiceRequest.name)
}
#if LANG_CXX11
inline void DeleteServiceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.DeleteServiceRequest.name)
}
#endif
inline void DeleteServiceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.DeleteServiceRequest.name)
}
inline void DeleteServiceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.DeleteServiceRequest.name)
}
inline ::std::string* DeleteServiceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.DeleteServiceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteServiceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.DeleteServiceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteServiceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.DeleteServiceRequest.name)
}

// -------------------------------------------------------------------

// ListVersionsRequest

// string parent = 1;
inline void ListVersionsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVersionsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListVersionsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListVersionsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListVersionsRequest.parent)
}
#if LANG_CXX11
inline void ListVersionsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListVersionsRequest.parent)
}
#endif
inline void ListVersionsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListVersionsRequest.parent)
}
inline void ListVersionsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListVersionsRequest.parent)
}
inline ::std::string* ListVersionsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListVersionsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVersionsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListVersionsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVersionsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListVersionsRequest.parent)
}

// .google.appengine.v1.VersionView view = 2;
inline void ListVersionsRequest::clear_view() {
  view_ = 0;
}
inline ::google::appengine::v1::VersionView ListVersionsRequest::view() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListVersionsRequest.view)
  return static_cast< ::google::appengine::v1::VersionView >(view_);
}
inline void ListVersionsRequest::set_view(::google::appengine::v1::VersionView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListVersionsRequest.view)
}

// int32 page_size = 3;
inline void ListVersionsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListVersionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListVersionsRequest.page_size)
  return page_size_;
}
inline void ListVersionsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListVersionsRequest.page_size)
}

// string page_token = 4;
inline void ListVersionsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVersionsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListVersionsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListVersionsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListVersionsRequest.page_token)
}
#if LANG_CXX11
inline void ListVersionsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListVersionsRequest.page_token)
}
#endif
inline void ListVersionsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListVersionsRequest.page_token)
}
inline void ListVersionsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListVersionsRequest.page_token)
}
inline ::std::string* ListVersionsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListVersionsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVersionsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListVersionsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVersionsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListVersionsRequest.page_token)
}

// -------------------------------------------------------------------

// ListVersionsResponse

// repeated .google.appengine.v1.Version versions = 1;
inline int ListVersionsResponse::versions_size() const {
  return versions_.size();
}
inline const ::google::appengine::v1::Version& ListVersionsResponse::versions(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListVersionsResponse.versions)
  return versions_.Get(index);
}
inline ::google::appengine::v1::Version* ListVersionsResponse::mutable_versions(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListVersionsResponse.versions)
  return versions_.Mutable(index);
}
inline ::google::appengine::v1::Version* ListVersionsResponse::add_versions() {
  // @@protoc_insertion_point(field_add:google.appengine.v1.ListVersionsResponse.versions)
  return versions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Version >*
ListVersionsResponse::mutable_versions() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.ListVersionsResponse.versions)
  return &versions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Version >&
ListVersionsResponse::versions() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.ListVersionsResponse.versions)
  return versions_;
}

// string next_page_token = 2;
inline void ListVersionsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListVersionsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListVersionsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListVersionsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListVersionsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListVersionsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListVersionsResponse.next_page_token)
}
#endif
inline void ListVersionsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListVersionsResponse.next_page_token)
}
inline void ListVersionsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListVersionsResponse.next_page_token)
}
inline ::std::string* ListVersionsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListVersionsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListVersionsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListVersionsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListVersionsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListVersionsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetVersionRequest

// string name = 1;
inline void GetVersionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.GetVersionRequest.name)
  return name_.GetNoArena();
}
inline void GetVersionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.GetVersionRequest.name)
}
#if LANG_CXX11
inline void GetVersionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.GetVersionRequest.name)
}
#endif
inline void GetVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.GetVersionRequest.name)
}
inline void GetVersionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.GetVersionRequest.name)
}
inline ::std::string* GetVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.GetVersionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.GetVersionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.GetVersionRequest.name)
}

// .google.appengine.v1.VersionView view = 2;
inline void GetVersionRequest::clear_view() {
  view_ = 0;
}
inline ::google::appengine::v1::VersionView GetVersionRequest::view() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.GetVersionRequest.view)
  return static_cast< ::google::appengine::v1::VersionView >(view_);
}
inline void GetVersionRequest::set_view(::google::appengine::v1::VersionView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.GetVersionRequest.view)
}

// -------------------------------------------------------------------

// CreateVersionRequest

// string parent = 1;
inline void CreateVersionRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateVersionRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.CreateVersionRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateVersionRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.CreateVersionRequest.parent)
}
#if LANG_CXX11
inline void CreateVersionRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.CreateVersionRequest.parent)
}
#endif
inline void CreateVersionRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.CreateVersionRequest.parent)
}
inline void CreateVersionRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.CreateVersionRequest.parent)
}
inline ::std::string* CreateVersionRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.CreateVersionRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateVersionRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.CreateVersionRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateVersionRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.CreateVersionRequest.parent)
}

// .google.appengine.v1.Version version = 2;
inline bool CreateVersionRequest::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::google::appengine::v1::Version& CreateVersionRequest::version() const {
  const ::google::appengine::v1::Version* p = version_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.CreateVersionRequest.version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::Version*>(
      &::google::appengine::v1::_Version_default_instance_);
}
inline ::google::appengine::v1::Version* CreateVersionRequest::release_version() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.CreateVersionRequest.version)
  
  ::google::appengine::v1::Version* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::google::appengine::v1::Version* CreateVersionRequest::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::google::appengine::v1::Version;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.CreateVersionRequest.version)
  return version_;
}
inline void CreateVersionRequest::set_allocated_version(::google::appengine::v1::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.CreateVersionRequest.version)
}

// -------------------------------------------------------------------

// UpdateVersionRequest

// string name = 1;
inline void UpdateVersionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateVersionRequest.name)
  return name_.GetNoArena();
}
inline void UpdateVersionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.UpdateVersionRequest.name)
}
#if LANG_CXX11
inline void UpdateVersionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.UpdateVersionRequest.name)
}
#endif
inline void UpdateVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.UpdateVersionRequest.name)
}
inline void UpdateVersionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.UpdateVersionRequest.name)
}
inline ::std::string* UpdateVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UpdateVersionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UpdateVersionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UpdateVersionRequest.name)
}

// .google.appengine.v1.Version version = 2;
inline bool UpdateVersionRequest::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::google::appengine::v1::Version& UpdateVersionRequest::version() const {
  const ::google::appengine::v1::Version* p = version_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateVersionRequest.version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::appengine::v1::Version*>(
      &::google::appengine::v1::_Version_default_instance_);
}
inline ::google::appengine::v1::Version* UpdateVersionRequest::release_version() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UpdateVersionRequest.version)
  
  ::google::appengine::v1::Version* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::google::appengine::v1::Version* UpdateVersionRequest::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::google::appengine::v1::Version;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UpdateVersionRequest.version)
  return version_;
}
inline void UpdateVersionRequest::set_allocated_version(::google::appengine::v1::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UpdateVersionRequest.version)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateVersionRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateVersionRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.UpdateVersionRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateVersionRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UpdateVersionRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateVersionRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    update_mask_ = new ::google::protobuf::FieldMask;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UpdateVersionRequest.update_mask)
  return update_mask_;
}
inline void UpdateVersionRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UpdateVersionRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteVersionRequest

// string name = 1;
inline void DeleteVersionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DeleteVersionRequest.name)
  return name_.GetNoArena();
}
inline void DeleteVersionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.DeleteVersionRequest.name)
}
#if LANG_CXX11
inline void DeleteVersionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.DeleteVersionRequest.name)
}
#endif
inline void DeleteVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.DeleteVersionRequest.name)
}
inline void DeleteVersionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.DeleteVersionRequest.name)
}
inline ::std::string* DeleteVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.DeleteVersionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.DeleteVersionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.DeleteVersionRequest.name)
}

// -------------------------------------------------------------------

// ListInstancesRequest

// string parent = 1;
inline void ListInstancesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListInstancesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListInstancesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListInstancesRequest.parent)
}
#if LANG_CXX11
inline void ListInstancesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListInstancesRequest.parent)
}
#endif
inline void ListInstancesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListInstancesRequest.parent)
}
inline void ListInstancesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListInstancesRequest.parent)
}
inline ::std::string* ListInstancesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListInstancesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListInstancesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListInstancesRequest.parent)
}

// int32 page_size = 2;
inline void ListInstancesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListInstancesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListInstancesRequest.page_size)
  return page_size_;
}
inline void ListInstancesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListInstancesRequest.page_size)
}

// string page_token = 3;
inline void ListInstancesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListInstancesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListInstancesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListInstancesRequest.page_token)
}
#if LANG_CXX11
inline void ListInstancesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListInstancesRequest.page_token)
}
#endif
inline void ListInstancesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListInstancesRequest.page_token)
}
inline void ListInstancesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListInstancesRequest.page_token)
}
inline ::std::string* ListInstancesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListInstancesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListInstancesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListInstancesRequest.page_token)
}

// -------------------------------------------------------------------

// ListInstancesResponse

// repeated .google.appengine.v1.Instance instances = 1;
inline int ListInstancesResponse::instances_size() const {
  return instances_.size();
}
inline const ::google::appengine::v1::Instance& ListInstancesResponse::instances(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListInstancesResponse.instances)
  return instances_.Get(index);
}
inline ::google::appengine::v1::Instance* ListInstancesResponse::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListInstancesResponse.instances)
  return instances_.Mutable(index);
}
inline ::google::appengine::v1::Instance* ListInstancesResponse::add_instances() {
  // @@protoc_insertion_point(field_add:google.appengine.v1.ListInstancesResponse.instances)
  return instances_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Instance >*
ListInstancesResponse::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.v1.ListInstancesResponse.instances)
  return &instances_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::appengine::v1::Instance >&
ListInstancesResponse::instances() const {
  // @@protoc_insertion_point(field_list:google.appengine.v1.ListInstancesResponse.instances)
  return instances_;
}

// string next_page_token = 2;
inline void ListInstancesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ListInstancesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListInstancesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ListInstancesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListInstancesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ListInstancesResponse.next_page_token)
}
#endif
inline void ListInstancesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ListInstancesResponse.next_page_token)
}
inline void ListInstancesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ListInstancesResponse.next_page_token)
}
inline ::std::string* ListInstancesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ListInstancesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ListInstancesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ListInstancesResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetInstanceRequest

// string name = 1;
inline void GetInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.GetInstanceRequest.name)
  return name_.GetNoArena();
}
inline void GetInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.GetInstanceRequest.name)
}
#if LANG_CXX11
inline void GetInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.GetInstanceRequest.name)
}
#endif
inline void GetInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.GetInstanceRequest.name)
}
inline void GetInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.GetInstanceRequest.name)
}
inline ::std::string* GetInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.GetInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.GetInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.GetInstanceRequest.name)
}

// -------------------------------------------------------------------

// DeleteInstanceRequest

// string name = 1;
inline void DeleteInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DeleteInstanceRequest.name)
  return name_.GetNoArena();
}
inline void DeleteInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.DeleteInstanceRequest.name)
}
#if LANG_CXX11
inline void DeleteInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.DeleteInstanceRequest.name)
}
#endif
inline void DeleteInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.DeleteInstanceRequest.name)
}
inline void DeleteInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.DeleteInstanceRequest.name)
}
inline ::std::string* DeleteInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.DeleteInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.DeleteInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.DeleteInstanceRequest.name)
}

// -------------------------------------------------------------------

// DebugInstanceRequest

// string name = 1;
inline void DebugInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.DebugInstanceRequest.name)
  return name_.GetNoArena();
}
inline void DebugInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.DebugInstanceRequest.name)
}
#if LANG_CXX11
inline void DebugInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.DebugInstanceRequest.name)
}
#endif
inline void DebugInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.DebugInstanceRequest.name)
}
inline void DebugInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.DebugInstanceRequest.name)
}
inline ::std::string* DebugInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.DebugInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.DebugInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.DebugInstanceRequest.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::appengine::v1::VersionView> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::VersionView>() {
  return ::google::appengine::v1::VersionView_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fappengine_2fv1_2fappengine_2eproto__INCLUDED
