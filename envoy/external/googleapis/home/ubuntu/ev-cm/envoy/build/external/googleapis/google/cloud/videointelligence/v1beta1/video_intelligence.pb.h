// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/videointelligence/v1beta1/video_intelligence.proto

#ifndef PROTOBUF_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAnnotateVideoRequestImpl();
void InitDefaultsAnnotateVideoRequest();
void InitDefaultsVideoContextImpl();
void InitDefaultsVideoContext();
void InitDefaultsVideoSegmentImpl();
void InitDefaultsVideoSegment();
void InitDefaultsLabelLocationImpl();
void InitDefaultsLabelLocation();
void InitDefaultsLabelAnnotationImpl();
void InitDefaultsLabelAnnotation();
void InitDefaultsSafeSearchAnnotationImpl();
void InitDefaultsSafeSearchAnnotation();
void InitDefaultsBoundingBoxImpl();
void InitDefaultsBoundingBox();
void InitDefaultsFaceLocationImpl();
void InitDefaultsFaceLocation();
void InitDefaultsFaceAnnotationImpl();
void InitDefaultsFaceAnnotation();
void InitDefaultsVideoAnnotationResultsImpl();
void InitDefaultsVideoAnnotationResults();
void InitDefaultsAnnotateVideoResponseImpl();
void InitDefaultsAnnotateVideoResponse();
void InitDefaultsVideoAnnotationProgressImpl();
void InitDefaultsVideoAnnotationProgress();
void InitDefaultsAnnotateVideoProgressImpl();
void InitDefaultsAnnotateVideoProgress();
inline void InitDefaults() {
  InitDefaultsAnnotateVideoRequest();
  InitDefaultsVideoContext();
  InitDefaultsVideoSegment();
  InitDefaultsLabelLocation();
  InitDefaultsLabelAnnotation();
  InitDefaultsSafeSearchAnnotation();
  InitDefaultsBoundingBox();
  InitDefaultsFaceLocation();
  InitDefaultsFaceAnnotation();
  InitDefaultsVideoAnnotationResults();
  InitDefaultsAnnotateVideoResponse();
  InitDefaultsVideoAnnotationProgress();
  InitDefaultsAnnotateVideoProgress();
}
}  // namespace protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto
namespace google {
namespace cloud {
namespace videointelligence {
namespace v1beta1 {
class AnnotateVideoProgress;
class AnnotateVideoProgressDefaultTypeInternal;
extern AnnotateVideoProgressDefaultTypeInternal _AnnotateVideoProgress_default_instance_;
class AnnotateVideoRequest;
class AnnotateVideoRequestDefaultTypeInternal;
extern AnnotateVideoRequestDefaultTypeInternal _AnnotateVideoRequest_default_instance_;
class AnnotateVideoResponse;
class AnnotateVideoResponseDefaultTypeInternal;
extern AnnotateVideoResponseDefaultTypeInternal _AnnotateVideoResponse_default_instance_;
class BoundingBox;
class BoundingBoxDefaultTypeInternal;
extern BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;
class FaceAnnotation;
class FaceAnnotationDefaultTypeInternal;
extern FaceAnnotationDefaultTypeInternal _FaceAnnotation_default_instance_;
class FaceLocation;
class FaceLocationDefaultTypeInternal;
extern FaceLocationDefaultTypeInternal _FaceLocation_default_instance_;
class LabelAnnotation;
class LabelAnnotationDefaultTypeInternal;
extern LabelAnnotationDefaultTypeInternal _LabelAnnotation_default_instance_;
class LabelLocation;
class LabelLocationDefaultTypeInternal;
extern LabelLocationDefaultTypeInternal _LabelLocation_default_instance_;
class SafeSearchAnnotation;
class SafeSearchAnnotationDefaultTypeInternal;
extern SafeSearchAnnotationDefaultTypeInternal _SafeSearchAnnotation_default_instance_;
class VideoAnnotationProgress;
class VideoAnnotationProgressDefaultTypeInternal;
extern VideoAnnotationProgressDefaultTypeInternal _VideoAnnotationProgress_default_instance_;
class VideoAnnotationResults;
class VideoAnnotationResultsDefaultTypeInternal;
extern VideoAnnotationResultsDefaultTypeInternal _VideoAnnotationResults_default_instance_;
class VideoContext;
class VideoContextDefaultTypeInternal;
extern VideoContextDefaultTypeInternal _VideoContext_default_instance_;
class VideoSegment;
class VideoSegmentDefaultTypeInternal;
extern VideoSegmentDefaultTypeInternal _VideoSegment_default_instance_;
}  // namespace v1beta1
}  // namespace videointelligence
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace videointelligence {
namespace v1beta1 {

enum Feature {
  FEATURE_UNSPECIFIED = 0,
  LABEL_DETECTION = 1,
  FACE_DETECTION = 2,
  SHOT_CHANGE_DETECTION = 3,
  SAFE_SEARCH_DETECTION = 4,
  Feature_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Feature_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Feature_IsValid(int value);
const Feature Feature_MIN = FEATURE_UNSPECIFIED;
const Feature Feature_MAX = SAFE_SEARCH_DETECTION;
const int Feature_ARRAYSIZE = Feature_MAX + 1;

const ::google::protobuf::EnumDescriptor* Feature_descriptor();
inline const ::std::string& Feature_Name(Feature value) {
  return ::google::protobuf::internal::NameOfEnum(
    Feature_descriptor(), value);
}
inline bool Feature_Parse(
    const ::std::string& name, Feature* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Feature>(
    Feature_descriptor(), name, value);
}
enum LabelLevel {
  LABEL_LEVEL_UNSPECIFIED = 0,
  VIDEO_LEVEL = 1,
  SEGMENT_LEVEL = 2,
  SHOT_LEVEL = 3,
  FRAME_LEVEL = 4,
  LabelLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LabelLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LabelLevel_IsValid(int value);
const LabelLevel LabelLevel_MIN = LABEL_LEVEL_UNSPECIFIED;
const LabelLevel LabelLevel_MAX = FRAME_LEVEL;
const int LabelLevel_ARRAYSIZE = LabelLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* LabelLevel_descriptor();
inline const ::std::string& LabelLevel_Name(LabelLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    LabelLevel_descriptor(), value);
}
inline bool LabelLevel_Parse(
    const ::std::string& name, LabelLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LabelLevel>(
    LabelLevel_descriptor(), name, value);
}
enum LabelDetectionMode {
  LABEL_DETECTION_MODE_UNSPECIFIED = 0,
  SHOT_MODE = 1,
  FRAME_MODE = 2,
  SHOT_AND_FRAME_MODE = 3,
  LabelDetectionMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LabelDetectionMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LabelDetectionMode_IsValid(int value);
const LabelDetectionMode LabelDetectionMode_MIN = LABEL_DETECTION_MODE_UNSPECIFIED;
const LabelDetectionMode LabelDetectionMode_MAX = SHOT_AND_FRAME_MODE;
const int LabelDetectionMode_ARRAYSIZE = LabelDetectionMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* LabelDetectionMode_descriptor();
inline const ::std::string& LabelDetectionMode_Name(LabelDetectionMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    LabelDetectionMode_descriptor(), value);
}
inline bool LabelDetectionMode_Parse(
    const ::std::string& name, LabelDetectionMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LabelDetectionMode>(
    LabelDetectionMode_descriptor(), name, value);
}
enum Likelihood {
  UNKNOWN = 0,
  VERY_UNLIKELY = 1,
  UNLIKELY = 2,
  POSSIBLE = 3,
  LIKELY = 4,
  VERY_LIKELY = 5,
  Likelihood_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Likelihood_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Likelihood_IsValid(int value);
const Likelihood Likelihood_MIN = UNKNOWN;
const Likelihood Likelihood_MAX = VERY_LIKELY;
const int Likelihood_ARRAYSIZE = Likelihood_MAX + 1;

const ::google::protobuf::EnumDescriptor* Likelihood_descriptor();
inline const ::std::string& Likelihood_Name(Likelihood value) {
  return ::google::protobuf::internal::NameOfEnum(
    Likelihood_descriptor(), value);
}
inline bool Likelihood_Parse(
    const ::std::string& name, Likelihood* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Likelihood>(
    Likelihood_descriptor(), name, value);
}
// ===================================================================

class AnnotateVideoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest) */ {
 public:
  AnnotateVideoRequest();
  virtual ~AnnotateVideoRequest();

  AnnotateVideoRequest(const AnnotateVideoRequest& from);

  inline AnnotateVideoRequest& operator=(const AnnotateVideoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnotateVideoRequest(AnnotateVideoRequest&& from) noexcept
    : AnnotateVideoRequest() {
    *this = ::std::move(from);
  }

  inline AnnotateVideoRequest& operator=(AnnotateVideoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateVideoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnnotateVideoRequest* internal_default_instance() {
    return reinterpret_cast<const AnnotateVideoRequest*>(
               &_AnnotateVideoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AnnotateVideoRequest* other);
  friend void swap(AnnotateVideoRequest& a, AnnotateVideoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnotateVideoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotateVideoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotateVideoRequest& from);
  void MergeFrom(const AnnotateVideoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotateVideoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta1.Feature features = 2;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 2;
  ::google::cloud::videointelligence::v1beta1::Feature features(int index) const;
  void set_features(int index, ::google::cloud::videointelligence::v1beta1::Feature value);
  void add_features(::google::cloud::videointelligence::v1beta1::Feature value);
  const ::google::protobuf::RepeatedField<int>& features() const;
  ::google::protobuf::RepeatedField<int>* mutable_features();

  // string input_uri = 1;
  void clear_input_uri();
  static const int kInputUriFieldNumber = 1;
  const ::std::string& input_uri() const;
  void set_input_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_input_uri(::std::string&& value);
  #endif
  void set_input_uri(const char* value);
  void set_input_uri(const char* value, size_t size);
  ::std::string* mutable_input_uri();
  ::std::string* release_input_uri();
  void set_allocated_input_uri(::std::string* input_uri);

  // string output_uri = 4;
  void clear_output_uri();
  static const int kOutputUriFieldNumber = 4;
  const ::std::string& output_uri() const;
  void set_output_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_output_uri(::std::string&& value);
  #endif
  void set_output_uri(const char* value);
  void set_output_uri(const char* value, size_t size);
  ::std::string* mutable_output_uri();
  ::std::string* release_output_uri();
  void set_allocated_output_uri(::std::string* output_uri);

  // string location_id = 5;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 5;
  const ::std::string& location_id() const;
  void set_location_id(const ::std::string& value);
  #if LANG_CXX11
  void set_location_id(::std::string&& value);
  #endif
  void set_location_id(const char* value);
  void set_location_id(const char* value, size_t size);
  ::std::string* mutable_location_id();
  ::std::string* release_location_id();
  void set_allocated_location_id(::std::string* location_id);

  // string input_content = 6;
  void clear_input_content();
  static const int kInputContentFieldNumber = 6;
  const ::std::string& input_content() const;
  void set_input_content(const ::std::string& value);
  #if LANG_CXX11
  void set_input_content(::std::string&& value);
  #endif
  void set_input_content(const char* value);
  void set_input_content(const char* value, size_t size);
  ::std::string* mutable_input_content();
  ::std::string* release_input_content();
  void set_allocated_input_content(::std::string* input_content);

  // .google.cloud.videointelligence.v1beta1.VideoContext video_context = 3;
  bool has_video_context() const;
  void clear_video_context();
  static const int kVideoContextFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta1::VideoContext& video_context() const;
  ::google::cloud::videointelligence::v1beta1::VideoContext* release_video_context();
  ::google::cloud::videointelligence::v1beta1::VideoContext* mutable_video_context();
  void set_allocated_video_context(::google::cloud::videointelligence::v1beta1::VideoContext* video_context);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> features_;
  mutable int _features_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr input_uri_;
  ::google::protobuf::internal::ArenaStringPtr output_uri_;
  ::google::protobuf::internal::ArenaStringPtr location_id_;
  ::google::protobuf::internal::ArenaStringPtr input_content_;
  ::google::cloud::videointelligence::v1beta1::VideoContext* video_context_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoRequestImpl();
};
// -------------------------------------------------------------------

class VideoContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.VideoContext) */ {
 public:
  VideoContext();
  virtual ~VideoContext();

  VideoContext(const VideoContext& from);

  inline VideoContext& operator=(const VideoContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoContext(VideoContext&& from) noexcept
    : VideoContext() {
    *this = ::std::move(from);
  }

  inline VideoContext& operator=(VideoContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoContext* internal_default_instance() {
    return reinterpret_cast<const VideoContext*>(
               &_VideoContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VideoContext* other);
  friend void swap(VideoContext& a, VideoContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoContext* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoContext& from);
  void MergeFrom(const VideoContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 1;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta1::VideoSegment& segments(int index) const;
  ::google::cloud::videointelligence::v1beta1::VideoSegment* mutable_segments(int index);
  ::google::cloud::videointelligence::v1beta1::VideoSegment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >&
      segments() const;

  // string label_detection_model = 4;
  void clear_label_detection_model();
  static const int kLabelDetectionModelFieldNumber = 4;
  const ::std::string& label_detection_model() const;
  void set_label_detection_model(const ::std::string& value);
  #if LANG_CXX11
  void set_label_detection_model(::std::string&& value);
  #endif
  void set_label_detection_model(const char* value);
  void set_label_detection_model(const char* value, size_t size);
  ::std::string* mutable_label_detection_model();
  ::std::string* release_label_detection_model();
  void set_allocated_label_detection_model(::std::string* label_detection_model);

  // string face_detection_model = 5;
  void clear_face_detection_model();
  static const int kFaceDetectionModelFieldNumber = 5;
  const ::std::string& face_detection_model() const;
  void set_face_detection_model(const ::std::string& value);
  #if LANG_CXX11
  void set_face_detection_model(::std::string&& value);
  #endif
  void set_face_detection_model(const char* value);
  void set_face_detection_model(const char* value, size_t size);
  ::std::string* mutable_face_detection_model();
  ::std::string* release_face_detection_model();
  void set_allocated_face_detection_model(::std::string* face_detection_model);

  // string shot_change_detection_model = 6;
  void clear_shot_change_detection_model();
  static const int kShotChangeDetectionModelFieldNumber = 6;
  const ::std::string& shot_change_detection_model() const;
  void set_shot_change_detection_model(const ::std::string& value);
  #if LANG_CXX11
  void set_shot_change_detection_model(::std::string&& value);
  #endif
  void set_shot_change_detection_model(const char* value);
  void set_shot_change_detection_model(const char* value, size_t size);
  ::std::string* mutable_shot_change_detection_model();
  ::std::string* release_shot_change_detection_model();
  void set_allocated_shot_change_detection_model(::std::string* shot_change_detection_model);

  // string safe_search_detection_model = 7;
  void clear_safe_search_detection_model();
  static const int kSafeSearchDetectionModelFieldNumber = 7;
  const ::std::string& safe_search_detection_model() const;
  void set_safe_search_detection_model(const ::std::string& value);
  #if LANG_CXX11
  void set_safe_search_detection_model(::std::string&& value);
  #endif
  void set_safe_search_detection_model(const char* value);
  void set_safe_search_detection_model(const char* value, size_t size);
  ::std::string* mutable_safe_search_detection_model();
  ::std::string* release_safe_search_detection_model();
  void set_allocated_safe_search_detection_model(::std::string* safe_search_detection_model);

  // .google.cloud.videointelligence.v1beta1.LabelDetectionMode label_detection_mode = 2;
  void clear_label_detection_mode();
  static const int kLabelDetectionModeFieldNumber = 2;
  ::google::cloud::videointelligence::v1beta1::LabelDetectionMode label_detection_mode() const;
  void set_label_detection_mode(::google::cloud::videointelligence::v1beta1::LabelDetectionMode value);

  // bool stationary_camera = 3;
  void clear_stationary_camera();
  static const int kStationaryCameraFieldNumber = 3;
  bool stationary_camera() const;
  void set_stationary_camera(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.VideoContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment > segments_;
  ::google::protobuf::internal::ArenaStringPtr label_detection_model_;
  ::google::protobuf::internal::ArenaStringPtr face_detection_model_;
  ::google::protobuf::internal::ArenaStringPtr shot_change_detection_model_;
  ::google::protobuf::internal::ArenaStringPtr safe_search_detection_model_;
  int label_detection_mode_;
  bool stationary_camera_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoContextImpl();
};
// -------------------------------------------------------------------

class VideoSegment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.VideoSegment) */ {
 public:
  VideoSegment();
  virtual ~VideoSegment();

  VideoSegment(const VideoSegment& from);

  inline VideoSegment& operator=(const VideoSegment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoSegment(VideoSegment&& from) noexcept
    : VideoSegment() {
    *this = ::std::move(from);
  }

  inline VideoSegment& operator=(VideoSegment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoSegment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoSegment* internal_default_instance() {
    return reinterpret_cast<const VideoSegment*>(
               &_VideoSegment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VideoSegment* other);
  friend void swap(VideoSegment& a, VideoSegment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoSegment* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoSegment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoSegment& from);
  void MergeFrom(const VideoSegment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoSegment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 start_time_offset = 1;
  void clear_start_time_offset();
  static const int kStartTimeOffsetFieldNumber = 1;
  ::google::protobuf::int64 start_time_offset() const;
  void set_start_time_offset(::google::protobuf::int64 value);

  // int64 end_time_offset = 2;
  void clear_end_time_offset();
  static const int kEndTimeOffsetFieldNumber = 2;
  ::google::protobuf::int64 end_time_offset() const;
  void set_end_time_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.VideoSegment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 start_time_offset_;
  ::google::protobuf::int64 end_time_offset_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoSegmentImpl();
};
// -------------------------------------------------------------------

class LabelLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.LabelLocation) */ {
 public:
  LabelLocation();
  virtual ~LabelLocation();

  LabelLocation(const LabelLocation& from);

  inline LabelLocation& operator=(const LabelLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelLocation(LabelLocation&& from) noexcept
    : LabelLocation() {
    *this = ::std::move(from);
  }

  inline LabelLocation& operator=(LabelLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabelLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelLocation* internal_default_instance() {
    return reinterpret_cast<const LabelLocation*>(
               &_LabelLocation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LabelLocation* other);
  friend void swap(LabelLocation& a, LabelLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelLocation* New() const PROTOBUF_FINAL { return New(NULL); }

  LabelLocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LabelLocation& from);
  void MergeFrom(const LabelLocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LabelLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.videointelligence.v1beta1.VideoSegment segment = 1;
  bool has_segment() const;
  void clear_segment();
  static const int kSegmentFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta1::VideoSegment& segment() const;
  ::google::cloud::videointelligence::v1beta1::VideoSegment* release_segment();
  ::google::cloud::videointelligence::v1beta1::VideoSegment* mutable_segment();
  void set_allocated_segment(::google::cloud::videointelligence::v1beta1::VideoSegment* segment);

  // float confidence = 2;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 2;
  float confidence() const;
  void set_confidence(float value);

  // .google.cloud.videointelligence.v1beta1.LabelLevel level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::cloud::videointelligence::v1beta1::LabelLevel level() const;
  void set_level(::google::cloud::videointelligence::v1beta1::LabelLevel value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.LabelLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::videointelligence::v1beta1::VideoSegment* segment_;
  float confidence_;
  int level_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelLocationImpl();
};
// -------------------------------------------------------------------

class LabelAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.LabelAnnotation) */ {
 public:
  LabelAnnotation();
  virtual ~LabelAnnotation();

  LabelAnnotation(const LabelAnnotation& from);

  inline LabelAnnotation& operator=(const LabelAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelAnnotation(LabelAnnotation&& from) noexcept
    : LabelAnnotation() {
    *this = ::std::move(from);
  }

  inline LabelAnnotation& operator=(LabelAnnotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabelAnnotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelAnnotation* internal_default_instance() {
    return reinterpret_cast<const LabelAnnotation*>(
               &_LabelAnnotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LabelAnnotation* other);
  friend void swap(LabelAnnotation& a, LabelAnnotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  LabelAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LabelAnnotation& from);
  void MergeFrom(const LabelAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LabelAnnotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta1.LabelLocation locations = 3;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta1::LabelLocation& locations(int index) const;
  ::google::cloud::videointelligence::v1beta1::LabelLocation* mutable_locations(int index);
  ::google::cloud::videointelligence::v1beta1::LabelLocation* add_locations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelLocation >*
      mutable_locations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelLocation >&
      locations() const;

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string language_code = 2;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 2;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.LabelAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelLocation > locations_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsLabelAnnotationImpl();
};
// -------------------------------------------------------------------

class SafeSearchAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation) */ {
 public:
  SafeSearchAnnotation();
  virtual ~SafeSearchAnnotation();

  SafeSearchAnnotation(const SafeSearchAnnotation& from);

  inline SafeSearchAnnotation& operator=(const SafeSearchAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SafeSearchAnnotation(SafeSearchAnnotation&& from) noexcept
    : SafeSearchAnnotation() {
    *this = ::std::move(from);
  }

  inline SafeSearchAnnotation& operator=(SafeSearchAnnotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SafeSearchAnnotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SafeSearchAnnotation* internal_default_instance() {
    return reinterpret_cast<const SafeSearchAnnotation*>(
               &_SafeSearchAnnotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SafeSearchAnnotation* other);
  friend void swap(SafeSearchAnnotation& a, SafeSearchAnnotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SafeSearchAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  SafeSearchAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SafeSearchAnnotation& from);
  void MergeFrom(const SafeSearchAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SafeSearchAnnotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.videointelligence.v1beta1.Likelihood adult = 1;
  void clear_adult();
  static const int kAdultFieldNumber = 1;
  ::google::cloud::videointelligence::v1beta1::Likelihood adult() const;
  void set_adult(::google::cloud::videointelligence::v1beta1::Likelihood value);

  // .google.cloud.videointelligence.v1beta1.Likelihood spoof = 2;
  void clear_spoof();
  static const int kSpoofFieldNumber = 2;
  ::google::cloud::videointelligence::v1beta1::Likelihood spoof() const;
  void set_spoof(::google::cloud::videointelligence::v1beta1::Likelihood value);

  // .google.cloud.videointelligence.v1beta1.Likelihood medical = 3;
  void clear_medical();
  static const int kMedicalFieldNumber = 3;
  ::google::cloud::videointelligence::v1beta1::Likelihood medical() const;
  void set_medical(::google::cloud::videointelligence::v1beta1::Likelihood value);

  // .google.cloud.videointelligence.v1beta1.Likelihood violent = 4;
  void clear_violent();
  static const int kViolentFieldNumber = 4;
  ::google::cloud::videointelligence::v1beta1::Likelihood violent() const;
  void set_violent(::google::cloud::videointelligence::v1beta1::Likelihood value);

  // int64 time_offset = 6;
  void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 6;
  ::google::protobuf::int64 time_offset() const;
  void set_time_offset(::google::protobuf::int64 value);

  // .google.cloud.videointelligence.v1beta1.Likelihood racy = 5;
  void clear_racy();
  static const int kRacyFieldNumber = 5;
  ::google::cloud::videointelligence::v1beta1::Likelihood racy() const;
  void set_racy(::google::cloud::videointelligence::v1beta1::Likelihood value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int adult_;
  int spoof_;
  int medical_;
  int violent_;
  ::google::protobuf::int64 time_offset_;
  int racy_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsSafeSearchAnnotationImpl();
};
// -------------------------------------------------------------------

class BoundingBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.BoundingBox) */ {
 public:
  BoundingBox();
  virtual ~BoundingBox();

  BoundingBox(const BoundingBox& from);

  inline BoundingBox& operator=(const BoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoundingBox(BoundingBox&& from) noexcept
    : BoundingBox() {
    *this = ::std::move(from);
  }

  inline BoundingBox& operator=(BoundingBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoundingBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoundingBox* internal_default_instance() {
    return reinterpret_cast<const BoundingBox*>(
               &_BoundingBox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(BoundingBox* other);
  friend void swap(BoundingBox& a, BoundingBox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoundingBox* New() const PROTOBUF_FINAL { return New(NULL); }

  BoundingBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BoundingBox& from);
  void MergeFrom(const BoundingBox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BoundingBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 left = 1;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  ::google::protobuf::int32 left() const;
  void set_left(::google::protobuf::int32 value);

  // int32 right = 2;
  void clear_right();
  static const int kRightFieldNumber = 2;
  ::google::protobuf::int32 right() const;
  void set_right(::google::protobuf::int32 value);

  // int32 bottom = 3;
  void clear_bottom();
  static const int kBottomFieldNumber = 3;
  ::google::protobuf::int32 bottom() const;
  void set_bottom(::google::protobuf::int32 value);

  // int32 top = 4;
  void clear_top();
  static const int kTopFieldNumber = 4;
  ::google::protobuf::int32 top() const;
  void set_top(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.BoundingBox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 left_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 bottom_;
  ::google::protobuf::int32 top_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsBoundingBoxImpl();
};
// -------------------------------------------------------------------

class FaceLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.FaceLocation) */ {
 public:
  FaceLocation();
  virtual ~FaceLocation();

  FaceLocation(const FaceLocation& from);

  inline FaceLocation& operator=(const FaceLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceLocation(FaceLocation&& from) noexcept
    : FaceLocation() {
    *this = ::std::move(from);
  }

  inline FaceLocation& operator=(FaceLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceLocation* internal_default_instance() {
    return reinterpret_cast<const FaceLocation*>(
               &_FaceLocation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(FaceLocation* other);
  friend void swap(FaceLocation& a, FaceLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceLocation* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceLocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceLocation& from);
  void MergeFrom(const FaceLocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.videointelligence.v1beta1.BoundingBox bounding_box = 1;
  bool has_bounding_box() const;
  void clear_bounding_box();
  static const int kBoundingBoxFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta1::BoundingBox& bounding_box() const;
  ::google::cloud::videointelligence::v1beta1::BoundingBox* release_bounding_box();
  ::google::cloud::videointelligence::v1beta1::BoundingBox* mutable_bounding_box();
  void set_allocated_bounding_box(::google::cloud::videointelligence::v1beta1::BoundingBox* bounding_box);

  // int64 time_offset = 2;
  void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 2;
  ::google::protobuf::int64 time_offset() const;
  void set_time_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.FaceLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::videointelligence::v1beta1::BoundingBox* bounding_box_;
  ::google::protobuf::int64 time_offset_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceLocationImpl();
};
// -------------------------------------------------------------------

class FaceAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.FaceAnnotation) */ {
 public:
  FaceAnnotation();
  virtual ~FaceAnnotation();

  FaceAnnotation(const FaceAnnotation& from);

  inline FaceAnnotation& operator=(const FaceAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceAnnotation(FaceAnnotation&& from) noexcept
    : FaceAnnotation() {
    *this = ::std::move(from);
  }

  inline FaceAnnotation& operator=(FaceAnnotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceAnnotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceAnnotation* internal_default_instance() {
    return reinterpret_cast<const FaceAnnotation*>(
               &_FaceAnnotation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(FaceAnnotation* other);
  friend void swap(FaceAnnotation& a, FaceAnnotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceAnnotation& from);
  void MergeFrom(const FaceAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceAnnotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 2;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 2;
  const ::google::cloud::videointelligence::v1beta1::VideoSegment& segments(int index) const;
  ::google::cloud::videointelligence::v1beta1::VideoSegment* mutable_segments(int index);
  ::google::cloud::videointelligence::v1beta1::VideoSegment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >&
      segments() const;

  // repeated .google.cloud.videointelligence.v1beta1.FaceLocation locations = 3;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta1::FaceLocation& locations(int index) const;
  ::google::cloud::videointelligence::v1beta1::FaceLocation* mutable_locations(int index);
  ::google::cloud::videointelligence::v1beta1::FaceLocation* add_locations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceLocation >*
      mutable_locations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceLocation >&
      locations() const;

  // string thumbnail = 1;
  void clear_thumbnail();
  static const int kThumbnailFieldNumber = 1;
  const ::std::string& thumbnail() const;
  void set_thumbnail(const ::std::string& value);
  #if LANG_CXX11
  void set_thumbnail(::std::string&& value);
  #endif
  void set_thumbnail(const char* value);
  void set_thumbnail(const char* value, size_t size);
  ::std::string* mutable_thumbnail();
  ::std::string* release_thumbnail();
  void set_allocated_thumbnail(::std::string* thumbnail);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.FaceAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment > segments_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceLocation > locations_;
  ::google::protobuf::internal::ArenaStringPtr thumbnail_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsFaceAnnotationImpl();
};
// -------------------------------------------------------------------

class VideoAnnotationResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.VideoAnnotationResults) */ {
 public:
  VideoAnnotationResults();
  virtual ~VideoAnnotationResults();

  VideoAnnotationResults(const VideoAnnotationResults& from);

  inline VideoAnnotationResults& operator=(const VideoAnnotationResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoAnnotationResults(VideoAnnotationResults&& from) noexcept
    : VideoAnnotationResults() {
    *this = ::std::move(from);
  }

  inline VideoAnnotationResults& operator=(VideoAnnotationResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoAnnotationResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoAnnotationResults* internal_default_instance() {
    return reinterpret_cast<const VideoAnnotationResults*>(
               &_VideoAnnotationResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(VideoAnnotationResults* other);
  friend void swap(VideoAnnotationResults& a, VideoAnnotationResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoAnnotationResults* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoAnnotationResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoAnnotationResults& from);
  void MergeFrom(const VideoAnnotationResults& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoAnnotationResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta1.LabelAnnotation label_annotations = 2;
  int label_annotations_size() const;
  void clear_label_annotations();
  static const int kLabelAnnotationsFieldNumber = 2;
  const ::google::cloud::videointelligence::v1beta1::LabelAnnotation& label_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta1::LabelAnnotation* mutable_label_annotations(int index);
  ::google::cloud::videointelligence::v1beta1::LabelAnnotation* add_label_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelAnnotation >*
      mutable_label_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelAnnotation >&
      label_annotations() const;

  // repeated .google.cloud.videointelligence.v1beta1.FaceAnnotation face_annotations = 3;
  int face_annotations_size() const;
  void clear_face_annotations();
  static const int kFaceAnnotationsFieldNumber = 3;
  const ::google::cloud::videointelligence::v1beta1::FaceAnnotation& face_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta1::FaceAnnotation* mutable_face_annotations(int index);
  ::google::cloud::videointelligence::v1beta1::FaceAnnotation* add_face_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceAnnotation >*
      mutable_face_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceAnnotation >&
      face_annotations() const;

  // repeated .google.cloud.videointelligence.v1beta1.VideoSegment shot_annotations = 4;
  int shot_annotations_size() const;
  void clear_shot_annotations();
  static const int kShotAnnotationsFieldNumber = 4;
  const ::google::cloud::videointelligence::v1beta1::VideoSegment& shot_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta1::VideoSegment* mutable_shot_annotations(int index);
  ::google::cloud::videointelligence::v1beta1::VideoSegment* add_shot_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >*
      mutable_shot_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >&
      shot_annotations() const;

  // repeated .google.cloud.videointelligence.v1beta1.SafeSearchAnnotation safe_search_annotations = 6;
  int safe_search_annotations_size() const;
  void clear_safe_search_annotations();
  static const int kSafeSearchAnnotationsFieldNumber = 6;
  const ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation& safe_search_annotations(int index) const;
  ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation* mutable_safe_search_annotations(int index);
  ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation* add_safe_search_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation >*
      mutable_safe_search_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation >&
      safe_search_annotations() const;

  // string input_uri = 1;
  void clear_input_uri();
  static const int kInputUriFieldNumber = 1;
  const ::std::string& input_uri() const;
  void set_input_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_input_uri(::std::string&& value);
  #endif
  void set_input_uri(const char* value);
  void set_input_uri(const char* value, size_t size);
  ::std::string* mutable_input_uri();
  ::std::string* release_input_uri();
  void set_allocated_input_uri(::std::string* input_uri);

  // .google.rpc.Status error = 5;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  const ::google::rpc::Status& error() const;
  ::google::rpc::Status* release_error();
  ::google::rpc::Status* mutable_error();
  void set_allocated_error(::google::rpc::Status* error);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.VideoAnnotationResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelAnnotation > label_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceAnnotation > face_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment > shot_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation > safe_search_annotations_;
  ::google::protobuf::internal::ArenaStringPtr input_uri_;
  ::google::rpc::Status* error_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationResultsImpl();
};
// -------------------------------------------------------------------

class AnnotateVideoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse) */ {
 public:
  AnnotateVideoResponse();
  virtual ~AnnotateVideoResponse();

  AnnotateVideoResponse(const AnnotateVideoResponse& from);

  inline AnnotateVideoResponse& operator=(const AnnotateVideoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnotateVideoResponse(AnnotateVideoResponse&& from) noexcept
    : AnnotateVideoResponse() {
    *this = ::std::move(from);
  }

  inline AnnotateVideoResponse& operator=(AnnotateVideoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateVideoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnnotateVideoResponse* internal_default_instance() {
    return reinterpret_cast<const AnnotateVideoResponse*>(
               &_AnnotateVideoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AnnotateVideoResponse* other);
  friend void swap(AnnotateVideoResponse& a, AnnotateVideoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnotateVideoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotateVideoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotateVideoResponse& from);
  void MergeFrom(const AnnotateVideoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotateVideoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationResults annotation_results = 1;
  int annotation_results_size() const;
  void clear_annotation_results();
  static const int kAnnotationResultsFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults& annotation_results(int index) const;
  ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults* mutable_annotation_results(int index);
  ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults* add_annotation_results();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults >*
      mutable_annotation_results();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults >&
      annotation_results() const;

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults > annotation_results_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoResponseImpl();
};
// -------------------------------------------------------------------

class VideoAnnotationProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress) */ {
 public:
  VideoAnnotationProgress();
  virtual ~VideoAnnotationProgress();

  VideoAnnotationProgress(const VideoAnnotationProgress& from);

  inline VideoAnnotationProgress& operator=(const VideoAnnotationProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoAnnotationProgress(VideoAnnotationProgress&& from) noexcept
    : VideoAnnotationProgress() {
    *this = ::std::move(from);
  }

  inline VideoAnnotationProgress& operator=(VideoAnnotationProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoAnnotationProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoAnnotationProgress* internal_default_instance() {
    return reinterpret_cast<const VideoAnnotationProgress*>(
               &_VideoAnnotationProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(VideoAnnotationProgress* other);
  friend void swap(VideoAnnotationProgress& a, VideoAnnotationProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoAnnotationProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  VideoAnnotationProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VideoAnnotationProgress& from);
  void MergeFrom(const VideoAnnotationProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VideoAnnotationProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string input_uri = 1;
  void clear_input_uri();
  static const int kInputUriFieldNumber = 1;
  const ::std::string& input_uri() const;
  void set_input_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_input_uri(::std::string&& value);
  #endif
  void set_input_uri(const char* value);
  void set_input_uri(const char* value, size_t size);
  ::std::string* mutable_input_uri();
  ::std::string* release_input_uri();
  void set_allocated_input_uri(::std::string* input_uri);

  // .google.protobuf.Timestamp start_time = 3;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp update_time = 4;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // int32 progress_percent = 2;
  void clear_progress_percent();
  static const int kProgressPercentFieldNumber = 2;
  ::google::protobuf::int32 progress_percent() const;
  void set_progress_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_uri_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* update_time_;
  ::google::protobuf::int32 progress_percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsVideoAnnotationProgressImpl();
};
// -------------------------------------------------------------------

class AnnotateVideoProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress) */ {
 public:
  AnnotateVideoProgress();
  virtual ~AnnotateVideoProgress();

  AnnotateVideoProgress(const AnnotateVideoProgress& from);

  inline AnnotateVideoProgress& operator=(const AnnotateVideoProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnotateVideoProgress(AnnotateVideoProgress&& from) noexcept
    : AnnotateVideoProgress() {
    *this = ::std::move(from);
  }

  inline AnnotateVideoProgress& operator=(AnnotateVideoProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateVideoProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnnotateVideoProgress* internal_default_instance() {
    return reinterpret_cast<const AnnotateVideoProgress*>(
               &_AnnotateVideoProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AnnotateVideoProgress* other);
  friend void swap(AnnotateVideoProgress& a, AnnotateVideoProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnotateVideoProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnotateVideoProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnotateVideoProgress& from);
  void MergeFrom(const AnnotateVideoProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnotateVideoProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationProgress annotation_progress = 1;
  int annotation_progress_size() const;
  void clear_annotation_progress();
  static const int kAnnotationProgressFieldNumber = 1;
  const ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress& annotation_progress(int index) const;
  ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress* mutable_annotation_progress(int index);
  ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress* add_annotation_progress();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress >*
      mutable_annotation_progress();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress >&
      annotation_progress() const;

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress > annotation_progress_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto::InitDefaultsAnnotateVideoProgressImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AnnotateVideoRequest

// string input_uri = 1;
inline void AnnotateVideoRequest::clear_input_uri() {
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::input_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
  return input_uri_.GetNoArena();
}
inline void AnnotateVideoRequest::set_input_uri(const ::std::string& value) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_input_uri(::std::string&& value) {
  
  input_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
}
#endif
inline void AnnotateVideoRequest::set_input_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
}
inline void AnnotateVideoRequest::set_input_uri(const char* value, size_t size) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
}
inline ::std::string* AnnotateVideoRequest::mutable_input_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
  return input_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_input_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
  
  return input_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_input_uri(::std::string* input_uri) {
  if (input_uri != NULL) {
    
  } else {
    
  }
  input_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_uri)
}

// string input_content = 6;
inline void AnnotateVideoRequest::clear_input_content() {
  input_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::input_content() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
  return input_content_.GetNoArena();
}
inline void AnnotateVideoRequest::set_input_content(const ::std::string& value) {
  
  input_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_input_content(::std::string&& value) {
  
  input_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
}
#endif
inline void AnnotateVideoRequest::set_input_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
}
inline void AnnotateVideoRequest::set_input_content(const char* value, size_t size) {
  
  input_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
}
inline ::std::string* AnnotateVideoRequest::mutable_input_content() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
  return input_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_input_content() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
  
  return input_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_input_content(::std::string* input_content) {
  if (input_content != NULL) {
    
  } else {
    
  }
  input_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_content);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.input_content)
}

// repeated .google.cloud.videointelligence.v1beta1.Feature features = 2;
inline int AnnotateVideoRequest::features_size() const {
  return features_.size();
}
inline void AnnotateVideoRequest::clear_features() {
  features_.Clear();
}
inline ::google::cloud::videointelligence::v1beta1::Feature AnnotateVideoRequest::features(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.features)
  return static_cast< ::google::cloud::videointelligence::v1beta1::Feature >(features_.Get(index));
}
inline void AnnotateVideoRequest::set_features(int index, ::google::cloud::videointelligence::v1beta1::Feature value) {
  features_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.features)
}
inline void AnnotateVideoRequest::add_features(::google::cloud::videointelligence::v1beta1::Feature value) {
  features_.Add(value);
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.features)
}
inline const ::google::protobuf::RepeatedField<int>&
AnnotateVideoRequest::features() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.features)
  return features_;
}
inline ::google::protobuf::RepeatedField<int>*
AnnotateVideoRequest::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.features)
  return &features_;
}

// .google.cloud.videointelligence.v1beta1.VideoContext video_context = 3;
inline bool AnnotateVideoRequest::has_video_context() const {
  return this != internal_default_instance() && video_context_ != NULL;
}
inline void AnnotateVideoRequest::clear_video_context() {
  if (GetArenaNoVirtual() == NULL && video_context_ != NULL) {
    delete video_context_;
  }
  video_context_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta1::VideoContext& AnnotateVideoRequest::video_context() const {
  const ::google::cloud::videointelligence::v1beta1::VideoContext* p = video_context_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.video_context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta1::VideoContext*>(
      &::google::cloud::videointelligence::v1beta1::_VideoContext_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta1::VideoContext* AnnotateVideoRequest::release_video_context() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.video_context)
  
  ::google::cloud::videointelligence::v1beta1::VideoContext* temp = video_context_;
  video_context_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta1::VideoContext* AnnotateVideoRequest::mutable_video_context() {
  
  if (video_context_ == NULL) {
    video_context_ = new ::google::cloud::videointelligence::v1beta1::VideoContext;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.video_context)
  return video_context_;
}
inline void AnnotateVideoRequest::set_allocated_video_context(::google::cloud::videointelligence::v1beta1::VideoContext* video_context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete video_context_;
  }
  if (video_context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      video_context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, video_context, submessage_arena);
    }
    
  } else {
    
  }
  video_context_ = video_context;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.video_context)
}

// string output_uri = 4;
inline void AnnotateVideoRequest::clear_output_uri() {
  output_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::output_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
  return output_uri_.GetNoArena();
}
inline void AnnotateVideoRequest::set_output_uri(const ::std::string& value) {
  
  output_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_output_uri(::std::string&& value) {
  
  output_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
}
#endif
inline void AnnotateVideoRequest::set_output_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
}
inline void AnnotateVideoRequest::set_output_uri(const char* value, size_t size) {
  
  output_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
}
inline ::std::string* AnnotateVideoRequest::mutable_output_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
  return output_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_output_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
  
  return output_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_output_uri(::std::string* output_uri) {
  if (output_uri != NULL) {
    
  } else {
    
  }
  output_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.output_uri)
}

// string location_id = 5;
inline void AnnotateVideoRequest::clear_location_id() {
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnnotateVideoRequest::location_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
  return location_id_.GetNoArena();
}
inline void AnnotateVideoRequest::set_location_id(const ::std::string& value) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
}
#if LANG_CXX11
inline void AnnotateVideoRequest::set_location_id(::std::string&& value) {
  
  location_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
}
#endif
inline void AnnotateVideoRequest::set_location_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
}
inline void AnnotateVideoRequest::set_location_id(const char* value, size_t size) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
}
inline ::std::string* AnnotateVideoRequest::mutable_location_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
  return location_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnnotateVideoRequest::release_location_id() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
  
  return location_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnnotateVideoRequest::set_allocated_location_id(::std::string* location_id) {
  if (location_id != NULL) {
    
  } else {
    
  }
  location_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.AnnotateVideoRequest.location_id)
}

// -------------------------------------------------------------------

// VideoContext

// repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 1;
inline int VideoContext::segments_size() const {
  return segments_.size();
}
inline void VideoContext::clear_segments() {
  segments_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::VideoSegment& VideoContext::segments(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoContext.segments)
  return segments_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* VideoContext::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoContext.segments)
  return segments_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* VideoContext::add_segments() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.VideoContext.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >*
VideoContext::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.VideoContext.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >&
VideoContext::segments() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.VideoContext.segments)
  return segments_;
}

// .google.cloud.videointelligence.v1beta1.LabelDetectionMode label_detection_mode = 2;
inline void VideoContext::clear_label_detection_mode() {
  label_detection_mode_ = 0;
}
inline ::google::cloud::videointelligence::v1beta1::LabelDetectionMode VideoContext::label_detection_mode() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_mode)
  return static_cast< ::google::cloud::videointelligence::v1beta1::LabelDetectionMode >(label_detection_mode_);
}
inline void VideoContext::set_label_detection_mode(::google::cloud::videointelligence::v1beta1::LabelDetectionMode value) {
  
  label_detection_mode_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_mode)
}

// bool stationary_camera = 3;
inline void VideoContext::clear_stationary_camera() {
  stationary_camera_ = false;
}
inline bool VideoContext::stationary_camera() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoContext.stationary_camera)
  return stationary_camera_;
}
inline void VideoContext::set_stationary_camera(bool value) {
  
  stationary_camera_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoContext.stationary_camera)
}

// string label_detection_model = 4;
inline void VideoContext::clear_label_detection_model() {
  label_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoContext::label_detection_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
  return label_detection_model_.GetNoArena();
}
inline void VideoContext::set_label_detection_model(const ::std::string& value) {
  
  label_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
}
#if LANG_CXX11
inline void VideoContext::set_label_detection_model(::std::string&& value) {
  
  label_detection_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
}
#endif
inline void VideoContext::set_label_detection_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
}
inline void VideoContext::set_label_detection_model(const char* value, size_t size) {
  
  label_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
}
inline ::std::string* VideoContext::mutable_label_detection_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
  return label_detection_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoContext::release_label_detection_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
  
  return label_detection_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoContext::set_allocated_label_detection_model(::std::string* label_detection_model) {
  if (label_detection_model != NULL) {
    
  } else {
    
  }
  label_detection_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label_detection_model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoContext.label_detection_model)
}

// string face_detection_model = 5;
inline void VideoContext::clear_face_detection_model() {
  face_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoContext::face_detection_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
  return face_detection_model_.GetNoArena();
}
inline void VideoContext::set_face_detection_model(const ::std::string& value) {
  
  face_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
}
#if LANG_CXX11
inline void VideoContext::set_face_detection_model(::std::string&& value) {
  
  face_detection_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
}
#endif
inline void VideoContext::set_face_detection_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  face_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
}
inline void VideoContext::set_face_detection_model(const char* value, size_t size) {
  
  face_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
}
inline ::std::string* VideoContext::mutable_face_detection_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
  return face_detection_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoContext::release_face_detection_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
  
  return face_detection_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoContext::set_allocated_face_detection_model(::std::string* face_detection_model) {
  if (face_detection_model != NULL) {
    
  } else {
    
  }
  face_detection_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), face_detection_model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoContext.face_detection_model)
}

// string shot_change_detection_model = 6;
inline void VideoContext::clear_shot_change_detection_model() {
  shot_change_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoContext::shot_change_detection_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
  return shot_change_detection_model_.GetNoArena();
}
inline void VideoContext::set_shot_change_detection_model(const ::std::string& value) {
  
  shot_change_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
}
#if LANG_CXX11
inline void VideoContext::set_shot_change_detection_model(::std::string&& value) {
  
  shot_change_detection_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
}
#endif
inline void VideoContext::set_shot_change_detection_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  shot_change_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
}
inline void VideoContext::set_shot_change_detection_model(const char* value, size_t size) {
  
  shot_change_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
}
inline ::std::string* VideoContext::mutable_shot_change_detection_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
  return shot_change_detection_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoContext::release_shot_change_detection_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
  
  return shot_change_detection_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoContext::set_allocated_shot_change_detection_model(::std::string* shot_change_detection_model) {
  if (shot_change_detection_model != NULL) {
    
  } else {
    
  }
  shot_change_detection_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shot_change_detection_model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoContext.shot_change_detection_model)
}

// string safe_search_detection_model = 7;
inline void VideoContext::clear_safe_search_detection_model() {
  safe_search_detection_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoContext::safe_search_detection_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
  return safe_search_detection_model_.GetNoArena();
}
inline void VideoContext::set_safe_search_detection_model(const ::std::string& value) {
  
  safe_search_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
}
#if LANG_CXX11
inline void VideoContext::set_safe_search_detection_model(::std::string&& value) {
  
  safe_search_detection_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
}
#endif
inline void VideoContext::set_safe_search_detection_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  safe_search_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
}
inline void VideoContext::set_safe_search_detection_model(const char* value, size_t size) {
  
  safe_search_detection_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
}
inline ::std::string* VideoContext::mutable_safe_search_detection_model() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
  return safe_search_detection_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoContext::release_safe_search_detection_model() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
  
  return safe_search_detection_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoContext::set_allocated_safe_search_detection_model(::std::string* safe_search_detection_model) {
  if (safe_search_detection_model != NULL) {
    
  } else {
    
  }
  safe_search_detection_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safe_search_detection_model);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoContext.safe_search_detection_model)
}

// -------------------------------------------------------------------

// VideoSegment

// int64 start_time_offset = 1;
inline void VideoSegment::clear_start_time_offset() {
  start_time_offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 VideoSegment::start_time_offset() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoSegment.start_time_offset)
  return start_time_offset_;
}
inline void VideoSegment::set_start_time_offset(::google::protobuf::int64 value) {
  
  start_time_offset_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoSegment.start_time_offset)
}

// int64 end_time_offset = 2;
inline void VideoSegment::clear_end_time_offset() {
  end_time_offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 VideoSegment::end_time_offset() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoSegment.end_time_offset)
  return end_time_offset_;
}
inline void VideoSegment::set_end_time_offset(::google::protobuf::int64 value) {
  
  end_time_offset_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoSegment.end_time_offset)
}

// -------------------------------------------------------------------

// LabelLocation

// .google.cloud.videointelligence.v1beta1.VideoSegment segment = 1;
inline bool LabelLocation::has_segment() const {
  return this != internal_default_instance() && segment_ != NULL;
}
inline void LabelLocation::clear_segment() {
  if (GetArenaNoVirtual() == NULL && segment_ != NULL) {
    delete segment_;
  }
  segment_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta1::VideoSegment& LabelLocation::segment() const {
  const ::google::cloud::videointelligence::v1beta1::VideoSegment* p = segment_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.LabelLocation.segment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta1::VideoSegment*>(
      &::google::cloud::videointelligence::v1beta1::_VideoSegment_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* LabelLocation::release_segment() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.LabelLocation.segment)
  
  ::google::cloud::videointelligence::v1beta1::VideoSegment* temp = segment_;
  segment_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* LabelLocation::mutable_segment() {
  
  if (segment_ == NULL) {
    segment_ = new ::google::cloud::videointelligence::v1beta1::VideoSegment;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.LabelLocation.segment)
  return segment_;
}
inline void LabelLocation::set_allocated_segment(::google::cloud::videointelligence::v1beta1::VideoSegment* segment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete segment_;
  }
  if (segment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      segment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, segment, submessage_arena);
    }
    
  } else {
    
  }
  segment_ = segment;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.LabelLocation.segment)
}

// float confidence = 2;
inline void LabelLocation::clear_confidence() {
  confidence_ = 0;
}
inline float LabelLocation::confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.LabelLocation.confidence)
  return confidence_;
}
inline void LabelLocation::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.LabelLocation.confidence)
}

// .google.cloud.videointelligence.v1beta1.LabelLevel level = 3;
inline void LabelLocation::clear_level() {
  level_ = 0;
}
inline ::google::cloud::videointelligence::v1beta1::LabelLevel LabelLocation::level() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.LabelLocation.level)
  return static_cast< ::google::cloud::videointelligence::v1beta1::LabelLevel >(level_);
}
inline void LabelLocation::set_level(::google::cloud::videointelligence::v1beta1::LabelLevel value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.LabelLocation.level)
}

// -------------------------------------------------------------------

// LabelAnnotation

// string description = 1;
inline void LabelAnnotation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LabelAnnotation::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
  return description_.GetNoArena();
}
inline void LabelAnnotation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
}
#if LANG_CXX11
inline void LabelAnnotation::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
}
#endif
inline void LabelAnnotation::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
}
inline void LabelAnnotation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
}
inline ::std::string* LabelAnnotation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LabelAnnotation::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LabelAnnotation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.LabelAnnotation.description)
}

// string language_code = 2;
inline void LabelAnnotation::clear_language_code() {
  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LabelAnnotation::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
  return language_code_.GetNoArena();
}
inline void LabelAnnotation::set_language_code(const ::std::string& value) {
  
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
}
#if LANG_CXX11
inline void LabelAnnotation::set_language_code(::std::string&& value) {
  
  language_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
}
#endif
inline void LabelAnnotation::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
}
inline void LabelAnnotation::set_language_code(const char* value, size_t size) {
  
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
}
inline ::std::string* LabelAnnotation::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
  return language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LabelAnnotation::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
  
  return language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LabelAnnotation::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.LabelAnnotation.language_code)
}

// repeated .google.cloud.videointelligence.v1beta1.LabelLocation locations = 3;
inline int LabelAnnotation::locations_size() const {
  return locations_.size();
}
inline void LabelAnnotation::clear_locations() {
  locations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::LabelLocation& LabelAnnotation::locations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.LabelAnnotation.locations)
  return locations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::LabelLocation* LabelAnnotation::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.LabelAnnotation.locations)
  return locations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::LabelLocation* LabelAnnotation::add_locations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.LabelAnnotation.locations)
  return locations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelLocation >*
LabelAnnotation::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.LabelAnnotation.locations)
  return &locations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelLocation >&
LabelAnnotation::locations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.LabelAnnotation.locations)
  return locations_;
}

// -------------------------------------------------------------------

// SafeSearchAnnotation

// .google.cloud.videointelligence.v1beta1.Likelihood adult = 1;
inline void SafeSearchAnnotation::clear_adult() {
  adult_ = 0;
}
inline ::google::cloud::videointelligence::v1beta1::Likelihood SafeSearchAnnotation::adult() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.adult)
  return static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(adult_);
}
inline void SafeSearchAnnotation::set_adult(::google::cloud::videointelligence::v1beta1::Likelihood value) {
  
  adult_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.adult)
}

// .google.cloud.videointelligence.v1beta1.Likelihood spoof = 2;
inline void SafeSearchAnnotation::clear_spoof() {
  spoof_ = 0;
}
inline ::google::cloud::videointelligence::v1beta1::Likelihood SafeSearchAnnotation::spoof() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.spoof)
  return static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(spoof_);
}
inline void SafeSearchAnnotation::set_spoof(::google::cloud::videointelligence::v1beta1::Likelihood value) {
  
  spoof_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.spoof)
}

// .google.cloud.videointelligence.v1beta1.Likelihood medical = 3;
inline void SafeSearchAnnotation::clear_medical() {
  medical_ = 0;
}
inline ::google::cloud::videointelligence::v1beta1::Likelihood SafeSearchAnnotation::medical() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.medical)
  return static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(medical_);
}
inline void SafeSearchAnnotation::set_medical(::google::cloud::videointelligence::v1beta1::Likelihood value) {
  
  medical_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.medical)
}

// .google.cloud.videointelligence.v1beta1.Likelihood violent = 4;
inline void SafeSearchAnnotation::clear_violent() {
  violent_ = 0;
}
inline ::google::cloud::videointelligence::v1beta1::Likelihood SafeSearchAnnotation::violent() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.violent)
  return static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(violent_);
}
inline void SafeSearchAnnotation::set_violent(::google::cloud::videointelligence::v1beta1::Likelihood value) {
  
  violent_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.violent)
}

// .google.cloud.videointelligence.v1beta1.Likelihood racy = 5;
inline void SafeSearchAnnotation::clear_racy() {
  racy_ = 0;
}
inline ::google::cloud::videointelligence::v1beta1::Likelihood SafeSearchAnnotation::racy() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.racy)
  return static_cast< ::google::cloud::videointelligence::v1beta1::Likelihood >(racy_);
}
inline void SafeSearchAnnotation::set_racy(::google::cloud::videointelligence::v1beta1::Likelihood value) {
  
  racy_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.racy)
}

// int64 time_offset = 6;
inline void SafeSearchAnnotation::clear_time_offset() {
  time_offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SafeSearchAnnotation::time_offset() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.time_offset)
  return time_offset_;
}
inline void SafeSearchAnnotation::set_time_offset(::google::protobuf::int64 value) {
  
  time_offset_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.SafeSearchAnnotation.time_offset)
}

// -------------------------------------------------------------------

// BoundingBox

// int32 left = 1;
inline void BoundingBox::clear_left() {
  left_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::left() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.BoundingBox.left)
  return left_;
}
inline void BoundingBox::set_left(::google::protobuf::int32 value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.BoundingBox.left)
}

// int32 right = 2;
inline void BoundingBox::clear_right() {
  right_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::right() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.BoundingBox.right)
  return right_;
}
inline void BoundingBox::set_right(::google::protobuf::int32 value) {
  
  right_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.BoundingBox.right)
}

// int32 bottom = 3;
inline void BoundingBox::clear_bottom() {
  bottom_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::bottom() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.BoundingBox.bottom)
  return bottom_;
}
inline void BoundingBox::set_bottom(::google::protobuf::int32 value) {
  
  bottom_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.BoundingBox.bottom)
}

// int32 top = 4;
inline void BoundingBox::clear_top() {
  top_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::top() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.BoundingBox.top)
  return top_;
}
inline void BoundingBox::set_top(::google::protobuf::int32 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.BoundingBox.top)
}

// -------------------------------------------------------------------

// FaceLocation

// .google.cloud.videointelligence.v1beta1.BoundingBox bounding_box = 1;
inline bool FaceLocation::has_bounding_box() const {
  return this != internal_default_instance() && bounding_box_ != NULL;
}
inline void FaceLocation::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}
inline const ::google::cloud::videointelligence::v1beta1::BoundingBox& FaceLocation::bounding_box() const {
  const ::google::cloud::videointelligence::v1beta1::BoundingBox* p = bounding_box_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.FaceLocation.bounding_box)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::videointelligence::v1beta1::BoundingBox*>(
      &::google::cloud::videointelligence::v1beta1::_BoundingBox_default_instance_);
}
inline ::google::cloud::videointelligence::v1beta1::BoundingBox* FaceLocation::release_bounding_box() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.FaceLocation.bounding_box)
  
  ::google::cloud::videointelligence::v1beta1::BoundingBox* temp = bounding_box_;
  bounding_box_ = NULL;
  return temp;
}
inline ::google::cloud::videointelligence::v1beta1::BoundingBox* FaceLocation::mutable_bounding_box() {
  
  if (bounding_box_ == NULL) {
    bounding_box_ = new ::google::cloud::videointelligence::v1beta1::BoundingBox;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.FaceLocation.bounding_box)
  return bounding_box_;
}
inline void FaceLocation::set_allocated_bounding_box(::google::cloud::videointelligence::v1beta1::BoundingBox* bounding_box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_box_;
  }
  if (bounding_box) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bounding_box = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bounding_box, submessage_arena);
    }
    
  } else {
    
  }
  bounding_box_ = bounding_box;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.FaceLocation.bounding_box)
}

// int64 time_offset = 2;
inline void FaceLocation::clear_time_offset() {
  time_offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FaceLocation::time_offset() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.FaceLocation.time_offset)
  return time_offset_;
}
inline void FaceLocation::set_time_offset(::google::protobuf::int64 value) {
  
  time_offset_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.FaceLocation.time_offset)
}

// -------------------------------------------------------------------

// FaceAnnotation

// string thumbnail = 1;
inline void FaceAnnotation::clear_thumbnail() {
  thumbnail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FaceAnnotation::thumbnail() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
  return thumbnail_.GetNoArena();
}
inline void FaceAnnotation::set_thumbnail(const ::std::string& value) {
  
  thumbnail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
}
#if LANG_CXX11
inline void FaceAnnotation::set_thumbnail(::std::string&& value) {
  
  thumbnail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
}
#endif
inline void FaceAnnotation::set_thumbnail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  thumbnail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
}
inline void FaceAnnotation::set_thumbnail(const char* value, size_t size) {
  
  thumbnail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
}
inline ::std::string* FaceAnnotation::mutable_thumbnail() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
  return thumbnail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaceAnnotation::release_thumbnail() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
  
  return thumbnail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaceAnnotation::set_allocated_thumbnail(::std::string* thumbnail) {
  if (thumbnail != NULL) {
    
  } else {
    
  }
  thumbnail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbnail);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.FaceAnnotation.thumbnail)
}

// repeated .google.cloud.videointelligence.v1beta1.VideoSegment segments = 2;
inline int FaceAnnotation::segments_size() const {
  return segments_.size();
}
inline void FaceAnnotation::clear_segments() {
  segments_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::VideoSegment& FaceAnnotation::segments(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.FaceAnnotation.segments)
  return segments_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* FaceAnnotation::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.FaceAnnotation.segments)
  return segments_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* FaceAnnotation::add_segments() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.FaceAnnotation.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >*
FaceAnnotation::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.FaceAnnotation.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >&
FaceAnnotation::segments() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.FaceAnnotation.segments)
  return segments_;
}

// repeated .google.cloud.videointelligence.v1beta1.FaceLocation locations = 3;
inline int FaceAnnotation::locations_size() const {
  return locations_.size();
}
inline void FaceAnnotation::clear_locations() {
  locations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::FaceLocation& FaceAnnotation::locations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.FaceAnnotation.locations)
  return locations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::FaceLocation* FaceAnnotation::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.FaceAnnotation.locations)
  return locations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::FaceLocation* FaceAnnotation::add_locations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.FaceAnnotation.locations)
  return locations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceLocation >*
FaceAnnotation::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.FaceAnnotation.locations)
  return &locations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceLocation >&
FaceAnnotation::locations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.FaceAnnotation.locations)
  return locations_;
}

// -------------------------------------------------------------------

// VideoAnnotationResults

// string input_uri = 1;
inline void VideoAnnotationResults::clear_input_uri() {
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoAnnotationResults::input_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
  return input_uri_.GetNoArena();
}
inline void VideoAnnotationResults::set_input_uri(const ::std::string& value) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
}
#if LANG_CXX11
inline void VideoAnnotationResults::set_input_uri(::std::string&& value) {
  
  input_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
}
#endif
inline void VideoAnnotationResults::set_input_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
}
inline void VideoAnnotationResults::set_input_uri(const char* value, size_t size) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
}
inline ::std::string* VideoAnnotationResults::mutable_input_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
  return input_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoAnnotationResults::release_input_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
  
  return input_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoAnnotationResults::set_allocated_input_uri(::std::string* input_uri) {
  if (input_uri != NULL) {
    
  } else {
    
  }
  input_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.input_uri)
}

// repeated .google.cloud.videointelligence.v1beta1.LabelAnnotation label_annotations = 2;
inline int VideoAnnotationResults::label_annotations_size() const {
  return label_annotations_.size();
}
inline void VideoAnnotationResults::clear_label_annotations() {
  label_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::LabelAnnotation& VideoAnnotationResults::label_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.label_annotations)
  return label_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::LabelAnnotation* VideoAnnotationResults::mutable_label_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.label_annotations)
  return label_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::LabelAnnotation* VideoAnnotationResults::add_label_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.label_annotations)
  return label_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelAnnotation >*
VideoAnnotationResults::mutable_label_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.label_annotations)
  return &label_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::LabelAnnotation >&
VideoAnnotationResults::label_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.label_annotations)
  return label_annotations_;
}

// repeated .google.cloud.videointelligence.v1beta1.FaceAnnotation face_annotations = 3;
inline int VideoAnnotationResults::face_annotations_size() const {
  return face_annotations_.size();
}
inline void VideoAnnotationResults::clear_face_annotations() {
  face_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::FaceAnnotation& VideoAnnotationResults::face_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.face_annotations)
  return face_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::FaceAnnotation* VideoAnnotationResults::mutable_face_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.face_annotations)
  return face_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::FaceAnnotation* VideoAnnotationResults::add_face_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.face_annotations)
  return face_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceAnnotation >*
VideoAnnotationResults::mutable_face_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.face_annotations)
  return &face_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::FaceAnnotation >&
VideoAnnotationResults::face_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.face_annotations)
  return face_annotations_;
}

// repeated .google.cloud.videointelligence.v1beta1.VideoSegment shot_annotations = 4;
inline int VideoAnnotationResults::shot_annotations_size() const {
  return shot_annotations_.size();
}
inline void VideoAnnotationResults::clear_shot_annotations() {
  shot_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::VideoSegment& VideoAnnotationResults::shot_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.shot_annotations)
  return shot_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* VideoAnnotationResults::mutable_shot_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.shot_annotations)
  return shot_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoSegment* VideoAnnotationResults::add_shot_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.shot_annotations)
  return shot_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >*
VideoAnnotationResults::mutable_shot_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.shot_annotations)
  return &shot_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoSegment >&
VideoAnnotationResults::shot_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.shot_annotations)
  return shot_annotations_;
}

// repeated .google.cloud.videointelligence.v1beta1.SafeSearchAnnotation safe_search_annotations = 6;
inline int VideoAnnotationResults::safe_search_annotations_size() const {
  return safe_search_annotations_.size();
}
inline void VideoAnnotationResults::clear_safe_search_annotations() {
  safe_search_annotations_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation& VideoAnnotationResults::safe_search_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.safe_search_annotations)
  return safe_search_annotations_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation* VideoAnnotationResults::mutable_safe_search_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.safe_search_annotations)
  return safe_search_annotations_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation* VideoAnnotationResults::add_safe_search_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.safe_search_annotations)
  return safe_search_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation >*
VideoAnnotationResults::mutable_safe_search_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.safe_search_annotations)
  return &safe_search_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::SafeSearchAnnotation >&
VideoAnnotationResults::safe_search_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.safe_search_annotations)
  return safe_search_annotations_;
}

// .google.rpc.Status error = 5;
inline bool VideoAnnotationResults::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::google::rpc::Status& VideoAnnotationResults::error() const {
  const ::google::rpc::Status* p = error_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.error)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* VideoAnnotationResults::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.error)
  
  ::google::rpc::Status* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::google::rpc::Status* VideoAnnotationResults::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.error)
  return error_;
}
inline void VideoAnnotationResults::set_allocated_error(::google::rpc::Status* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoAnnotationResults.error)
}

// -------------------------------------------------------------------

// AnnotateVideoResponse

// repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationResults annotation_results = 1;
inline int AnnotateVideoResponse::annotation_results_size() const {
  return annotation_results_.size();
}
inline void AnnotateVideoResponse::clear_annotation_results() {
  annotation_results_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults& AnnotateVideoResponse::annotation_results(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse.annotation_results)
  return annotation_results_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults* AnnotateVideoResponse::mutable_annotation_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse.annotation_results)
  return annotation_results_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults* AnnotateVideoResponse::add_annotation_results() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse.annotation_results)
  return annotation_results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults >*
AnnotateVideoResponse::mutable_annotation_results() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse.annotation_results)
  return &annotation_results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationResults >&
AnnotateVideoResponse::annotation_results() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.AnnotateVideoResponse.annotation_results)
  return annotation_results_;
}

// -------------------------------------------------------------------

// VideoAnnotationProgress

// string input_uri = 1;
inline void VideoAnnotationProgress::clear_input_uri() {
  input_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoAnnotationProgress::input_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
  return input_uri_.GetNoArena();
}
inline void VideoAnnotationProgress::set_input_uri(const ::std::string& value) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
}
#if LANG_CXX11
inline void VideoAnnotationProgress::set_input_uri(::std::string&& value) {
  
  input_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
}
#endif
inline void VideoAnnotationProgress::set_input_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
}
inline void VideoAnnotationProgress::set_input_uri(const char* value, size_t size) {
  
  input_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
}
inline ::std::string* VideoAnnotationProgress::mutable_input_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
  return input_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoAnnotationProgress::release_input_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
  
  return input_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoAnnotationProgress::set_allocated_input_uri(::std::string* input_uri) {
  if (input_uri != NULL) {
    
  } else {
    
  }
  input_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.input_uri)
}

// int32 progress_percent = 2;
inline void VideoAnnotationProgress::clear_progress_percent() {
  progress_percent_ = 0;
}
inline ::google::protobuf::int32 VideoAnnotationProgress::progress_percent() const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.progress_percent)
  return progress_percent_;
}
inline void VideoAnnotationProgress::set_progress_percent(::google::protobuf::int32 value) {
  
  progress_percent_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.progress_percent)
}

// .google.protobuf.Timestamp start_time = 3;
inline bool VideoAnnotationProgress::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& VideoAnnotationProgress::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::release_start_time() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.start_time)
  return start_time_;
}
inline void VideoAnnotationProgress::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.start_time)
}

// .google.protobuf.Timestamp update_time = 4;
inline bool VideoAnnotationProgress::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& VideoAnnotationProgress::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.update_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::release_update_time() {
  // @@protoc_insertion_point(field_release:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* VideoAnnotationProgress::mutable_update_time() {
  
  if (update_time_ == NULL) {
    update_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.update_time)
  return update_time_;
}
inline void VideoAnnotationProgress::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.videointelligence.v1beta1.VideoAnnotationProgress.update_time)
}

// -------------------------------------------------------------------

// AnnotateVideoProgress

// repeated .google.cloud.videointelligence.v1beta1.VideoAnnotationProgress annotation_progress = 1;
inline int AnnotateVideoProgress::annotation_progress_size() const {
  return annotation_progress_.size();
}
inline void AnnotateVideoProgress::clear_annotation_progress() {
  annotation_progress_.Clear();
}
inline const ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress& AnnotateVideoProgress::annotation_progress(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_.Get(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress* AnnotateVideoProgress::mutable_annotation_progress(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_.Mutable(index);
}
inline ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress* AnnotateVideoProgress::add_annotation_progress() {
  // @@protoc_insertion_point(field_add:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress >*
AnnotateVideoProgress::mutable_annotation_progress() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress.annotation_progress)
  return &annotation_progress_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::videointelligence::v1beta1::VideoAnnotationProgress >&
AnnotateVideoProgress::annotation_progress() const {
  // @@protoc_insertion_point(field_list:google.cloud.videointelligence.v1beta1.AnnotateVideoProgress.annotation_progress)
  return annotation_progress_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace videointelligence
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::videointelligence::v1beta1::Feature> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::videointelligence::v1beta1::Feature>() {
  return ::google::cloud::videointelligence::v1beta1::Feature_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::videointelligence::v1beta1::LabelLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::videointelligence::v1beta1::LabelLevel>() {
  return ::google::cloud::videointelligence::v1beta1::LabelLevel_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::videointelligence::v1beta1::LabelDetectionMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::videointelligence::v1beta1::LabelDetectionMode>() {
  return ::google::cloud::videointelligence::v1beta1::LabelDetectionMode_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::videointelligence::v1beta1::Likelihood> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::videointelligence::v1beta1::Likelihood>() {
  return ::google::cloud::videointelligence::v1beta1::Likelihood_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fvideointelligence_2fv1beta1_2fvideo_5fintelligence_2eproto__INCLUDED
