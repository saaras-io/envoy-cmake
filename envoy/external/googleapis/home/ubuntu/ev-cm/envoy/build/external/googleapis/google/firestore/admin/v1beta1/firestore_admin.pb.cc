// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1beta1/firestore_admin.proto

#include "google/firestore/admin/v1beta1/firestore_admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace firestore {
namespace admin {
namespace v1beta1 {
class IndexOperationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IndexOperationMetadata>
      _instance;
} _IndexOperationMetadata_default_instance_;
class ProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Progress>
      _instance;
} _Progress_default_instance_;
class CreateIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexRequest>
      _instance;
} _CreateIndexRequest_default_instance_;
class GetIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIndexRequest>
      _instance;
} _GetIndexRequest_default_instance_;
class ListIndexesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListIndexesRequest>
      _instance;
} _ListIndexesRequest_default_instance_;
class DeleteIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexRequest>
      _instance;
} _DeleteIndexRequest_default_instance_;
class ListIndexesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListIndexesResponse>
      _instance;
} _ListIndexesResponse_default_instance_;
}  // namespace v1beta1
}  // namespace admin
}  // namespace firestore
}  // namespace google
namespace protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto {
void InitDefaultsIndexOperationMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsProgress();
  {
    void* ptr = &::google::firestore::admin::v1beta1::_IndexOperationMetadata_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta1::IndexOperationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta1::IndexOperationMetadata::InitAsDefaultInstance();
}

void InitDefaultsIndexOperationMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIndexOperationMetadataImpl);
}

void InitDefaultsProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::firestore::admin::v1beta1::_Progress_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta1::Progress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta1::Progress::InitAsDefaultInstance();
}

void InitDefaultsProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProgressImpl);
}

void InitDefaultsCreateIndexRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2findex_2eproto::InitDefaultsIndex();
  {
    void* ptr = &::google::firestore::admin::v1beta1::_CreateIndexRequest_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta1::CreateIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta1::CreateIndexRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateIndexRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateIndexRequestImpl);
}

void InitDefaultsGetIndexRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::firestore::admin::v1beta1::_GetIndexRequest_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta1::GetIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta1::GetIndexRequest::InitAsDefaultInstance();
}

void InitDefaultsGetIndexRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetIndexRequestImpl);
}

void InitDefaultsListIndexesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::firestore::admin::v1beta1::_ListIndexesRequest_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta1::ListIndexesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta1::ListIndexesRequest::InitAsDefaultInstance();
}

void InitDefaultsListIndexesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListIndexesRequestImpl);
}

void InitDefaultsDeleteIndexRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::firestore::admin::v1beta1::_DeleteIndexRequest_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta1::DeleteIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta1::DeleteIndexRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteIndexRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteIndexRequestImpl);
}

void InitDefaultsListIndexesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2findex_2eproto::InitDefaultsIndex();
  {
    void* ptr = &::google::firestore::admin::v1beta1::_ListIndexesResponse_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta1::ListIndexesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta1::ListIndexesResponse::InitAsDefaultInstance();
}

void InitDefaultsListIndexesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListIndexesResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::IndexOperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::IndexOperationMetadata, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::IndexOperationMetadata, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::IndexOperationMetadata, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::IndexOperationMetadata, operation_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::IndexOperationMetadata, cancelled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::IndexOperationMetadata, document_progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::Progress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::Progress, work_completed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::Progress, work_estimated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::CreateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::CreateIndexRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::CreateIndexRequest, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::GetIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::GetIndexRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::DeleteIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::DeleteIndexRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesResponse, indexes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta1::ListIndexesResponse, next_page_token_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::firestore::admin::v1beta1::IndexOperationMetadata)},
  { 11, -1, sizeof(::google::firestore::admin::v1beta1::Progress)},
  { 18, -1, sizeof(::google::firestore::admin::v1beta1::CreateIndexRequest)},
  { 25, -1, sizeof(::google::firestore::admin::v1beta1::GetIndexRequest)},
  { 31, -1, sizeof(::google::firestore::admin::v1beta1::ListIndexesRequest)},
  { 40, -1, sizeof(::google::firestore::admin::v1beta1::DeleteIndexRequest)},
  { 46, -1, sizeof(::google::firestore::admin::v1beta1::ListIndexesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta1::_IndexOperationMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta1::_Progress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta1::_CreateIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta1::_GetIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta1::_ListIndexesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta1::_DeleteIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta1::_ListIndexesResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/firestore/admin/v1beta1/firestore_admin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4google/firestore/admin/v1beta1/firesto"
      "re_admin.proto\022\036google.firestore.admin.v"
      "1beta1\032\034google/api/annotations.proto\032*go"
      "ogle/firestore/admin/v1beta1/index.proto"
      "\032#google/longrunning/operations.proto\032\033g"
      "oogle/protobuf/empty.proto\032\037google/proto"
      "buf/timestamp.proto\"\200\003\n\026IndexOperationMe"
      "tadata\022.\n\nstart_time\030\001 \001(\0132\032.google.prot"
      "obuf.Timestamp\022,\n\010end_time\030\002 \001(\0132\032.googl"
      "e.protobuf.Timestamp\022\r\n\005index\030\003 \001(\t\022\\\n\016o"
      "peration_type\030\004 \001(\0162D.google.firestore.a"
      "dmin.v1beta1.IndexOperationMetadata.Oper"
      "ationType\022\021\n\tcancelled\030\005 \001(\010\022C\n\021document"
      "_progress\030\006 \001(\0132(.google.firestore.admin"
      ".v1beta1.Progress\"C\n\rOperationType\022\036\n\032OP"
      "ERATION_TYPE_UNSPECIFIED\020\000\022\022\n\016CREATING_I"
      "NDEX\020\001\":\n\010Progress\022\026\n\016work_completed\030\001 \001"
      "(\003\022\026\n\016work_estimated\030\002 \001(\003\"Z\n\022CreateInde"
      "xRequest\022\016\n\006parent\030\001 \001(\t\0224\n\005index\030\002 \001(\0132"
      "%.google.firestore.admin.v1beta1.Index\"\037"
      "\n\017GetIndexRequest\022\014\n\004name\030\001 \001(\t\"[\n\022ListI"
      "ndexesRequest\022\016\n\006parent\030\001 \001(\t\022\016\n\006filter\030"
      "\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_token\030\004"
      " \001(\t\"\"\n\022DeleteIndexRequest\022\014\n\004name\030\001 \001(\t"
      "\"f\n\023ListIndexesResponse\0226\n\007indexes\030\001 \003(\013"
      "2%.google.firestore.admin.v1beta1.Index\022"
      "\027\n\017next_page_token\030\002 \001(\t2\234\005\n\016FirestoreAd"
      "min\022\241\001\n\013CreateIndex\0222.google.firestore.a"
      "dmin.v1beta1.CreateIndexRequest\032\035.google"
      ".longrunning.Operation\"\?\202\323\344\223\0029\"0/v1beta1"
      "/{parent=projects/*/databases/*}/indexes"
      ":\005index\022\260\001\n\013ListIndexes\0222.google.firesto"
      "re.admin.v1beta1.ListIndexesRequest\0323.go"
      "ogle.firestore.admin.v1beta1.ListIndexes"
      "Response\"8\202\323\344\223\0022\0220/v1beta1/{parent=proje"
      "cts/*/databases/*}/indexes\022\234\001\n\010GetIndex\022"
      "/.google.firestore.admin.v1beta1.GetInde"
      "xRequest\032%.google.firestore.admin.v1beta"
      "1.Index\"8\202\323\344\223\0022\0220/v1beta1/{name=projects"
      "/*/databases/*/indexes/*}\022\223\001\n\013DeleteInde"
      "x\0222.google.firestore.admin.v1beta1.Delet"
      "eIndexRequest\032\026.google.protobuf.Empty\"8\202"
      "\323\344\223\0022*0/v1beta1/{name=projects/*/databas"
      "es/*/indexes/*}B\256\001\n\"com.google.firestore"
      ".admin.v1beta1B\023FirestoreAdminProtoP\001ZCg"
      "oogle.golang.org/genproto/googleapis/fir"
      "estore/admin/v1beta1;admin\242\002\004GCFS\252\002$Goog"
      "le.Cloud.Firestore.Admin.V1Beta1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1920);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/firestore/admin/v1beta1/firestore_admin.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2findex_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto
namespace google {
namespace firestore {
namespace admin {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* IndexOperationMetadata_OperationType_descriptor() {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_enum_descriptors[0];
}
bool IndexOperationMetadata_OperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const IndexOperationMetadata_OperationType IndexOperationMetadata::OPERATION_TYPE_UNSPECIFIED;
const IndexOperationMetadata_OperationType IndexOperationMetadata::CREATING_INDEX;
const IndexOperationMetadata_OperationType IndexOperationMetadata::OperationType_MIN;
const IndexOperationMetadata_OperationType IndexOperationMetadata::OperationType_MAX;
const int IndexOperationMetadata::OperationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void IndexOperationMetadata::InitAsDefaultInstance() {
  ::google::firestore::admin::v1beta1::_IndexOperationMetadata_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::firestore::admin::v1beta1::_IndexOperationMetadata_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::firestore::admin::v1beta1::_IndexOperationMetadata_default_instance_._instance.get_mutable()->document_progress_ = const_cast< ::google::firestore::admin::v1beta1::Progress*>(
      ::google::firestore::admin::v1beta1::Progress::internal_default_instance());
}
void IndexOperationMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void IndexOperationMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexOperationMetadata::kStartTimeFieldNumber;
const int IndexOperationMetadata::kEndTimeFieldNumber;
const int IndexOperationMetadata::kIndexFieldNumber;
const int IndexOperationMetadata::kOperationTypeFieldNumber;
const int IndexOperationMetadata::kCancelledFieldNumber;
const int IndexOperationMetadata::kDocumentProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexOperationMetadata::IndexOperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsIndexOperationMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta1.IndexOperationMetadata)
}
IndexOperationMetadata::IndexOperationMetadata(const IndexOperationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index().size() > 0) {
    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  if (from.has_document_progress()) {
    document_progress_ = new ::google::firestore::admin::v1beta1::Progress(*from.document_progress_);
  } else {
    document_progress_ = NULL;
  }
  ::memcpy(&operation_type_, &from.operation_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cancelled_) -
    reinterpret_cast<char*>(&operation_type_)) + sizeof(cancelled_));
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta1.IndexOperationMetadata)
}

void IndexOperationMetadata::SharedCtor() {
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cancelled_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(cancelled_));
  _cached_size_ = 0;
}

IndexOperationMetadata::~IndexOperationMetadata() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta1.IndexOperationMetadata)
  SharedDtor();
}

void IndexOperationMetadata::SharedDtor() {
  index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete document_progress_;
}

void IndexOperationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexOperationMetadata::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexOperationMetadata& IndexOperationMetadata::default_instance() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsIndexOperationMetadata();
  return *internal_default_instance();
}

IndexOperationMetadata* IndexOperationMetadata::New(::google::protobuf::Arena* arena) const {
  IndexOperationMetadata* n = new IndexOperationMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexOperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && document_progress_ != NULL) {
    delete document_progress_;
  }
  document_progress_ = NULL;
  ::memset(&operation_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cancelled_) -
      reinterpret_cast<char*>(&operation_type_)) + sizeof(cancelled_));
  _internal_metadata_.Clear();
}

bool IndexOperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index().data(), static_cast<int>(this->index().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.IndexOperationMetadata.index"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.firestore.admin.v1beta1.IndexOperationMetadata.OperationType operation_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::google::firestore::admin::v1beta1::IndexOperationMetadata_OperationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool cancelled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancelled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.firestore.admin.v1beta1.Progress document_progress = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_document_progress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta1.IndexOperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta1.IndexOperationMetadata)
  return false;
#undef DO_
}

void IndexOperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->end_time_, output);
  }

  // string index = 3;
  if (this->index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index().data(), static_cast<int>(this->index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.IndexOperationMetadata.index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->index(), output);
  }

  // .google.firestore.admin.v1beta1.IndexOperationMetadata.OperationType operation_type = 4;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->operation_type(), output);
  }

  // bool cancelled = 5;
  if (this->cancelled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->cancelled(), output);
  }

  // .google.firestore.admin.v1beta1.Progress document_progress = 6;
  if (this->has_document_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->document_progress_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta1.IndexOperationMetadata)
}

::google::protobuf::uint8* IndexOperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->end_time_, deterministic, target);
  }

  // string index = 3;
  if (this->index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index().data(), static_cast<int>(this->index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.IndexOperationMetadata.index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->index(), target);
  }

  // .google.firestore.admin.v1beta1.IndexOperationMetadata.OperationType operation_type = 4;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->operation_type(), target);
  }

  // bool cancelled = 5;
  if (this->cancelled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->cancelled(), target);
  }

  // .google.firestore.admin.v1beta1.Progress document_progress = 6;
  if (this->has_document_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->document_progress_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta1.IndexOperationMetadata)
  return target;
}

size_t IndexOperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index = 3;
  if (this->index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index());
  }

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_time_);
  }

  // .google.firestore.admin.v1beta1.Progress document_progress = 6;
  if (this->has_document_progress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->document_progress_);
  }

  // .google.firestore.admin.v1beta1.IndexOperationMetadata.OperationType operation_type = 4;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  // bool cancelled = 5;
  if (this->cancelled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexOperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexOperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexOperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta1.IndexOperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta1.IndexOperationMetadata)
    MergeFrom(*source);
  }
}

void IndexOperationMetadata::MergeFrom(const IndexOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index().size() > 0) {

    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.has_document_progress()) {
    mutable_document_progress()->::google::firestore::admin::v1beta1::Progress::MergeFrom(from.document_progress());
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
  if (from.cancelled() != 0) {
    set_cancelled(from.cancelled());
  }
}

void IndexOperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexOperationMetadata::CopyFrom(const IndexOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta1.IndexOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexOperationMetadata::IsInitialized() const {
  return true;
}

void IndexOperationMetadata::Swap(IndexOperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexOperationMetadata::InternalSwap(IndexOperationMetadata* other) {
  using std::swap;
  index_.Swap(&other->index_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(document_progress_, other->document_progress_);
  swap(operation_type_, other->operation_type_);
  swap(cancelled_, other->cancelled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexOperationMetadata::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Progress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Progress::kWorkCompletedFieldNumber;
const int Progress::kWorkEstimatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Progress::Progress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta1.Progress)
}
Progress::Progress(const Progress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&work_completed_, &from.work_completed_,
    static_cast<size_t>(reinterpret_cast<char*>(&work_estimated_) -
    reinterpret_cast<char*>(&work_completed_)) + sizeof(work_estimated_));
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta1.Progress)
}

void Progress::SharedCtor() {
  ::memset(&work_completed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&work_estimated_) -
      reinterpret_cast<char*>(&work_completed_)) + sizeof(work_estimated_));
  _cached_size_ = 0;
}

Progress::~Progress() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta1.Progress)
  SharedDtor();
}

void Progress::SharedDtor() {
}

void Progress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Progress::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Progress& Progress::default_instance() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsProgress();
  return *internal_default_instance();
}

Progress* Progress::New(::google::protobuf::Arena* arena) const {
  Progress* n = new Progress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Progress::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta1.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&work_completed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&work_estimated_) -
      reinterpret_cast<char*>(&work_completed_)) + sizeof(work_estimated_));
  _internal_metadata_.Clear();
}

bool Progress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta1.Progress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 work_completed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &work_completed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 work_estimated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &work_estimated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta1.Progress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta1.Progress)
  return false;
#undef DO_
}

void Progress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta1.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 work_completed = 1;
  if (this->work_completed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->work_completed(), output);
  }

  // int64 work_estimated = 2;
  if (this->work_estimated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->work_estimated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta1.Progress)
}

::google::protobuf::uint8* Progress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta1.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 work_completed = 1;
  if (this->work_completed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->work_completed(), target);
  }

  // int64 work_estimated = 2;
  if (this->work_estimated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->work_estimated(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta1.Progress)
  return target;
}

size_t Progress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta1.Progress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 work_completed = 1;
  if (this->work_completed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->work_completed());
  }

  // int64 work_estimated = 2;
  if (this->work_estimated() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->work_estimated());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Progress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta1.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  const Progress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Progress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta1.Progress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta1.Progress)
    MergeFrom(*source);
  }
}

void Progress::MergeFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta1.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.work_completed() != 0) {
    set_work_completed(from.work_completed());
  }
  if (from.work_estimated() != 0) {
    set_work_estimated(from.work_estimated());
  }
}

void Progress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta1.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Progress::CopyFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta1.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Progress::IsInitialized() const {
  return true;
}

void Progress::Swap(Progress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Progress::InternalSwap(Progress* other) {
  using std::swap;
  swap(work_completed_, other->work_completed_);
  swap(work_estimated_, other->work_estimated_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Progress::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateIndexRequest::InitAsDefaultInstance() {
  ::google::firestore::admin::v1beta1::_CreateIndexRequest_default_instance_._instance.get_mutable()->index_ = const_cast< ::google::firestore::admin::v1beta1::Index*>(
      ::google::firestore::admin::v1beta1::Index::internal_default_instance());
}
void CreateIndexRequest::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIndexRequest::kParentFieldNumber;
const int CreateIndexRequest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexRequest::CreateIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsCreateIndexRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta1.CreateIndexRequest)
}
CreateIndexRequest::CreateIndexRequest(const CreateIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_index()) {
    index_ = new ::google::firestore::admin::v1beta1::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta1.CreateIndexRequest)
}

void CreateIndexRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = NULL;
  _cached_size_ = 0;
}

CreateIndexRequest::~CreateIndexRequest() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta1.CreateIndexRequest)
  SharedDtor();
}

void CreateIndexRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete index_;
}

void CreateIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateIndexRequest::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIndexRequest& CreateIndexRequest::default_instance() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsCreateIndexRequest();
  return *internal_default_instance();
}

CreateIndexRequest* CreateIndexRequest::New(::google::protobuf::Arena* arena) const {
  CreateIndexRequest* n = new CreateIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.CreateIndexRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.firestore.admin.v1beta1.Index index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta1.CreateIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta1.CreateIndexRequest)
  return false;
#undef DO_
}

void CreateIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.CreateIndexRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.firestore.admin.v1beta1.Index index = 2;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->index_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta1.CreateIndexRequest)
}

::google::protobuf::uint8* CreateIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.CreateIndexRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.firestore.admin.v1beta1.Index index = 2;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->index_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta1.CreateIndexRequest)
  return target;
}

size_t CreateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.firestore.admin.v1beta1.Index index = 2;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta1.CreateIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta1.CreateIndexRequest)
    MergeFrom(*source);
  }
}

void CreateIndexRequest::MergeFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_index()) {
    mutable_index()->::google::firestore::admin::v1beta1::Index::MergeFrom(from.index());
  }
}

void CreateIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexRequest::CopyFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta1.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexRequest::IsInitialized() const {
  return true;
}

void CreateIndexRequest::Swap(CreateIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexRequest::InternalSwap(CreateIndexRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateIndexRequest::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIndexRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIndexRequest::GetIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsGetIndexRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta1.GetIndexRequest)
}
GetIndexRequest::GetIndexRequest(const GetIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta1.GetIndexRequest)
}

void GetIndexRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetIndexRequest::~GetIndexRequest() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta1.GetIndexRequest)
  SharedDtor();
}

void GetIndexRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetIndexRequest::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIndexRequest& GetIndexRequest::default_instance() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsGetIndexRequest();
  return *internal_default_instance();
}

GetIndexRequest* GetIndexRequest::New(::google::protobuf::Arena* arena) const {
  GetIndexRequest* n = new GetIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta1.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta1.GetIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.GetIndexRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta1.GetIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta1.GetIndexRequest)
  return false;
#undef DO_
}

void GetIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta1.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.GetIndexRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta1.GetIndexRequest)
}

::google::protobuf::uint8* GetIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta1.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.GetIndexRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta1.GetIndexRequest)
  return target;
}

size_t GetIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta1.GetIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta1.GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta1.GetIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta1.GetIndexRequest)
    MergeFrom(*source);
  }
}

void GetIndexRequest::MergeFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta1.GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta1.GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIndexRequest::CopyFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta1.GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIndexRequest::IsInitialized() const {
  return true;
}

void GetIndexRequest::Swap(GetIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIndexRequest::InternalSwap(GetIndexRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetIndexRequest::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListIndexesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIndexesRequest::kParentFieldNumber;
const int ListIndexesRequest::kFilterFieldNumber;
const int ListIndexesRequest::kPageSizeFieldNumber;
const int ListIndexesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIndexesRequest::ListIndexesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsListIndexesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta1.ListIndexesRequest)
}
ListIndexesRequest::ListIndexesRequest(const ListIndexesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta1.ListIndexesRequest)
}

void ListIndexesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListIndexesRequest::~ListIndexesRequest() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta1.ListIndexesRequest)
  SharedDtor();
}

void ListIndexesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIndexesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListIndexesRequest::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListIndexesRequest& ListIndexesRequest::default_instance() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsListIndexesRequest();
  return *internal_default_instance();
}

ListIndexesRequest* ListIndexesRequest::New(::google::protobuf::Arena* arena) const {
  ListIndexesRequest* n = new ListIndexesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListIndexesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListIndexesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.ListIndexesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.ListIndexesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.ListIndexesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta1.ListIndexesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta1.ListIndexesRequest)
  return false;
#undef DO_
}

void ListIndexesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta1.ListIndexesRequest)
}

::google::protobuf::uint8* ListIndexesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta1.ListIndexesRequest)
  return target;
}

size_t ListIndexesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListIndexesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIndexesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListIndexesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta1.ListIndexesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta1.ListIndexesRequest)
    MergeFrom(*source);
  }
}

void ListIndexesRequest::MergeFrom(const ListIndexesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListIndexesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIndexesRequest::CopyFrom(const ListIndexesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta1.ListIndexesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIndexesRequest::IsInitialized() const {
  return true;
}

void ListIndexesRequest::Swap(ListIndexesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListIndexesRequest::InternalSwap(ListIndexesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  filter_.Swap(&other->filter_);
  page_token_.Swap(&other->page_token_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListIndexesRequest::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexRequest::DeleteIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsDeleteIndexRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta1.DeleteIndexRequest)
}
DeleteIndexRequest::DeleteIndexRequest(const DeleteIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta1.DeleteIndexRequest)
}

void DeleteIndexRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteIndexRequest::~DeleteIndexRequest() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta1.DeleteIndexRequest)
  SharedDtor();
}

void DeleteIndexRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteIndexRequest::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexRequest& DeleteIndexRequest::default_instance() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsDeleteIndexRequest();
  return *internal_default_instance();
}

DeleteIndexRequest* DeleteIndexRequest::New(::google::protobuf::Arena* arena) const {
  DeleteIndexRequest* n = new DeleteIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.DeleteIndexRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta1.DeleteIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta1.DeleteIndexRequest)
  return false;
#undef DO_
}

void DeleteIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.DeleteIndexRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta1.DeleteIndexRequest)
}

::google::protobuf::uint8* DeleteIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.DeleteIndexRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta1.DeleteIndexRequest)
  return target;
}

size_t DeleteIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta1.DeleteIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta1.DeleteIndexRequest)
    MergeFrom(*source);
  }
}

void DeleteIndexRequest::MergeFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexRequest::CopyFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta1.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexRequest::IsInitialized() const {
  return true;
}

void DeleteIndexRequest::Swap(DeleteIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexRequest::InternalSwap(DeleteIndexRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteIndexRequest::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListIndexesResponse::InitAsDefaultInstance() {
}
void ListIndexesResponse::clear_indexes() {
  indexes_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIndexesResponse::kIndexesFieldNumber;
const int ListIndexesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIndexesResponse::ListIndexesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsListIndexesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta1.ListIndexesResponse)
}
ListIndexesResponse::ListIndexesResponse(const ListIndexesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      indexes_(from.indexes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta1.ListIndexesResponse)
}

void ListIndexesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListIndexesResponse::~ListIndexesResponse() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta1.ListIndexesResponse)
  SharedDtor();
}

void ListIndexesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIndexesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListIndexesResponse::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListIndexesResponse& ListIndexesResponse::default_instance() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::InitDefaultsListIndexesResponse();
  return *internal_default_instance();
}

ListIndexesResponse* ListIndexesResponse::New(::google::protobuf::Arena* arena) const {
  ListIndexesResponse* n = new ListIndexesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListIndexesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexes_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListIndexesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.firestore.admin.v1beta1.Index indexes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_indexes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta1.ListIndexesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta1.ListIndexesResponse)
  return false;
#undef DO_
}

void ListIndexesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.firestore.admin.v1beta1.Index indexes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indexes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->indexes(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta1.ListIndexesResponse)
}

::google::protobuf::uint8* ListIndexesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.firestore.admin.v1beta1.Index indexes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indexes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->indexes(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta1.ListIndexesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta1.ListIndexesResponse)
  return target;
}

size_t ListIndexesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.firestore.admin.v1beta1.Index indexes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->indexes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->indexes(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListIndexesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIndexesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListIndexesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta1.ListIndexesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta1.ListIndexesResponse)
    MergeFrom(*source);
  }
}

void ListIndexesResponse::MergeFrom(const ListIndexesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indexes_.MergeFrom(from.indexes_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListIndexesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIndexesResponse::CopyFrom(const ListIndexesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta1.ListIndexesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIndexesResponse::IsInitialized() const {
  return true;
}

void ListIndexesResponse::Swap(ListIndexesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListIndexesResponse::InternalSwap(ListIndexesResponse* other) {
  using std::swap;
  indexes_.InternalSwap(&other->indexes_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListIndexesResponse::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta1_2ffirestore_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace admin
}  // namespace firestore
}  // namespace google

// @@protoc_insertion_point(global_scope)
