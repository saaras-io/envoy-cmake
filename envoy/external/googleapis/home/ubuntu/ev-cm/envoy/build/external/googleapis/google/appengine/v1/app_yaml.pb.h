// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/app_yaml.proto

#ifndef PROTOBUF_google_2fappengine_2fv1_2fapp_5fyaml_2eproto__INCLUDED
#define PROTOBUF_google_2fappengine_2fv1_2fapp_5fyaml_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsApiConfigHandlerImpl();
void InitDefaultsApiConfigHandler();
void InitDefaultsErrorHandlerImpl();
void InitDefaultsErrorHandler();
void InitDefaultsUrlMapImpl();
void InitDefaultsUrlMap();
void InitDefaultsStaticFilesHandler_HttpHeadersEntry_DoNotUseImpl();
void InitDefaultsStaticFilesHandler_HttpHeadersEntry_DoNotUse();
void InitDefaultsStaticFilesHandlerImpl();
void InitDefaultsStaticFilesHandler();
void InitDefaultsScriptHandlerImpl();
void InitDefaultsScriptHandler();
void InitDefaultsApiEndpointHandlerImpl();
void InitDefaultsApiEndpointHandler();
void InitDefaultsHealthCheckImpl();
void InitDefaultsHealthCheck();
void InitDefaultsLibraryImpl();
void InitDefaultsLibrary();
inline void InitDefaults() {
  InitDefaultsApiConfigHandler();
  InitDefaultsErrorHandler();
  InitDefaultsUrlMap();
  InitDefaultsStaticFilesHandler_HttpHeadersEntry_DoNotUse();
  InitDefaultsStaticFilesHandler();
  InitDefaultsScriptHandler();
  InitDefaultsApiEndpointHandler();
  InitDefaultsHealthCheck();
  InitDefaultsLibrary();
}
}  // namespace protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto
namespace google {
namespace appengine {
namespace v1 {
class ApiConfigHandler;
class ApiConfigHandlerDefaultTypeInternal;
extern ApiConfigHandlerDefaultTypeInternal _ApiConfigHandler_default_instance_;
class ApiEndpointHandler;
class ApiEndpointHandlerDefaultTypeInternal;
extern ApiEndpointHandlerDefaultTypeInternal _ApiEndpointHandler_default_instance_;
class ErrorHandler;
class ErrorHandlerDefaultTypeInternal;
extern ErrorHandlerDefaultTypeInternal _ErrorHandler_default_instance_;
class HealthCheck;
class HealthCheckDefaultTypeInternal;
extern HealthCheckDefaultTypeInternal _HealthCheck_default_instance_;
class Library;
class LibraryDefaultTypeInternal;
extern LibraryDefaultTypeInternal _Library_default_instance_;
class ScriptHandler;
class ScriptHandlerDefaultTypeInternal;
extern ScriptHandlerDefaultTypeInternal _ScriptHandler_default_instance_;
class StaticFilesHandler;
class StaticFilesHandlerDefaultTypeInternal;
extern StaticFilesHandlerDefaultTypeInternal _StaticFilesHandler_default_instance_;
class StaticFilesHandler_HttpHeadersEntry_DoNotUse;
class StaticFilesHandler_HttpHeadersEntry_DoNotUseDefaultTypeInternal;
extern StaticFilesHandler_HttpHeadersEntry_DoNotUseDefaultTypeInternal _StaticFilesHandler_HttpHeadersEntry_DoNotUse_default_instance_;
class UrlMap;
class UrlMapDefaultTypeInternal;
extern UrlMapDefaultTypeInternal _UrlMap_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace google {
namespace appengine {
namespace v1 {

enum ErrorHandler_ErrorCode {
  ErrorHandler_ErrorCode_ERROR_CODE_UNSPECIFIED = 0,
  ErrorHandler_ErrorCode_ERROR_CODE_DEFAULT = 0,
  ErrorHandler_ErrorCode_ERROR_CODE_OVER_QUOTA = 1,
  ErrorHandler_ErrorCode_ERROR_CODE_DOS_API_DENIAL = 2,
  ErrorHandler_ErrorCode_ERROR_CODE_TIMEOUT = 3,
  ErrorHandler_ErrorCode_ErrorHandler_ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorHandler_ErrorCode_ErrorHandler_ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorHandler_ErrorCode_IsValid(int value);
const ErrorHandler_ErrorCode ErrorHandler_ErrorCode_ErrorCode_MIN = ErrorHandler_ErrorCode_ERROR_CODE_UNSPECIFIED;
const ErrorHandler_ErrorCode ErrorHandler_ErrorCode_ErrorCode_MAX = ErrorHandler_ErrorCode_ERROR_CODE_TIMEOUT;
const int ErrorHandler_ErrorCode_ErrorCode_ARRAYSIZE = ErrorHandler_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorHandler_ErrorCode_descriptor();
inline const ::std::string& ErrorHandler_ErrorCode_Name(ErrorHandler_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorHandler_ErrorCode_descriptor(), value);
}
inline bool ErrorHandler_ErrorCode_Parse(
    const ::std::string& name, ErrorHandler_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorHandler_ErrorCode>(
    ErrorHandler_ErrorCode_descriptor(), name, value);
}
enum UrlMap_RedirectHttpResponseCode {
  UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED = 0,
  UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_301 = 1,
  UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_302 = 2,
  UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_303 = 3,
  UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_307 = 4,
  UrlMap_RedirectHttpResponseCode_UrlMap_RedirectHttpResponseCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UrlMap_RedirectHttpResponseCode_UrlMap_RedirectHttpResponseCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UrlMap_RedirectHttpResponseCode_IsValid(int value);
const UrlMap_RedirectHttpResponseCode UrlMap_RedirectHttpResponseCode_RedirectHttpResponseCode_MIN = UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED;
const UrlMap_RedirectHttpResponseCode UrlMap_RedirectHttpResponseCode_RedirectHttpResponseCode_MAX = UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_307;
const int UrlMap_RedirectHttpResponseCode_RedirectHttpResponseCode_ARRAYSIZE = UrlMap_RedirectHttpResponseCode_RedirectHttpResponseCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* UrlMap_RedirectHttpResponseCode_descriptor();
inline const ::std::string& UrlMap_RedirectHttpResponseCode_Name(UrlMap_RedirectHttpResponseCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    UrlMap_RedirectHttpResponseCode_descriptor(), value);
}
inline bool UrlMap_RedirectHttpResponseCode_Parse(
    const ::std::string& name, UrlMap_RedirectHttpResponseCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UrlMap_RedirectHttpResponseCode>(
    UrlMap_RedirectHttpResponseCode_descriptor(), name, value);
}
enum AuthFailAction {
  AUTH_FAIL_ACTION_UNSPECIFIED = 0,
  AUTH_FAIL_ACTION_REDIRECT = 1,
  AUTH_FAIL_ACTION_UNAUTHORIZED = 2,
  AuthFailAction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AuthFailAction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AuthFailAction_IsValid(int value);
const AuthFailAction AuthFailAction_MIN = AUTH_FAIL_ACTION_UNSPECIFIED;
const AuthFailAction AuthFailAction_MAX = AUTH_FAIL_ACTION_UNAUTHORIZED;
const int AuthFailAction_ARRAYSIZE = AuthFailAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthFailAction_descriptor();
inline const ::std::string& AuthFailAction_Name(AuthFailAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthFailAction_descriptor(), value);
}
inline bool AuthFailAction_Parse(
    const ::std::string& name, AuthFailAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthFailAction>(
    AuthFailAction_descriptor(), name, value);
}
enum LoginRequirement {
  LOGIN_UNSPECIFIED = 0,
  LOGIN_OPTIONAL = 1,
  LOGIN_ADMIN = 2,
  LOGIN_REQUIRED = 3,
  LoginRequirement_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginRequirement_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginRequirement_IsValid(int value);
const LoginRequirement LoginRequirement_MIN = LOGIN_UNSPECIFIED;
const LoginRequirement LoginRequirement_MAX = LOGIN_REQUIRED;
const int LoginRequirement_ARRAYSIZE = LoginRequirement_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginRequirement_descriptor();
inline const ::std::string& LoginRequirement_Name(LoginRequirement value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginRequirement_descriptor(), value);
}
inline bool LoginRequirement_Parse(
    const ::std::string& name, LoginRequirement* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginRequirement>(
    LoginRequirement_descriptor(), name, value);
}
enum SecurityLevel {
  SECURE_UNSPECIFIED = 0,
  SECURE_DEFAULT = 0,
  SECURE_NEVER = 1,
  SECURE_OPTIONAL = 2,
  SECURE_ALWAYS = 3,
  SecurityLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SecurityLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SecurityLevel_IsValid(int value);
const SecurityLevel SecurityLevel_MIN = SECURE_UNSPECIFIED;
const SecurityLevel SecurityLevel_MAX = SECURE_ALWAYS;
const int SecurityLevel_ARRAYSIZE = SecurityLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* SecurityLevel_descriptor();
inline const ::std::string& SecurityLevel_Name(SecurityLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    SecurityLevel_descriptor(), value);
}
inline bool SecurityLevel_Parse(
    const ::std::string& name, SecurityLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecurityLevel>(
    SecurityLevel_descriptor(), name, value);
}
// ===================================================================

class ApiConfigHandler : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ApiConfigHandler) */ {
 public:
  ApiConfigHandler();
  virtual ~ApiConfigHandler();

  ApiConfigHandler(const ApiConfigHandler& from);

  inline ApiConfigHandler& operator=(const ApiConfigHandler& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApiConfigHandler(ApiConfigHandler&& from) noexcept
    : ApiConfigHandler() {
    *this = ::std::move(from);
  }

  inline ApiConfigHandler& operator=(ApiConfigHandler&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApiConfigHandler& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApiConfigHandler* internal_default_instance() {
    return reinterpret_cast<const ApiConfigHandler*>(
               &_ApiConfigHandler_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ApiConfigHandler* other);
  friend void swap(ApiConfigHandler& a, ApiConfigHandler& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApiConfigHandler* New() const PROTOBUF_FINAL { return New(NULL); }

  ApiConfigHandler* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ApiConfigHandler& from);
  void MergeFrom(const ApiConfigHandler& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ApiConfigHandler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string script = 3;
  void clear_script();
  static const int kScriptFieldNumber = 3;
  const ::std::string& script() const;
  void set_script(const ::std::string& value);
  #if LANG_CXX11
  void set_script(::std::string&& value);
  #endif
  void set_script(const char* value);
  void set_script(const char* value, size_t size);
  ::std::string* mutable_script();
  ::std::string* release_script();
  void set_allocated_script(::std::string* script);

  // string url = 5;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // .google.appengine.v1.AuthFailAction auth_fail_action = 1;
  void clear_auth_fail_action();
  static const int kAuthFailActionFieldNumber = 1;
  ::google::appengine::v1::AuthFailAction auth_fail_action() const;
  void set_auth_fail_action(::google::appengine::v1::AuthFailAction value);

  // .google.appengine.v1.LoginRequirement login = 2;
  void clear_login();
  static const int kLoginFieldNumber = 2;
  ::google::appengine::v1::LoginRequirement login() const;
  void set_login(::google::appengine::v1::LoginRequirement value);

  // .google.appengine.v1.SecurityLevel security_level = 4;
  void clear_security_level();
  static const int kSecurityLevelFieldNumber = 4;
  ::google::appengine::v1::SecurityLevel security_level() const;
  void set_security_level(::google::appengine::v1::SecurityLevel value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ApiConfigHandler)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr script_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  int auth_fail_action_;
  int login_;
  int security_level_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsApiConfigHandlerImpl();
};
// -------------------------------------------------------------------

class ErrorHandler : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ErrorHandler) */ {
 public:
  ErrorHandler();
  virtual ~ErrorHandler();

  ErrorHandler(const ErrorHandler& from);

  inline ErrorHandler& operator=(const ErrorHandler& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorHandler(ErrorHandler&& from) noexcept
    : ErrorHandler() {
    *this = ::std::move(from);
  }

  inline ErrorHandler& operator=(ErrorHandler&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorHandler& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorHandler* internal_default_instance() {
    return reinterpret_cast<const ErrorHandler*>(
               &_ErrorHandler_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ErrorHandler* other);
  friend void swap(ErrorHandler& a, ErrorHandler& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorHandler* New() const PROTOBUF_FINAL { return New(NULL); }

  ErrorHandler* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ErrorHandler& from);
  void MergeFrom(const ErrorHandler& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ErrorHandler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ErrorHandler_ErrorCode ErrorCode;
  static const ErrorCode ERROR_CODE_UNSPECIFIED =
    ErrorHandler_ErrorCode_ERROR_CODE_UNSPECIFIED;
  static const ErrorCode ERROR_CODE_DEFAULT =
    ErrorHandler_ErrorCode_ERROR_CODE_DEFAULT;
  static const ErrorCode ERROR_CODE_OVER_QUOTA =
    ErrorHandler_ErrorCode_ERROR_CODE_OVER_QUOTA;
  static const ErrorCode ERROR_CODE_DOS_API_DENIAL =
    ErrorHandler_ErrorCode_ERROR_CODE_DOS_API_DENIAL;
  static const ErrorCode ERROR_CODE_TIMEOUT =
    ErrorHandler_ErrorCode_ERROR_CODE_TIMEOUT;
  static inline bool ErrorCode_IsValid(int value) {
    return ErrorHandler_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    ErrorHandler_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    ErrorHandler_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    ErrorHandler_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return ErrorHandler_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return ErrorHandler_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return ErrorHandler_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string static_file = 2;
  void clear_static_file();
  static const int kStaticFileFieldNumber = 2;
  const ::std::string& static_file() const;
  void set_static_file(const ::std::string& value);
  #if LANG_CXX11
  void set_static_file(::std::string&& value);
  #endif
  void set_static_file(const char* value);
  void set_static_file(const char* value, size_t size);
  ::std::string* mutable_static_file();
  ::std::string* release_static_file();
  void set_allocated_static_file(::std::string* static_file);

  // string mime_type = 3;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 3;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // .google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::appengine::v1::ErrorHandler_ErrorCode error_code() const;
  void set_error_code(::google::appengine::v1::ErrorHandler_ErrorCode value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ErrorHandler)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr static_file_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  int error_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsErrorHandlerImpl();
};
// -------------------------------------------------------------------

class UrlMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.UrlMap) */ {
 public:
  UrlMap();
  virtual ~UrlMap();

  UrlMap(const UrlMap& from);

  inline UrlMap& operator=(const UrlMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UrlMap(UrlMap&& from) noexcept
    : UrlMap() {
    *this = ::std::move(from);
  }

  inline UrlMap& operator=(UrlMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrlMap& default_instance();

  enum HandlerTypeCase {
    kStaticFiles = 2,
    kScript = 3,
    kApiEndpoint = 4,
    HANDLER_TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UrlMap* internal_default_instance() {
    return reinterpret_cast<const UrlMap*>(
               &_UrlMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UrlMap* other);
  friend void swap(UrlMap& a, UrlMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UrlMap* New() const PROTOBUF_FINAL { return New(NULL); }

  UrlMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UrlMap& from);
  void MergeFrom(const UrlMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UrlMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UrlMap_RedirectHttpResponseCode RedirectHttpResponseCode;
  static const RedirectHttpResponseCode REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED =
    UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED;
  static const RedirectHttpResponseCode REDIRECT_HTTP_RESPONSE_CODE_301 =
    UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_301;
  static const RedirectHttpResponseCode REDIRECT_HTTP_RESPONSE_CODE_302 =
    UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_302;
  static const RedirectHttpResponseCode REDIRECT_HTTP_RESPONSE_CODE_303 =
    UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_303;
  static const RedirectHttpResponseCode REDIRECT_HTTP_RESPONSE_CODE_307 =
    UrlMap_RedirectHttpResponseCode_REDIRECT_HTTP_RESPONSE_CODE_307;
  static inline bool RedirectHttpResponseCode_IsValid(int value) {
    return UrlMap_RedirectHttpResponseCode_IsValid(value);
  }
  static const RedirectHttpResponseCode RedirectHttpResponseCode_MIN =
    UrlMap_RedirectHttpResponseCode_RedirectHttpResponseCode_MIN;
  static const RedirectHttpResponseCode RedirectHttpResponseCode_MAX =
    UrlMap_RedirectHttpResponseCode_RedirectHttpResponseCode_MAX;
  static const int RedirectHttpResponseCode_ARRAYSIZE =
    UrlMap_RedirectHttpResponseCode_RedirectHttpResponseCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RedirectHttpResponseCode_descriptor() {
    return UrlMap_RedirectHttpResponseCode_descriptor();
  }
  static inline const ::std::string& RedirectHttpResponseCode_Name(RedirectHttpResponseCode value) {
    return UrlMap_RedirectHttpResponseCode_Name(value);
  }
  static inline bool RedirectHttpResponseCode_Parse(const ::std::string& name,
      RedirectHttpResponseCode* value) {
    return UrlMap_RedirectHttpResponseCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string url_regex = 1;
  void clear_url_regex();
  static const int kUrlRegexFieldNumber = 1;
  const ::std::string& url_regex() const;
  void set_url_regex(const ::std::string& value);
  #if LANG_CXX11
  void set_url_regex(::std::string&& value);
  #endif
  void set_url_regex(const char* value);
  void set_url_regex(const char* value, size_t size);
  ::std::string* mutable_url_regex();
  ::std::string* release_url_regex();
  void set_allocated_url_regex(::std::string* url_regex);

  // .google.appengine.v1.SecurityLevel security_level = 5;
  void clear_security_level();
  static const int kSecurityLevelFieldNumber = 5;
  ::google::appengine::v1::SecurityLevel security_level() const;
  void set_security_level(::google::appengine::v1::SecurityLevel value);

  // .google.appengine.v1.LoginRequirement login = 6;
  void clear_login();
  static const int kLoginFieldNumber = 6;
  ::google::appengine::v1::LoginRequirement login() const;
  void set_login(::google::appengine::v1::LoginRequirement value);

  // .google.appengine.v1.AuthFailAction auth_fail_action = 7;
  void clear_auth_fail_action();
  static const int kAuthFailActionFieldNumber = 7;
  ::google::appengine::v1::AuthFailAction auth_fail_action() const;
  void set_auth_fail_action(::google::appengine::v1::AuthFailAction value);

  // .google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
  void clear_redirect_http_response_code();
  static const int kRedirectHttpResponseCodeFieldNumber = 8;
  ::google::appengine::v1::UrlMap_RedirectHttpResponseCode redirect_http_response_code() const;
  void set_redirect_http_response_code(::google::appengine::v1::UrlMap_RedirectHttpResponseCode value);

  // .google.appengine.v1.StaticFilesHandler static_files = 2;
  bool has_static_files() const;
  void clear_static_files();
  static const int kStaticFilesFieldNumber = 2;
  const ::google::appengine::v1::StaticFilesHandler& static_files() const;
  ::google::appengine::v1::StaticFilesHandler* release_static_files();
  ::google::appengine::v1::StaticFilesHandler* mutable_static_files();
  void set_allocated_static_files(::google::appengine::v1::StaticFilesHandler* static_files);

  // .google.appengine.v1.ScriptHandler script = 3;
  bool has_script() const;
  void clear_script();
  static const int kScriptFieldNumber = 3;
  const ::google::appengine::v1::ScriptHandler& script() const;
  ::google::appengine::v1::ScriptHandler* release_script();
  ::google::appengine::v1::ScriptHandler* mutable_script();
  void set_allocated_script(::google::appengine::v1::ScriptHandler* script);

  // .google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
  bool has_api_endpoint() const;
  void clear_api_endpoint();
  static const int kApiEndpointFieldNumber = 4;
  const ::google::appengine::v1::ApiEndpointHandler& api_endpoint() const;
  ::google::appengine::v1::ApiEndpointHandler* release_api_endpoint();
  ::google::appengine::v1::ApiEndpointHandler* mutable_api_endpoint();
  void set_allocated_api_endpoint(::google::appengine::v1::ApiEndpointHandler* api_endpoint);

  HandlerTypeCase handler_type_case() const;
  // @@protoc_insertion_point(class_scope:google.appengine.v1.UrlMap)
 private:
  void set_has_static_files();
  void set_has_script();
  void set_has_api_endpoint();

  inline bool has_handler_type() const;
  void clear_handler_type();
  inline void clear_has_handler_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_regex_;
  int security_level_;
  int login_;
  int auth_fail_action_;
  int redirect_http_response_code_;
  union HandlerTypeUnion {
    HandlerTypeUnion() {}
    ::google::appengine::v1::StaticFilesHandler* static_files_;
    ::google::appengine::v1::ScriptHandler* script_;
    ::google::appengine::v1::ApiEndpointHandler* api_endpoint_;
  } handler_type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsUrlMapImpl();
};
// -------------------------------------------------------------------

class StaticFilesHandler_HttpHeadersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<StaticFilesHandler_HttpHeadersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<StaticFilesHandler_HttpHeadersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  StaticFilesHandler_HttpHeadersEntry_DoNotUse();
  StaticFilesHandler_HttpHeadersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StaticFilesHandler_HttpHeadersEntry_DoNotUse& other);
  static const StaticFilesHandler_HttpHeadersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StaticFilesHandler_HttpHeadersEntry_DoNotUse*>(&_StaticFilesHandler_HttpHeadersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class StaticFilesHandler : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.StaticFilesHandler) */ {
 public:
  StaticFilesHandler();
  virtual ~StaticFilesHandler();

  StaticFilesHandler(const StaticFilesHandler& from);

  inline StaticFilesHandler& operator=(const StaticFilesHandler& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StaticFilesHandler(StaticFilesHandler&& from) noexcept
    : StaticFilesHandler() {
    *this = ::std::move(from);
  }

  inline StaticFilesHandler& operator=(StaticFilesHandler&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StaticFilesHandler& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StaticFilesHandler* internal_default_instance() {
    return reinterpret_cast<const StaticFilesHandler*>(
               &_StaticFilesHandler_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(StaticFilesHandler* other);
  friend void swap(StaticFilesHandler& a, StaticFilesHandler& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StaticFilesHandler* New() const PROTOBUF_FINAL { return New(NULL); }

  StaticFilesHandler* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StaticFilesHandler& from);
  void MergeFrom(const StaticFilesHandler& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StaticFilesHandler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> http_headers = 3;
  int http_headers_size() const;
  void clear_http_headers();
  static const int kHttpHeadersFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      http_headers() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_http_headers();

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string upload_path_regex = 2;
  void clear_upload_path_regex();
  static const int kUploadPathRegexFieldNumber = 2;
  const ::std::string& upload_path_regex() const;
  void set_upload_path_regex(const ::std::string& value);
  #if LANG_CXX11
  void set_upload_path_regex(::std::string&& value);
  #endif
  void set_upload_path_regex(const char* value);
  void set_upload_path_regex(const char* value, size_t size);
  ::std::string* mutable_upload_path_regex();
  ::std::string* release_upload_path_regex();
  void set_allocated_upload_path_regex(::std::string* upload_path_regex);

  // string mime_type = 4;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 4;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // .google.protobuf.Duration expiration = 5;
  bool has_expiration() const;
  void clear_expiration();
  static const int kExpirationFieldNumber = 5;
  const ::google::protobuf::Duration& expiration() const;
  ::google::protobuf::Duration* release_expiration();
  ::google::protobuf::Duration* mutable_expiration();
  void set_allocated_expiration(::google::protobuf::Duration* expiration);

  // bool require_matching_file = 6;
  void clear_require_matching_file();
  static const int kRequireMatchingFileFieldNumber = 6;
  bool require_matching_file() const;
  void set_require_matching_file(bool value);

  // bool application_readable = 7;
  void clear_application_readable();
  static const int kApplicationReadableFieldNumber = 7;
  bool application_readable() const;
  void set_application_readable(bool value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.StaticFilesHandler)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      StaticFilesHandler_HttpHeadersEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > http_headers_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr upload_path_regex_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  ::google::protobuf::Duration* expiration_;
  bool require_matching_file_;
  bool application_readable_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsStaticFilesHandlerImpl();
};
// -------------------------------------------------------------------

class ScriptHandler : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ScriptHandler) */ {
 public:
  ScriptHandler();
  virtual ~ScriptHandler();

  ScriptHandler(const ScriptHandler& from);

  inline ScriptHandler& operator=(const ScriptHandler& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScriptHandler(ScriptHandler&& from) noexcept
    : ScriptHandler() {
    *this = ::std::move(from);
  }

  inline ScriptHandler& operator=(ScriptHandler&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScriptHandler& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScriptHandler* internal_default_instance() {
    return reinterpret_cast<const ScriptHandler*>(
               &_ScriptHandler_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ScriptHandler* other);
  friend void swap(ScriptHandler& a, ScriptHandler& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScriptHandler* New() const PROTOBUF_FINAL { return New(NULL); }

  ScriptHandler* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScriptHandler& from);
  void MergeFrom(const ScriptHandler& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScriptHandler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string script_path = 1;
  void clear_script_path();
  static const int kScriptPathFieldNumber = 1;
  const ::std::string& script_path() const;
  void set_script_path(const ::std::string& value);
  #if LANG_CXX11
  void set_script_path(::std::string&& value);
  #endif
  void set_script_path(const char* value);
  void set_script_path(const char* value, size_t size);
  ::std::string* mutable_script_path();
  ::std::string* release_script_path();
  void set_allocated_script_path(::std::string* script_path);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ScriptHandler)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr script_path_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsScriptHandlerImpl();
};
// -------------------------------------------------------------------

class ApiEndpointHandler : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ApiEndpointHandler) */ {
 public:
  ApiEndpointHandler();
  virtual ~ApiEndpointHandler();

  ApiEndpointHandler(const ApiEndpointHandler& from);

  inline ApiEndpointHandler& operator=(const ApiEndpointHandler& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApiEndpointHandler(ApiEndpointHandler&& from) noexcept
    : ApiEndpointHandler() {
    *this = ::std::move(from);
  }

  inline ApiEndpointHandler& operator=(ApiEndpointHandler&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApiEndpointHandler& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApiEndpointHandler* internal_default_instance() {
    return reinterpret_cast<const ApiEndpointHandler*>(
               &_ApiEndpointHandler_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ApiEndpointHandler* other);
  friend void swap(ApiEndpointHandler& a, ApiEndpointHandler& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApiEndpointHandler* New() const PROTOBUF_FINAL { return New(NULL); }

  ApiEndpointHandler* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ApiEndpointHandler& from);
  void MergeFrom(const ApiEndpointHandler& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ApiEndpointHandler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string script_path = 1;
  void clear_script_path();
  static const int kScriptPathFieldNumber = 1;
  const ::std::string& script_path() const;
  void set_script_path(const ::std::string& value);
  #if LANG_CXX11
  void set_script_path(::std::string&& value);
  #endif
  void set_script_path(const char* value);
  void set_script_path(const char* value, size_t size);
  ::std::string* mutable_script_path();
  ::std::string* release_script_path();
  void set_allocated_script_path(::std::string* script_path);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ApiEndpointHandler)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr script_path_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsApiEndpointHandlerImpl();
};
// -------------------------------------------------------------------

class HealthCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.HealthCheck) */ {
 public:
  HealthCheck();
  virtual ~HealthCheck();

  HealthCheck(const HealthCheck& from);

  inline HealthCheck& operator=(const HealthCheck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HealthCheck(HealthCheck&& from) noexcept
    : HealthCheck() {
    *this = ::std::move(from);
  }

  inline HealthCheck& operator=(HealthCheck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HealthCheck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HealthCheck* internal_default_instance() {
    return reinterpret_cast<const HealthCheck*>(
               &_HealthCheck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(HealthCheck* other);
  friend void swap(HealthCheck& a, HealthCheck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HealthCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  HealthCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HealthCheck& from);
  void MergeFrom(const HealthCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HealthCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 2;
  void clear_host();
  static const int kHostFieldNumber = 2;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // .google.protobuf.Duration check_interval = 6;
  bool has_check_interval() const;
  void clear_check_interval();
  static const int kCheckIntervalFieldNumber = 6;
  const ::google::protobuf::Duration& check_interval() const;
  ::google::protobuf::Duration* release_check_interval();
  ::google::protobuf::Duration* mutable_check_interval();
  void set_allocated_check_interval(::google::protobuf::Duration* check_interval);

  // .google.protobuf.Duration timeout = 7;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 7;
  const ::google::protobuf::Duration& timeout() const;
  ::google::protobuf::Duration* release_timeout();
  ::google::protobuf::Duration* mutable_timeout();
  void set_allocated_timeout(::google::protobuf::Duration* timeout);

  // bool disable_health_check = 1;
  void clear_disable_health_check();
  static const int kDisableHealthCheckFieldNumber = 1;
  bool disable_health_check() const;
  void set_disable_health_check(bool value);

  // uint32 healthy_threshold = 3;
  void clear_healthy_threshold();
  static const int kHealthyThresholdFieldNumber = 3;
  ::google::protobuf::uint32 healthy_threshold() const;
  void set_healthy_threshold(::google::protobuf::uint32 value);

  // uint32 unhealthy_threshold = 4;
  void clear_unhealthy_threshold();
  static const int kUnhealthyThresholdFieldNumber = 4;
  ::google::protobuf::uint32 unhealthy_threshold() const;
  void set_unhealthy_threshold(::google::protobuf::uint32 value);

  // uint32 restart_threshold = 5;
  void clear_restart_threshold();
  static const int kRestartThresholdFieldNumber = 5;
  ::google::protobuf::uint32 restart_threshold() const;
  void set_restart_threshold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.HealthCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::Duration* check_interval_;
  ::google::protobuf::Duration* timeout_;
  bool disable_health_check_;
  ::google::protobuf::uint32 healthy_threshold_;
  ::google::protobuf::uint32 unhealthy_threshold_;
  ::google::protobuf::uint32 restart_threshold_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsHealthCheckImpl();
};
// -------------------------------------------------------------------

class Library : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.Library) */ {
 public:
  Library();
  virtual ~Library();

  Library(const Library& from);

  inline Library& operator=(const Library& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Library(Library&& from) noexcept
    : Library() {
    *this = ::std::move(from);
  }

  inline Library& operator=(Library&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Library& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Library* internal_default_instance() {
    return reinterpret_cast<const Library*>(
               &_Library_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Library* other);
  friend void swap(Library& a, Library& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Library* New() const PROTOBUF_FINAL { return New(NULL); }

  Library* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Library& from);
  void MergeFrom(const Library& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Library* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.Library)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::TableStruct;
  friend void ::protobuf_google_2fappengine_2fv1_2fapp_5fyaml_2eproto::InitDefaultsLibraryImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ApiConfigHandler

// .google.appengine.v1.AuthFailAction auth_fail_action = 1;
inline void ApiConfigHandler::clear_auth_fail_action() {
  auth_fail_action_ = 0;
}
inline ::google::appengine::v1::AuthFailAction ApiConfigHandler::auth_fail_action() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.auth_fail_action)
  return static_cast< ::google::appengine::v1::AuthFailAction >(auth_fail_action_);
}
inline void ApiConfigHandler::set_auth_fail_action(::google::appengine::v1::AuthFailAction value) {
  
  auth_fail_action_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.auth_fail_action)
}

// .google.appengine.v1.LoginRequirement login = 2;
inline void ApiConfigHandler::clear_login() {
  login_ = 0;
}
inline ::google::appengine::v1::LoginRequirement ApiConfigHandler::login() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.login)
  return static_cast< ::google::appengine::v1::LoginRequirement >(login_);
}
inline void ApiConfigHandler::set_login(::google::appengine::v1::LoginRequirement value) {
  
  login_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.login)
}

// string script = 3;
inline void ApiConfigHandler::clear_script() {
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApiConfigHandler::script() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.script)
  return script_.GetNoArena();
}
inline void ApiConfigHandler::set_script(const ::std::string& value) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.script)
}
#if LANG_CXX11
inline void ApiConfigHandler::set_script(::std::string&& value) {
  
  script_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ApiConfigHandler.script)
}
#endif
inline void ApiConfigHandler::set_script(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ApiConfigHandler.script)
}
inline void ApiConfigHandler::set_script(const char* value, size_t size) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ApiConfigHandler.script)
}
inline ::std::string* ApiConfigHandler::mutable_script() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ApiConfigHandler.script)
  return script_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiConfigHandler::release_script() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ApiConfigHandler.script)
  
  return script_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiConfigHandler::set_allocated_script(::std::string* script) {
  if (script != NULL) {
    
  } else {
    
  }
  script_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ApiConfigHandler.script)
}

// .google.appengine.v1.SecurityLevel security_level = 4;
inline void ApiConfigHandler::clear_security_level() {
  security_level_ = 0;
}
inline ::google::appengine::v1::SecurityLevel ApiConfigHandler::security_level() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.security_level)
  return static_cast< ::google::appengine::v1::SecurityLevel >(security_level_);
}
inline void ApiConfigHandler::set_security_level(::google::appengine::v1::SecurityLevel value) {
  
  security_level_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.security_level)
}

// string url = 5;
inline void ApiConfigHandler::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApiConfigHandler::url() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.url)
  return url_.GetNoArena();
}
inline void ApiConfigHandler::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.url)
}
#if LANG_CXX11
inline void ApiConfigHandler::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ApiConfigHandler.url)
}
#endif
inline void ApiConfigHandler::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ApiConfigHandler.url)
}
inline void ApiConfigHandler::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ApiConfigHandler.url)
}
inline ::std::string* ApiConfigHandler::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ApiConfigHandler.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiConfigHandler::release_url() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ApiConfigHandler.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiConfigHandler::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ApiConfigHandler.url)
}

// -------------------------------------------------------------------

// ErrorHandler

// .google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
inline void ErrorHandler::clear_error_code() {
  error_code_ = 0;
}
inline ::google::appengine::v1::ErrorHandler_ErrorCode ErrorHandler::error_code() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ErrorHandler.error_code)
  return static_cast< ::google::appengine::v1::ErrorHandler_ErrorCode >(error_code_);
}
inline void ErrorHandler::set_error_code(::google::appengine::v1::ErrorHandler_ErrorCode value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ErrorHandler.error_code)
}

// string static_file = 2;
inline void ErrorHandler::clear_static_file() {
  static_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorHandler::static_file() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ErrorHandler.static_file)
  return static_file_.GetNoArena();
}
inline void ErrorHandler::set_static_file(const ::std::string& value) {
  
  static_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ErrorHandler.static_file)
}
#if LANG_CXX11
inline void ErrorHandler::set_static_file(::std::string&& value) {
  
  static_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ErrorHandler.static_file)
}
#endif
inline void ErrorHandler::set_static_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  static_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ErrorHandler.static_file)
}
inline void ErrorHandler::set_static_file(const char* value, size_t size) {
  
  static_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ErrorHandler.static_file)
}
inline ::std::string* ErrorHandler::mutable_static_file() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ErrorHandler.static_file)
  return static_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorHandler::release_static_file() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ErrorHandler.static_file)
  
  return static_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorHandler::set_allocated_static_file(::std::string* static_file) {
  if (static_file != NULL) {
    
  } else {
    
  }
  static_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), static_file);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ErrorHandler.static_file)
}

// string mime_type = 3;
inline void ErrorHandler::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorHandler::mime_type() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ErrorHandler.mime_type)
  return mime_type_.GetNoArena();
}
inline void ErrorHandler::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ErrorHandler.mime_type)
}
#if LANG_CXX11
inline void ErrorHandler::set_mime_type(::std::string&& value) {
  
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ErrorHandler.mime_type)
}
#endif
inline void ErrorHandler::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ErrorHandler.mime_type)
}
inline void ErrorHandler::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ErrorHandler.mime_type)
}
inline ::std::string* ErrorHandler::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ErrorHandler.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorHandler::release_mime_type() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ErrorHandler.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorHandler::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ErrorHandler.mime_type)
}

// -------------------------------------------------------------------

// UrlMap

// string url_regex = 1;
inline void UrlMap::clear_url_regex() {
  url_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlMap::url_regex() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.url_regex)
  return url_regex_.GetNoArena();
}
inline void UrlMap::set_url_regex(const ::std::string& value) {
  
  url_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.url_regex)
}
#if LANG_CXX11
inline void UrlMap::set_url_regex(::std::string&& value) {
  
  url_regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.UrlMap.url_regex)
}
#endif
inline void UrlMap::set_url_regex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.UrlMap.url_regex)
}
inline void UrlMap::set_url_regex(const char* value, size_t size) {
  
  url_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.UrlMap.url_regex)
}
inline ::std::string* UrlMap::mutable_url_regex() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.url_regex)
  return url_regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlMap::release_url_regex() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.url_regex)
  
  return url_regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlMap::set_allocated_url_regex(::std::string* url_regex) {
  if (url_regex != NULL) {
    
  } else {
    
  }
  url_regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_regex);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlMap.url_regex)
}

// .google.appengine.v1.StaticFilesHandler static_files = 2;
inline bool UrlMap::has_static_files() const {
  return handler_type_case() == kStaticFiles;
}
inline void UrlMap::set_has_static_files() {
  _oneof_case_[0] = kStaticFiles;
}
inline void UrlMap::clear_static_files() {
  if (has_static_files()) {
    delete handler_type_.static_files_;
    clear_has_handler_type();
  }
}
inline ::google::appengine::v1::StaticFilesHandler* UrlMap::release_static_files() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.static_files)
  if (has_static_files()) {
    clear_has_handler_type();
      ::google::appengine::v1::StaticFilesHandler* temp = handler_type_.static_files_;
    handler_type_.static_files_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::StaticFilesHandler& UrlMap::static_files() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.static_files)
  return has_static_files()
      ? *handler_type_.static_files_
      : *reinterpret_cast< ::google::appengine::v1::StaticFilesHandler*>(&::google::appengine::v1::_StaticFilesHandler_default_instance_);
}
inline ::google::appengine::v1::StaticFilesHandler* UrlMap::mutable_static_files() {
  if (!has_static_files()) {
    clear_handler_type();
    set_has_static_files();
    handler_type_.static_files_ = new ::google::appengine::v1::StaticFilesHandler;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.static_files)
  return handler_type_.static_files_;
}

// .google.appengine.v1.ScriptHandler script = 3;
inline bool UrlMap::has_script() const {
  return handler_type_case() == kScript;
}
inline void UrlMap::set_has_script() {
  _oneof_case_[0] = kScript;
}
inline void UrlMap::clear_script() {
  if (has_script()) {
    delete handler_type_.script_;
    clear_has_handler_type();
  }
}
inline ::google::appengine::v1::ScriptHandler* UrlMap::release_script() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.script)
  if (has_script()) {
    clear_has_handler_type();
      ::google::appengine::v1::ScriptHandler* temp = handler_type_.script_;
    handler_type_.script_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::ScriptHandler& UrlMap::script() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.script)
  return has_script()
      ? *handler_type_.script_
      : *reinterpret_cast< ::google::appengine::v1::ScriptHandler*>(&::google::appengine::v1::_ScriptHandler_default_instance_);
}
inline ::google::appengine::v1::ScriptHandler* UrlMap::mutable_script() {
  if (!has_script()) {
    clear_handler_type();
    set_has_script();
    handler_type_.script_ = new ::google::appengine::v1::ScriptHandler;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.script)
  return handler_type_.script_;
}

// .google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
inline bool UrlMap::has_api_endpoint() const {
  return handler_type_case() == kApiEndpoint;
}
inline void UrlMap::set_has_api_endpoint() {
  _oneof_case_[0] = kApiEndpoint;
}
inline void UrlMap::clear_api_endpoint() {
  if (has_api_endpoint()) {
    delete handler_type_.api_endpoint_;
    clear_has_handler_type();
  }
}
inline ::google::appengine::v1::ApiEndpointHandler* UrlMap::release_api_endpoint() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.api_endpoint)
  if (has_api_endpoint()) {
    clear_has_handler_type();
      ::google::appengine::v1::ApiEndpointHandler* temp = handler_type_.api_endpoint_;
    handler_type_.api_endpoint_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::appengine::v1::ApiEndpointHandler& UrlMap::api_endpoint() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.api_endpoint)
  return has_api_endpoint()
      ? *handler_type_.api_endpoint_
      : *reinterpret_cast< ::google::appengine::v1::ApiEndpointHandler*>(&::google::appengine::v1::_ApiEndpointHandler_default_instance_);
}
inline ::google::appengine::v1::ApiEndpointHandler* UrlMap::mutable_api_endpoint() {
  if (!has_api_endpoint()) {
    clear_handler_type();
    set_has_api_endpoint();
    handler_type_.api_endpoint_ = new ::google::appengine::v1::ApiEndpointHandler;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.api_endpoint)
  return handler_type_.api_endpoint_;
}

// .google.appengine.v1.SecurityLevel security_level = 5;
inline void UrlMap::clear_security_level() {
  security_level_ = 0;
}
inline ::google::appengine::v1::SecurityLevel UrlMap::security_level() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.security_level)
  return static_cast< ::google::appengine::v1::SecurityLevel >(security_level_);
}
inline void UrlMap::set_security_level(::google::appengine::v1::SecurityLevel value) {
  
  security_level_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.security_level)
}

// .google.appengine.v1.LoginRequirement login = 6;
inline void UrlMap::clear_login() {
  login_ = 0;
}
inline ::google::appengine::v1::LoginRequirement UrlMap::login() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.login)
  return static_cast< ::google::appengine::v1::LoginRequirement >(login_);
}
inline void UrlMap::set_login(::google::appengine::v1::LoginRequirement value) {
  
  login_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.login)
}

// .google.appengine.v1.AuthFailAction auth_fail_action = 7;
inline void UrlMap::clear_auth_fail_action() {
  auth_fail_action_ = 0;
}
inline ::google::appengine::v1::AuthFailAction UrlMap::auth_fail_action() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.auth_fail_action)
  return static_cast< ::google::appengine::v1::AuthFailAction >(auth_fail_action_);
}
inline void UrlMap::set_auth_fail_action(::google::appengine::v1::AuthFailAction value) {
  
  auth_fail_action_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.auth_fail_action)
}

// .google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
inline void UrlMap::clear_redirect_http_response_code() {
  redirect_http_response_code_ = 0;
}
inline ::google::appengine::v1::UrlMap_RedirectHttpResponseCode UrlMap::redirect_http_response_code() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.redirect_http_response_code)
  return static_cast< ::google::appengine::v1::UrlMap_RedirectHttpResponseCode >(redirect_http_response_code_);
}
inline void UrlMap::set_redirect_http_response_code(::google::appengine::v1::UrlMap_RedirectHttpResponseCode value) {
  
  redirect_http_response_code_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.redirect_http_response_code)
}

inline bool UrlMap::has_handler_type() const {
  return handler_type_case() != HANDLER_TYPE_NOT_SET;
}
inline void UrlMap::clear_has_handler_type() {
  _oneof_case_[0] = HANDLER_TYPE_NOT_SET;
}
inline UrlMap::HandlerTypeCase UrlMap::handler_type_case() const {
  return UrlMap::HandlerTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StaticFilesHandler

// string path = 1;
inline void StaticFilesHandler::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StaticFilesHandler::path() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.path)
  return path_.GetNoArena();
}
inline void StaticFilesHandler::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.path)
}
#if LANG_CXX11
inline void StaticFilesHandler::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.StaticFilesHandler.path)
}
#endif
inline void StaticFilesHandler::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.StaticFilesHandler.path)
}
inline void StaticFilesHandler::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.StaticFilesHandler.path)
}
inline ::std::string* StaticFilesHandler::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StaticFilesHandler::release_path() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StaticFilesHandler::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.path)
}

// string upload_path_regex = 2;
inline void StaticFilesHandler::clear_upload_path_regex() {
  upload_path_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StaticFilesHandler::upload_path_regex() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.upload_path_regex)
  return upload_path_regex_.GetNoArena();
}
inline void StaticFilesHandler::set_upload_path_regex(const ::std::string& value) {
  
  upload_path_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}
#if LANG_CXX11
inline void StaticFilesHandler::set_upload_path_regex(::std::string&& value) {
  
  upload_path_regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}
#endif
inline void StaticFilesHandler::set_upload_path_regex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  upload_path_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}
inline void StaticFilesHandler::set_upload_path_regex(const char* value, size_t size) {
  
  upload_path_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}
inline ::std::string* StaticFilesHandler::mutable_upload_path_regex() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.upload_path_regex)
  return upload_path_regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StaticFilesHandler::release_upload_path_regex() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.upload_path_regex)
  
  return upload_path_regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StaticFilesHandler::set_allocated_upload_path_regex(::std::string* upload_path_regex) {
  if (upload_path_regex != NULL) {
    
  } else {
    
  }
  upload_path_regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upload_path_regex);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}

// map<string, string> http_headers = 3;
inline int StaticFilesHandler::http_headers_size() const {
  return http_headers_.size();
}
inline void StaticFilesHandler::clear_http_headers() {
  http_headers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StaticFilesHandler::http_headers() const {
  // @@protoc_insertion_point(field_map:google.appengine.v1.StaticFilesHandler.http_headers)
  return http_headers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StaticFilesHandler::mutable_http_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.appengine.v1.StaticFilesHandler.http_headers)
  return http_headers_.MutableMap();
}

// string mime_type = 4;
inline void StaticFilesHandler::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StaticFilesHandler::mime_type() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.mime_type)
  return mime_type_.GetNoArena();
}
inline void StaticFilesHandler::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.mime_type)
}
#if LANG_CXX11
inline void StaticFilesHandler::set_mime_type(::std::string&& value) {
  
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.StaticFilesHandler.mime_type)
}
#endif
inline void StaticFilesHandler::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.StaticFilesHandler.mime_type)
}
inline void StaticFilesHandler::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.StaticFilesHandler.mime_type)
}
inline ::std::string* StaticFilesHandler::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StaticFilesHandler::release_mime_type() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StaticFilesHandler::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.mime_type)
}

// .google.protobuf.Duration expiration = 5;
inline bool StaticFilesHandler::has_expiration() const {
  return this != internal_default_instance() && expiration_ != NULL;
}
inline const ::google::protobuf::Duration& StaticFilesHandler::expiration() const {
  const ::google::protobuf::Duration* p = expiration_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.expiration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* StaticFilesHandler::release_expiration() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.expiration)
  
  ::google::protobuf::Duration* temp = expiration_;
  expiration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* StaticFilesHandler::mutable_expiration() {
  
  if (expiration_ == NULL) {
    expiration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.expiration)
  return expiration_;
}
inline void StaticFilesHandler::set_allocated_expiration(::google::protobuf::Duration* expiration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expiration_);
  }
  if (expiration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(expiration)->GetArena();
    if (message_arena != submessage_arena) {
      expiration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expiration, submessage_arena);
    }
    
  } else {
    
  }
  expiration_ = expiration;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.expiration)
}

// bool require_matching_file = 6;
inline void StaticFilesHandler::clear_require_matching_file() {
  require_matching_file_ = false;
}
inline bool StaticFilesHandler::require_matching_file() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.require_matching_file)
  return require_matching_file_;
}
inline void StaticFilesHandler::set_require_matching_file(bool value) {
  
  require_matching_file_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.require_matching_file)
}

// bool application_readable = 7;
inline void StaticFilesHandler::clear_application_readable() {
  application_readable_ = false;
}
inline bool StaticFilesHandler::application_readable() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.application_readable)
  return application_readable_;
}
inline void StaticFilesHandler::set_application_readable(bool value) {
  
  application_readable_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.application_readable)
}

// -------------------------------------------------------------------

// ScriptHandler

// string script_path = 1;
inline void ScriptHandler::clear_script_path() {
  script_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScriptHandler::script_path() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ScriptHandler.script_path)
  return script_path_.GetNoArena();
}
inline void ScriptHandler::set_script_path(const ::std::string& value) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ScriptHandler.script_path)
}
#if LANG_CXX11
inline void ScriptHandler::set_script_path(::std::string&& value) {
  
  script_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ScriptHandler.script_path)
}
#endif
inline void ScriptHandler::set_script_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ScriptHandler.script_path)
}
inline void ScriptHandler::set_script_path(const char* value, size_t size) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ScriptHandler.script_path)
}
inline ::std::string* ScriptHandler::mutable_script_path() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ScriptHandler.script_path)
  return script_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScriptHandler::release_script_path() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ScriptHandler.script_path)
  
  return script_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScriptHandler::set_allocated_script_path(::std::string* script_path) {
  if (script_path != NULL) {
    
  } else {
    
  }
  script_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_path);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ScriptHandler.script_path)
}

// -------------------------------------------------------------------

// ApiEndpointHandler

// string script_path = 1;
inline void ApiEndpointHandler::clear_script_path() {
  script_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApiEndpointHandler::script_path() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiEndpointHandler.script_path)
  return script_path_.GetNoArena();
}
inline void ApiEndpointHandler::set_script_path(const ::std::string& value) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiEndpointHandler.script_path)
}
#if LANG_CXX11
inline void ApiEndpointHandler::set_script_path(::std::string&& value) {
  
  script_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.ApiEndpointHandler.script_path)
}
#endif
inline void ApiEndpointHandler::set_script_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ApiEndpointHandler.script_path)
}
inline void ApiEndpointHandler::set_script_path(const char* value, size_t size) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ApiEndpointHandler.script_path)
}
inline ::std::string* ApiEndpointHandler::mutable_script_path() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ApiEndpointHandler.script_path)
  return script_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiEndpointHandler::release_script_path() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ApiEndpointHandler.script_path)
  
  return script_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiEndpointHandler::set_allocated_script_path(::std::string* script_path) {
  if (script_path != NULL) {
    
  } else {
    
  }
  script_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_path);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ApiEndpointHandler.script_path)
}

// -------------------------------------------------------------------

// HealthCheck

// bool disable_health_check = 1;
inline void HealthCheck::clear_disable_health_check() {
  disable_health_check_ = false;
}
inline bool HealthCheck::disable_health_check() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.disable_health_check)
  return disable_health_check_;
}
inline void HealthCheck::set_disable_health_check(bool value) {
  
  disable_health_check_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.disable_health_check)
}

// string host = 2;
inline void HealthCheck::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HealthCheck::host() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.host)
  return host_.GetNoArena();
}
inline void HealthCheck::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.host)
}
#if LANG_CXX11
inline void HealthCheck::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.HealthCheck.host)
}
#endif
inline void HealthCheck::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.HealthCheck.host)
}
inline void HealthCheck::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.HealthCheck.host)
}
inline ::std::string* HealthCheck::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.HealthCheck.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HealthCheck::release_host() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.HealthCheck.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HealthCheck::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.HealthCheck.host)
}

// uint32 healthy_threshold = 3;
inline void HealthCheck::clear_healthy_threshold() {
  healthy_threshold_ = 0u;
}
inline ::google::protobuf::uint32 HealthCheck::healthy_threshold() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.healthy_threshold)
  return healthy_threshold_;
}
inline void HealthCheck::set_healthy_threshold(::google::protobuf::uint32 value) {
  
  healthy_threshold_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.healthy_threshold)
}

// uint32 unhealthy_threshold = 4;
inline void HealthCheck::clear_unhealthy_threshold() {
  unhealthy_threshold_ = 0u;
}
inline ::google::protobuf::uint32 HealthCheck::unhealthy_threshold() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.unhealthy_threshold)
  return unhealthy_threshold_;
}
inline void HealthCheck::set_unhealthy_threshold(::google::protobuf::uint32 value) {
  
  unhealthy_threshold_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.unhealthy_threshold)
}

// uint32 restart_threshold = 5;
inline void HealthCheck::clear_restart_threshold() {
  restart_threshold_ = 0u;
}
inline ::google::protobuf::uint32 HealthCheck::restart_threshold() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.restart_threshold)
  return restart_threshold_;
}
inline void HealthCheck::set_restart_threshold(::google::protobuf::uint32 value) {
  
  restart_threshold_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.restart_threshold)
}

// .google.protobuf.Duration check_interval = 6;
inline bool HealthCheck::has_check_interval() const {
  return this != internal_default_instance() && check_interval_ != NULL;
}
inline const ::google::protobuf::Duration& HealthCheck::check_interval() const {
  const ::google::protobuf::Duration* p = check_interval_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.check_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* HealthCheck::release_check_interval() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.HealthCheck.check_interval)
  
  ::google::protobuf::Duration* temp = check_interval_;
  check_interval_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* HealthCheck::mutable_check_interval() {
  
  if (check_interval_ == NULL) {
    check_interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.HealthCheck.check_interval)
  return check_interval_;
}
inline void HealthCheck::set_allocated_check_interval(::google::protobuf::Duration* check_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(check_interval_);
  }
  if (check_interval) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(check_interval)->GetArena();
    if (message_arena != submessage_arena) {
      check_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, check_interval, submessage_arena);
    }
    
  } else {
    
  }
  check_interval_ = check_interval;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.HealthCheck.check_interval)
}

// .google.protobuf.Duration timeout = 7;
inline bool HealthCheck::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::google::protobuf::Duration& HealthCheck::timeout() const {
  const ::google::protobuf::Duration* p = timeout_;
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* HealthCheck::release_timeout() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.HealthCheck.timeout)
  
  ::google::protobuf::Duration* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* HealthCheck::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.HealthCheck.timeout)
  return timeout_;
}
inline void HealthCheck::set_allocated_timeout(::google::protobuf::Duration* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(timeout)->GetArena();
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.HealthCheck.timeout)
}

// -------------------------------------------------------------------

// Library

// string name = 1;
inline void Library::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Library::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Library.name)
  return name_.GetNoArena();
}
inline void Library::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Library.name)
}
#if LANG_CXX11
inline void Library::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Library.name)
}
#endif
inline void Library::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Library.name)
}
inline void Library::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Library.name)
}
inline ::std::string* Library::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Library.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Library::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Library.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Library::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Library.name)
}

// string version = 2;
inline void Library::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Library::version() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Library.version)
  return version_.GetNoArena();
}
inline void Library::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Library.version)
}
#if LANG_CXX11
inline void Library::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.v1.Library.version)
}
#endif
inline void Library::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Library.version)
}
inline void Library::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Library.version)
}
inline ::std::string* Library::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Library.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Library::release_version() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Library.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Library::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Library.version)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::appengine::v1::ErrorHandler_ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::ErrorHandler_ErrorCode>() {
  return ::google::appengine::v1::ErrorHandler_ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::google::appengine::v1::UrlMap_RedirectHttpResponseCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::UrlMap_RedirectHttpResponseCode>() {
  return ::google::appengine::v1::UrlMap_RedirectHttpResponseCode_descriptor();
}
template <> struct is_proto_enum< ::google::appengine::v1::AuthFailAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::AuthFailAction>() {
  return ::google::appengine::v1::AuthFailAction_descriptor();
}
template <> struct is_proto_enum< ::google::appengine::v1::LoginRequirement> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::LoginRequirement>() {
  return ::google::appengine::v1::LoginRequirement_descriptor();
}
template <> struct is_proto_enum< ::google::appengine::v1::SecurityLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::appengine::v1::SecurityLevel>() {
  return ::google::appengine::v1::SecurityLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fappengine_2fv1_2fapp_5fyaml_2eproto__INCLUDED
