// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/instance.proto

#include "google/appengine/v1/instance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace appengine {
namespace v1 {
class InstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instance>
      _instance;
} _Instance_default_instance_;
}  // namespace v1
}  // namespace appengine
}  // namespace google
namespace protobuf_google_2fappengine_2fv1_2finstance_2eproto {
void InitDefaultsInstanceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::appengine::v1::_Instance_default_instance_;
    new (ptr) ::google::appengine::v1::Instance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::appengine::v1::Instance::InitAsDefaultInstance();
}

void InitDefaultsInstance() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInstanceImpl);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, app_engine_release_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, availability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, vm_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, vm_zone_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, vm_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, qps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, average_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, memory_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, vm_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::appengine::v1::Instance, vm_debug_enabled_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::appengine::v1::Instance)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::appengine::v1::_Instance_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/appengine/v1/instance.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"google/appengine/v1/instance.proto\022\023go"
      "ogle.appengine.v1\032\034google/api/annotation"
      "s.proto\032\037google/protobuf/timestamp.proto"
      "\"\257\003\n\010Instance\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022"
      "\032\n\022app_engine_release\030\003 \001(\t\022@\n\014availabil"
      "ity\030\004 \001(\0162*.google.appengine.v1.Instance"
      ".Availability\022\017\n\007vm_name\030\005 \001(\t\022\024\n\014vm_zon"
      "e_name\030\006 \001(\t\022\r\n\005vm_id\030\007 \001(\t\022.\n\nstart_tim"
      "e\030\010 \001(\0132\032.google.protobuf.Timestamp\022\020\n\010r"
      "equests\030\t \001(\005\022\016\n\006errors\030\n \001(\005\022\013\n\003qps\030\013 \001"
      "(\002\022\027\n\017average_latency\030\014 \001(\005\022\024\n\014memory_us"
      "age\030\r \001(\003\022\021\n\tvm_status\030\016 \001(\t\022\030\n\020vm_debug"
      "_enabled\030\017 \001(\010\":\n\014Availability\022\017\n\013UNSPEC"
      "IFIED\020\000\022\014\n\010RESIDENT\020\001\022\013\n\007DYNAMIC\020\002Bh\n\027co"
      "m.google.appengine.v1B\rInstanceProtoP\001Z<"
      "google.golang.org/genproto/googleapis/ap"
      "pengine/v1;appengineb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 668);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/v1/instance.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fappengine_2fv1_2finstance_2eproto
namespace google {
namespace appengine {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Instance_Availability_descriptor() {
  protobuf_google_2fappengine_2fv1_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fappengine_2fv1_2finstance_2eproto::file_level_enum_descriptors[0];
}
bool Instance_Availability_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instance_Availability Instance::UNSPECIFIED;
const Instance_Availability Instance::RESIDENT;
const Instance_Availability Instance::DYNAMIC;
const Instance_Availability Instance::Availability_MIN;
const Instance_Availability Instance::Availability_MAX;
const int Instance::Availability_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Instance::InitAsDefaultInstance() {
  ::google::appengine::v1::_Instance_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Instance::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instance::kNameFieldNumber;
const int Instance::kIdFieldNumber;
const int Instance::kAppEngineReleaseFieldNumber;
const int Instance::kAvailabilityFieldNumber;
const int Instance::kVmNameFieldNumber;
const int Instance::kVmZoneNameFieldNumber;
const int Instance::kVmIdFieldNumber;
const int Instance::kStartTimeFieldNumber;
const int Instance::kRequestsFieldNumber;
const int Instance::kErrorsFieldNumber;
const int Instance::kQpsFieldNumber;
const int Instance::kAverageLatencyFieldNumber;
const int Instance::kMemoryUsageFieldNumber;
const int Instance::kVmStatusFieldNumber;
const int Instance::kVmDebugEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instance::Instance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fappengine_2fv1_2finstance_2eproto::InitDefaultsInstance();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Instance)
}
Instance::Instance(const Instance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  app_engine_release_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_engine_release().size() > 0) {
    app_engine_release_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_engine_release_);
  }
  vm_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vm_name().size() > 0) {
    vm_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_name_);
  }
  vm_zone_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vm_zone_name().size() > 0) {
    vm_zone_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_zone_name_);
  }
  vm_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vm_id().size() > 0) {
    vm_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_id_);
  }
  vm_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vm_status().size() > 0) {
    vm_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_status_);
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  ::memcpy(&availability_, &from.availability_,
    static_cast<size_t>(reinterpret_cast<char*>(&vm_debug_enabled_) -
    reinterpret_cast<char*>(&availability_)) + sizeof(vm_debug_enabled_));
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Instance)
}

void Instance::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_zone_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vm_debug_enabled_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(vm_debug_enabled_));
  _cached_size_ = 0;
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Instance)
  SharedDtor();
}

void Instance::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_zone_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
}

void Instance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Instance::descriptor() {
  ::protobuf_google_2fappengine_2fv1_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2finstance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instance& Instance::default_instance() {
  ::protobuf_google_2fappengine_2fv1_2finstance_2eproto::InitDefaultsInstance();
  return *internal_default_instance();
}

Instance* Instance::New(::google::protobuf::Arena* arena) const {
  Instance* n = new Instance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_zone_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  ::memset(&availability_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vm_debug_enabled_) -
      reinterpret_cast<char*>(&availability_)) + sizeof(vm_debug_enabled_));
  _internal_metadata_.Clear();
}

bool Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Instance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_engine_release = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_engine_release()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_engine_release().data(), static_cast<int>(this->app_engine_release().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.app_engine_release"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.appengine.v1.Instance.Availability availability = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_availability(static_cast< ::google::appengine::v1::Instance_Availability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vm_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_name().data(), static_cast<int>(this->vm_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vm_zone_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_zone_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_zone_name().data(), static_cast<int>(this->vm_zone_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_zone_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vm_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_id().data(), static_cast<int>(this->vm_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requests = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 errors = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float qps = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 average_latency = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &average_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 memory_usage = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &memory_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vm_status = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_status().data(), static_cast<int>(this->vm_status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vm_debug_enabled = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vm_debug_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Instance)
  return false;
#undef DO_
}

void Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string app_engine_release = 3;
  if (this->app_engine_release().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_engine_release().data(), static_cast<int>(this->app_engine_release().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.app_engine_release");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->app_engine_release(), output);
  }

  // .google.appengine.v1.Instance.Availability availability = 4;
  if (this->availability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->availability(), output);
  }

  // string vm_name = 5;
  if (this->vm_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_name().data(), static_cast<int>(this->vm_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->vm_name(), output);
  }

  // string vm_zone_name = 6;
  if (this->vm_zone_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_zone_name().data(), static_cast<int>(this->vm_zone_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_zone_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->vm_zone_name(), output);
  }

  // string vm_id = 7;
  if (this->vm_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_id().data(), static_cast<int>(this->vm_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->vm_id(), output);
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->start_time_, output);
  }

  // int32 requests = 9;
  if (this->requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->requests(), output);
  }

  // int32 errors = 10;
  if (this->errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->errors(), output);
  }

  // float qps = 11;
  if (this->qps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->qps(), output);
  }

  // int32 average_latency = 12;
  if (this->average_latency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->average_latency(), output);
  }

  // int64 memory_usage = 13;
  if (this->memory_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->memory_usage(), output);
  }

  // string vm_status = 14;
  if (this->vm_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_status().data(), static_cast<int>(this->vm_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->vm_status(), output);
  }

  // bool vm_debug_enabled = 15;
  if (this->vm_debug_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->vm_debug_enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Instance)
}

::google::protobuf::uint8* Instance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string app_engine_release = 3;
  if (this->app_engine_release().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_engine_release().data(), static_cast<int>(this->app_engine_release().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.app_engine_release");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->app_engine_release(), target);
  }

  // .google.appengine.v1.Instance.Availability availability = 4;
  if (this->availability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->availability(), target);
  }

  // string vm_name = 5;
  if (this->vm_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_name().data(), static_cast<int>(this->vm_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->vm_name(), target);
  }

  // string vm_zone_name = 6;
  if (this->vm_zone_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_zone_name().data(), static_cast<int>(this->vm_zone_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_zone_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->vm_zone_name(), target);
  }

  // string vm_id = 7;
  if (this->vm_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_id().data(), static_cast<int>(this->vm_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->vm_id(), target);
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->start_time_, deterministic, target);
  }

  // int32 requests = 9;
  if (this->requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->requests(), target);
  }

  // int32 errors = 10;
  if (this->errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->errors(), target);
  }

  // float qps = 11;
  if (this->qps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->qps(), target);
  }

  // int32 average_latency = 12;
  if (this->average_latency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->average_latency(), target);
  }

  // int64 memory_usage = 13;
  if (this->memory_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->memory_usage(), target);
  }

  // string vm_status = 14;
  if (this->vm_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_status().data(), static_cast<int>(this->vm_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->vm_status(), target);
  }

  // bool vm_debug_enabled = 15;
  if (this->vm_debug_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->vm_debug_enabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Instance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string app_engine_release = 3;
  if (this->app_engine_release().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_engine_release());
  }

  // string vm_name = 5;
  if (this->vm_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_name());
  }

  // string vm_zone_name = 6;
  if (this->vm_zone_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_zone_name());
  }

  // string vm_id = 7;
  if (this->vm_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_id());
  }

  // string vm_status = 14;
  if (this->vm_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_status());
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.appengine.v1.Instance.Availability availability = 4;
  if (this->availability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->availability());
  }

  // int32 requests = 9;
  if (this->requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requests());
  }

  // int32 errors = 10;
  if (this->errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errors());
  }

  // float qps = 11;
  if (this->qps() != 0) {
    total_size += 1 + 4;
  }

  // int64 memory_usage = 13;
  if (this->memory_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->memory_usage());
  }

  // int32 average_latency = 12;
  if (this->average_latency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->average_latency());
  }

  // bool vm_debug_enabled = 15;
  if (this->vm_debug_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Instance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  const Instance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Instance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Instance)
    MergeFrom(*source);
  }
}

void Instance::MergeFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.app_engine_release().size() > 0) {

    app_engine_release_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_engine_release_);
  }
  if (from.vm_name().size() > 0) {

    vm_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_name_);
  }
  if (from.vm_zone_name().size() > 0) {

    vm_zone_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_zone_name_);
  }
  if (from.vm_id().size() > 0) {

    vm_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_id_);
  }
  if (from.vm_status().size() > 0) {

    vm_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_status_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.availability() != 0) {
    set_availability(from.availability());
  }
  if (from.requests() != 0) {
    set_requests(from.requests());
  }
  if (from.errors() != 0) {
    set_errors(from.errors());
  }
  if (from.qps() != 0) {
    set_qps(from.qps());
  }
  if (from.memory_usage() != 0) {
    set_memory_usage(from.memory_usage());
  }
  if (from.average_latency() != 0) {
    set_average_latency(from.average_latency());
  }
  if (from.vm_debug_enabled() != 0) {
    set_vm_debug_enabled(from.vm_debug_enabled());
  }
}

void Instance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instance::IsInitialized() const {
  return true;
}

void Instance::Swap(Instance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instance::InternalSwap(Instance* other) {
  using std::swap;
  name_.Swap(&other->name_);
  id_.Swap(&other->id_);
  app_engine_release_.Swap(&other->app_engine_release_);
  vm_name_.Swap(&other->vm_name_);
  vm_zone_name_.Swap(&other->vm_zone_name_);
  vm_id_.Swap(&other->vm_id_);
  vm_status_.Swap(&other->vm_status_);
  swap(start_time_, other->start_time_);
  swap(availability_, other->availability_);
  swap(requests_, other->requests_);
  swap(errors_, other->errors_);
  swap(qps_, other->qps_);
  swap(memory_usage_, other->memory_usage_);
  swap(average_latency_, other->average_latency_);
  swap(vm_debug_enabled_, other->vm_debug_enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Instance::GetMetadata() const {
  protobuf_google_2fappengine_2fv1_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fappengine_2fv1_2finstance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
