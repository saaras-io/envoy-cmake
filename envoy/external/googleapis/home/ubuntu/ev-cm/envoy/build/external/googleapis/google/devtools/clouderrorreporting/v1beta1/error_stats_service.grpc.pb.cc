// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto

#include "google/devtools/clouderrorreporting/v1beta1/error_stats_service.pb.h"
#include "google/devtools/clouderrorreporting/v1beta1/error_stats_service.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

static const char* ErrorStatsService_method_names[] = {
  "/google.devtools.clouderrorreporting.v1beta1.ErrorStatsService/ListGroupStats",
  "/google.devtools.clouderrorreporting.v1beta1.ErrorStatsService/ListEvents",
  "/google.devtools.clouderrorreporting.v1beta1.ErrorStatsService/DeleteEvents",
};

std::unique_ptr< ErrorStatsService::Stub> ErrorStatsService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ErrorStatsService::Stub> stub(new ErrorStatsService::Stub(channel));
  return stub;
}

ErrorStatsService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListGroupStats_(ErrorStatsService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListEvents_(ErrorStatsService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteEvents_(ErrorStatsService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ErrorStatsService::Stub::ListGroupStats(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest& request, ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListGroupStats_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse>* ErrorStatsService::Stub::AsyncListGroupStatsRaw(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse>::Create(channel_.get(), cq, rpcmethod_ListGroupStats_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse>* ErrorStatsService::Stub::PrepareAsyncListGroupStatsRaw(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse>::Create(channel_.get(), cq, rpcmethod_ListGroupStats_, context, request, false);
}

::grpc::Status ErrorStatsService::Stub::ListEvents(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest& request, ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListEvents_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse>* ErrorStatsService::Stub::AsyncListEventsRaw(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse>::Create(channel_.get(), cq, rpcmethod_ListEvents_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse>* ErrorStatsService::Stub::PrepareAsyncListEventsRaw(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse>::Create(channel_.get(), cq, rpcmethod_ListEvents_, context, request, false);
}

::grpc::Status ErrorStatsService::Stub::DeleteEvents(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest& request, ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteEvents_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse>* ErrorStatsService::Stub::AsyncDeleteEventsRaw(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse>::Create(channel_.get(), cq, rpcmethod_DeleteEvents_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse>* ErrorStatsService::Stub::PrepareAsyncDeleteEventsRaw(::grpc::ClientContext* context, const ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse>::Create(channel_.get(), cq, rpcmethod_DeleteEvents_, context, request, false);
}

ErrorStatsService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ErrorStatsService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ErrorStatsService::Service, ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest, ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse>(
          std::mem_fn(&ErrorStatsService::Service::ListGroupStats), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ErrorStatsService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ErrorStatsService::Service, ::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest, ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse>(
          std::mem_fn(&ErrorStatsService::Service::ListEvents), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ErrorStatsService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ErrorStatsService::Service, ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest, ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse>(
          std::mem_fn(&ErrorStatsService::Service::DeleteEvents), this)));
}

ErrorStatsService::Service::~Service() {
}

::grpc::Status ErrorStatsService::Service::ListGroupStats(::grpc::ServerContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsRequest* request, ::google::devtools::clouderrorreporting::v1beta1::ListGroupStatsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ErrorStatsService::Service::ListEvents(::grpc::ServerContext* context, const ::google::devtools::clouderrorreporting::v1beta1::ListEventsRequest* request, ::google::devtools::clouderrorreporting::v1beta1::ListEventsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ErrorStatsService::Service::DeleteEvents(::grpc::ServerContext* context, const ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsRequest* request, ::google::devtools::clouderrorreporting::v1beta1::DeleteEventsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace devtools
}  // namespace clouderrorreporting
}  // namespace v1beta1

